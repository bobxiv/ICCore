#line 1 "CommandHandlers - copia.cpp"
#line 1 "c:\\users\\bob\\documents\\visual studio 2010\\projects\\c++\\ic\\d3d9_application_framework\\d3d9_application_framework\\frameworkbase\\source\\stdafx.h"
#pragma once



#pragma comment(linker,"/manifestdependency:\"type='win32' name='Microsoft.Windows.Common-Controls' "\
	"version='6.0.0.0' processorArchitecture='*' publicKeyToken='6595b64144ccf1df' language='*'\"")


#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windows.h"




















#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\sdkddkver.h"



















#pragma warning(push)
#line 22 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\sdkddkver.h"
#pragma warning(disable:4001) 
#line 24 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\sdkddkver.h"

#pragma once


































































































					    























































#line 181 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\sdkddkver.h"












#line 194 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\sdkddkver.h"
#line 195 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\sdkddkver.h"



#line 199 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\sdkddkver.h"







#line 207 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\sdkddkver.h"
#line 208 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\sdkddkver.h"







#line 216 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\sdkddkver.h"
#line 217 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\sdkddkver.h"






#line 224 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\sdkddkver.h"

#line 226 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\sdkddkver.h"

#line 228 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\sdkddkver.h"

#line 230 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\sdkddkver.h"

#line 232 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\sdkddkver.h"


#line 235 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\sdkddkver.h"
#line 236 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\sdkddkver.h"








#line 245 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\sdkddkver.h"



#line 249 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\sdkddkver.h"



#line 253 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\sdkddkver.h"



#line 257 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\sdkddkver.h"



#line 261 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\sdkddkver.h"



#line 265 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\sdkddkver.h"

#line 267 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\sdkddkver.h"



#pragma warning(pop)


#line 274 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\sdkddkver.h"
#line 275 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\sdkddkver.h"

#line 277 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\sdkddkver.h"


#line 22 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windows.h"





#pragma once
#line 29 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windows.h"

















































#line 79 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windows.h"




















#line 100 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windows.h"



#line 104 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windows.h"



#line 108 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windows.h"



#line 112 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windows.h"



#line 116 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windows.h"





#line 122 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windows.h"




#line 127 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windows.h"
#line 128 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windows.h"







#line 136 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windows.h"
#line 137 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windows.h"



#pragma warning(disable:4514)

#pragma warning(disable:4103)
#line 144 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windows.h"

#pragma warning(push)
#line 147 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windows.h"
#pragma warning(disable:4001)
#pragma warning(disable:4201)
#pragma warning(disable:4214)
#line 151 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windows.h"
#line 1 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\excpt.h"














#pragma once




#line 1 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"














 





#line 22 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"
#line 23 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"


















#line 42 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"



#line 46 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"










#line 1 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\sal.h"














#pragma once
































































































































#line 145 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\sal.h"


#line 148 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\sal.h"





#line 154 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\sal.h"



#line 158 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\sal.h"


#line 1 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"












#pragma once








#line 23 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
#line 24 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"





typedef __w64 unsigned int   size_t;
#line 31 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"

#line 33 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
















#line 50 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"


namespace vc_attributes
{
#line 55 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"

enum YesNoMaybe
{
	
	No = 0x0fff0001,
	Maybe = 0x0fff0010,
	Yes = 0x0fff0100
};

typedef enum YesNoMaybe YesNoMaybe;

enum AccessType
{
	NoAccess = 0,
	Read = 1,
	Write = 2,
	ReadWrite = 3
};

typedef enum AccessType AccessType;



[repeatable]
[source_annotation_attribute( Parameter )]
struct PreAttribute
{

	PreAttribute();
#line 85 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"

	unsigned int Deref;
	YesNoMaybe Valid;
	YesNoMaybe Null;
	YesNoMaybe Tainted;
	AccessType Access;
	size_t ValidElementsConst;
	size_t ValidBytesConst;
	const wchar_t* ValidElements;
	const wchar_t* ValidBytes;
	const wchar_t* ValidElementsLength;
	const wchar_t* ValidBytesLength;
	size_t WritableElementsConst;
	size_t WritableBytesConst;
	const wchar_t* WritableElements;
	const wchar_t* WritableBytes;
	const wchar_t* WritableElementsLength;
	const wchar_t* WritableBytesLength;
	size_t ElementSizeConst;
	const wchar_t* ElementSize;
	YesNoMaybe NullTerminated;
	const wchar_t* Condition;
};

[repeatable]
[source_annotation_attribute( Parameter|ReturnValue )]
struct PostAttribute
{

	PostAttribute();
#line 116 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"

	unsigned int Deref;
	YesNoMaybe Valid;
	YesNoMaybe Null;
	YesNoMaybe Tainted;
	AccessType Access;
	size_t ValidElementsConst;
	size_t ValidBytesConst;
	const wchar_t* ValidElements;
	const wchar_t* ValidBytes;
	const wchar_t* ValidElementsLength;
	const wchar_t* ValidBytesLength;
	size_t WritableElementsConst;
	size_t WritableBytesConst;
	const wchar_t* WritableElements;
	const wchar_t* WritableBytes;
	const wchar_t* WritableElementsLength;
	const wchar_t* WritableBytesLength;
	size_t ElementSizeConst;
	const wchar_t* ElementSize;
	YesNoMaybe NullTerminated;
	YesNoMaybe MustCheck;
	const wchar_t* Condition;
};

[source_annotation_attribute( Parameter )]
struct FormatStringAttribute
{

	FormatStringAttribute();
#line 147 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"

	const wchar_t* Style;
	const wchar_t* UnformattedAlternative;
};

[repeatable]
[source_annotation_attribute( ReturnValue )]
struct InvalidCheckAttribute
{

	InvalidCheckAttribute();
#line 159 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"

	long Value;
};

[source_annotation_attribute( Method )]
struct SuccessAttribute
{

	SuccessAttribute();
#line 169 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"

	const wchar_t* Condition;
};

[repeatable]
[source_annotation_attribute( Parameter )]
struct PreBoundAttribute
{

	PreBoundAttribute();
#line 180 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
	unsigned int Deref;
};

[repeatable]
[source_annotation_attribute( Parameter|ReturnValue )]
struct PostBoundAttribute
{

	PostBoundAttribute();
#line 190 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
	unsigned int Deref;
};

[repeatable]
[source_annotation_attribute( Parameter )]
struct PreRangeAttribute
{

	PreRangeAttribute();
#line 200 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
	unsigned int Deref;
	const char* MinVal;
	const char* MaxVal;
};

[repeatable]
[source_annotation_attribute( Parameter|ReturnValue )]
struct PostRangeAttribute
{

	PostRangeAttribute();
#line 212 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"
	unsigned int Deref;
	const char* MinVal;
	const char* MaxVal;
};

#line 218 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"


};  
#line 222 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"






















typedef ::vc_attributes::YesNoMaybe SA_YesNoMaybe;
const ::vc_attributes::YesNoMaybe SA_Yes = ::vc_attributes::Yes;
const ::vc_attributes::YesNoMaybe SA_No = ::vc_attributes::No;
const ::vc_attributes::YesNoMaybe SA_Maybe = ::vc_attributes::Maybe;

typedef ::vc_attributes::AccessType SA_AccessType;
const ::vc_attributes::AccessType SA_NoAccess = ::vc_attributes::NoAccess;
const ::vc_attributes::AccessType SA_Read = ::vc_attributes::Read;
const ::vc_attributes::AccessType SA_Write = ::vc_attributes::Write;
const ::vc_attributes::AccessType SA_ReadWrite = ::vc_attributes::ReadWrite;


typedef ::vc_attributes::PreAttribute          SA_Pre;
typedef ::vc_attributes::PostAttribute         SA_Post;
typedef ::vc_attributes::FormatStringAttribute SA_FormatString;
typedef ::vc_attributes::InvalidCheckAttribute SA_InvalidCheck; 
typedef ::vc_attributes::SuccessAttribute      SA_Success;
typedef ::vc_attributes::PreBoundAttribute     SA_PreBound;
typedef ::vc_attributes::PostBoundAttribute    SA_PostBound;
typedef ::vc_attributes::PreRangeAttribute     SA_PreRange;
typedef ::vc_attributes::PostRangeAttribute    SA_PostRange;
#line 266 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"















#line 282 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"

#line 284 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"




















#line 305 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"


#line 308 "c:\\program files (x86)\\microsoft visual studio 10.0\\vc\\include\\codeanalysis\\sourceannotations.h"

#line 161 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\sal.h"
#line 162 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\sal.h"







































































































































































































































































































































































































































































































































































































































































                                                




                                                


























































































































































































































#line 1034 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\sal.h"































































































#line 1130 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\sal.h"



































































































#line 1230 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\sal.h"



















































#line 1282 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\sal.h"



















































































































































































































#line 1494 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\sal.h"
extern "C" {




#line 1500 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\sal.h"




























































































































































































































#line 1721 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\sal.h"
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
#line 1755 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\sal.h"



































































































































































































































    
    
#line 1985 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\sal.h"






#line 1992 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\sal.h"
#line 1993 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\sal.h"


}
#line 1997 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\sal.h"



#line 57 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"




#pragma pack(push,8)

#line 1 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\vadefs.h"












#pragma once






#line 21 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\vadefs.h"








#pragma pack(push,8)


extern "C" {
#line 34 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\vadefs.h"








#line 43 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\vadefs.h"





typedef __w64 unsigned int   uintptr_t;
#line 50 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\vadefs.h"

#line 52 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\vadefs.h"





typedef char *  va_list;
#line 59 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\vadefs.h"

#line 61 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\vadefs.h"





#line 67 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\vadefs.h"











#line 79 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\vadefs.h"


#line 82 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\vadefs.h"













#line 96 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\vadefs.h"












































#line 141 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\vadefs.h"


}
#line 145 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\vadefs.h"

#pragma pack(pop)

#line 149 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\vadefs.h"
#line 64 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"


extern "C" {
#line 68 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"





#line 74 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"




#line 79 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"




#line 84 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"







#line 92 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"






#line 99 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"

#line 101 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"
#line 102 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"






#line 109 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"

#line 111 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"
#line 112 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"













#line 126 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"
#line 127 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"





#line 133 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"







#line 141 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"

#line 143 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"

#line 145 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"







#line 153 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"
#line 154 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"




#line 159 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"

#line 161 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"
#line 162 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"




#line 167 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"

#line 169 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"
#line 170 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"


 

#line 175 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"
  
 #line 177 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"
#line 178 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"










#line 189 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"
#line 190 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"






#line 197 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"
#line 198 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"

















#line 216 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"




#line 221 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"








#line 230 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"






#line 237 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"
#line 238 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"





#line 244 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"






#line 251 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"
#line 252 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"






#line 259 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"
#line 260 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"




#line 265 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"


#line 268 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"

#line 270 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"
#line 271 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"
#line 272 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"





#line 278 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"










#line 289 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"

#line 291 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"
#line 292 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"
#line 293 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"










#line 304 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"






#line 311 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"
#line 312 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"







#line 320 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"

#line 322 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"
#line 323 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"



 
  
 



#line 333 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"
#line 334 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"


 
  
  
 



#line 344 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"
#line 345 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"


 
  
   
  

#line 353 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"
 



#line 358 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"
#line 359 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"


 
  
 



#line 368 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"
#line 369 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"


 
  
 



#line 378 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"
#line 379 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"



#line 383 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"





#line 389 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"




#line 394 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"

#line 396 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"
#line 397 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"












typedef size_t rsize_t;

#line 412 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"
#line 413 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"





typedef __w64 int            intptr_t;
#line 420 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"

#line 422 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"














typedef __w64 int            ptrdiff_t;
#line 438 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"

#line 440 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"







typedef unsigned short wint_t;
typedef unsigned short wctype_t;

#line 451 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"


















typedef int errno_t;
#line 471 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"


typedef __w64 long __time32_t;   

#line 476 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"


typedef __int64 __time64_t;     

#line 481 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"





typedef __time64_t time_t;      
#line 488 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"

#line 490 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"







#line 498 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"
#line 499 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"




#line 504 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"

#line 506 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"
#line 507 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"




#line 512 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"

#line 514 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"
#line 515 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"





#line 521 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"



#line 525 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"




#line 530 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"

#line 532 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"
#line 533 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"












  void __cdecl _invalid_parameter_noinfo(void);
  __declspec(noreturn) void __cdecl _invalid_parameter_noinfo_noreturn(void);
#line 548 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"

 __declspec(noreturn)
void __cdecl _invoke_watson(   const wchar_t *,    const wchar_t *,    const wchar_t *, unsigned int, uintptr_t);






 







 
  
 #line 568 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"
#line 569 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"







#line 577 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"


































































































































































#line 740 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"
#line 741 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 1807 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"















































































































































#line 1951 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"
#line 1952 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"

struct threadlocaleinfostruct;
struct threadmbcinfostruct;
typedef struct threadlocaleinfostruct * pthreadlocinfo;
typedef struct threadmbcinfostruct * pthreadmbcinfo;
struct __lc_time_data;

typedef struct localeinfo_struct
{
    pthreadlocinfo locinfo;
    pthreadmbcinfo mbcinfo;
} _locale_tstruct, *_locale_t;


typedef struct tagLC_ID {
        unsigned short wLanguage;
        unsigned short wCountry;
        unsigned short wCodePage;
} LC_ID, *LPLC_ID;

#line 1973 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"


typedef struct threadlocaleinfostruct {
        int refcount;
        unsigned int lc_codepage;
        unsigned int lc_collate_cp;
        unsigned long lc_handle[6]; 
        LC_ID lc_id[6];
        struct {
            char *locale;
            wchar_t *wlocale;
            int *refcount;
            int *wrefcount;
        } lc_category[6];
        int lc_clike;
        int mb_cur_max;
        int * lconv_intl_refcount;
        int * lconv_num_refcount;
        int * lconv_mon_refcount;
        struct lconv * lconv;
        int * ctype1_refcount;
        unsigned short * ctype1;
        const unsigned short * pctype;
        const unsigned char * pclmap;
        const unsigned char * pcumap;
        struct __lc_time_data * lc_time_curr;
} threadlocinfo;

#line 2002 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"


}
#line 2006 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"



#line 2010 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"

#line 2012 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"



#line 2016 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"

#line 2018 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"



#line 2022 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"

#line 2024 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"






#line 2031 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"



#line 2035 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"

#pragma pack(pop)

#line 2039 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"

#line 21 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\excpt.h"





#pragma pack(push,8)


extern "C" {
#line 31 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\excpt.h"




typedef enum _EXCEPTION_DISPOSITION {
    ExceptionContinueExecution,
    ExceptionContinueSearch,
    ExceptionNestedException,
    ExceptionCollidedUnwind
} EXCEPTION_DISPOSITION;











struct _EXCEPTION_RECORD;
struct _CONTEXT;

EXCEPTION_DISPOSITION __cdecl _except_handler (
      struct _EXCEPTION_RECORD *_ExceptionRecord,
      void * _EstablisherFrame,
       struct _CONTEXT *_ContextRecord,
       void * _DispatcherContext
    );





























#line 91 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\excpt.h"













unsigned long __cdecl _exception_code(void);
void *        __cdecl _exception_info(void);
int           __cdecl _abnormal_termination(void);













}
#line 122 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\excpt.h"

#pragma pack(pop)

#line 126 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\excpt.h"
#line 152 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windows.h"
#line 1 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdarg.h"














#pragma once






#line 23 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdarg.h"








#line 32 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdarg.h"
#line 153 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windows.h"
#line 154 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windows.h"

#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windef.h"











#pragma once




#line 18 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windef.h"
#line 19 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windef.h"













#line 33 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windef.h"


extern "C" {
#line 37 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windef.h"











typedef unsigned long ULONG;
typedef ULONG *PULONG;
typedef unsigned short USHORT;
typedef USHORT *PUSHORT;
typedef unsigned char UCHAR;
typedef UCHAR *PUCHAR;
typedef char *PSZ;
#line 56 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windef.h"








#line 65 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windef.h"
#line 66 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windef.h"



#line 70 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windef.h"



#line 74 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windef.h"



#line 78 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windef.h"



#line 82 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windef.h"



#line 86 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windef.h"











#line 98 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windef.h"






#line 105 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windef.h"



#line 109 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windef.h"
#line 110 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windef.h"


























#line 137 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windef.h"





#line 143 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windef.h"







#line 151 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windef.h"

typedef unsigned long       DWORD;
typedef int                 BOOL;
typedef unsigned char       BYTE;
typedef unsigned short      WORD;
typedef float               FLOAT;
typedef FLOAT               *PFLOAT;
typedef BOOL            *PBOOL;
typedef BOOL             *LPBOOL;
typedef BYTE            *PBYTE;
typedef BYTE             *LPBYTE;
typedef int             *PINT;
typedef int              *LPINT;
typedef WORD            *PWORD;
typedef WORD             *LPWORD;
typedef long             *LPLONG;
typedef DWORD           *PDWORD;
typedef DWORD            *LPDWORD;
typedef void             *LPVOID;
typedef const void       *LPCVOID;

typedef int                 INT;
typedef unsigned int        UINT;
typedef unsigned int        *PUINT;


#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"





















#pragma warning(push)
#line 24 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"
#pragma warning(disable:4201) 
#pragma warning(disable:4214) 


extern "C" {
#line 30 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"

#line 1 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\ctype.h"













#pragma once




#line 1 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"














 








































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 20 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\ctype.h"


extern "C" {
#line 24 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\ctype.h"



#line 28 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\ctype.h"








#line 37 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\ctype.h"

#line 39 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\ctype.h"
#line 40 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\ctype.h"

 const unsigned short * __cdecl __pctype_func(void);

 extern const unsigned short *_pctype;


#line 47 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\ctype.h"
#line 48 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\ctype.h"
#line 49 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\ctype.h"





 extern const unsigned short _wctype[];
#line 56 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\ctype.h"

 const wctype_t * __cdecl __pwctype_func(void);

 extern const wctype_t *_pwctype;


#line 63 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\ctype.h"
#line 64 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\ctype.h"
#line 65 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\ctype.h"


#line 68 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\ctype.h"










                                













  int __cdecl _isctype(  int _C,   int _Type);
  int __cdecl _isctype_l(  int _C,   int _Type,    _locale_t _Locale);
   int __cdecl isalpha(  int _C);
  int __cdecl _isalpha_l(  int _C,    _locale_t _Locale);
   int __cdecl isupper(  int _C);
  int __cdecl _isupper_l(  int _C,    _locale_t _Locale);
   int __cdecl islower(  int _C);
  int __cdecl _islower_l(  int _C,    _locale_t _Locale);
   int __cdecl isdigit(  int _C);
  int __cdecl _isdigit_l(  int _C,    _locale_t _Locale);
  int __cdecl isxdigit(  int _C);
  int __cdecl _isxdigit_l(  int _C,    _locale_t _Locale);
   int __cdecl isspace(  int _C);
  int __cdecl _isspace_l(  int _C,    _locale_t _Locale);
  int __cdecl ispunct(  int _C);
  int __cdecl _ispunct_l(  int _C,    _locale_t _Locale);
   int __cdecl isalnum(  int _C);
  int __cdecl _isalnum_l(  int _C,    _locale_t _Locale);
  int __cdecl isprint(  int _C);
  int __cdecl _isprint_l(  int _C,    _locale_t _Locale);
  int __cdecl isgraph(  int _C);
  int __cdecl _isgraph_l(  int _C,    _locale_t _Locale);
  int __cdecl iscntrl(  int _C);
  int __cdecl _iscntrl_l(  int _C,    _locale_t _Locale);
   int __cdecl toupper(  int _C);
   int __cdecl tolower(  int _C);
   int __cdecl _tolower(  int _C);
  int __cdecl _tolower_l(  int _C,    _locale_t _Locale);
   int __cdecl _toupper(  int _C);
  int __cdecl _toupper_l(  int _C,    _locale_t _Locale);
  int __cdecl __isascii(  int _C);
  int __cdecl __toascii(  int _C);
  int __cdecl __iscsymf(  int _C);
  int __cdecl __iscsym(  int _C);

#line 128 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\ctype.h"







  int __cdecl iswalpha(  wint_t _C);
  int __cdecl _iswalpha_l(  wint_t _C,    _locale_t _Locale);
  int __cdecl iswupper(  wint_t _C);
  int __cdecl _iswupper_l(  wint_t _C,    _locale_t _Locale);
  int __cdecl iswlower(  wint_t _C);
  int __cdecl _iswlower_l(  wint_t _C,    _locale_t _Locale);
  int __cdecl iswdigit(  wint_t _C);
  int __cdecl _iswdigit_l(  wint_t _C,    _locale_t _Locale);
  int __cdecl iswxdigit(  wint_t _C);
  int __cdecl _iswxdigit_l(  wint_t _C,    _locale_t _Locale);
  int __cdecl iswspace(  wint_t _C);
  int __cdecl _iswspace_l(  wint_t _C,    _locale_t _Locale);
  int __cdecl iswpunct(  wint_t _C);
  int __cdecl _iswpunct_l(  wint_t _C,    _locale_t _Locale);
  int __cdecl iswalnum(  wint_t _C);
  int __cdecl _iswalnum_l(  wint_t _C,    _locale_t _Locale);
  int __cdecl iswprint(  wint_t _C);
  int __cdecl _iswprint_l(  wint_t _C,    _locale_t _Locale);
  int __cdecl iswgraph(  wint_t _C);
  int __cdecl _iswgraph_l(  wint_t _C,    _locale_t _Locale);
  int __cdecl iswcntrl(  wint_t _C);
  int __cdecl _iswcntrl_l(  wint_t _C,    _locale_t _Locale);
  int __cdecl iswascii(  wint_t _C);
  int __cdecl isleadbyte(  int _C);
  int __cdecl _isleadbyte_l(  int _C,    _locale_t _Locale);

  wint_t __cdecl towupper(  wint_t _C);
  wint_t __cdecl _towupper_l(  wint_t _C,    _locale_t _Locale);
  wint_t __cdecl towlower(  wint_t _C);
  wint_t __cdecl _towlower_l(  wint_t _C,    _locale_t _Locale); 
  int __cdecl iswctype(  wint_t _C,   wctype_t _Type);
  int __cdecl _iswctype_l(  wint_t _C,   wctype_t _Type,    _locale_t _Locale);

  int __cdecl __iswcsymf(  wint_t _C);
  int __cdecl _iswcsymf_l(  wint_t _C,    _locale_t _Locale);
  int __cdecl __iswcsym(  wint_t _C);
  int __cdecl _iswcsym_l(  wint_t _C,    _locale_t _Locale);

__declspec(deprecated("This function or variable has been superceded by newer library or operating system functionality. Consider using " "iswctype" " instead. See online help for details."))  int __cdecl is_wctype(  wint_t _C,   wctype_t _Type);


#line 177 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\ctype.h"













#line 191 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\ctype.h"

#line 193 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\ctype.h"


 extern int __mb_cur_max;


#line 199 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\ctype.h"
 int __cdecl ___mb_cur_max_func(void);
 int __cdecl ___mb_cur_max_l_func(_locale_t);
#line 202 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\ctype.h"









#line 212 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\ctype.h"












































#line 257 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\ctype.h"






#line 264 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\ctype.h"


















































#line 315 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\ctype.h"


























#line 342 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\ctype.h"

#line 344 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\ctype.h"













#line 358 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\ctype.h"
















#line 375 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\ctype.h"

#line 377 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\ctype.h"


}
#line 381 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\ctype.h"

#line 383 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\ctype.h"
#line 32 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"
















#line 49 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"









#line 59 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"
#line 60 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"








#line 69 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"





#line 75 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"
#line 76 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"

#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\specstrings.h"


#line 1 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\sal_supp.h"


















































#line 52 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\sal_supp.h"







#line 60 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\sal_supp.h"

#line 62 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\sal_supp.h"

#line 4 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\specstrings.h"
#line 1 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\specstrings_supp.h"







































































#line 73 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\specstrings_supp.h"








#line 82 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\specstrings_supp.h"

#line 84 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\specstrings_supp.h"

#line 5 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\specstrings.h"




#pragma once
#line 11 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\specstrings.h"




#line 16 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\specstrings.h"


extern "C" {
#line 20 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\specstrings.h"














#line 35 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\specstrings.h"







#line 43 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\specstrings.h"

















































































#line 125 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\specstrings.h"
#line 126 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\specstrings.h"





































#line 164 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\specstrings.h"



























#line 192 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\specstrings.h"






















































































#line 279 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\specstrings.h"












}
#line 293 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\specstrings.h"



























#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\specstrings_strict.h"

























#line 27 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\specstrings_strict.h"




























































































































































#pragma once
#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\specstrings_undef.h"




































































































































































































































































































































































































#line 185 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\specstrings_strict.h"




























































































































































































































































































































































































































































































































































































































































































































































































































#line 982 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\specstrings_strict.h"
































































#line 1047 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\specstrings_strict.h"






















































#line 1102 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\specstrings_strict.h"
#line 1103 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\specstrings_strict.h"
#line 1104 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\specstrings_strict.h"


#line 321 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\specstrings.h"
#line 322 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\specstrings.h"

#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\driverspecs.h"




























































































































#line 1 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\sdv_driverspecs.h"





















#line 23 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\sdv_driverspecs.h"

#line 126 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\driverspecs.h"


#pragma once
#line 130 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\driverspecs.h"


extern "C" {
#line 134 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\driverspecs.h"






#line 141 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\driverspecs.h"


#line 144 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\driverspecs.h"









































































































#line 250 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\driverspecs.h"

	
	
	
	
	
	
	
	
	
	
	


#line 265 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\driverspecs.h"

	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	

	


	
	
	
	



	
	


	
	
	
	
	
	
	
	
	
	
	
	


	
	


	
	


	
	



	
	









	
	
	
	
	
	
	
	
	
	

	
	
	
	
	
	
	
	
	
	
	
	


	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	


	
	
	
	
	


	
	
	
	
	
	


	

	
	
	
	
	
	


	

											  
	
	
	
	
	


	
	
	
	
	
	


	


	
	
	
	
	


	
	
	
	
	
	


	


	
	
	

	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	

	
	
	
	

	
	
	
	

	
	
	
	


	
	
	
	

	
	
	
	

	
	
	
	

	
	
	
	
	

	
	
	
	

	
	
	
	
	

	
	
	

	
	

	
	
	

	
	

	

	
	

    
	
	
	


	
	
	


	
	
	
	
	
	
	
	
	
	
	
	

	
	


	
	
	
	
	
	
	
	
	
	
	
	

	
	
	
	
	

	
	
	
	
	
	


	
	
	
	
	 
	


	
	
		
		
		
		
	
	
	
	
	
	
	
	
	
	

	
	
	
	
	
	
	
	
	
	
	
	

	
	
	
	
	
	

	

	
	
	
	
	
	
	
	
	
	
	
	




	
	
	
	
	


	
	
	
	
	
	
	
	
	
	

	
	
	
	

	
	
	
	
	

	
	
	
	
	
	
	
	
	
	

	
	
	

	
	

	
	
	
	
	
	

	
	
	

	
	
	



	
	


	
		
	



	
	
	


	
	


















































































	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	

#line 832 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\driverspecs.h"

	
	

    

	
	
	


}
#line 845 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\driverspecs.h"

#line 847 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\driverspecs.h"


#line 324 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\specstrings.h"

#line 326 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\specstrings.h"



#line 78 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"
#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\kernelspecs.h"



































#pragma once
#line 38 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\kernelspecs.h"


extern "C" {
#line 42 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\kernelspecs.h"

	
	
	

	
	
	

	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	

	
	
	
	
	
	
	


	
	
	
	
	
	


	
	
	
	
	
	



	
	
	
	
	
	

	
	
	
	
	
	


	
	
	
	
	
	

	
	
	
	
	
	
	



	
	
	
	
	
	

	
	
	
	
	
	
	



	
	
	
	
	



	
	
	
	


	
	
	
	
	


	
	

	
	
	















}
#line 187 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\kernelspecs.h"

#line 79 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"



#line 83 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"



#line 87 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"

#line 89 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"









#line 99 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"



#line 103 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"





#line 109 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"


#line 112 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"









#line 122 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"



#line 126 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"














#line 141 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"



#line 145 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"












#line 158 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"

#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\basetsd.h"





























#line 31 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\basetsd.h"
 


#line 35 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\basetsd.h"
  
   
  

#line 40 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\basetsd.h"
  typedef unsigned long POINTER_64_INT;
 #line 42 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\basetsd.h"
 
#line 44 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\basetsd.h"



#line 48 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\basetsd.h"

#line 50 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\basetsd.h"










#line 61 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\basetsd.h"


#line 64 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\basetsd.h"





#pragma once
#line 71 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\basetsd.h"


extern "C" {
#line 75 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\basetsd.h"

typedef signed char         INT8, *PINT8;
typedef signed short        INT16, *PINT16;
typedef signed int          INT32, *PINT32;
typedef signed __int64      INT64, *PINT64;
typedef unsigned char       UINT8, *PUINT8;
typedef unsigned short      UINT16, *PUINT16;
typedef unsigned int        UINT32, *PUINT32;
typedef unsigned __int64    UINT64, *PUINT64;





typedef signed int LONG32, *PLONG32;





typedef unsigned int ULONG32, *PULONG32;
typedef unsigned int DWORD32, *PDWORD32;







#line 105 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\basetsd.h"

















#line 123 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\basetsd.h"











#line 135 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\basetsd.h"
    typedef __w64 int INT_PTR, *PINT_PTR;
    typedef __w64 unsigned int UINT_PTR, *PUINT_PTR;

    typedef __w64 long LONG_PTR, *PLONG_PTR;
    typedef __w64 unsigned long ULONG_PTR, *PULONG_PTR;

    

#line 144 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\basetsd.h"
#line 145 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\basetsd.h"





























































































































































































typedef unsigned short UHALF_PTR, *PUHALF_PTR;
typedef short HALF_PTR, *PHALF_PTR;
typedef __w64 long SHANDLE_PTR;
typedef __w64 unsigned long HANDLE_PTR;

















__inline
void * __ptr64
PtrToPtr64(
    const void *p
    )
{
    return((void * __ptr64) (unsigned __int64) (ULONG_PTR)p );
}

__inline
void *
Ptr64ToPtr(
    const void * __ptr64 p
    )
{
    return((void *) (ULONG_PTR) (unsigned __int64) p);
}

__inline
void * __ptr64
HandleToHandle64(
    const void *h
    )
{
    return((void * __ptr64)(__int64)(LONG_PTR)h );
}

__inline
void *
Handle64ToHandle(
    const void * __ptr64 h
    )
{
    return((void *) (ULONG_PTR) (unsigned __int64) h );
}
#line 391 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\basetsd.h"






#line 398 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\basetsd.h"























typedef ULONG_PTR SIZE_T, *PSIZE_T;
typedef LONG_PTR SSIZE_T, *PSSIZE_T;









































#line 465 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\basetsd.h"





typedef ULONG_PTR DWORD_PTR, *PDWORD_PTR;





typedef __int64 LONG64, *PLONG64;






typedef unsigned __int64 ULONG64, *PULONG64;
typedef unsigned __int64 DWORD64, *PDWORD64;





typedef ULONG_PTR KAFFINITY;
typedef KAFFINITY *PKAFFINITY;


}
#line 496 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\basetsd.h"

#line 498 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\basetsd.h"

#line 160 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"






#line 167 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"






#line 174 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"
#line 175 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"






#line 182 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"
#line 183 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"






#line 190 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"
#line 191 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"






#line 198 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"
#line 199 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"



#line 203 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"






#line 210 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"
#line 211 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"






#line 218 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"
#line 219 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"






#line 226 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"
#line 227 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"






#line 234 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"
#line 235 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"




#line 240 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"

#line 242 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"
#line 243 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"






#line 250 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"
#line 251 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"






#line 258 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"
#line 259 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"








#line 268 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"
#line 269 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"














#line 284 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"





typedef void *PVOID;
typedef void * __ptr64 PVOID64;








#line 300 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"





#line 306 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"
















#line 323 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"








typedef char CHAR;
typedef short SHORT;
typedef long LONG;

typedef int INT;
#line 337 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"
#line 338 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"






typedef wchar_t WCHAR;    



#line 349 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"

typedef WCHAR *PWCHAR, *LPWCH, *PWCH;
typedef const WCHAR *LPCWCH, *PCWCH;

typedef  WCHAR *NWPSTR, *LPWSTR, *PWSTR;
typedef  PWSTR *PZPWSTR;
typedef  const PWSTR *PCZPWSTR;
typedef  WCHAR  *LPUWSTR, *PUWSTR;
typedef  const WCHAR *LPCWSTR, *PCWSTR;
typedef  PCWSTR *PZPCWSTR;
typedef  const WCHAR  *LPCUWSTR, *PCUWSTR;

typedef  WCHAR *PZZWSTR;
typedef  const WCHAR *PCZZWSTR;
typedef  WCHAR  *PUZZWSTR;
typedef  const WCHAR  *PCUZZWSTR;

typedef  WCHAR *PNZWCH;
typedef  const WCHAR *PCNZWCH;
typedef  WCHAR  *PUNZWCH;
typedef  const WCHAR  *PCUNZWCH;



typedef const WCHAR *LPCWCHAR, *PCWCHAR;
typedef const WCHAR  *LPCUWCHAR, *PCUWCHAR;





typedef unsigned long UCSCHAR;



















typedef UCSCHAR *PUCSCHAR;
typedef const UCSCHAR *PCUCSCHAR;

typedef UCSCHAR *PUCSSTR;
typedef UCSCHAR  *PUUCSSTR;

typedef const UCSCHAR *PCUCSSTR;
typedef const UCSCHAR  *PCUUCSSTR;

typedef UCSCHAR  *PUUCSCHAR;
typedef const UCSCHAR  *PCUUCSCHAR;

#line 413 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"





typedef CHAR *PCHAR, *LPCH, *PCH;
typedef const CHAR *LPCCH, *PCCH;

typedef  CHAR *NPSTR, *LPSTR, *PSTR;
typedef  PSTR *PZPSTR;
typedef  const PSTR *PCZPSTR;
typedef  const CHAR *LPCSTR, *PCSTR;
typedef  PCSTR *PZPCSTR;

typedef  CHAR *PZZSTR;
typedef  const CHAR *PCZZSTR;

typedef  CHAR *PNZCH;
typedef  const CHAR *PCNZCH;
































typedef char TCHAR, *PTCHAR;
typedef unsigned char TBYTE , *PTBYTE ;

#line 468 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"

typedef LPCH LPTCH, PTCH;
typedef LPCCH LPCTCH, PCTCH;
typedef LPSTR PTSTR, LPTSTR, PUTSTR, LPUTSTR;
typedef LPCSTR PCTSTR, LPCTSTR, PCUTSTR, LPCUTSTR;
typedef PZZSTR PZZTSTR, PUZZTSTR;
typedef PCZZSTR PCZZTSTR, PCUZZTSTR;
typedef PNZCH PNZTCH, PUNZTCH;
typedef PCNZCH PCNZTCH, PCUNZTCH;


#line 480 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"



typedef SHORT *PSHORT;  
typedef LONG *PLONG;    








typedef struct _PROCESSOR_NUMBER {
    WORD   Group;
    BYTE  Number;
    BYTE  Reserved;
} PROCESSOR_NUMBER, *PPROCESSOR_NUMBER;






typedef struct _GROUP_AFFINITY {
    KAFFINITY Mask;
    WORD   Group;
    WORD   Reserved[3];
} GROUP_AFFINITY, *PGROUP_AFFINITY;






typedef void *HANDLE;


#line 519 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"

#line 521 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"



#line 525 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"
typedef HANDLE *PHANDLE;





typedef BYTE   FCHAR;
typedef WORD   FSHORT;
typedef DWORD  FLONG;








typedef  long HRESULT;
#line 544 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"
#line 545 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"


    


#line 551 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"









#line 561 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"













#line 575 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"




























typedef char CCHAR;          
typedef DWORD LCID;         
typedef PDWORD PLCID;       
typedef WORD   LANGID;      






















#line 630 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"
typedef struct _FLOAT128 {
    __int64 LowPart;
    __int64 HighPart;
} FLOAT128;

typedef FLOAT128 *PFLOAT128;









typedef __int64 LONGLONG;
typedef unsigned __int64 ULONGLONG;


















#line 666 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"

typedef LONGLONG *PLONGLONG;
typedef ULONGLONG *PULONGLONG;



typedef LONGLONG USN;



#line 677 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"
typedef union _LARGE_INTEGER {
    struct {
        DWORD LowPart;
        LONG HighPart;
    } ;
    struct {
        DWORD LowPart;
        LONG HighPart;
    } u;
#line 687 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"
    LONGLONG QuadPart;
} LARGE_INTEGER;

typedef LARGE_INTEGER *PLARGE_INTEGER;



#line 695 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"
typedef union _ULARGE_INTEGER {
    struct {
        DWORD LowPart;
        DWORD HighPart;
    } ;
    struct {
        DWORD LowPart;
        DWORD HighPart;
    } u;
#line 705 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"
    ULONGLONG QuadPart;
} ULARGE_INTEGER;

typedef ULARGE_INTEGER *PULARGE_INTEGER;








typedef struct _LUID {
    DWORD LowPart;
    LONG HighPart;
} LUID, *PLUID;


typedef ULONGLONG  DWORDLONG;
typedef DWORDLONG *PDWORDLONG;





























#line 757 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"












ULONGLONG
__stdcall
Int64ShllMod32 (
     ULONGLONG Value,
     DWORD ShiftCount
    );

LONGLONG
__stdcall
Int64ShraMod32 (
     LONGLONG Value,
     DWORD ShiftCount
    );

ULONGLONG
__stdcall
Int64ShrlMod32 (
     ULONGLONG Value,
     DWORD ShiftCount
    );


#pragma warning(push)
#line 793 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"
#pragma warning(disable:4035 4793)               

__inline ULONGLONG
__stdcall
Int64ShllMod32 (
     ULONGLONG Value,
     DWORD ShiftCount
    )
{
    __asm    {
        mov     ecx, ShiftCount
        mov     eax, dword ptr [Value]
        mov     edx, dword ptr [Value+4]
        shld    edx, eax, cl
        shl     eax, cl
    }
}

__inline LONGLONG
__stdcall
Int64ShraMod32 (
     LONGLONG Value,
     DWORD ShiftCount
    )
{
    __asm {
        mov     ecx, ShiftCount
        mov     eax, dword ptr [Value]
        mov     edx, dword ptr [Value+4]
        shrd    eax, edx, cl
        sar     edx, cl
    }
}

__inline ULONGLONG
__stdcall
Int64ShrlMod32 (
     ULONGLONG Value,
     DWORD ShiftCount
    )
{
    __asm    {
        mov     ecx, ShiftCount
        mov     eax, dword ptr [Value]
        mov     edx, dword ptr [Value+4]
        shrd    eax, edx, cl
        shr     edx, cl
    }
}


#pragma warning(pop)


#line 848 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"





#line 854 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"






extern "C" {
#line 862 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"









































#line 904 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"









unsigned int
__cdecl
_rotl (
     unsigned int Value,
     int Shift
    );


unsigned __int64
__cdecl
_rotl64 (
     unsigned __int64 Value,
     int Shift
    );


unsigned int
__cdecl
_rotr (
     unsigned int Value,
     int Shift
    );


unsigned __int64
__cdecl
_rotr64 (
     unsigned __int64 Value,
     int Shift
    );

#pragma intrinsic(_rotl)
#pragma intrinsic(_rotl64)
#pragma intrinsic(_rotr)
#pragma intrinsic(_rotr64)

#line 950 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"


}
#line 954 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"





typedef BYTE  BOOLEAN;           
typedef BOOLEAN *PBOOLEAN;       





typedef struct _LIST_ENTRY {
   struct _LIST_ENTRY *Flink;
   struct _LIST_ENTRY *Blink;
} LIST_ENTRY, *PLIST_ENTRY, * PRLIST_ENTRY;






typedef struct _SINGLE_LIST_ENTRY {
    struct _SINGLE_LIST_ENTRY *Next;
} SINGLE_LIST_ENTRY, *PSINGLE_LIST_ENTRY;






typedef struct LIST_ENTRY32 {
    DWORD Flink;
    DWORD Blink;
} LIST_ENTRY32;
typedef LIST_ENTRY32 *PLIST_ENTRY32;

typedef struct LIST_ENTRY64 {
    ULONGLONG Flink;
    ULONGLONG Blink;
} LIST_ENTRY64;
typedef LIST_ENTRY64 *PLIST_ENTRY64;


#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\guiddef.h"




















#line 22 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\guiddef.h"
typedef struct _GUID {
    unsigned long  Data1;
    unsigned short Data2;
    unsigned short Data3;
    unsigned char  Data4[ 8 ];
} GUID;
#line 29 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\guiddef.h"
#line 30 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\guiddef.h"




































#line 67 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\guiddef.h"








typedef GUID *LPGUID;
#line 77 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\guiddef.h"



typedef const GUID *LPCGUID;
#line 82 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\guiddef.h"




typedef GUID IID;
typedef IID *LPIID;


typedef GUID CLSID;
typedef CLSID *LPCLSID;


typedef GUID FMTID;
typedef FMTID *LPFMTID;







#line 104 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\guiddef.h"







#line 112 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\guiddef.h"
#line 113 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\guiddef.h"







#line 121 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\guiddef.h"
#line 122 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\guiddef.h"







#line 130 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\guiddef.h"
#line 131 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\guiddef.h"







#line 139 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\guiddef.h"
#line 140 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\guiddef.h"

#line 142 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\guiddef.h"




#line 1 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\string.h"














#pragma once




#line 1 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"














 








































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 21 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\string.h"


extern "C" {
#line 25 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\string.h"




#line 30 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\string.h"
















 void *  __cdecl _memccpy(   void * _Dst,   const void * _Src,   int _Val,   size_t _MaxCount);
  const void *  __cdecl memchr(    const void * _Buf ,   int _Val,   size_t _MaxCount);
  int     __cdecl _memicmp(   const void * _Buf1,    const void * _Buf2,   size_t _Size);
  int     __cdecl _memicmp_l(   const void * _Buf1,    const void * _Buf2,   size_t _Size,    _locale_t _Locale);
         int     __cdecl memcmp(   const void * _Buf1,    const void * _Buf2,   size_t _Size);
         void *  __cdecl memcpy(    void * _Dst,    const void * _Src,   size_t _Size);

 errno_t  __cdecl memcpy_s(    void * _Dst,   rsize_t _DstSize,    const void * _Src,   rsize_t _MaxCount);





















#line 76 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\string.h"










#line 87 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\string.h"
#line 88 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\string.h"
        void *  __cdecl memset(    void * _Dst,   int _Val,   size_t _Size);



__declspec(deprecated("The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: " "_memccpy" ". See online help for details."))  void * __cdecl memccpy(  void * _Dst,    const void * _Src,   int _Val,   size_t _Size);
 __declspec(deprecated("The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: " "_memicmp" ". See online help for details."))  int __cdecl memicmp(   const void * _Buf1,    const void * _Buf2,   size_t _Size);
#line 95 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\string.h"

#line 97 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\string.h"

  errno_t __cdecl _strset_s(    char * _Dst,   size_t _DstSize,   int _Value);
extern "C++" { template <size_t _Size> inline errno_t __cdecl _strset_s(    char (&_Dest)[_Size],   int _Value) throw() { return _strset_s(_Dest, _Size, _Value); } }
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_strset_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))  char * __cdecl _strset(  char *_Dest,  int _Value);

  errno_t __cdecl strcpy_s(    char * _Dst,   rsize_t _SizeInBytes,    const char * _Src);
#line 104 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\string.h"
extern "C++" { template <size_t _Size> inline errno_t __cdecl strcpy_s(  char (&_Dest)[_Size],    const char * _Source) throw() { return strcpy_s(_Dest, _Size, _Source); } }
__declspec(deprecated("This function or variable may be unsafe. Consider using " "strcpy_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))  char * __cdecl strcpy(  char *_Dest,  const char * _Source);

  errno_t __cdecl strcat_s(    char * _Dst,   rsize_t _SizeInBytes,    const char * _Src);
#line 109 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\string.h"
extern "C++" { template <size_t _Size> inline errno_t __cdecl strcat_s(    char (&_Dest)[_Size],    const char * _Source) throw() { return strcat_s(_Dest, _Size, _Source); } }
__declspec(deprecated("This function or variable may be unsafe. Consider using " "strcat_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))  char * __cdecl strcat(  char *_Dest,  const char * _Source);
         int     __cdecl strcmp(   const char * _Str1,    const char * _Str2);
         size_t  __cdecl strlen(   const char * _Str);
  size_t  __cdecl strnlen(   const char * _Str,   size_t _MaxCount);

 static __inline size_t  __cdecl strnlen_s(    const char * _Str,   size_t _MaxCount)
{
    return (_Str==0) ? 0 : strnlen(_Str, _MaxCount);
}
#line 120 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\string.h"

  errno_t __cdecl memmove_s(    void * _Dst,   rsize_t _DstSize,    const void * _Src,   rsize_t _MaxCount);
#line 123 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\string.h"



#line 127 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\string.h"
  void *  __cdecl memmove(    void * _Dst,    const void * _Src,   size_t _Size);
#line 129 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\string.h"




#line 134 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\string.h"

  char *  __cdecl _strdup(   const char * _Src);



#line 140 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\string.h"

  const char *  __cdecl strchr(   const char * _Str,   int _Val);
  int     __cdecl _stricmp(    const char * _Str1,     const char * _Str2);
  int     __cdecl _strcmpi(    const char * _Str1,     const char * _Str2);
  int     __cdecl _stricmp_l(    const char * _Str1,     const char * _Str2,    _locale_t _Locale);
  int     __cdecl strcoll(    const char * _Str1,     const  char * _Str2);
  int     __cdecl _strcoll_l(    const char * _Str1,     const char * _Str2,    _locale_t _Locale);
  int     __cdecl _stricoll(    const char * _Str1,     const char * _Str2);
  int     __cdecl _stricoll_l(    const char * _Str1,     const char * _Str2,    _locale_t _Locale);
  int     __cdecl _strncoll  (   const char * _Str1,    const char * _Str2,   size_t _MaxCount);
  int     __cdecl _strncoll_l(   const char * _Str1,    const char * _Str2,   size_t _MaxCount,    _locale_t _Locale);
  int     __cdecl _strnicoll (   const char * _Str1,    const char * _Str2,   size_t _MaxCount);
  int     __cdecl _strnicoll_l(   const char * _Str1,    const char * _Str2,   size_t _MaxCount,    _locale_t _Locale);
  size_t  __cdecl strcspn(    const char * _Str,     const char * _Control);
 __declspec(deprecated("This function or variable may be unsafe. Consider using " "_strerror_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))  char *  __cdecl _strerror(   const char * _ErrMsg);
  errno_t __cdecl _strerror_s(    char * _Buf,   size_t _SizeInBytes,    const char * _ErrMsg);
extern "C++" { template <size_t _Size> inline errno_t __cdecl _strerror_s(char (&_Buffer)[_Size],    const char * _ErrorMessage) throw() { return _strerror_s(_Buffer, _Size, _ErrorMessage); } }
 __declspec(deprecated("This function or variable may be unsafe. Consider using " "strerror_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))  char *  __cdecl strerror(  int);

  errno_t __cdecl strerror_s(    char * _Buf,   size_t _SizeInBytes,   int _ErrNum);
#line 161 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\string.h"
extern "C++" { template <size_t _Size> inline errno_t __cdecl strerror_s(char (&_Buffer)[_Size],   int _ErrorMessage) throw() { return strerror_s(_Buffer, _Size, _ErrorMessage); } }
  errno_t __cdecl _strlwr_s(    char * _Str,   size_t _Size);
extern "C++" { template <size_t _Size> inline errno_t __cdecl _strlwr_s(    char (&_String)[_Size]) throw() { return _strlwr_s(_String, _Size); } }
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_strlwr_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))  char * __cdecl _strlwr(  char *_String);
  errno_t __cdecl _strlwr_s_l(    char * _Str,   size_t _Size,    _locale_t _Locale);
extern "C++" { template <size_t _Size> inline errno_t __cdecl _strlwr_s_l(    char (&_String)[_Size],    _locale_t _Locale) throw() { return _strlwr_s_l(_String, _Size, _Locale); } }
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_strlwr_s_l" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))  char * __cdecl _strlwr_l(    char *_String,    _locale_t _Locale);

  errno_t __cdecl strncat_s(    char * _Dst,   rsize_t _SizeInBytes,    const char * _Src,   rsize_t _MaxCount);
#line 171 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\string.h"
extern "C++" { template <size_t _Size> inline errno_t __cdecl strncat_s(    char (&_Dest)[_Size],    const char * _Source,   size_t _Count) throw() { return strncat_s(_Dest, _Size, _Source, _Count); } }
#pragma warning(push)
#pragma warning(disable:6059)

__declspec(deprecated("This function or variable may be unsafe. Consider using " "strncat_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))  char * __cdecl strncat(    char *_Dest,    const char * _Source,   size_t _Count);
#pragma warning(pop)


#line 180 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\string.h"
  int     __cdecl strncmp(   const char * _Str1,    const char * _Str2,   size_t _MaxCount);
#line 182 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\string.h"
  int     __cdecl _strnicmp(   const char * _Str1,    const char * _Str2,   size_t _MaxCount);
  int     __cdecl _strnicmp_l(   const char * _Str1,    const char * _Str2,   size_t _MaxCount,    _locale_t _Locale);

  errno_t __cdecl strncpy_s(    char * _Dst,   rsize_t _SizeInBytes,    const char * _Src,   rsize_t _MaxCount);
#line 187 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\string.h"
extern "C++" { template <size_t _Size> inline errno_t __cdecl strncpy_s(char (&_Dest)[_Size],    const char * _Source,   size_t _Count) throw() { return strncpy_s(_Dest, _Size, _Source, _Count); } }
__declspec(deprecated("This function or variable may be unsafe. Consider using " "strncpy_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))  char * __cdecl strncpy(   char *_Dest,    const char * _Source,   size_t _Count);
  errno_t __cdecl _strnset_s(    char * _Str,   size_t _SizeInBytes,   int _Val,   size_t _MaxCount);
extern "C++" { template <size_t _Size> inline errno_t __cdecl _strnset_s(    char (&_Dest)[_Size],   int _Val,   size_t _Count) throw() { return _strnset_s(_Dest, _Size, _Val, _Count); } }
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_strnset_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))  char * __cdecl _strnset(    char *_Dest,   int _Val,   size_t _Count);
  const char *  __cdecl strpbrk(   const char * _Str,    const char * _Control);
  const char *  __cdecl strrchr(   const char * _Str,   int _Ch);
 char *  __cdecl _strrev(    char * _Str);
  size_t  __cdecl strspn(   const char * _Str,    const char * _Control);
  const char *  __cdecl strstr(   const char * _Str,    const char * _SubStr);
 __declspec(deprecated("This function or variable may be unsafe. Consider using " "strtok_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))  char *  __cdecl strtok(    char * _Str,    const char * _Delim);

  char *  __cdecl strtok_s(    char * _Str,    const char * _Delim,        char ** _Context);
#line 201 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\string.h"
  errno_t __cdecl _strupr_s(    char * _Str,   size_t _Size);
extern "C++" { template <size_t _Size> inline errno_t __cdecl _strupr_s(    char (&_String)[_Size]) throw() { return _strupr_s(_String, _Size); } }
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_strupr_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))  char * __cdecl _strupr(  char *_String);
  errno_t __cdecl _strupr_s_l(    char * _Str,   size_t _Size, _locale_t _Locale);
extern "C++" { template <size_t _Size> inline errno_t __cdecl _strupr_s_l(    char (&_String)[_Size], _locale_t _Locale) throw() { return _strupr_s_l(_String, _Size, _Locale); } }
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_strupr_s_l" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))  char * __cdecl _strupr_l(    char *_String,    _locale_t _Locale);
  size_t  __cdecl strxfrm (   char * _Dst,    const char * _Src,   size_t _MaxCount);
  size_t  __cdecl _strxfrm_l(   char * _Dst,    const char * _Src,   size_t _MaxCount,    _locale_t _Locale);


extern "C++" {


 inline char * __cdecl strchr(   char * _Str,   int _Ch)
	{ return (char*)strchr((const char*)_Str, _Ch); }
 inline char * __cdecl strpbrk(   char * _Str,    const char * _Control)
	{ return (char*)strpbrk((const char*)_Str, _Control); }
 inline char * __cdecl strrchr(   char * _Str,   int _Ch)
	{ return (char*)strrchr((const char*)_Str, _Ch); }
 inline char * __cdecl strstr(   char * _Str,    const char * _SubStr)
	{ return (char*)strstr((const char*)_Str, _SubStr); }
#line 223 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\string.h"


 inline void * __cdecl memchr(   void * _Pv,   int _C,   size_t _N)
	{ return (void*)memchr((const void*)_Pv, _C, _N); }
#line 228 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\string.h"
}
#line 230 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\string.h"






#line 237 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\string.h"

 __declspec(deprecated("The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: " "_strdup" ". See online help for details."))  char * __cdecl strdup(   const char * _Src);



#line 243 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\string.h"


 __declspec(deprecated("The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: " "_strcmpi" ". See online help for details."))  int __cdecl strcmpi(   const char * _Str1,    const char * _Str2);
 __declspec(deprecated("The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: " "_stricmp" ". See online help for details."))  int __cdecl stricmp(   const char * _Str1,    const char * _Str2);
__declspec(deprecated("The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: " "_strlwr" ". See online help for details."))  char * __cdecl strlwr(    char * _Str);
 __declspec(deprecated("The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: " "_strnicmp" ". See online help for details."))  int __cdecl strnicmp(   const char * _Str1,    const char * _Str,   size_t _MaxCount);
__declspec(deprecated("The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: " "_strnset" ". See online help for details."))  char * __cdecl strnset(    char * _Str,   int _Val,   size_t _MaxCount);
__declspec(deprecated("The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: " "_strrev" ". See online help for details."))  char * __cdecl strrev(    char * _Str);
__declspec(deprecated("The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: " "_strset" ". See online help for details."))         char * __cdecl strset(    char * _Str,   int _Val);
__declspec(deprecated("The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: " "_strupr" ". See online help for details."))  char * __cdecl strupr(    char * _Str);

#line 255 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\string.h"









#line 265 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\string.h"

  wchar_t * __cdecl _wcsdup(   const wchar_t * _Str);



#line 271 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\string.h"


  errno_t __cdecl wcscat_s(    wchar_t * _Dst,   rsize_t _SizeInWords,    const wchar_t * _Src);
#line 275 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\string.h"
extern "C++" { template <size_t _Size> inline errno_t __cdecl wcscat_s(    wchar_t (&_Dest)[_Size],    const wchar_t * _Source) throw() { return wcscat_s(_Dest, _Size, _Source); } }
__declspec(deprecated("This function or variable may be unsafe. Consider using " "wcscat_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))  wchar_t * __cdecl wcscat(  wchar_t *_Dest,  const wchar_t * _Source);
  const wchar_t * __cdecl wcschr(   const wchar_t * _Str, wchar_t _Ch);
  int __cdecl wcscmp(   const wchar_t * _Str1,    const wchar_t * _Str2);

  errno_t __cdecl wcscpy_s(    wchar_t * _Dst,   rsize_t _SizeInWords,    const wchar_t * _Src);
#line 282 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\string.h"
extern "C++" { template <size_t _Size> inline errno_t __cdecl wcscpy_s(wchar_t (&_Dest)[_Size],    const wchar_t * _Source) throw() { return wcscpy_s(_Dest, _Size, _Source); } }
__declspec(deprecated("This function or variable may be unsafe. Consider using " "wcscpy_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))  wchar_t * __cdecl wcscpy(  wchar_t *_Dest,  const wchar_t * _Source);
  size_t __cdecl wcscspn(   const wchar_t * _Str,    const wchar_t * _Control);
  size_t __cdecl wcslen(   const wchar_t * _Str);
  size_t __cdecl wcsnlen(   const wchar_t * _Src,   size_t _MaxCount);

 static __inline size_t __cdecl wcsnlen_s(   const wchar_t * _Src,   size_t _MaxCount)
{
    return (_Src == 0) ? 0 : wcsnlen(_Src, _MaxCount);
}
#line 293 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\string.h"

  errno_t __cdecl wcsncat_s(    wchar_t * _Dst,   rsize_t _SizeInWords,    const wchar_t * _Src,   rsize_t _MaxCount);
#line 296 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\string.h"
extern "C++" { template <size_t _Size> inline errno_t __cdecl wcsncat_s(    wchar_t (&_Dest)[_Size],    const wchar_t * _Source,   size_t _Count) throw() { return wcsncat_s(_Dest, _Size, _Source, _Count); } }
#pragma warning(push)
#pragma warning(disable:6059)
__declspec(deprecated("This function or variable may be unsafe. Consider using " "wcsncat_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))  wchar_t * __cdecl wcsncat(    wchar_t *_Dest,    const wchar_t * _Source,   size_t _Count);
#pragma warning(pop)
  int __cdecl wcsncmp(   const wchar_t * _Str1,    const wchar_t * _Str2,   size_t _MaxCount);

  errno_t __cdecl wcsncpy_s(    wchar_t * _Dst,   rsize_t _SizeInWords,    const wchar_t * _Src,   rsize_t _MaxCount);
#line 305 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\string.h"
extern "C++" { template <size_t _Size> inline errno_t __cdecl wcsncpy_s(wchar_t (&_Dest)[_Size],    const wchar_t * _Source,   size_t _Count) throw() { return wcsncpy_s(_Dest, _Size, _Source, _Count); } }
__declspec(deprecated("This function or variable may be unsafe. Consider using " "wcsncpy_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))  wchar_t * __cdecl wcsncpy(   wchar_t *_Dest,    const wchar_t * _Source,   size_t _Count);
  const wchar_t * __cdecl wcspbrk(   const wchar_t * _Str,    const wchar_t * _Control);
  const wchar_t * __cdecl wcsrchr(   const wchar_t * _Str,   wchar_t _Ch);
  size_t __cdecl wcsspn(   const wchar_t * _Str,    const wchar_t * _Control);
  const wchar_t * __cdecl wcsstr(   const wchar_t * _Str,    const wchar_t * _SubStr);
 __declspec(deprecated("This function or variable may be unsafe. Consider using " "wcstok_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))  wchar_t * __cdecl wcstok(    wchar_t * _Str,    const wchar_t * _Delim);

  wchar_t * __cdecl wcstok_s(    wchar_t * _Str,    const wchar_t * _Delim,        wchar_t ** _Context);
#line 315 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\string.h"
 __declspec(deprecated("This function or variable may be unsafe. Consider using " "_wcserror_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))  wchar_t * __cdecl _wcserror(  int _ErrNum);
  errno_t __cdecl _wcserror_s(    wchar_t * _Buf,   size_t _SizeInWords,   int _ErrNum);
extern "C++" { template <size_t _Size> inline errno_t __cdecl _wcserror_s(wchar_t (&_Buffer)[_Size],   int _Error) throw() { return _wcserror_s(_Buffer, _Size, _Error); } }
 __declspec(deprecated("This function or variable may be unsafe. Consider using " "__wcserror_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))  wchar_t * __cdecl __wcserror(   const wchar_t * _Str);
  errno_t __cdecl __wcserror_s(    wchar_t * _Buffer,   size_t _SizeInWords,    const wchar_t * _ErrMsg);
extern "C++" { template <size_t _Size> inline errno_t __cdecl __wcserror_s(wchar_t (&_Buffer)[_Size],    const wchar_t * _ErrorMessage) throw() { return __wcserror_s(_Buffer, _Size, _ErrorMessage); } }

  int __cdecl _wcsicmp(   const wchar_t * _Str1,    const wchar_t * _Str2);
  int __cdecl _wcsicmp_l(   const wchar_t * _Str1,    const wchar_t * _Str2,    _locale_t _Locale);
  int __cdecl _wcsnicmp(   const wchar_t * _Str1,    const wchar_t * _Str2,   size_t _MaxCount);
  int __cdecl _wcsnicmp_l(   const wchar_t * _Str1,    const wchar_t * _Str2,   size_t _MaxCount,    _locale_t _Locale);
  errno_t __cdecl _wcsnset_s(    wchar_t * _Dst,   size_t _SizeInWords,   wchar_t _Val,   size_t _MaxCount);
extern "C++" { template <size_t _Size> inline errno_t __cdecl _wcsnset_s(    wchar_t (&_Dst)[_Size], wchar_t _Val,   size_t _MaxCount) throw() { return _wcsnset_s(_Dst, _Size, _Val, _MaxCount); } }
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_wcsnset_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))  wchar_t * __cdecl _wcsnset(    wchar_t *_Str, wchar_t _Val,   size_t _MaxCount);
 wchar_t * __cdecl _wcsrev(    wchar_t * _Str);
  errno_t __cdecl _wcsset_s(    wchar_t * _Dst,   size_t _SizeInWords,   wchar_t _Value);
extern "C++" { template <size_t _Size> inline errno_t __cdecl _wcsset_s(    wchar_t (&_Str)[_Size], wchar_t _Val) throw() { return _wcsset_s(_Str, _Size, _Val); } }
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_wcsset_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))  wchar_t * __cdecl _wcsset(    wchar_t *_Str, wchar_t _Val);

  errno_t __cdecl _wcslwr_s(    wchar_t * _Str,   size_t _SizeInWords);
extern "C++" { template <size_t _Size> inline errno_t __cdecl _wcslwr_s(    wchar_t (&_String)[_Size]) throw() { return _wcslwr_s(_String, _Size); } }
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_wcslwr_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))  wchar_t * __cdecl _wcslwr(  wchar_t *_String);
  errno_t __cdecl _wcslwr_s_l(    wchar_t * _Str,   size_t _SizeInWords,    _locale_t _Locale);
extern "C++" { template <size_t _Size> inline errno_t __cdecl _wcslwr_s_l(    wchar_t (&_String)[_Size],    _locale_t _Locale) throw() { return _wcslwr_s_l(_String, _Size, _Locale); } }
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_wcslwr_s_l" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))  wchar_t * __cdecl _wcslwr_l(    wchar_t *_String,    _locale_t _Locale);
  errno_t __cdecl _wcsupr_s(    wchar_t * _Str,   size_t _Size);
extern "C++" { template <size_t _Size> inline errno_t __cdecl _wcsupr_s(    wchar_t (&_String)[_Size]) throw() { return _wcsupr_s(_String, _Size); } }
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_wcsupr_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))  wchar_t * __cdecl _wcsupr(  wchar_t *_String);
  errno_t __cdecl _wcsupr_s_l(    wchar_t * _Str,   size_t _Size,    _locale_t _Locale);
extern "C++" { template <size_t _Size> inline errno_t __cdecl _wcsupr_s_l(    wchar_t (&_String)[_Size],    _locale_t _Locale) throw() { return _wcsupr_s_l(_String, _Size, _Locale); } }
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_wcsupr_s_l" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))  wchar_t * __cdecl _wcsupr_l(    wchar_t *_String,    _locale_t _Locale);
  size_t __cdecl wcsxfrm(   wchar_t * _Dst,    const wchar_t * _Src,   size_t _MaxCount);
  size_t __cdecl _wcsxfrm_l(   wchar_t * _Dst,    const wchar_t *_Src,   size_t _MaxCount,    _locale_t _Locale);
  int __cdecl wcscoll(   const wchar_t * _Str1,    const wchar_t * _Str2);
  int __cdecl _wcscoll_l(   const wchar_t * _Str1,    const wchar_t * _Str2,    _locale_t _Locale);
  int __cdecl _wcsicoll(   const wchar_t * _Str1,    const wchar_t * _Str2);
  int __cdecl _wcsicoll_l(   const wchar_t * _Str1,    const wchar_t *_Str2,    _locale_t _Locale);
  int __cdecl _wcsncoll(   const wchar_t * _Str1,    const wchar_t * _Str2,   size_t _MaxCount);
  int __cdecl _wcsncoll_l(   const wchar_t * _Str1,    const wchar_t * _Str2,   size_t _MaxCount,    _locale_t _Locale);
  int __cdecl _wcsnicoll(   const wchar_t * _Str1,    const wchar_t * _Str2,   size_t _MaxCount);
  int __cdecl _wcsnicoll_l(   const wchar_t * _Str1,    const wchar_t * _Str2,   size_t _MaxCount,    _locale_t _Locale);




extern "C++" {
 inline wchar_t * __cdecl wcschr(   wchar_t *_Str, wchar_t _Ch)
        {return ((wchar_t *)wcschr((const wchar_t *)_Str, _Ch)); }
 inline wchar_t * __cdecl wcspbrk(   wchar_t *_Str,    const wchar_t *_Control)
        {return ((wchar_t *)wcspbrk((const wchar_t *)_Str, _Control)); }
 inline wchar_t * __cdecl wcsrchr(   wchar_t *_Str,   wchar_t _Ch)
        {return ((wchar_t *)wcsrchr((const wchar_t *)_Str, _Ch)); }
 inline wchar_t * __cdecl wcsstr(   wchar_t *_Str,    const wchar_t *_SubStr)
        {return ((wchar_t *)wcsstr((const wchar_t *)_Str, _SubStr)); }
}
#line 371 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\string.h"
#line 372 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\string.h"






#line 379 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\string.h"

 __declspec(deprecated("The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: " "_wcsdup" ". See online help for details."))  wchar_t * __cdecl wcsdup(   const wchar_t * _Str);



#line 385 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\string.h"





 __declspec(deprecated("The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: " "_wcsicmp" ". See online help for details."))  int __cdecl wcsicmp(   const wchar_t * _Str1,    const wchar_t * _Str2);
 __declspec(deprecated("The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: " "_wcsnicmp" ". See online help for details."))  int __cdecl wcsnicmp(   const wchar_t * _Str1,    const wchar_t * _Str2,   size_t _MaxCount);
__declspec(deprecated("The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: " "_wcsnset" ". See online help for details."))  wchar_t * __cdecl wcsnset(    wchar_t * _Str,   wchar_t _Val,   size_t _MaxCount);
__declspec(deprecated("The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: " "_wcsrev" ". See online help for details."))  wchar_t * __cdecl wcsrev(    wchar_t * _Str);
__declspec(deprecated("The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: " "_wcsset" ". See online help for details."))  wchar_t * __cdecl wcsset(    wchar_t * _Str, wchar_t _Val);
__declspec(deprecated("The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: " "_wcslwr" ". See online help for details."))  wchar_t * __cdecl wcslwr(    wchar_t * _Str);
__declspec(deprecated("The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: " "_wcsupr" ". See online help for details."))  wchar_t * __cdecl wcsupr(    wchar_t * _Str);
 __declspec(deprecated("The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: " "_wcsicoll" ". See online help for details."))  int __cdecl wcsicoll(   const wchar_t * _Str1,    const wchar_t * _Str2);

#line 400 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\string.h"


#line 403 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\string.h"



}
#line 408 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\string.h"

#line 410 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\string.h"
#line 147 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\guiddef.h"



__inline int InlineIsEqualGUID(const GUID & rguid1, const GUID & rguid2)
{
   return (
      ((unsigned long *) &rguid1)[0] == ((unsigned long *) &rguid2)[0] &&
      ((unsigned long *) &rguid1)[1] == ((unsigned long *) &rguid2)[1] &&
      ((unsigned long *) &rguid1)[2] == ((unsigned long *) &rguid2)[2] &&
      ((unsigned long *) &rguid1)[3] == ((unsigned long *) &rguid2)[3]);
}

__inline int IsEqualGUID(const GUID & rguid1, const GUID & rguid2)
{
    return !memcmp(&rguid1, &rguid2, sizeof(GUID));
}











#line 175 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\guiddef.h"

















__inline int operator==(const GUID & guidOne, const GUID & guidOther)
{
    return IsEqualGUID(guidOne,guidOther);
}

__inline int operator!=(const GUID & guidOne, const GUID & guidOther)
{
    return !(guidOne == guidOther);
}
#line 202 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\guiddef.h"
#line 203 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\guiddef.h"
#line 204 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\guiddef.h"
#line 205 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\guiddef.h"
#line 206 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\guiddef.h"

#line 999 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"




typedef struct  _OBJECTID {     
    GUID Lineage;
    DWORD Uniquifier;
} OBJECTID;
#line 1008 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"





































































extern "C++" 
template <typename T, size_t N>
char (*RtlpNumberOf(  T (&)[N] ))[N];









































#line 1127 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"





#line 1133 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"









































#line 1175 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"

























typedef
 
 
EXCEPTION_DISPOSITION
__stdcall
EXCEPTION_ROUTINE (
     struct _EXCEPTION_RECORD *ExceptionRecord,
     PVOID EstablisherFrame,
     struct _CONTEXT *ContextRecord,
     PVOID DispatcherContext
    );

typedef EXCEPTION_ROUTINE *PEXCEPTION_ROUTINE;




































































































































































































































































































































































































































































































































































































































































































































#line 1922 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"
























#line 1947 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"





















#line 1969 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"













  
























































#line 2040 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"
  
#line 2042 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"




typedef ULONG_PTR KSPIN_LOCK;
typedef KSPIN_LOCK *PKSPIN_LOCK;






typedef struct __declspec(align(16)) _M128A {
    ULONGLONG Low;
    LONGLONG High;
} M128A, *PM128A;





typedef struct __declspec(align(16)) _XSAVE_FORMAT {
    WORD   ControlWord;
    WORD   StatusWord;
    BYTE  TagWord;
    BYTE  Reserved1;
    WORD   ErrorOpcode;
    DWORD ErrorOffset;
    WORD   ErrorSelector;
    WORD   Reserved2;
    DWORD DataOffset;
    WORD   DataSelector;
    WORD   Reserved3;
    DWORD MxCsr;
    DWORD MxCsr_Mask;
    M128A FloatRegisters[8];






#line 2085 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"

    M128A XmmRegisters[8];
    BYTE  Reserved4[192];

    
    
    
    
    

    DWORD   StackControl[7];    
    DWORD   Cr0NpxState;

#line 2099 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"

} XSAVE_FORMAT, *PXSAVE_FORMAT;

typedef struct __declspec(align(8)) _XSAVE_AREA_HEADER {
    DWORD64 Mask;
    DWORD64 Reserved[7];
} XSAVE_AREA_HEADER, *PXSAVE_AREA_HEADER;

typedef struct __declspec(align(16)) _XSAVE_AREA {
    XSAVE_FORMAT LegacyState;
    XSAVE_AREA_HEADER Header;
} XSAVE_AREA, *PXSAVE_AREA;

typedef struct _XSTATE_CONTEXT {
    DWORD64 Mask;
    DWORD Length;
    DWORD Reserved1;
     PXSAVE_AREA Area;


    DWORD Reserved2;
#line 2121 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"

    PVOID Buffer;


    DWORD Reserved3;
#line 2127 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"

} XSTATE_CONTEXT, *PXSTATE_CONTEXT;













typedef struct _CONTEXT_CHUNK {
    LONG Offset;
    DWORD Length;
} CONTEXT_CHUNK, *PCONTEXT_CHUNK;


























typedef struct _CONTEXT_EX {

    
    
    
    

    CONTEXT_CHUNK All;

    
    
    
    
    

    CONTEXT_CHUNK Legacy;

    
    
    
    
    
    
    

    CONTEXT_CHUNK XState;

} CONTEXT_EX, *PCONTEXT_EX;


































typedef char __C_ASSERT__[((sizeof(XSAVE_FORMAT) & (64 - 1)) == 0)?1:-1];
typedef char __C_ASSERT__[((((LONG)(LONG_PTR)&(((XSAVE_AREA *)0)->Header)) & (64 - 1)) == 0)?1:-1];


typedef char __C_ASSERT__[(sizeof(XSAVE_AREA) == 512 + 64)?1:-1];

#line 2241 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"



















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#pragma warning(push)
#line 3606 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"
#pragma warning(disable:4164)   
                                

#pragma function(_enable)
#pragma function(_disable)
#line 3612 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"


#pragma warning(pop)


#line 3618 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"

#line 3620 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"
#line 3621 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"





extern "C" {
#line 3628 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"


















BOOLEAN
_bittest (
     LONG const *Base,
     LONG Offset
    );

BOOLEAN
_bittestandcomplement (
     LONG *Base,
     LONG Offset
    );

BOOLEAN
_bittestandset (
     LONG *Base,
     LONG Offset
    );

BOOLEAN
_bittestandreset (
     LONG *Base,
     LONG Offset
    );

BOOLEAN
_interlockedbittestandset (
       LONG volatile *Base,
     LONG Offset
    );

BOOLEAN
_interlockedbittestandreset (
       LONG volatile *Base,
     LONG Offset
    );

#pragma intrinsic(_bittest)
#pragma intrinsic(_bittestandcomplement)
#pragma intrinsic(_bittestandset)
#pragma intrinsic(_bittestandreset)
#pragma intrinsic(_interlockedbittestandset)
#pragma intrinsic(_interlockedbittestandreset)









BOOLEAN
_BitScanForward (
     DWORD *Index,
     DWORD Mask
    );


BOOLEAN
_BitScanReverse (
     DWORD *Index,
     DWORD Mask
    );

#pragma intrinsic(_BitScanForward)
#pragma intrinsic(_BitScanReverse)





































#line 3750 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"










SHORT
_InterlockedAnd16 (
       SHORT volatile *Destination,
     SHORT Value
    );

SHORT
_InterlockedCompareExchange16 (
       SHORT volatile *Destination,
     SHORT ExChange,
     SHORT Comperand
    );

SHORT
_InterlockedOr16 (
       SHORT volatile *Destination,
     SHORT Value
    );

#pragma intrinsic(_InterlockedAnd16)
#pragma intrinsic(_InterlockedCompareExchange16)
#pragma intrinsic(_InterlockedOr16)

#line 3784 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"


#pragma warning(push)
#pragma warning(disable:4035 4793)

__forceinline
BOOLEAN
InterlockedBitTestAndComplement (
       LONG volatile *Base,
     LONG Bit
    )
{
    __asm {
           mov eax, Bit
           mov ecx, Base
           lock btc [ecx], eax
           setc al
    };
}
#pragma warning(pop)
#line 3805 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"











BYTE 
__readfsbyte (
     DWORD Offset
    );

WORD  
__readfsword (
     DWORD Offset
    );

DWORD
__readfsdword (
     DWORD Offset
    );

void
__writefsbyte (
     DWORD Offset,
     BYTE  Data
    );

void
__writefsword (
     DWORD Offset,
     WORD   Data
    );

void
__writefsdword (
     DWORD Offset,
     DWORD Data
    );

#pragma intrinsic(__readfsbyte)
#pragma intrinsic(__readfsword)
#pragma intrinsic(__readfsdword)
#pragma intrinsic(__writefsbyte)
#pragma intrinsic(__writefsword)
#pragma intrinsic(__writefsdword)

#line 3857 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"





void
__incfsbyte (
     DWORD Offset
    );

void
__addfsbyte (
     DWORD Offset,
     BYTE  Value
    );

void
__incfsword (
     DWORD Offset
    );

void
__addfsword (
     DWORD Offset,
     WORD   Value
    );

void
__incfsdword (
     DWORD Offset
    );

void
__addfsdword (
     DWORD Offset,
     DWORD Value
    );

#pragma intrinsic(__incfsbyte)
#pragma intrinsic(__addfsbyte)
#pragma intrinsic(__incfsword)
#pragma intrinsic(__addfsword)
#pragma intrinsic(__incfsdword)
#pragma intrinsic(__addfsdword)

#line 3903 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"

#line 3905 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"



void
_mm_pause (
    void
    );

#pragma intrinsic(_mm_pause)









#line 3924 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"


}
#line 3928 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"

#line 3930 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"





#pragma warning( push )
#pragma warning( disable : 4793 )
__forceinline
void
MemoryBarrier (
    void
    )
{
    LONG Barrier;
    __asm {
        xchg Barrier, eax
    }
}
#pragma warning( pop )

#line 3951 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"























DWORD64
__readpmc (
     DWORD Counter
    );

#pragma intrinsic(__readpmc)
















#line 3997 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"









DWORD64
__rdtsc (
    void
    );

#pragma intrinsic(__rdtsc)













#line 4026 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"








void
__int2c (
    void
    );

#pragma intrinsic(__int2c)


__forceinline
void
DbgRaiseAssertionFailure (
    void
    )

{
    __int2c();
}


















#line 4070 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"

#line 4072 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"





__inline PVOID GetFiberData( void )    { return *(PVOID *) (ULONG_PTR) __readfsdword (0x10);}
__inline PVOID GetCurrentFiber( void ) { return (PVOID) (ULONG_PTR) __readfsdword (0x10);}


















#line 4098 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"


#line 4101 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"

















































#line 4151 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"

typedef struct _FLOATING_SAVE_AREA {
    DWORD   ControlWord;
    DWORD   StatusWord;
    DWORD   TagWord;
    DWORD   ErrorOffset;
    DWORD   ErrorSelector;
    DWORD   DataOffset;
    DWORD   DataSelector;
    BYTE    RegisterArea[80];
    DWORD   Cr0NpxState;
} FLOATING_SAVE_AREA;

typedef FLOATING_SAVE_AREA *PFLOATING_SAVE_AREA;









typedef char __C_ASSERT__[(sizeof(XSAVE_FORMAT) == 512)?1:-1];

#line 4177 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"




#line 1 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\pshpack4.h"























#pragma warning(disable:4103)

#pragma pack(push,4)


#line 30 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\pshpack4.h"


#line 33 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\pshpack4.h"
#line 34 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\pshpack4.h"

#line 4182 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"











typedef struct _CONTEXT {

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    DWORD ContextFlags;

    
    
    
    
    

    DWORD   Dr0;
    DWORD   Dr1;
    DWORD   Dr2;
    DWORD   Dr3;
    DWORD   Dr6;
    DWORD   Dr7;

    
    
    
    

    FLOATING_SAVE_AREA FloatSave;

    
    
    
    

    DWORD   SegGs;
    DWORD   SegFs;
    DWORD   SegEs;
    DWORD   SegDs;

    
    
    
    

    DWORD   Edi;
    DWORD   Esi;
    DWORD   Ebx;
    DWORD   Edx;
    DWORD   Ecx;
    DWORD   Eax;

    
    
    
    

    DWORD   Ebp;
    DWORD   Eip;
    DWORD   SegCs;              
    DWORD   EFlags;             
    DWORD   Esp;
    DWORD   SegSs;

    
    
    
    
    

    BYTE    ExtendedRegisters[512];

} CONTEXT;

typedef CONTEXT *PCONTEXT;

#line 1 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\poppack.h"


























#pragma warning(disable:4103)

#pragma pack(pop)


#line 33 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\poppack.h"


#line 36 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\poppack.h"
#line 37 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\poppack.h"

#line 4282 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"


#line 4285 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"





typedef struct _LDT_ENTRY {
    WORD    LimitLow;
    WORD    BaseLow;
    union {
        struct {
            BYTE    BaseMid;
            BYTE    Flags1;     
            BYTE    Flags2;     
            BYTE    BaseHi;
        } Bytes;
        struct {
            DWORD   BaseMid : 8;
            DWORD   Type : 5;
            DWORD   Dpl : 2;
            DWORD   Pres : 1;
            DWORD   LimitHi : 4;
            DWORD   Sys : 1;
            DWORD   Reserved_0 : 1;
            DWORD   Default_Big : 1;
            DWORD   Granularity : 1;
            DWORD   BaseHi : 8;
        } Bits;
    } HighWord;
} LDT_ENTRY, *PLDT_ENTRY;

#line 4316 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"












































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 5385 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"





















































































































































































#line 5567 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"


















































































































































































































































































































































































































































































































































































































#line 6162 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"









typedef struct _WOW64_FLOATING_SAVE_AREA {
    DWORD   ControlWord;
    DWORD   StatusWord;
    DWORD   TagWord;
    DWORD   ErrorOffset;
    DWORD   ErrorSelector;
    DWORD   DataOffset;
    DWORD   DataSelector;
    BYTE    RegisterArea[80];
    DWORD   Cr0NpxState;
} WOW64_FLOATING_SAVE_AREA;

typedef WOW64_FLOATING_SAVE_AREA *PWOW64_FLOATING_SAVE_AREA;

#line 1 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\pshpack4.h"























#pragma warning(disable:4103)

#pragma pack(push,4)


#line 30 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\pshpack4.h"


#line 33 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\pshpack4.h"
#line 34 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\pshpack4.h"

#line 6186 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"











typedef struct _WOW64_CONTEXT {

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    DWORD ContextFlags;

    
    
    
    
    

    DWORD   Dr0;
    DWORD   Dr1;
    DWORD   Dr2;
    DWORD   Dr3;
    DWORD   Dr6;
    DWORD   Dr7;

    
    
    
    

    WOW64_FLOATING_SAVE_AREA FloatSave;

    
    
    
    

    DWORD   SegGs;
    DWORD   SegFs;
    DWORD   SegEs;
    DWORD   SegDs;

    
    
    
    

    DWORD   Edi;
    DWORD   Esi;
    DWORD   Ebx;
    DWORD   Edx;
    DWORD   Ecx;
    DWORD   Eax;

    
    
    
    

    DWORD   Ebp;
    DWORD   Eip;
    DWORD   SegCs;              
    DWORD   EFlags;             
    DWORD   Esp;
    DWORD   SegSs;

    
    
    
    
    

    BYTE    ExtendedRegisters[512];

} WOW64_CONTEXT;

typedef WOW64_CONTEXT *PWOW64_CONTEXT;

#line 1 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\poppack.h"


























#pragma warning(disable:4103)

#pragma pack(pop)


#line 33 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\poppack.h"


#line 36 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\poppack.h"
#line 37 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\poppack.h"

#line 6286 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"


typedef struct _WOW64_LDT_ENTRY {
    WORD    LimitLow;
    WORD    BaseLow;
    union {
        struct {
            BYTE    BaseMid;
            BYTE    Flags1;     
            BYTE    Flags2;     
            BYTE    BaseHi;
        } Bytes;
        struct {
            DWORD   BaseMid : 8;
            DWORD   Type : 5;
            DWORD   Dpl : 2;
            DWORD   Pres : 1;
            DWORD   LimitHi : 4;
            DWORD   Sys : 1;
            DWORD   Reserved_0 : 1;
            DWORD   Default_Big : 1;
            DWORD   Granularity : 1;
            DWORD   BaseHi : 8;
        } Bits;
    } HighWord;
} WOW64_LDT_ENTRY, *PWOW64_LDT_ENTRY;

typedef struct _WOW64_DESCRIPTOR_TABLE_ENTRY {
    DWORD Selector;
    WOW64_LDT_ENTRY Descriptor;
} WOW64_DESCRIPTOR_TABLE_ENTRY, *PWOW64_DESCRIPTOR_TABLE_ENTRY;








typedef struct _EXCEPTION_RECORD {
    DWORD    ExceptionCode;
    DWORD ExceptionFlags;
    struct _EXCEPTION_RECORD *ExceptionRecord;
    PVOID ExceptionAddress;
    DWORD NumberParameters;
    ULONG_PTR ExceptionInformation[15];
    } EXCEPTION_RECORD;

typedef EXCEPTION_RECORD *PEXCEPTION_RECORD;

typedef struct _EXCEPTION_RECORD32 {
    DWORD    ExceptionCode;
    DWORD ExceptionFlags;
    DWORD ExceptionRecord;
    DWORD ExceptionAddress;
    DWORD NumberParameters;
    DWORD ExceptionInformation[15];
} EXCEPTION_RECORD32, *PEXCEPTION_RECORD32;

typedef struct _EXCEPTION_RECORD64 {
    DWORD    ExceptionCode;
    DWORD ExceptionFlags;
    DWORD64 ExceptionRecord;
    DWORD64 ExceptionAddress;
    DWORD NumberParameters;
    DWORD __unusedAlignment;
    DWORD64 ExceptionInformation[15];
} EXCEPTION_RECORD64, *PEXCEPTION_RECORD64;





typedef struct _EXCEPTION_POINTERS {
    PEXCEPTION_RECORD ExceptionRecord;
    PCONTEXT ContextRecord;
} EXCEPTION_POINTERS, *PEXCEPTION_POINTERS;



__declspec(dllimport)
void
__stdcall
RtlUnwind (
     PVOID TargetFrame,
     PVOID TargetIp,
     PEXCEPTION_RECORD ExceptionRecord,
     PVOID ReturnValue
    );














#line 6390 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"















#line 6406 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"













#line 6420 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"

typedef PVOID PACCESS_TOKEN;            
typedef PVOID PSECURITY_DESCRIPTOR;     
typedef PVOID PSID;     







































typedef DWORD ACCESS_MASK;
typedef ACCESS_MASK *PACCESS_MASK;
























































typedef struct _GENERIC_MAPPING {
    ACCESS_MASK GenericRead;
    ACCESS_MASK GenericWrite;
    ACCESS_MASK GenericExecute;
    ACCESS_MASK GenericAll;
} GENERIC_MAPPING;
typedef GENERIC_MAPPING *PGENERIC_MAPPING;












#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\pshpack4.h"























#pragma warning(disable:4103)

#pragma pack(push,4)


#line 30 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\pshpack4.h"


#line 33 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\pshpack4.h"
#line 34 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\pshpack4.h"

#line 6541 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"

typedef struct _LUID_AND_ATTRIBUTES {
    LUID Luid;
    DWORD Attributes;
    } LUID_AND_ATTRIBUTES, * PLUID_AND_ATTRIBUTES;
typedef LUID_AND_ATTRIBUTES LUID_AND_ATTRIBUTES_ARRAY[1];
typedef LUID_AND_ATTRIBUTES_ARRAY *PLUID_AND_ATTRIBUTES_ARRAY;

#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\poppack.h"


























#pragma warning(disable:4103)

#pragma pack(pop)


#line 33 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\poppack.h"


#line 36 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\poppack.h"
#line 37 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\poppack.h"

#line 6550 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"


































typedef struct _SID_IDENTIFIER_AUTHORITY {
    BYTE  Value[6];
} SID_IDENTIFIER_AUTHORITY, *PSID_IDENTIFIER_AUTHORITY;
#line 6588 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"




typedef struct _SID {
   BYTE  Revision;
   BYTE  SubAuthorityCount;
   SID_IDENTIFIER_AUTHORITY IdentifierAuthority;



   DWORD SubAuthority[1];
#line 6601 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"
} SID, *PISID;
#line 6603 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"





                                                



#line 6613 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"


typedef enum _SID_NAME_USE {
    SidTypeUser = 1,
    SidTypeGroup,
    SidTypeDomain,
    SidTypeAlias,
    SidTypeWellKnownGroup,
    SidTypeDeletedAccount,
    SidTypeInvalid,
    SidTypeUnknown,
    SidTypeComputer,
    SidTypeLabel
} SID_NAME_USE, *PSID_NAME_USE;

typedef struct _SID_AND_ATTRIBUTES {



    PSID Sid;
#line 6634 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"
    DWORD Attributes;
    } SID_AND_ATTRIBUTES, * PSID_AND_ATTRIBUTES;

typedef SID_AND_ATTRIBUTES SID_AND_ATTRIBUTES_ARRAY[1];
typedef SID_AND_ATTRIBUTES_ARRAY *PSID_AND_ATTRIBUTES_ARRAY;


typedef ULONG_PTR SID_HASH_ENTRY, *PSID_HASH_ENTRY;

typedef struct _SID_AND_ATTRIBUTES_HASH {
    DWORD SidCount;
    PSID_AND_ATTRIBUTES SidAttr;
    SID_HASH_ENTRY Hash[32];
} SID_AND_ATTRIBUTES_HASH, *PSID_AND_ATTRIBUTES_HASH;





































































































































































































































































typedef enum {

    WinNullSid                                  = 0,
    WinWorldSid                                 = 1,
    WinLocalSid                                 = 2,
    WinCreatorOwnerSid                          = 3,
    WinCreatorGroupSid                          = 4,
    WinCreatorOwnerServerSid                    = 5,
    WinCreatorGroupServerSid                    = 6,
    WinNtAuthoritySid                           = 7,
    WinDialupSid                                = 8,
    WinNetworkSid                               = 9,
    WinBatchSid                                 = 10,
    WinInteractiveSid                           = 11,
    WinServiceSid                               = 12,
    WinAnonymousSid                             = 13,
    WinProxySid                                 = 14,
    WinEnterpriseControllersSid                 = 15,
    WinSelfSid                                  = 16,
    WinAuthenticatedUserSid                     = 17,
    WinRestrictedCodeSid                        = 18,
    WinTerminalServerSid                        = 19,
    WinRemoteLogonIdSid                         = 20,
    WinLogonIdsSid                              = 21,
    WinLocalSystemSid                           = 22,
    WinLocalServiceSid                          = 23,
    WinNetworkServiceSid                        = 24,
    WinBuiltinDomainSid                         = 25,
    WinBuiltinAdministratorsSid                 = 26,
    WinBuiltinUsersSid                          = 27,
    WinBuiltinGuestsSid                         = 28,
    WinBuiltinPowerUsersSid                     = 29,
    WinBuiltinAccountOperatorsSid               = 30,
    WinBuiltinSystemOperatorsSid                = 31,
    WinBuiltinPrintOperatorsSid                 = 32,
    WinBuiltinBackupOperatorsSid                = 33,
    WinBuiltinReplicatorSid                     = 34,
    WinBuiltinPreWindows2000CompatibleAccessSid = 35,
    WinBuiltinRemoteDesktopUsersSid             = 36,
    WinBuiltinNetworkConfigurationOperatorsSid  = 37,
    WinAccountAdministratorSid                  = 38,
    WinAccountGuestSid                          = 39,
    WinAccountKrbtgtSid                         = 40,
    WinAccountDomainAdminsSid                   = 41,
    WinAccountDomainUsersSid                    = 42,
    WinAccountDomainGuestsSid                   = 43,
    WinAccountComputersSid                      = 44,
    WinAccountControllersSid                    = 45,
    WinAccountCertAdminsSid                     = 46,
    WinAccountSchemaAdminsSid                   = 47,
    WinAccountEnterpriseAdminsSid               = 48,
    WinAccountPolicyAdminsSid                   = 49,
    WinAccountRasAndIasServersSid               = 50,
    WinNTLMAuthenticationSid                    = 51,
    WinDigestAuthenticationSid                  = 52,
    WinSChannelAuthenticationSid                = 53,
    WinThisOrganizationSid                      = 54,
    WinOtherOrganizationSid                     = 55,
    WinBuiltinIncomingForestTrustBuildersSid    = 56,
    WinBuiltinPerfMonitoringUsersSid            = 57,
    WinBuiltinPerfLoggingUsersSid               = 58,
    WinBuiltinAuthorizationAccessSid            = 59,
    WinBuiltinTerminalServerLicenseServersSid   = 60,
    WinBuiltinDCOMUsersSid                      = 61,
    WinBuiltinIUsersSid                         = 62,
    WinIUserSid                                 = 63,
    WinBuiltinCryptoOperatorsSid                = 64,
    WinUntrustedLabelSid                        = 65,
    WinLowLabelSid                              = 66,
    WinMediumLabelSid                           = 67,
    WinHighLabelSid                             = 68,
    WinSystemLabelSid                           = 69,
    WinWriteRestrictedCodeSid                   = 70,
    WinCreatorOwnerRightsSid                    = 71,
    WinCacheablePrincipalsGroupSid              = 72,
    WinNonCacheablePrincipalsGroupSid           = 73,
    WinEnterpriseReadonlyControllersSid         = 74,
    WinAccountReadonlyControllersSid            = 75,
    WinBuiltinEventLogReadersGroup              = 76,
    WinNewEnterpriseReadonlyControllersSid      = 77,
    WinBuiltinCertSvcDComAccessGroup            = 78,
    WinMediumPlusLabelSid                       = 79,
    WinLocalLogonSid                            = 80,
    WinConsoleLogonSid							= 81,
    WinThisOrganizationCertificateSid			= 82,
} WELL_KNOWN_SID_TYPE;
































































































typedef struct _ACL {
    BYTE  AclRevision;
    BYTE  Sbz1;
    WORD   AclSize;
    WORD   AceCount;
    WORD   Sbz2;
} ACL;
typedef ACL *PACL;






















typedef struct _ACE_HEADER {
    BYTE  AceType;
    BYTE  AceFlags;
    WORD   AceSize;
} ACE_HEADER;
typedef ACE_HEADER *PACE_HEADER;









































































































typedef struct _ACCESS_ALLOWED_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD SidStart;
} ACCESS_ALLOWED_ACE;

typedef ACCESS_ALLOWED_ACE *PACCESS_ALLOWED_ACE;

typedef struct _ACCESS_DENIED_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD SidStart;
} ACCESS_DENIED_ACE;
typedef ACCESS_DENIED_ACE *PACCESS_DENIED_ACE;

typedef struct _SYSTEM_AUDIT_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD SidStart;
} SYSTEM_AUDIT_ACE;
typedef SYSTEM_AUDIT_ACE *PSYSTEM_AUDIT_ACE;

typedef struct _SYSTEM_ALARM_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD SidStart;
} SYSTEM_ALARM_ACE;
typedef SYSTEM_ALARM_ACE *PSYSTEM_ALARM_ACE;

typedef struct _SYSTEM_MANDATORY_LABEL_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD SidStart;
} SYSTEM_MANDATORY_LABEL_ACE, *PSYSTEM_MANDATORY_LABEL_ACE;











typedef struct _ACCESS_ALLOWED_OBJECT_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD Flags;
    GUID ObjectType;
    GUID InheritedObjectType;
    DWORD SidStart;
} ACCESS_ALLOWED_OBJECT_ACE, *PACCESS_ALLOWED_OBJECT_ACE;

typedef struct _ACCESS_DENIED_OBJECT_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD Flags;
    GUID ObjectType;
    GUID InheritedObjectType;
    DWORD SidStart;
} ACCESS_DENIED_OBJECT_ACE, *PACCESS_DENIED_OBJECT_ACE;

typedef struct _SYSTEM_AUDIT_OBJECT_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD Flags;
    GUID ObjectType;
    GUID InheritedObjectType;
    DWORD SidStart;
} SYSTEM_AUDIT_OBJECT_ACE, *PSYSTEM_AUDIT_OBJECT_ACE;

typedef struct _SYSTEM_ALARM_OBJECT_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD Flags;
    GUID ObjectType;
    GUID InheritedObjectType;
    DWORD SidStart;
} SYSTEM_ALARM_OBJECT_ACE, *PSYSTEM_ALARM_OBJECT_ACE;






typedef struct _ACCESS_ALLOWED_CALLBACK_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD SidStart;
    
} ACCESS_ALLOWED_CALLBACK_ACE, *PACCESS_ALLOWED_CALLBACK_ACE;

typedef struct _ACCESS_DENIED_CALLBACK_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD SidStart;
    
} ACCESS_DENIED_CALLBACK_ACE, *PACCESS_DENIED_CALLBACK_ACE;

typedef struct _SYSTEM_AUDIT_CALLBACK_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD SidStart;
    
} SYSTEM_AUDIT_CALLBACK_ACE, *PSYSTEM_AUDIT_CALLBACK_ACE;

typedef struct _SYSTEM_ALARM_CALLBACK_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD SidStart;
    
} SYSTEM_ALARM_CALLBACK_ACE, *PSYSTEM_ALARM_CALLBACK_ACE;

typedef struct _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD Flags;
    GUID ObjectType;
    GUID InheritedObjectType;
    DWORD SidStart;
    
} ACCESS_ALLOWED_CALLBACK_OBJECT_ACE, *PACCESS_ALLOWED_CALLBACK_OBJECT_ACE;

typedef struct _ACCESS_DENIED_CALLBACK_OBJECT_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD Flags;
    GUID ObjectType;
    GUID InheritedObjectType;
    DWORD SidStart;
    
} ACCESS_DENIED_CALLBACK_OBJECT_ACE, *PACCESS_DENIED_CALLBACK_OBJECT_ACE;

typedef struct _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD Flags;
    GUID ObjectType;
    GUID InheritedObjectType;
    DWORD SidStart;
    
} SYSTEM_AUDIT_CALLBACK_OBJECT_ACE, *PSYSTEM_AUDIT_CALLBACK_OBJECT_ACE;

typedef struct _SYSTEM_ALARM_CALLBACK_OBJECT_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD Flags;
    GUID ObjectType;
    GUID InheritedObjectType;
    DWORD SidStart;
    
} SYSTEM_ALARM_CALLBACK_OBJECT_ACE, *PSYSTEM_ALARM_CALLBACK_OBJECT_ACE;















typedef enum _ACL_INFORMATION_CLASS {
    AclRevisionInformation = 1,
    AclSizeInformation
} ACL_INFORMATION_CLASS;






typedef struct _ACL_REVISION_INFORMATION {
    DWORD AclRevision;
} ACL_REVISION_INFORMATION;
typedef ACL_REVISION_INFORMATION *PACL_REVISION_INFORMATION;





typedef struct _ACL_SIZE_INFORMATION {
    DWORD AceCount;
    DWORD AclBytesInUse;
    DWORD AclBytesFree;
} ACL_SIZE_INFORMATION;
typedef ACL_SIZE_INFORMATION *PACL_SIZE_INFORMATION;


























typedef WORD   SECURITY_DESCRIPTOR_CONTROL, *PSECURITY_DESCRIPTOR_CONTROL;

























































































typedef struct _SECURITY_DESCRIPTOR_RELATIVE {
    BYTE  Revision;
    BYTE  Sbz1;
    SECURITY_DESCRIPTOR_CONTROL Control;
    DWORD Owner;
    DWORD Group;
    DWORD Sacl;
    DWORD Dacl;
    } SECURITY_DESCRIPTOR_RELATIVE, *PISECURITY_DESCRIPTOR_RELATIVE;

typedef struct _SECURITY_DESCRIPTOR {
   BYTE  Revision;
   BYTE  Sbz1;
   SECURITY_DESCRIPTOR_CONTROL Control;
   PSID Owner;
   PSID Group;
   PACL Sacl;
   PACL Dacl;

   } SECURITY_DESCRIPTOR, *PISECURITY_DESCRIPTOR;


















































typedef struct _OBJECT_TYPE_LIST {
    WORD   Level;
    WORD   Sbz;
    GUID *ObjectType;
} OBJECT_TYPE_LIST, *POBJECT_TYPE_LIST;















typedef enum _AUDIT_EVENT_TYPE {
    AuditEventObjectAccess,
    AuditEventDirectoryServiceAccess
} AUDIT_EVENT_TYPE, *PAUDIT_EVENT_TYPE;


















































typedef struct _PRIVILEGE_SET {
    DWORD PrivilegeCount;
    DWORD Control;
    LUID_AND_ATTRIBUTES Privilege[1];
    } PRIVILEGE_SET, * PPRIVILEGE_SET;













typedef enum _ACCESS_REASON_TYPE{

    AccessReasonNone = 0x00000000,  

    
    
    
    
    
    AccessReasonAllowedAce = 0x00010000,    
    AccessReasonDeniedAce = 0x00020000,     

    AccessReasonAllowedParentAce = 0x00030000,    
    AccessReasonDeniedParentAce = 0x00040000,     

    AccessReasonMissingPrivilege = 0x00100000,
    AccessReasonFromPrivilege = 0x00200000,


    AccessReasonIntegrityLevel = 0x00300000,

    AccessReasonOwnership = 0x00400000,

    AccessReasonNullDacl = 0x00500000,
    AccessReasonEmptyDacl = 0x00600000,

    AccessReasonNoSD = 0x00700000,
    AccessReasonNoGrant = 0x00800000    
} ACCESS_REASON_TYPE;

 












typedef DWORD ACCESS_REASON;

typedef struct _ACCESS_REASONS{
        ACCESS_REASON Data[32];
} ACCESS_REASONS, *PACCESS_REASONS;
























typedef struct _SE_SECURITY_DESCRIPTOR
{
    DWORD Size;
    DWORD Flags;
    PSECURITY_DESCRIPTOR SecurityDescriptor;
} SE_SECURITY_DESCRIPTOR, *PSE_SECURITY_DESCRIPTOR;

typedef struct _SE_ACCESS_REQUEST
{
    DWORD Size;
    PSE_SECURITY_DESCRIPTOR SeSecurityDescriptor;
    ACCESS_MASK DesiredAccess;
    ACCESS_MASK PreviouslyGrantedAccess;
    PSID PrincipalSelfSid;      
    PGENERIC_MAPPING GenericMapping;
    DWORD ObjectTypeListCount;
    POBJECT_TYPE_LIST ObjectTypeList;
} SE_ACCESS_REQUEST, *PSE_ACCESS_REQUEST;


typedef struct _SE_ACCESS_REPLY
{
    DWORD Size;
    DWORD ResultListCount;  
    PACCESS_MASK GrantedAccess;
    PDWORD    AccessStatus;
    PACCESS_REASONS AccessReason;
    PPRIVILEGE_SET* Privileges;
} SE_ACCESS_REPLY, *PSE_ACCESS_REPLY;






























































typedef enum _SECURITY_IMPERSONATION_LEVEL {
    SecurityAnonymous,
    SecurityIdentification,
    SecurityImpersonation,
    SecurityDelegation
    } SECURITY_IMPERSONATION_LEVEL, * PSECURITY_IMPERSONATION_LEVEL;












































#line 7917 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"

















typedef enum _TOKEN_TYPE {
    TokenPrimary = 1,
    TokenImpersonation
    } TOKEN_TYPE;
typedef TOKEN_TYPE *PTOKEN_TYPE;







typedef enum _TOKEN_ELEVATION_TYPE {
    TokenElevationTypeDefault = 1,
    TokenElevationTypeFull,
    TokenElevationTypeLimited,
} TOKEN_ELEVATION_TYPE, *PTOKEN_ELEVATION_TYPE;






typedef enum _TOKEN_INFORMATION_CLASS {
    TokenUser = 1,
    TokenGroups,
    TokenPrivileges,
    TokenOwner,
    TokenPrimaryGroup,
    TokenDefaultDacl,
    TokenSource,
    TokenType,
    TokenImpersonationLevel,
    TokenStatistics,
    TokenRestrictedSids,
    TokenSessionId,
    TokenGroupsAndPrivileges,
    TokenSessionReference,
    TokenSandBoxInert,
    TokenAuditPolicy,
    TokenOrigin,
    TokenElevationType,
    TokenLinkedToken,
    TokenElevation,
    TokenHasRestrictions,
    TokenAccessInformation,
    TokenVirtualizationAllowed,
    TokenVirtualizationEnabled,
    TokenIntegrityLevel,
    TokenUIAccess,
    TokenMandatoryPolicy,
    TokenLogonSid,
    MaxTokenInfoClass  
} TOKEN_INFORMATION_CLASS, *PTOKEN_INFORMATION_CLASS;






typedef struct _TOKEN_USER {
    SID_AND_ATTRIBUTES User;
} TOKEN_USER, *PTOKEN_USER;

typedef struct _TOKEN_GROUPS {
    DWORD GroupCount;



    SID_AND_ATTRIBUTES Groups[1];
#line 8005 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"
} TOKEN_GROUPS, *PTOKEN_GROUPS;


typedef struct _TOKEN_PRIVILEGES {
    DWORD PrivilegeCount;
    LUID_AND_ATTRIBUTES Privileges[1];
} TOKEN_PRIVILEGES, *PTOKEN_PRIVILEGES;


typedef struct _TOKEN_OWNER {
    PSID Owner;
} TOKEN_OWNER, *PTOKEN_OWNER;


typedef struct _TOKEN_PRIMARY_GROUP {
    PSID PrimaryGroup;
} TOKEN_PRIMARY_GROUP, *PTOKEN_PRIMARY_GROUP;


typedef struct _TOKEN_DEFAULT_DACL {
    PACL DefaultDacl;
} TOKEN_DEFAULT_DACL, *PTOKEN_DEFAULT_DACL;

typedef struct _TOKEN_GROUPS_AND_PRIVILEGES {
    DWORD SidCount;
    DWORD SidLength;
    PSID_AND_ATTRIBUTES Sids;
    DWORD RestrictedSidCount;
    DWORD RestrictedSidLength;
    PSID_AND_ATTRIBUTES RestrictedSids;
    DWORD PrivilegeCount;
    DWORD PrivilegeLength;
    PLUID_AND_ATTRIBUTES Privileges;
    LUID AuthenticationId;
} TOKEN_GROUPS_AND_PRIVILEGES, *PTOKEN_GROUPS_AND_PRIVILEGES;

typedef struct _TOKEN_LINKED_TOKEN {
    HANDLE LinkedToken;
} TOKEN_LINKED_TOKEN, *PTOKEN_LINKED_TOKEN;

typedef struct _TOKEN_ELEVATION {
    DWORD TokenIsElevated;
} TOKEN_ELEVATION, *PTOKEN_ELEVATION;

typedef struct _TOKEN_MANDATORY_LABEL {
    SID_AND_ATTRIBUTES Label;
} TOKEN_MANDATORY_LABEL, *PTOKEN_MANDATORY_LABEL;








typedef struct _TOKEN_MANDATORY_POLICY {
    DWORD Policy;
} TOKEN_MANDATORY_POLICY, *PTOKEN_MANDATORY_POLICY;

typedef struct _TOKEN_ACCESS_INFORMATION {
    PSID_AND_ATTRIBUTES_HASH SidHash;
    PSID_AND_ATTRIBUTES_HASH RestrictedSidHash;
    PTOKEN_PRIVILEGES Privileges;
    LUID AuthenticationId;
    TOKEN_TYPE TokenType;
    SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
    TOKEN_MANDATORY_POLICY MandatoryPolicy;
    DWORD Flags;
} TOKEN_ACCESS_INFORMATION, *PTOKEN_ACCESS_INFORMATION;







typedef struct _TOKEN_AUDIT_POLICY {
    BYTE  PerUserPolicy[(((53)) >> 1) + 1];
} TOKEN_AUDIT_POLICY, *PTOKEN_AUDIT_POLICY;



typedef struct _TOKEN_SOURCE {
    CHAR SourceName[8];
    LUID SourceIdentifier;
} TOKEN_SOURCE, *PTOKEN_SOURCE;


typedef struct _TOKEN_STATISTICS {
    LUID TokenId;
    LUID AuthenticationId;
    LARGE_INTEGER ExpirationTime;
    TOKEN_TYPE TokenType;
    SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
    DWORD DynamicCharged;
    DWORD DynamicAvailable;
    DWORD GroupCount;
    DWORD PrivilegeCount;
    LUID ModifiedId;
} TOKEN_STATISTICS, *PTOKEN_STATISTICS;



typedef struct _TOKEN_CONTROL {
    LUID TokenId;
    LUID AuthenticationId;
    LUID ModifiedId;
    TOKEN_SOURCE TokenSource;
} TOKEN_CONTROL, *PTOKEN_CONTROL;

typedef struct _TOKEN_ORIGIN {
    LUID OriginatingLogonSession ;
} TOKEN_ORIGIN, * PTOKEN_ORIGIN ;


typedef enum _MANDATORY_LEVEL {
    MandatoryLevelUntrusted = 0,
    MandatoryLevelLow,
    MandatoryLevelMedium,
    MandatoryLevelHigh,
    MandatoryLevelSystem,
    MandatoryLevelSecureProcess,
    MandatoryLevelCount
} MANDATORY_LEVEL, *PMANDATORY_LEVEL;











typedef BOOLEAN SECURITY_CONTEXT_TRACKING_MODE,
                    * PSECURITY_CONTEXT_TRACKING_MODE;







typedef struct _SECURITY_QUALITY_OF_SERVICE {
    DWORD Length;
    SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
    SECURITY_CONTEXT_TRACKING_MODE ContextTrackingMode;
    BOOLEAN EffectiveOnly;
    } SECURITY_QUALITY_OF_SERVICE, * PSECURITY_QUALITY_OF_SERVICE;






typedef struct _SE_IMPERSONATION_STATE {
    PACCESS_TOKEN Token;
    BOOLEAN CopyOnOpen;
    BOOLEAN EffectiveOnly;
    SECURITY_IMPERSONATION_LEVEL Level;
} SE_IMPERSONATION_STATE, *PSE_IMPERSONATION_STATE;






typedef DWORD SECURITY_INFORMATION, *PSECURITY_INFORMATION;































#line 8206 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"





#line 8212 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"



#line 8216 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"





















#line 8238 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"








typedef struct _JOB_SET_ARRAY {
    HANDLE JobHandle;   
    DWORD MemberLevel;  
    DWORD Flags;        
} JOB_SET_ARRAY, *PJOB_SET_ARRAY;




typedef struct _NT_TIB {
    struct _EXCEPTION_REGISTRATION_RECORD *ExceptionList;
    PVOID StackBase;
    PVOID StackLimit;
    PVOID SubSystemTib;

    union {
        PVOID FiberData;
        DWORD Version;
    };


#line 8268 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"
    PVOID ArbitraryUserPointer;
    struct _NT_TIB *Self;
} NT_TIB;
typedef NT_TIB *PNT_TIB;




typedef struct _NT_TIB32 {
    DWORD ExceptionList;
    DWORD StackBase;
    DWORD StackLimit;
    DWORD SubSystemTib;


    union {
        DWORD FiberData;
        DWORD Version;
    };


#line 8290 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"

    DWORD ArbitraryUserPointer;
    DWORD Self;
} NT_TIB32, *PNT_TIB32;

typedef struct _NT_TIB64 {
    DWORD64 ExceptionList;
    DWORD64 StackBase;
    DWORD64 StackLimit;
    DWORD64 SubSystemTib;


    union {
        DWORD64 FiberData;
        DWORD Version;
    };



#line 8310 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"

    DWORD64 ArbitraryUserPointer;
    DWORD64 Self;
} NT_TIB64, *PNT_TIB64;








typedef struct _UMS_CREATE_THREAD_ATTRIBUTES {  
    DWORD UmsVersion;   
        PVOID UmsContext;   
        PVOID UmsCompletionList;   
} UMS_CREATE_THREAD_ATTRIBUTES, *PUMS_CREATE_THREAD_ATTRIBUTES; 

typedef struct _QUOTA_LIMITS {
    SIZE_T PagedPoolLimit;
    SIZE_T NonPagedPoolLimit;
    SIZE_T MinimumWorkingSetSize;
    SIZE_T MaximumWorkingSetSize;
    SIZE_T PagefileLimit;
    LARGE_INTEGER TimeLimit;
} QUOTA_LIMITS, *PQUOTA_LIMITS;







typedef union _RATE_QUOTA_LIMIT {
    DWORD RateData;
    struct {
        DWORD RatePercent : 7;
        DWORD Reserved0   : 25;
    } ;
} RATE_QUOTA_LIMIT, *PRATE_QUOTA_LIMIT;

typedef struct _QUOTA_LIMITS_EX {
    SIZE_T PagedPoolLimit;
    SIZE_T NonPagedPoolLimit;
    SIZE_T MinimumWorkingSetSize;
    SIZE_T MaximumWorkingSetSize;
    SIZE_T PagefileLimit;               
    LARGE_INTEGER TimeLimit;
    SIZE_T WorkingSetLimit;             
    SIZE_T Reserved2;
    SIZE_T Reserved3;
    SIZE_T Reserved4;
    DWORD  Flags;
    RATE_QUOTA_LIMIT CpuRateLimit;
} QUOTA_LIMITS_EX, *PQUOTA_LIMITS_EX;

typedef struct _IO_COUNTERS {
    ULONGLONG  ReadOperationCount;
    ULONGLONG  WriteOperationCount;
    ULONGLONG  OtherOperationCount;
    ULONGLONG ReadTransferCount;
    ULONGLONG WriteTransferCount;
    ULONGLONG OtherTransferCount;
} IO_COUNTERS;
typedef IO_COUNTERS *PIO_COUNTERS;




typedef enum _HARDWARE_COUNTER_TYPE {
    PMCCounter,
    MaxHardwareCounterType
} HARDWARE_COUNTER_TYPE, *PHARDWARE_COUNTER_TYPE;

typedef struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION {
    LARGE_INTEGER TotalUserTime;
    LARGE_INTEGER TotalKernelTime;
    LARGE_INTEGER ThisPeriodTotalUserTime;
    LARGE_INTEGER ThisPeriodTotalKernelTime;
    DWORD TotalPageFaultCount;
    DWORD TotalProcesses;
    DWORD ActiveProcesses;
    DWORD TotalTerminatedProcesses;
} JOBOBJECT_BASIC_ACCOUNTING_INFORMATION, *PJOBOBJECT_BASIC_ACCOUNTING_INFORMATION;

typedef struct _JOBOBJECT_BASIC_LIMIT_INFORMATION {
    LARGE_INTEGER PerProcessUserTimeLimit;
    LARGE_INTEGER PerJobUserTimeLimit;
    DWORD LimitFlags;
    SIZE_T MinimumWorkingSetSize;
    SIZE_T MaximumWorkingSetSize;
    DWORD ActiveProcessLimit;
    ULONG_PTR Affinity;
    DWORD PriorityClass;
    DWORD SchedulingClass;
} JOBOBJECT_BASIC_LIMIT_INFORMATION, *PJOBOBJECT_BASIC_LIMIT_INFORMATION;

typedef struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION {
    JOBOBJECT_BASIC_LIMIT_INFORMATION BasicLimitInformation;
    IO_COUNTERS IoInfo;
    SIZE_T ProcessMemoryLimit;
    SIZE_T JobMemoryLimit;
    SIZE_T PeakProcessMemoryUsed;
    SIZE_T PeakJobMemoryUsed;
} JOBOBJECT_EXTENDED_LIMIT_INFORMATION, *PJOBOBJECT_EXTENDED_LIMIT_INFORMATION;

typedef struct _JOBOBJECT_BASIC_PROCESS_ID_LIST {
    DWORD NumberOfAssignedProcesses;
    DWORD NumberOfProcessIdsInList;
    ULONG_PTR ProcessIdList[1];
} JOBOBJECT_BASIC_PROCESS_ID_LIST, *PJOBOBJECT_BASIC_PROCESS_ID_LIST;

typedef struct _JOBOBJECT_BASIC_UI_RESTRICTIONS {
    DWORD UIRestrictionsClass;
} JOBOBJECT_BASIC_UI_RESTRICTIONS, *PJOBOBJECT_BASIC_UI_RESTRICTIONS;





typedef struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION {
    DWORD SecurityLimitFlags ;
    HANDLE JobToken ;
    PTOKEN_GROUPS SidsToDisable ;
    PTOKEN_PRIVILEGES PrivilegesToDelete ;
    PTOKEN_GROUPS RestrictedSids ;
} JOBOBJECT_SECURITY_LIMIT_INFORMATION, *PJOBOBJECT_SECURITY_LIMIT_INFORMATION ;

typedef struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION {
    DWORD EndOfJobTimeAction;
} JOBOBJECT_END_OF_JOB_TIME_INFORMATION, *PJOBOBJECT_END_OF_JOB_TIME_INFORMATION;

typedef struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT {
    PVOID CompletionKey;
    HANDLE CompletionPort;
} JOBOBJECT_ASSOCIATE_COMPLETION_PORT, *PJOBOBJECT_ASSOCIATE_COMPLETION_PORT;

typedef struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION {
    JOBOBJECT_BASIC_ACCOUNTING_INFORMATION BasicInfo;
    IO_COUNTERS IoInfo;
} JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION, *PJOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION;

typedef struct _JOBOBJECT_JOBSET_INFORMATION {
    DWORD MemberLevel;
} JOBOBJECT_JOBSET_INFORMATION, *PJOBOBJECT_JOBSET_INFORMATION;

















































































typedef enum _JOBOBJECTINFOCLASS {
    JobObjectBasicAccountingInformation = 1,
    JobObjectBasicLimitInformation,
    JobObjectBasicProcessIdList,
    JobObjectBasicUIRestrictions,
    JobObjectSecurityLimitInformation,  
    JobObjectEndOfJobTimeInformation,
    JobObjectAssociateCompletionPortInformation,
    JobObjectBasicAndIoAccountingInformation,
    JobObjectExtendedLimitInformation,
    JobObjectJobSetInformation,
    JobObjectGroupInformation,
    MaxJobObjectInfoClass
    } JOBOBJECTINFOCLASS;





























typedef enum _LOGICAL_PROCESSOR_RELATIONSHIP {
    RelationProcessorCore,
    RelationNumaNode,
    RelationCache,
    RelationProcessorPackage,
    RelationGroup,
    RelationAll = 0xffff
} LOGICAL_PROCESSOR_RELATIONSHIP;



typedef enum _PROCESSOR_CACHE_TYPE {
    CacheUnified,
    CacheInstruction,
    CacheData,
    CacheTrace
} PROCESSOR_CACHE_TYPE;



typedef struct _CACHE_DESCRIPTOR {
    BYTE   Level;
    BYTE   Associativity;
    WORD   LineSize;
    DWORD  Size;
    PROCESSOR_CACHE_TYPE Type;
} CACHE_DESCRIPTOR, *PCACHE_DESCRIPTOR;

typedef struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION {
    ULONG_PTR   ProcessorMask;
    LOGICAL_PROCESSOR_RELATIONSHIP Relationship;
    union {
        struct {
            BYTE  Flags;
        } ProcessorCore;
        struct {
            DWORD NodeNumber;
        } NumaNode;
        CACHE_DESCRIPTOR Cache;
        ULONGLONG  Reserved[2];
    } ;
} SYSTEM_LOGICAL_PROCESSOR_INFORMATION, *PSYSTEM_LOGICAL_PROCESSOR_INFORMATION;

typedef struct _PROCESSOR_RELATIONSHIP {
    BYTE  Flags;
    BYTE  Reserved[21];
    WORD   GroupCount;
     GROUP_AFFINITY GroupMask[1];
} PROCESSOR_RELATIONSHIP, *PPROCESSOR_RELATIONSHIP;

typedef struct _NUMA_NODE_RELATIONSHIP {
    DWORD NodeNumber;
    BYTE  Reserved[20];
    GROUP_AFFINITY GroupMask;
} NUMA_NODE_RELATIONSHIP, *PNUMA_NODE_RELATIONSHIP;

typedef struct _CACHE_RELATIONSHIP {
    BYTE  Level;
    BYTE  Associativity;
    WORD   LineSize;
    DWORD CacheSize;
    PROCESSOR_CACHE_TYPE Type;
    BYTE  Reserved[20];
    GROUP_AFFINITY GroupMask;
} CACHE_RELATIONSHIP, *PCACHE_RELATIONSHIP;

typedef struct _PROCESSOR_GROUP_INFO {
    BYTE  MaximumProcessorCount;
    BYTE  ActiveProcessorCount;
    BYTE  Reserved[38];
    KAFFINITY ActiveProcessorMask;
} PROCESSOR_GROUP_INFO, *PPROCESSOR_GROUP_INFO;

typedef struct _GROUP_RELATIONSHIP {
    WORD   MaximumGroupCount;
    WORD   ActiveGroupCount;
    BYTE  Reserved[20];
    PROCESSOR_GROUP_INFO GroupInfo[1];
} GROUP_RELATIONSHIP, *PGROUP_RELATIONSHIP;

 struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX {
    LOGICAL_PROCESSOR_RELATIONSHIP Relationship;
    DWORD Size;
    union {
        PROCESSOR_RELATIONSHIP Processor;
        NUMA_NODE_RELATIONSHIP NumaNode;
        CACHE_RELATIONSHIP Cache;
        GROUP_RELATIONSHIP Group;
    } ;
};

typedef struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX, *PSYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX;



typedef struct _SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION {
    DWORD64 CycleTime;
} SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION, *PSYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION;














































































typedef struct _XSTATE_FEATURE {
    DWORD Offset;
    DWORD Size;
} XSTATE_FEATURE, *PXSTATE_FEATURE;

typedef struct _XSTATE_CONFIGURATION {
    
    DWORD64 EnabledFeatures;

    
    DWORD Size;

    DWORD OptimizedSave : 1;

    
    XSTATE_FEATURE Features[64];

} XSTATE_CONFIGURATION, *PXSTATE_CONFIGURATION;


typedef struct _MEMORY_BASIC_INFORMATION {
    PVOID BaseAddress;
    PVOID AllocationBase;
    DWORD AllocationProtect;
    SIZE_T RegionSize;
    DWORD State;
    DWORD Protect;
    DWORD Type;
} MEMORY_BASIC_INFORMATION, *PMEMORY_BASIC_INFORMATION;

typedef struct _MEMORY_BASIC_INFORMATION32 {
    DWORD BaseAddress;
    DWORD AllocationBase;
    DWORD AllocationProtect;
    DWORD RegionSize;
    DWORD State;
    DWORD Protect;
    DWORD Type;
} MEMORY_BASIC_INFORMATION32, *PMEMORY_BASIC_INFORMATION32;

typedef struct __declspec(align(16)) _MEMORY_BASIC_INFORMATION64 {
    ULONGLONG BaseAddress;
    ULONGLONG AllocationBase;
    DWORD     AllocationProtect;
    DWORD     __alignment1;
    ULONGLONG RegionSize;
    DWORD     State;
    DWORD     Protect;
    DWORD     Type;
    DWORD     __alignment2;
} MEMORY_BASIC_INFORMATION64, *PMEMORY_BASIC_INFORMATION64;













































































































































































typedef struct _FILE_NOTIFY_INFORMATION {
    DWORD NextEntryOffset;
    DWORD Action;
    DWORD FileNameLength;
    WCHAR FileName[1];
} FILE_NOTIFY_INFORMATION, *PFILE_NOTIFY_INFORMATION;






typedef union _FILE_SEGMENT_ELEMENT {
    PVOID64 Buffer;
    ULONGLONG Alignment;
}FILE_SEGMENT_ELEMENT, *PFILE_SEGMENT_ELEMENT;









typedef struct _REPARSE_GUID_DATA_BUFFER {
    DWORD  ReparseTag;
    WORD   ReparseDataLength;
    WORD   Reserved;
    GUID   ReparseGuid;
    struct {
        BYTE   DataBuffer[1];
    } GenericReparseBuffer;
} REPARSE_GUID_DATA_BUFFER, *PREPARSE_GUID_DATA_BUFFER;







































































































extern "C" const GUID  GUID_MAX_POWER_SAVINGS;






extern "C" const GUID  GUID_MIN_POWER_SAVINGS;






extern "C" const GUID  GUID_TYPICAL_POWER_SAVINGS;







extern "C" const GUID  NO_SUBGROUP_GUID;







extern "C" const GUID  ALL_POWERSCHEMES_GUID;




































extern "C" const GUID  GUID_POWERSCHEME_PERSONALITY;








extern "C" const GUID  GUID_ACTIVE_POWERSCHEME;













extern "C" const GUID  GUID_VIDEO_SUBGROUP;





extern "C" const GUID  GUID_VIDEO_POWERDOWN_TIMEOUT;





extern "C" const GUID  GUID_VIDEO_ANNOYANCE_TIMEOUT;





extern "C" const GUID  GUID_VIDEO_ADAPTIVE_PERCENT_INCREASE;





extern "C" const GUID  GUID_VIDEO_DIM_TIMEOUT;





extern "C" const GUID  GUID_VIDEO_ADAPTIVE_POWERDOWN;





extern "C" const GUID  GUID_MONITOR_POWER_ON;




extern "C" const GUID  GUID_DEVICE_POWER_POLICY_VIDEO_BRIGHTNESS;





extern "C" const GUID  GUID_DEVICE_POWER_POLICY_VIDEO_DIM_BRIGHTNESS;




extern "C" const GUID  GUID_VIDEO_CURRENT_MONITOR_BRIGHTNESS;






extern "C" const GUID  GUID_VIDEO_ADAPTIVE_DISPLAY_BRIGHTNESS;








extern "C" const GUID  GUID_SESSION_DISPLAY_STATE;





extern "C" const GUID  GUID_CONSOLE_DISPLAY_STATE;







extern "C" const GUID  GUID_ALLOW_DISPLAY_REQUIRED;







extern "C" const GUID  GUID_DISK_SUBGROUP;





extern "C" const GUID  GUID_DISK_POWERDOWN_TIMEOUT;








extern "C" const GUID  GUID_DISK_BURST_IGNORE_THRESHOLD;





extern "C" const GUID  GUID_DISK_ADAPTIVE_POWERDOWN;








extern "C" const GUID  GUID_SLEEP_SUBGROUP;







extern "C" const GUID  GUID_SLEEP_IDLE_THRESHOLD;





extern "C" const GUID  GUID_STANDBY_TIMEOUT;








extern "C" const GUID  GUID_UNATTEND_SLEEP_TIMEOUT;





extern "C" const GUID  GUID_HIBERNATE_TIMEOUT;





extern "C" const GUID  GUID_HIBERNATE_FASTS4_POLICY;








extern "C" const GUID  GUID_CRITICAL_POWER_TRANSITION;





extern "C" const GUID  GUID_SYSTEM_AWAYMODE;





extern "C" const GUID  GUID_ALLOW_AWAYMODE;







extern "C" const GUID  GUID_ALLOW_STANDBY_STATES;






extern "C" const GUID  GUID_ALLOW_RTC_WAKE;







extern "C" const GUID  GUID_ALLOW_SYSTEM_REQUIRED;
  







extern "C" const GUID  GUID_SYSTEM_BUTTON_SUBGROUP;




extern "C" const GUID  GUID_POWERBUTTON_ACTION;
extern "C" const GUID  GUID_POWERBUTTON_ACTION_FLAGS;





extern "C" const GUID  GUID_SLEEPBUTTON_ACTION;
extern "C" const GUID  GUID_SLEEPBUTTON_ACTION_FLAGS;






extern "C" const GUID  GUID_USERINTERFACEBUTTON_ACTION;





extern "C" const GUID  GUID_LIDCLOSE_ACTION;
extern "C" const GUID  GUID_LIDCLOSE_ACTION_FLAGS;
extern "C" const GUID  GUID_LIDOPEN_POWERSTATE;








extern "C" const GUID  GUID_BATTERY_SUBGROUP;











extern "C" const GUID  GUID_BATTERY_DISCHARGE_ACTION_0;
extern "C" const GUID  GUID_BATTERY_DISCHARGE_LEVEL_0;
extern "C" const GUID  GUID_BATTERY_DISCHARGE_FLAGS_0;

extern "C" const GUID  GUID_BATTERY_DISCHARGE_ACTION_1;
extern "C" const GUID  GUID_BATTERY_DISCHARGE_LEVEL_1;
extern "C" const GUID  GUID_BATTERY_DISCHARGE_FLAGS_1;

extern "C" const GUID  GUID_BATTERY_DISCHARGE_ACTION_2;
extern "C" const GUID  GUID_BATTERY_DISCHARGE_LEVEL_2;
extern "C" const GUID  GUID_BATTERY_DISCHARGE_FLAGS_2;

extern "C" const GUID  GUID_BATTERY_DISCHARGE_ACTION_3;
extern "C" const GUID  GUID_BATTERY_DISCHARGE_LEVEL_3;
extern "C" const GUID  GUID_BATTERY_DISCHARGE_FLAGS_3;








extern "C" const GUID  GUID_PROCESSOR_SETTINGS_SUBGROUP;





extern "C" const GUID  GUID_PROCESSOR_THROTTLE_POLICY;












extern "C" const GUID  GUID_PROCESSOR_THROTTLE_MAXIMUM;







extern "C" const GUID  GUID_PROCESSOR_THROTTLE_MINIMUM;







extern "C" const GUID  GUID_PROCESSOR_ALLOW_THROTTLING;





extern "C" const GUID  GUID_PROCESSOR_IDLESTATE_POLICY;





extern "C" const GUID  GUID_PROCESSOR_PERFSTATE_POLICY;







extern "C" const GUID  GUID_PROCESSOR_PERF_INCREASE_THRESHOLD;







extern "C" const GUID  GUID_PROCESSOR_PERF_DECREASE_THRESHOLD;







extern "C" const GUID  GUID_PROCESSOR_PERF_INCREASE_POLICY;







extern "C" const GUID  GUID_PROCESSOR_PERF_DECREASE_POLICY;








extern "C" const GUID  GUID_PROCESSOR_PERF_INCREASE_TIME;








extern "C" const GUID  GUID_PROCESSOR_PERF_DECREASE_TIME;







extern "C" const GUID  GUID_PROCESSOR_PERF_TIME_CHECK;







extern "C" const GUID  GUID_PROCESSOR_PERF_BOOST_POLICY;
#line 9601 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"










extern "C" const GUID  GUID_PROCESSOR_IDLE_ALLOW_SCALING;






extern "C" const GUID  GUID_PROCESSOR_IDLE_DISABLE;








extern "C" const GUID  GUID_PROCESSOR_IDLE_TIME_CHECK;








extern "C" const GUID  GUID_PROCESSOR_IDLE_DEMOTE_THRESHOLD;







extern "C" const GUID  GUID_PROCESSOR_IDLE_PROMOTE_THRESHOLD;






extern "C" const GUID  GUID_PROCESSOR_CORE_PARKING_INCREASE_THRESHOLD;






extern "C" const GUID  GUID_PROCESSOR_CORE_PARKING_DECREASE_THRESHOLD;






extern "C" const GUID  GUID_PROCESSOR_CORE_PARKING_INCREASE_POLICY;











extern "C" const GUID  GUID_PROCESSOR_CORE_PARKING_DECREASE_POLICY;






extern "C" const GUID  GUID_PROCESSOR_CORE_PARKING_MAX_CORES;






extern "C" const GUID  GUID_PROCESSOR_CORE_PARKING_MIN_CORES;






extern "C" const GUID  GUID_PROCESSOR_CORE_PARKING_INCREASE_TIME;






extern "C" const GUID  GUID_PROCESSOR_CORE_PARKING_DECREASE_TIME;






extern "C" const GUID  GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_DECREASE_FACTOR;






extern "C" const GUID  GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_THRESHOLD;






extern "C" const GUID  GUID_PROCESSOR_CORE_PARKING_AFFINITY_WEIGHTING;






extern "C" const GUID  GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_DECREASE_FACTOR;






extern "C" const GUID  GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_THRESHOLD;






extern "C" const GUID  GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_WEIGHTING;






extern "C" const GUID  GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_THRESHOLD;







extern "C" const GUID  GUID_PROCESSOR_PARKING_CORE_OVERRIDE;







extern "C" const GUID  GUID_PROCESSOR_PARKING_PERF_STATE;






extern "C" const GUID  GUID_PROCESSOR_PERF_HISTORY;







extern "C" const GUID  GUID_SYSTEM_COOLING_POLICY;









extern "C" const GUID  GUID_LOCK_CONSOLE_ON_WAKE;









extern "C" const GUID  GUID_DEVICE_IDLE_POLICY;




















extern "C" const GUID  GUID_ACDC_POWER_SOURCE;















extern "C" const GUID  GUID_LIDSWITCH_STATE_CHANGE;
















extern "C" const GUID  GUID_BATTERY_PERCENTAGE_REMAINING;






extern "C" const GUID  GUID_IDLE_BACKGROUND_TASK;






extern "C" const GUID  GUID_BACKGROUND_TASK_NOTIFICATION;







extern "C" const GUID  GUID_APPLAUNCH_BUTTON;










extern "C" const GUID  GUID_PCIEXPRESS_SETTINGS_SUBGROUP;





extern "C" const GUID  GUID_PCIEXPRESS_ASPM_POLICY;











extern "C" const GUID  GUID_ENABLE_SWITCH_FORCED_SHUTDOWN;


typedef enum _SYSTEM_POWER_STATE {
    PowerSystemUnspecified = 0,
    PowerSystemWorking     = 1,
    PowerSystemSleeping1   = 2,
    PowerSystemSleeping2   = 3,
    PowerSystemSleeping3   = 4,
    PowerSystemHibernate   = 5,
    PowerSystemShutdown    = 6,
    PowerSystemMaximum     = 7
} SYSTEM_POWER_STATE, *PSYSTEM_POWER_STATE;



typedef enum {
    PowerActionNone = 0,
    PowerActionReserved,
    PowerActionSleep,
    PowerActionHibernate,
    PowerActionShutdown,
    PowerActionShutdownReset,
    PowerActionShutdownOff,
    PowerActionWarmEject
} POWER_ACTION, *PPOWER_ACTION;

typedef enum _DEVICE_POWER_STATE {
    PowerDeviceUnspecified = 0,
    PowerDeviceD0,
    PowerDeviceD1,
    PowerDeviceD2,
    PowerDeviceD3,
    PowerDeviceMaximum
} DEVICE_POWER_STATE, *PDEVICE_POWER_STATE;

typedef enum _MONITOR_DISPLAY_STATE {
    PowerMonitorOff = 0,
    PowerMonitorOn,
    PowerMonitorDim
} MONITOR_DISPLAY_STATE, *PMONITOR_DISPLAY_STATE;








typedef DWORD EXECUTION_STATE, *PEXECUTION_STATE;

typedef enum {
    LT_DONT_CARE,
    LT_LOWEST_LATENCY
} LATENCY_TIME;










#line 9976 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"
















typedef enum _POWER_REQUEST_TYPE {
    PowerRequestDisplayRequired,
    PowerRequestSystemRequired,
    PowerRequestAwayModeRequired
} POWER_REQUEST_TYPE, *PPOWER_REQUEST_TYPE;






















typedef struct CM_Power_Data_s {
    DWORD               PD_Size;
    DEVICE_POWER_STATE  PD_MostRecentPowerState;
    DWORD               PD_Capabilities;
    DWORD               PD_D1Latency;
    DWORD               PD_D2Latency;
    DWORD               PD_D3Latency;
    DEVICE_POWER_STATE  PD_PowerStateMapping[7];
    SYSTEM_POWER_STATE  PD_DeepestSystemWake;
} CM_POWER_DATA, *PCM_POWER_DATA;

#line 10031 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"



typedef enum {
    SystemPowerPolicyAc,
    SystemPowerPolicyDc,
    VerifySystemPolicyAc,
    VerifySystemPolicyDc,
    SystemPowerCapabilities,
    SystemBatteryState,
    SystemPowerStateHandler,
    ProcessorStateHandler,
    SystemPowerPolicyCurrent,
    AdministratorPowerPolicy,
    SystemReserveHiberFile,
    ProcessorInformation,
    SystemPowerInformation,
    ProcessorStateHandler2,
    LastWakeTime,                                   
    LastSleepTime,                                  
    SystemExecutionState,
    SystemPowerStateNotifyHandler,
    ProcessorPowerPolicyAc,
    ProcessorPowerPolicyDc,
    VerifyProcessorPowerPolicyAc,
    VerifyProcessorPowerPolicyDc,
    ProcessorPowerPolicyCurrent,
    SystemPowerStateLogging,
    SystemPowerLoggingEntry,
    SetPowerSettingValue,
    NotifyUserPowerSetting,
    PowerInformationLevelUnused0,
    PowerInformationLevelUnused1,
    SystemVideoState,
    TraceApplicationPowerMessage,
    TraceApplicationPowerMessageEnd,
    ProcessorPerfStates,
    ProcessorIdleStates,
    ProcessorCap,
    SystemWakeSource,
    SystemHiberFileInformation,
    TraceServicePowerMessage,
    ProcessorLoad,
    PowerShutdownNotification,
    MonitorCapabilities,
    SessionPowerInit,
    SessionDisplayState,
    PowerRequestCreate,
    PowerRequestAction,
    GetPowerRequestList,
    ProcessorInformationEx,
    NotifyUserModeLegacyPowerEvent,
    GroupPark,
    ProcessorIdleDomains,
    WakeTimerList,
    SystemHiberFileSize,
    PowerInformationLevelMaximum
} POWER_INFORMATION_LEVEL;





typedef enum {
    PoAc,
    PoDc,
    PoHot,
    PoConditionMaximum
} SYSTEM_POWER_CONDITION;

typedef struct {

    
    
    
    
    DWORD       Version;


    
    
    
    GUID        Guid;


    
    
    
    
    SYSTEM_POWER_CONDITION PowerCondition;

    
    
    
    DWORD       DataLength;

    
    
    
    BYTE    Data[1];
} SET_POWER_SETTING_VALUE, *PSET_POWER_SETTING_VALUE;



typedef struct {
    GUID Guid;
} NOTIFY_USER_POWER_SETTING, *PNOTIFY_USER_POWER_SETTING;






typedef struct _APPLICATIONLAUNCH_SETTING_VALUE {

    
    
    
    
    LARGE_INTEGER       ActivationTime;

    
    
    
    DWORD               Flags;

    
    
    
    DWORD               ButtonInstanceID;


} APPLICATIONLAUNCH_SETTING_VALUE, *PAPPLICATIONLAUNCH_SETTING_VALUE;





typedef enum {
    PlatformRoleUnspecified = 0,
    PlatformRoleDesktop,
    PlatformRoleMobile,
    PlatformRoleWorkstation,
    PlatformRoleEnterpriseServer,
    PlatformRoleSOHOServer,
    PlatformRoleAppliancePC,
    PlatformRolePerformanceServer,
    PlatformRoleMaximum
} POWER_PLATFORM_ROLE;






typedef struct {
    DWORD       Granularity;
    DWORD       Capacity;
} BATTERY_REPORTING_SCALE, *PBATTERY_REPORTING_SCALE;
#line 10191 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"



typedef struct {
    DWORD   Frequency;
    DWORD   Flags;
    DWORD   PercentFrequency;
} PPM_WMI_LEGACY_PERFSTATE, *PPPM_WMI_LEGACY_PERFSTATE;

typedef struct {
    DWORD Latency;
    DWORD Power;
    DWORD TimeCheck;
    BYTE  PromotePercent;
    BYTE  DemotePercent;
    BYTE  StateType;
    BYTE  Reserved;
    DWORD StateFlags;
    DWORD Context;
    DWORD IdleHandler;
    DWORD Reserved1;            
} PPM_WMI_IDLE_STATE, *PPPM_WMI_IDLE_STATE;

typedef struct {
    DWORD Type;
    DWORD Count;
    DWORD TargetState;          
    DWORD OldState;             
    DWORD64 TargetProcessors;
    PPM_WMI_IDLE_STATE State[1];
} PPM_WMI_IDLE_STATES, *PPPM_WMI_IDLE_STATES;

typedef struct {
    DWORD Type;
    DWORD Count;
    DWORD TargetState;          
    DWORD OldState;             
    PVOID TargetProcessors;
    PPM_WMI_IDLE_STATE State[1];
} PPM_WMI_IDLE_STATES_EX, *PPPM_WMI_IDLE_STATES_EX;

typedef struct {
    DWORD Frequency;            
    DWORD Power;                
    BYTE  PercentFrequency;
    BYTE  IncreaseLevel;        
    BYTE  DecreaseLevel;        
    BYTE  Type;                 
    DWORD IncreaseTime;         
    DWORD DecreaseTime;         
    DWORD64 Control;            
    DWORD64 Status;             
    DWORD HitCount;
    DWORD Reserved1;            
    DWORD64 Reserved2;
    DWORD64 Reserved3;
} PPM_WMI_PERF_STATE, *PPPM_WMI_PERF_STATE;

typedef struct {
    DWORD Count;
    DWORD MaxFrequency;
    DWORD CurrentState;         
    DWORD MaxPerfState;         
    DWORD MinPerfState;         
    DWORD LowestPerfState;      
    DWORD ThermalConstraint;
    BYTE  BusyAdjThreshold;
    BYTE  PolicyType;           
    BYTE  Type;
    BYTE  Reserved;
    DWORD TimerInterval;
    DWORD64 TargetProcessors;   
    DWORD PStateHandler;
    DWORD PStateContext;
    DWORD TStateHandler;
    DWORD TStateContext;
    DWORD FeedbackHandler;
    DWORD Reserved1;
    DWORD64 Reserved2;
    PPM_WMI_PERF_STATE State[1];
} PPM_WMI_PERF_STATES, *PPPM_WMI_PERF_STATES;

typedef struct {
    DWORD Count;
    DWORD MaxFrequency;
    DWORD CurrentState;         
    DWORD MaxPerfState;         
    DWORD MinPerfState;         
    DWORD LowestPerfState;      
    DWORD ThermalConstraint;
    BYTE  BusyAdjThreshold;
    BYTE  PolicyType;           
    BYTE  Type;
    BYTE  Reserved;
    DWORD TimerInterval;
    PVOID TargetProcessors;     
    DWORD PStateHandler;
    DWORD PStateContext;
    DWORD TStateHandler;
    DWORD TStateContext;
    DWORD FeedbackHandler;
    DWORD Reserved1;
    DWORD64 Reserved2;
    PPM_WMI_PERF_STATE State[1];
} PPM_WMI_PERF_STATES_EX, *PPPM_WMI_PERF_STATES_EX;







typedef struct {
    DWORD IdleTransitions;
    DWORD FailedTransitions;
    DWORD InvalidBucketIndex;
    DWORD64 TotalTime;
    DWORD IdleTimeBuckets[6];
} PPM_IDLE_STATE_ACCOUNTING, *PPPM_IDLE_STATE_ACCOUNTING;

typedef struct {
    DWORD StateCount;
    DWORD TotalTransitions;
    DWORD ResetCount;
    DWORD64 StartTime;
    PPM_IDLE_STATE_ACCOUNTING State[1];
} PPM_IDLE_ACCOUNTING, *PPPM_IDLE_ACCOUNTING;







typedef struct {
    DWORD64 TotalTimeUs;
    DWORD MinTimeUs;
    DWORD MaxTimeUs;
    DWORD Count;
} PPM_IDLE_STATE_BUCKET_EX, *PPPM_IDLE_STATE_BUCKET_EX;

typedef struct {
    DWORD64 TotalTime;
    DWORD IdleTransitions;
    DWORD FailedTransitions;
    DWORD InvalidBucketIndex;
    DWORD MinTimeUs;
    DWORD MaxTimeUs;
    PPM_IDLE_STATE_BUCKET_EX IdleTimeBuckets[16];
} PPM_IDLE_STATE_ACCOUNTING_EX, *PPPM_IDLE_STATE_ACCOUNTING_EX;

typedef struct {
    DWORD StateCount;
    DWORD TotalTransitions;
    DWORD ResetCount;
    DWORD64 StartTime;
     PPM_IDLE_STATE_ACCOUNTING_EX State[1];
} PPM_IDLE_ACCOUNTING_EX, *PPPM_IDLE_ACCOUNTING_EX;










































extern "C" const GUID  PPM_PERFSTATE_CHANGE_GUID;
#line 10393 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"


extern "C" const GUID  PPM_PERFSTATE_DOMAIN_CHANGE_GUID;
#line 10397 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"


extern "C" const GUID  PPM_IDLESTATE_CHANGE_GUID;
#line 10401 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"


extern "C" const GUID  PPM_PERFSTATES_DATA_GUID;
#line 10405 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"


extern "C" const GUID  PPM_IDLESTATES_DATA_GUID;
#line 10409 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"


extern "C" const GUID  PPM_IDLE_ACCOUNTING_GUID;
#line 10413 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"


extern "C" const GUID  PPM_IDLE_ACCOUNTING_EX_GUID;
#line 10417 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"


extern "C" const GUID  PPM_THERMALCONSTRAINT_GUID;
#line 10421 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"


extern "C" const GUID  PPM_PERFMON_PERFSTATE_GUID;
#line 10425 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"


extern "C" const GUID  PPM_THERMAL_POLICY_CHANGE_GUID;
#line 10429 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"


typedef struct {
    DWORD State;
    DWORD Status;
    DWORD Latency;
    DWORD Speed;
    DWORD Processor;
} PPM_PERFSTATE_EVENT, *PPPM_PERFSTATE_EVENT;

typedef struct {
    DWORD State;
    DWORD Latency;
    DWORD Speed;
    DWORD64 Processors;
} PPM_PERFSTATE_DOMAIN_EVENT, *PPPM_PERFSTATE_DOMAIN_EVENT;

typedef struct {
    DWORD NewState;
    DWORD OldState;
    DWORD64 Processors;
} PPM_IDLESTATE_EVENT, *PPPM_IDLESTATE_EVENT;

typedef struct {
    DWORD ThermalConstraint;
    DWORD64 Processors;
} PPM_THERMALCHANGE_EVENT, *PPPM_THERMALCHANGE_EVENT;

#pragma warning(push)
#pragma warning(disable:4121)

typedef struct {
    BYTE  Mode;
    DWORD64 Processors;
} PPM_THERMAL_POLICY_EVENT, *PPPM_THERMAL_POLICY_EVENT;

#pragma warning(pop)




typedef struct {
    POWER_ACTION    Action;
    DWORD           Flags;
    DWORD           EventCode;
} POWER_ACTION_POLICY, *PPOWER_ACTION_POLICY;































typedef struct {
    BOOLEAN                 Enable;
    BYTE                    Spare[3];
    DWORD                   BatteryLevel;
    POWER_ACTION_POLICY     PowerPolicy;
    SYSTEM_POWER_STATE      MinSystemState;
} SYSTEM_POWER_LEVEL, *PSYSTEM_POWER_LEVEL;








typedef struct _SYSTEM_POWER_POLICY {
    DWORD                   Revision;       

    
    POWER_ACTION_POLICY     PowerButton;
    POWER_ACTION_POLICY     SleepButton;
    POWER_ACTION_POLICY     LidClose;
    SYSTEM_POWER_STATE      LidOpenWake;
    DWORD                   Reserved;

    
    POWER_ACTION_POLICY     Idle;
    DWORD                   IdleTimeout;
    BYTE                    IdleSensitivity;

    BYTE                    DynamicThrottle;
    BYTE                    Spare2[2];

    
    SYSTEM_POWER_STATE      MinSleep;
    SYSTEM_POWER_STATE      MaxSleep;
    SYSTEM_POWER_STATE      ReducedLatencySleep;
    DWORD                   WinLogonFlags;

    DWORD                   Spare3;

    
    
    DWORD                   DozeS4Timeout;

    
    DWORD                   BroadcastCapacityResolution;
    SYSTEM_POWER_LEVEL      DischargePolicy[4];

    
    DWORD                   VideoTimeout;
    BOOLEAN                 VideoDimDisplay;
    DWORD                   VideoReserved[3];

    
    DWORD                   SpindownTimeout;

    
    BOOLEAN                 OptimizeForPower;
    BYTE                    FanThrottleTolerance;
    BYTE                    ForcedThrottle;
    BYTE                    MinThrottle;
    POWER_ACTION_POLICY     OverThrottled;

} SYSTEM_POWER_POLICY, *PSYSTEM_POWER_POLICY;










typedef struct {
    DWORD TimeCheck;
    BYTE  DemotePercent;
    BYTE  PromotePercent;
    BYTE  Spare[2];
} PROCESSOR_IDLESTATE_INFO, *PPROCESSOR_IDLESTATE_INFO;

typedef struct {
    WORD   Revision;
    union {
        WORD   AsWORD  ;
        struct {
            WORD   AllowScaling : 1;
            WORD   Disabled : 1;
            WORD   Reserved : 14;
        } ;
    } Flags;

    DWORD PolicyCount;
    PROCESSOR_IDLESTATE_INFO Policy[0x3];
} PROCESSOR_IDLESTATE_POLICY, *PPROCESSOR_IDLESTATE_POLICY;














typedef struct _PROCESSOR_POWER_POLICY_INFO {

    
    DWORD                   TimeCheck;                      
    DWORD                   DemoteLimit;                    
    DWORD                   PromoteLimit;                   

    
    BYTE                    DemotePercent;
    BYTE                    PromotePercent;
    BYTE                    Spare[2];

    
    DWORD                   AllowDemotion:1;
    DWORD                   AllowPromotion:1;
    DWORD                   Reserved:30;

} PROCESSOR_POWER_POLICY_INFO, *PPROCESSOR_POWER_POLICY_INFO;


typedef struct _PROCESSOR_POWER_POLICY {
    DWORD                       Revision;       

    
    BYTE                        DynamicThrottle;
    BYTE                        Spare[3];

    
    DWORD                       DisableCStates:1;
    DWORD                       Reserved:31;

    
    
    
    DWORD                       PolicyCount;
    PROCESSOR_POWER_POLICY_INFO Policy[3];

} PROCESSOR_POWER_POLICY, *PPROCESSOR_POWER_POLICY;





typedef struct {
    DWORD Revision;
    BYTE  MaxThrottle;
    BYTE  MinThrottle;
    BYTE  BusyAdjThreshold;
    union {
        BYTE  Spare;
        union {
            BYTE  AsBYTE ;
            struct {
                BYTE  NoDomainAccounting : 1;
                BYTE  IncreasePolicy: 2;
                BYTE  DecreasePolicy: 2;
                BYTE  Reserved : 3;
            } ;
        } Flags;
    } ;
    
    DWORD TimeCheck;
    DWORD IncreaseTime;
    DWORD DecreaseTime;
    DWORD IncreasePercent;
    DWORD DecreasePercent;
} PROCESSOR_PERFSTATE_POLICY, *PPROCESSOR_PERFSTATE_POLICY;


typedef struct _ADMINISTRATOR_POWER_POLICY {

    
    SYSTEM_POWER_STATE      MinSleep;
    SYSTEM_POWER_STATE      MaxSleep;

    
    DWORD                   MinVideoTimeout;
    DWORD                   MaxVideoTimeout;

    
    DWORD                   MinSpindownTimeout;
    DWORD                   MaxSpindownTimeout;
} ADMINISTRATOR_POWER_POLICY, *PADMINISTRATOR_POWER_POLICY;


typedef struct {
    
    BOOLEAN             PowerButtonPresent;
    BOOLEAN             SleepButtonPresent;
    BOOLEAN             LidPresent;
    BOOLEAN             SystemS1;
    BOOLEAN             SystemS2;
    BOOLEAN             SystemS3;
    BOOLEAN             SystemS4;           
    BOOLEAN             SystemS5;           
    BOOLEAN             HiberFilePresent;
    BOOLEAN             FullWake;
    BOOLEAN             VideoDimPresent;
    BOOLEAN             ApmPresent;
    BOOLEAN             UpsPresent;

    
    BOOLEAN             ThermalControl;
    BOOLEAN             ProcessorThrottle;
    BYTE                ProcessorMinThrottle;




#line 10726 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"
    BYTE                ProcessorMaxThrottle;
    BOOLEAN             FastSystemS4;
    BYTE                spare2[3];
#line 10730 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"

    
    BOOLEAN             DiskSpinDown;
    BYTE                spare3[8];

    
    BOOLEAN             SystemBatteriesPresent;
    BOOLEAN             BatteriesAreShortTerm;
    BATTERY_REPORTING_SCALE BatteryScale[3];

    
    SYSTEM_POWER_STATE  AcOnLineWake;
    SYSTEM_POWER_STATE  SoftLidWake;
    SYSTEM_POWER_STATE  RtcWake;
    SYSTEM_POWER_STATE  MinDeviceWakeState; 
    SYSTEM_POWER_STATE  DefaultLowLatencyWake;
} SYSTEM_POWER_CAPABILITIES, *PSYSTEM_POWER_CAPABILITIES;

typedef struct {
    BOOLEAN             AcOnLine;
    BOOLEAN             BatteryPresent;
    BOOLEAN             Charging;
    BOOLEAN             Discharging;
    BOOLEAN             Spare1[4];

    DWORD               MaxCapacity;
    DWORD               RemainingCapacity;
    DWORD               Rate;
    DWORD               EstimatedTime;

    DWORD               DefaultAlert1;
    DWORD               DefaultAlert2;
} SYSTEM_BATTERY_STATE, *PSYSTEM_BATTERY_STATE;










#line 1 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\pshpack4.h"























#pragma warning(disable:4103)

#pragma pack(push,4)


#line 30 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\pshpack4.h"


#line 33 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\pshpack4.h"
#line 34 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\pshpack4.h"

#line 10774 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"







#line 1 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\pshpack2.h"























#pragma warning(disable:4103)

#pragma pack(push,2)


#line 30 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\pshpack2.h"


#line 33 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\pshpack2.h"
#line 34 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\pshpack2.h"

#line 10782 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"









#line 10792 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"

typedef struct _IMAGE_DOS_HEADER {      
    WORD   e_magic;                     
    WORD   e_cblp;                      
    WORD   e_cp;                        
    WORD   e_crlc;                      
    WORD   e_cparhdr;                   
    WORD   e_minalloc;                  
    WORD   e_maxalloc;                  
    WORD   e_ss;                        
    WORD   e_sp;                        
    WORD   e_csum;                      
    WORD   e_ip;                        
    WORD   e_cs;                        
    WORD   e_lfarlc;                    
    WORD   e_ovno;                      
    WORD   e_res[4];                    
    WORD   e_oemid;                     
    WORD   e_oeminfo;                   
    WORD   e_res2[10];                  
    LONG   e_lfanew;                    
  } IMAGE_DOS_HEADER, *PIMAGE_DOS_HEADER;

typedef struct _IMAGE_OS2_HEADER {      
    WORD   ne_magic;                    
    CHAR   ne_ver;                      
    CHAR   ne_rev;                      
    WORD   ne_enttab;                   
    WORD   ne_cbenttab;                 
    LONG   ne_crc;                      
    WORD   ne_flags;                    
    WORD   ne_autodata;                 
    WORD   ne_heap;                     
    WORD   ne_stack;                    
    LONG   ne_csip;                     
    LONG   ne_sssp;                     
    WORD   ne_cseg;                     
    WORD   ne_cmod;                     
    WORD   ne_cbnrestab;                
    WORD   ne_segtab;                   
    WORD   ne_rsrctab;                  
    WORD   ne_restab;                   
    WORD   ne_modtab;                   
    WORD   ne_imptab;                   
    LONG   ne_nrestab;                  
    WORD   ne_cmovent;                  
    WORD   ne_align;                    
    WORD   ne_cres;                     
    BYTE   ne_exetyp;                   
    BYTE   ne_flagsothers;              
    WORD   ne_pretthunks;               
    WORD   ne_psegrefbytes;             
    WORD   ne_swaparea;                 
    WORD   ne_expver;                   
  } IMAGE_OS2_HEADER, *PIMAGE_OS2_HEADER;

typedef struct _IMAGE_VXD_HEADER {      
    WORD   e32_magic;                   
    BYTE   e32_border;                  
    BYTE   e32_worder;                  
    DWORD  e32_level;                   
    WORD   e32_cpu;                     
    WORD   e32_os;                      
    DWORD  e32_ver;                     
    DWORD  e32_mflags;                  
    DWORD  e32_mpages;                  
    DWORD  e32_startobj;                
    DWORD  e32_eip;                     
    DWORD  e32_stackobj;                
    DWORD  e32_esp;                     
    DWORD  e32_pagesize;                
    DWORD  e32_lastpagesize;            
    DWORD  e32_fixupsize;               
    DWORD  e32_fixupsum;                
    DWORD  e32_ldrsize;                 
    DWORD  e32_ldrsum;                  
    DWORD  e32_objtab;                  
    DWORD  e32_objcnt;                  
    DWORD  e32_objmap;                  
    DWORD  e32_itermap;                 
    DWORD  e32_rsrctab;                 
    DWORD  e32_rsrccnt;                 
    DWORD  e32_restab;                  
    DWORD  e32_enttab;                  
    DWORD  e32_dirtab;                  
    DWORD  e32_dircnt;                  
    DWORD  e32_fpagetab;                
    DWORD  e32_frectab;                 
    DWORD  e32_impmod;                  
    DWORD  e32_impmodcnt;               
    DWORD  e32_impproc;                 
    DWORD  e32_pagesum;                 
    DWORD  e32_datapage;                
    DWORD  e32_preload;                 
    DWORD  e32_nrestab;                 
    DWORD  e32_cbnrestab;               
    DWORD  e32_nressum;                 
    DWORD  e32_autodata;                
    DWORD  e32_debuginfo;               
    DWORD  e32_debuglen;                
    DWORD  e32_instpreload;             
    DWORD  e32_instdemand;              
    DWORD  e32_heapsize;                
    BYTE   e32_res3[12];                
    DWORD  e32_winresoff;
    DWORD  e32_winreslen;
    WORD   e32_devid;                   
    WORD   e32_ddkver;                  
  } IMAGE_VXD_HEADER, *PIMAGE_VXD_HEADER;


#line 1 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\poppack.h"


























#pragma warning(disable:4103)

#pragma pack(pop)


#line 33 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\poppack.h"


#line 36 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\poppack.h"
#line 37 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\poppack.h"

#line 10904 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"
#line 10905 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"





typedef struct _IMAGE_FILE_HEADER {
    WORD    Machine;
    WORD    NumberOfSections;
    DWORD   TimeDateStamp;
    DWORD   PointerToSymbolTable;
    DWORD   NumberOfSymbols;
    WORD    SizeOfOptionalHeader;
    WORD    Characteristics;
} IMAGE_FILE_HEADER, *PIMAGE_FILE_HEADER;





















































typedef struct _IMAGE_DATA_DIRECTORY {
    DWORD   VirtualAddress;
    DWORD   Size;
} IMAGE_DATA_DIRECTORY, *PIMAGE_DATA_DIRECTORY;







typedef struct _IMAGE_OPTIONAL_HEADER {
    
    
    

    WORD    Magic;
    BYTE    MajorLinkerVersion;
    BYTE    MinorLinkerVersion;
    DWORD   SizeOfCode;
    DWORD   SizeOfInitializedData;
    DWORD   SizeOfUninitializedData;
    DWORD   AddressOfEntryPoint;
    DWORD   BaseOfCode;
    DWORD   BaseOfData;

    
    
    

    DWORD   ImageBase;
    DWORD   SectionAlignment;
    DWORD   FileAlignment;
    WORD    MajorOperatingSystemVersion;
    WORD    MinorOperatingSystemVersion;
    WORD    MajorImageVersion;
    WORD    MinorImageVersion;
    WORD    MajorSubsystemVersion;
    WORD    MinorSubsystemVersion;
    DWORD   Win32VersionValue;
    DWORD   SizeOfImage;
    DWORD   SizeOfHeaders;
    DWORD   CheckSum;
    WORD    Subsystem;
    WORD    DllCharacteristics;
    DWORD   SizeOfStackReserve;
    DWORD   SizeOfStackCommit;
    DWORD   SizeOfHeapReserve;
    DWORD   SizeOfHeapCommit;
    DWORD   LoaderFlags;
    DWORD   NumberOfRvaAndSizes;
    IMAGE_DATA_DIRECTORY DataDirectory[16];
} IMAGE_OPTIONAL_HEADER32, *PIMAGE_OPTIONAL_HEADER32;

typedef struct _IMAGE_ROM_OPTIONAL_HEADER {
    WORD   Magic;
    BYTE   MajorLinkerVersion;
    BYTE   MinorLinkerVersion;
    DWORD  SizeOfCode;
    DWORD  SizeOfInitializedData;
    DWORD  SizeOfUninitializedData;
    DWORD  AddressOfEntryPoint;
    DWORD  BaseOfCode;
    DWORD  BaseOfData;
    DWORD  BaseOfBss;
    DWORD  GprMask;
    DWORD  CprMask[4];
    DWORD  GpValue;
} IMAGE_ROM_OPTIONAL_HEADER, *PIMAGE_ROM_OPTIONAL_HEADER;

typedef struct _IMAGE_OPTIONAL_HEADER64 {
    WORD        Magic;
    BYTE        MajorLinkerVersion;
    BYTE        MinorLinkerVersion;
    DWORD       SizeOfCode;
    DWORD       SizeOfInitializedData;
    DWORD       SizeOfUninitializedData;
    DWORD       AddressOfEntryPoint;
    DWORD       BaseOfCode;
    ULONGLONG   ImageBase;
    DWORD       SectionAlignment;
    DWORD       FileAlignment;
    WORD        MajorOperatingSystemVersion;
    WORD        MinorOperatingSystemVersion;
    WORD        MajorImageVersion;
    WORD        MinorImageVersion;
    WORD        MajorSubsystemVersion;
    WORD        MinorSubsystemVersion;
    DWORD       Win32VersionValue;
    DWORD       SizeOfImage;
    DWORD       SizeOfHeaders;
    DWORD       CheckSum;
    WORD        Subsystem;
    WORD        DllCharacteristics;
    ULONGLONG   SizeOfStackReserve;
    ULONGLONG   SizeOfStackCommit;
    ULONGLONG   SizeOfHeapReserve;
    ULONGLONG   SizeOfHeapCommit;
    DWORD       LoaderFlags;
    DWORD       NumberOfRvaAndSizes;
    IMAGE_DATA_DIRECTORY DataDirectory[16];
} IMAGE_OPTIONAL_HEADER64, *PIMAGE_OPTIONAL_HEADER64;










typedef IMAGE_OPTIONAL_HEADER32             IMAGE_OPTIONAL_HEADER;
typedef PIMAGE_OPTIONAL_HEADER32            PIMAGE_OPTIONAL_HEADER;

#line 11088 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"

typedef struct _IMAGE_NT_HEADERS64 {
    DWORD Signature;
    IMAGE_FILE_HEADER FileHeader;
    IMAGE_OPTIONAL_HEADER64 OptionalHeader;
} IMAGE_NT_HEADERS64, *PIMAGE_NT_HEADERS64;

typedef struct _IMAGE_NT_HEADERS {
    DWORD Signature;
    IMAGE_FILE_HEADER FileHeader;
    IMAGE_OPTIONAL_HEADER32 OptionalHeader;
} IMAGE_NT_HEADERS32, *PIMAGE_NT_HEADERS32;

typedef struct _IMAGE_ROM_HEADERS {
    IMAGE_FILE_HEADER FileHeader;
    IMAGE_ROM_OPTIONAL_HEADER OptionalHeader;
} IMAGE_ROM_HEADERS, *PIMAGE_ROM_HEADERS;





typedef IMAGE_NT_HEADERS32                  IMAGE_NT_HEADERS;
typedef PIMAGE_NT_HEADERS32                 PIMAGE_NT_HEADERS;
#line 11113 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"


































































typedef struct ANON_OBJECT_HEADER {
    WORD    Sig1;            
    WORD    Sig2;            
    WORD    Version;         
    WORD    Machine;
    DWORD   TimeDateStamp;
    CLSID   ClassID;         
    DWORD   SizeOfData;      
} ANON_OBJECT_HEADER;

typedef struct ANON_OBJECT_HEADER_V2 {
    WORD    Sig1;            
    WORD    Sig2;            
    WORD    Version;         
    WORD    Machine;
    DWORD   TimeDateStamp;
    CLSID   ClassID;         
    DWORD   SizeOfData;      
    DWORD   Flags;           
    DWORD   MetaDataSize;    
    DWORD   MetaDataOffset;  
} ANON_OBJECT_HEADER_V2;

typedef struct ANON_OBJECT_HEADER_BIGOBJ {
   
    WORD    Sig1;            
    WORD    Sig2;            
    WORD    Version;         
    WORD    Machine;         
    DWORD   TimeDateStamp;
    CLSID   ClassID;         
    DWORD   SizeOfData;      
    DWORD   Flags;           
    DWORD   MetaDataSize;    
    DWORD   MetaDataOffset;  

    
    DWORD   NumberOfSections; 
    DWORD   PointerToSymbolTable;
    DWORD   NumberOfSymbols;
} ANON_OBJECT_HEADER_BIGOBJ;







typedef struct _IMAGE_SECTION_HEADER {
    BYTE    Name[8];
    union {
            DWORD   PhysicalAddress;
            DWORD   VirtualSize;
    } Misc;
    DWORD   VirtualAddress;
    DWORD   SizeOfRawData;
    DWORD   PointerToRawData;
    DWORD   PointerToRelocations;
    DWORD   PointerToLinenumbers;
    WORD    NumberOfRelocations;
    WORD    NumberOfLinenumbers;
    DWORD   Characteristics;
} IMAGE_SECTION_HEADER, *PIMAGE_SECTION_HEADER;

































































#line 1 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\pshpack2.h"























#pragma warning(disable:4103)

#pragma pack(push,2)


#line 30 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\pshpack2.h"


#line 33 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\pshpack2.h"
#line 34 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\pshpack2.h"

#line 11308 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"
#line 11309 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"





typedef struct _IMAGE_SYMBOL {
    union {
        BYTE    ShortName[8];
        struct {
            DWORD   Short;     
            DWORD   Long;      
        } Name;
        DWORD   LongName[2];    
    } N;
    DWORD   Value;
    SHORT   SectionNumber;
    WORD    Type;
    BYTE    StorageClass;
    BYTE    NumberOfAuxSymbols;
} IMAGE_SYMBOL;
typedef IMAGE_SYMBOL  *PIMAGE_SYMBOL;



typedef struct _IMAGE_SYMBOL_EX {
    union {
        BYTE     ShortName[8];
        struct {
            DWORD   Short;     
            DWORD   Long;      
        } Name;
        DWORD   LongName[2];    
    } N;
    DWORD   Value;
    LONG    SectionNumber;
    WORD    Type;
    BYTE    StorageClass;
    BYTE    NumberOfAuxSymbols;
} IMAGE_SYMBOL_EX;
typedef IMAGE_SYMBOL_EX  *PIMAGE_SYMBOL_EX;
































































































#line 11446 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"




#line 11451 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"





#line 11457 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"




#line 11462 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"



#line 11466 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"


#line 11469 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"

#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\pshpack2.h"























#pragma warning(disable:4103)

#pragma pack(push,2)


#line 30 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\pshpack2.h"


#line 33 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\pshpack2.h"
#line 34 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\pshpack2.h"

#line 11471 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"

typedef struct IMAGE_AUX_SYMBOL_TOKEN_DEF {
    BYTE  bAuxType;                  
    BYTE  bReserved;                 
    DWORD SymbolTableIndex;
    BYTE  rgbReserved[12];           
} IMAGE_AUX_SYMBOL_TOKEN_DEF;

typedef IMAGE_AUX_SYMBOL_TOKEN_DEF  *PIMAGE_AUX_SYMBOL_TOKEN_DEF;

#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\poppack.h"


























#pragma warning(disable:4103)

#pragma pack(pop)


#line 33 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\poppack.h"


#line 36 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\poppack.h"
#line 37 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\poppack.h"

#line 11482 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"





typedef union _IMAGE_AUX_SYMBOL {
    struct {
        DWORD    TagIndex;                      
        union {
            struct {
                WORD    Linenumber;             
                WORD    Size;                   
            } LnSz;
           DWORD    TotalSize;
        } Misc;
        union {
            struct {                            
                DWORD    PointerToLinenumber;
                DWORD    PointerToNextFunction;
            } Function;
            struct {                            
                WORD     Dimension[4];
            } Array;
        } FcnAry;
        WORD    TvIndex;                        
    } Sym;
    struct {
        BYTE    Name[18];
    } File;
    struct {
        DWORD   Length;                         
        WORD    NumberOfRelocations;            
        WORD    NumberOfLinenumbers;            
        DWORD   CheckSum;                       
        SHORT   Number;                         
        BYTE    Selection;                      
	BYTE    bReserved;
	SHORT   HighNumber;                     
    } Section;
    IMAGE_AUX_SYMBOL_TOKEN_DEF TokenDef;   
    struct {
        DWORD crc;
        BYTE  rgbReserved[14];
    } CRC;
} IMAGE_AUX_SYMBOL;
typedef IMAGE_AUX_SYMBOL  *PIMAGE_AUX_SYMBOL;

typedef union _IMAGE_AUX_SYMBOL_EX {
    struct {
        DWORD   WeakDefaultSymIndex;                       
        DWORD   WeakSearchType;
        BYTE    rgbReserved[12];
    } Sym;
    struct {
        BYTE    Name[sizeof(IMAGE_SYMBOL_EX)];
    } File;
    struct {
        DWORD   Length;                         
        WORD    NumberOfRelocations;            
        WORD    NumberOfLinenumbers;            
        DWORD   CheckSum;                       
        SHORT   Number;                         
        BYTE    Selection;                      
        BYTE    bReserved;
        SHORT   HighNumber;                     
        BYTE    rgbReserved[2];
    } Section;
    struct{ 
        IMAGE_AUX_SYMBOL_TOKEN_DEF TokenDef;   
        BYTE  rgbReserved[2];
    };
    struct {
        DWORD crc;
        BYTE  rgbReserved[16];
    } CRC;
} IMAGE_AUX_SYMBOL_EX;
typedef IMAGE_AUX_SYMBOL_EX  *PIMAGE_AUX_SYMBOL_EX;

typedef enum IMAGE_AUX_SYMBOL_TYPE {
    IMAGE_AUX_SYMBOL_TYPE_TOKEN_DEF = 1,
} IMAGE_AUX_SYMBOL_TYPE;






















typedef struct _IMAGE_RELOCATION {
    union {
        DWORD   VirtualAddress;
        DWORD   RelocCount;             
    } ;
    DWORD   SymbolTableIndex;
    WORD    Type;
} IMAGE_RELOCATION;
typedef IMAGE_RELOCATION  *PIMAGE_RELOCATION;




























































































































                                                
                                                
                                                
                                                










































































































































































































































typedef struct _IMAGE_LINENUMBER {
    union {
        DWORD   SymbolTableIndex;               
        DWORD   VirtualAddress;                 
    } Type;
    WORD    Linenumber;                         
} IMAGE_LINENUMBER;
typedef IMAGE_LINENUMBER  *PIMAGE_LINENUMBER;


#line 1 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\poppack.h"


























#pragma warning(disable:4103)

#pragma pack(pop)


#line 33 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\poppack.h"


#line 36 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\poppack.h"
#line 37 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\poppack.h"

#line 11967 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"
#line 11968 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"





typedef struct _IMAGE_BASE_RELOCATION {
    DWORD   VirtualAddress;
    DWORD   SizeOfBlock;

} IMAGE_BASE_RELOCATION;
typedef IMAGE_BASE_RELOCATION  * PIMAGE_BASE_RELOCATION;



























typedef struct _IMAGE_ARCHIVE_MEMBER_HEADER {
    BYTE     Name[16];                          
    BYTE     Date[12];                          
    BYTE     UserID[6];                         
    BYTE     GroupID[6];                        
    BYTE     Mode[8];                           
    BYTE     Size[10];                          
    BYTE     EndHeader[2];                      
} IMAGE_ARCHIVE_MEMBER_HEADER, *PIMAGE_ARCHIVE_MEMBER_HEADER;











typedef struct _IMAGE_EXPORT_DIRECTORY {
    DWORD   Characteristics;
    DWORD   TimeDateStamp;
    WORD    MajorVersion;
    WORD    MinorVersion;
    DWORD   Name;
    DWORD   Base;
    DWORD   NumberOfFunctions;
    DWORD   NumberOfNames;
    DWORD   AddressOfFunctions;     
    DWORD   AddressOfNames;         
    DWORD   AddressOfNameOrdinals;  
} IMAGE_EXPORT_DIRECTORY, *PIMAGE_EXPORT_DIRECTORY;





typedef struct _IMAGE_IMPORT_BY_NAME {
    WORD    Hint;
    BYTE    Name[1];
} IMAGE_IMPORT_BY_NAME, *PIMAGE_IMPORT_BY_NAME;

#line 1 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\pshpack8.h"























#pragma warning(disable:4103)

#pragma pack(push,8)


#line 30 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\pshpack8.h"


#line 33 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\pshpack8.h"
#line 34 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\pshpack8.h"

#line 12050 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"

typedef struct _IMAGE_THUNK_DATA64 {
    union {
        ULONGLONG ForwarderString;  
        ULONGLONG Function;         
        ULONGLONG Ordinal;
        ULONGLONG AddressOfData;    
    } u1;
} IMAGE_THUNK_DATA64;
typedef IMAGE_THUNK_DATA64 * PIMAGE_THUNK_DATA64;

#line 1 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\poppack.h"


























#pragma warning(disable:4103)

#pragma pack(pop)


#line 33 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\poppack.h"


#line 36 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\poppack.h"
#line 37 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\poppack.h"

#line 12062 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"

typedef struct _IMAGE_THUNK_DATA32 {
    union {
        DWORD ForwarderString;      
        DWORD Function;             
        DWORD Ordinal;
        DWORD AddressOfData;        
    } u1;
} IMAGE_THUNK_DATA32;
typedef IMAGE_THUNK_DATA32 * PIMAGE_THUNK_DATA32;












typedef void
(__stdcall *PIMAGE_TLS_CALLBACK) (
    PVOID DllHandle,
    DWORD Reason,
    PVOID Reserved
    );

typedef struct _IMAGE_TLS_DIRECTORY64 {
    ULONGLONG   StartAddressOfRawData;
    ULONGLONG   EndAddressOfRawData;
    ULONGLONG   AddressOfIndex;         
    ULONGLONG   AddressOfCallBacks;     
    DWORD   SizeOfZeroFill;
    DWORD   Characteristics;
} IMAGE_TLS_DIRECTORY64;
typedef IMAGE_TLS_DIRECTORY64 * PIMAGE_TLS_DIRECTORY64;

typedef struct _IMAGE_TLS_DIRECTORY32 {
    DWORD   StartAddressOfRawData;
    DWORD   EndAddressOfRawData;
    DWORD   AddressOfIndex;             
    DWORD   AddressOfCallBacks;         
    DWORD   SizeOfZeroFill;
    DWORD   Characteristics;
} IMAGE_TLS_DIRECTORY32;
typedef IMAGE_TLS_DIRECTORY32 * PIMAGE_TLS_DIRECTORY32;












typedef IMAGE_THUNK_DATA32              IMAGE_THUNK_DATA;
typedef PIMAGE_THUNK_DATA32             PIMAGE_THUNK_DATA;

typedef IMAGE_TLS_DIRECTORY32           IMAGE_TLS_DIRECTORY;
typedef PIMAGE_TLS_DIRECTORY32          PIMAGE_TLS_DIRECTORY;
#line 12128 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"

typedef struct _IMAGE_IMPORT_DESCRIPTOR {
    union {
        DWORD   Characteristics;            
        DWORD   OriginalFirstThunk;         
    } ;
    DWORD   TimeDateStamp;                  
                                            
                                            
                                            

    DWORD   ForwarderChain;                 
    DWORD   Name;
    DWORD   FirstThunk;                     
} IMAGE_IMPORT_DESCRIPTOR;
typedef IMAGE_IMPORT_DESCRIPTOR  *PIMAGE_IMPORT_DESCRIPTOR;





typedef struct _IMAGE_BOUND_IMPORT_DESCRIPTOR {
    DWORD   TimeDateStamp;
    WORD    OffsetModuleName;
    WORD    NumberOfModuleForwarderRefs;

} IMAGE_BOUND_IMPORT_DESCRIPTOR,  *PIMAGE_BOUND_IMPORT_DESCRIPTOR;

typedef struct _IMAGE_BOUND_FORWARDER_REF {
    DWORD   TimeDateStamp;
    WORD    OffsetModuleName;
    WORD    Reserved;
} IMAGE_BOUND_FORWARDER_REF, *PIMAGE_BOUND_FORWARDER_REF;



















typedef struct _IMAGE_RESOURCE_DIRECTORY {
    DWORD   Characteristics;
    DWORD   TimeDateStamp;
    WORD    MajorVersion;
    WORD    MinorVersion;
    WORD    NumberOfNamedEntries;
    WORD    NumberOfIdEntries;

} IMAGE_RESOURCE_DIRECTORY, *PIMAGE_RESOURCE_DIRECTORY;


















typedef struct _IMAGE_RESOURCE_DIRECTORY_ENTRY {
    union {
        struct {
            DWORD NameOffset:31;
            DWORD NameIsString:1;
        } ;
        DWORD   Name;
        WORD    Id;
    } ;
    union {
        DWORD   OffsetToData;
        struct {
            DWORD   OffsetToDirectory:31;
            DWORD   DataIsDirectory:1;
        } ;
    } ;
} IMAGE_RESOURCE_DIRECTORY_ENTRY, *PIMAGE_RESOURCE_DIRECTORY_ENTRY;










typedef struct _IMAGE_RESOURCE_DIRECTORY_STRING {
    WORD    Length;
    CHAR    NameString[ 1 ];
} IMAGE_RESOURCE_DIRECTORY_STRING, *PIMAGE_RESOURCE_DIRECTORY_STRING;


typedef struct _IMAGE_RESOURCE_DIR_STRING_U {
    WORD    Length;
    WCHAR   NameString[ 1 ];
} IMAGE_RESOURCE_DIR_STRING_U, *PIMAGE_RESOURCE_DIR_STRING_U;











typedef struct _IMAGE_RESOURCE_DATA_ENTRY {
    DWORD   OffsetToData;
    DWORD   Size;
    DWORD   CodePage;
    DWORD   Reserved;
} IMAGE_RESOURCE_DATA_ENTRY, *PIMAGE_RESOURCE_DATA_ENTRY;





typedef struct {
    DWORD   Size;
    DWORD   TimeDateStamp;
    WORD    MajorVersion;
    WORD    MinorVersion;
    DWORD   GlobalFlagsClear;
    DWORD   GlobalFlagsSet;
    DWORD   CriticalSectionDefaultTimeout;
    DWORD   DeCommitFreeBlockThreshold;
    DWORD   DeCommitTotalFreeThreshold;
    DWORD   LockPrefixTable;            
    DWORD   MaximumAllocationSize;
    DWORD   VirtualMemoryThreshold;
    DWORD   ProcessHeapFlags;
    DWORD   ProcessAffinityMask;
    WORD    CSDVersion;
    WORD    Reserved1;
    DWORD   EditList;                   
    DWORD   SecurityCookie;             
    DWORD   SEHandlerTable;             
    DWORD   SEHandlerCount;
} IMAGE_LOAD_CONFIG_DIRECTORY32, *PIMAGE_LOAD_CONFIG_DIRECTORY32;

typedef struct {
    DWORD      Size;
    DWORD      TimeDateStamp;
    WORD       MajorVersion;
    WORD       MinorVersion;
    DWORD      GlobalFlagsClear;
    DWORD      GlobalFlagsSet;
    DWORD      CriticalSectionDefaultTimeout;
    ULONGLONG  DeCommitFreeBlockThreshold;
    ULONGLONG  DeCommitTotalFreeThreshold;
    ULONGLONG  LockPrefixTable;         
    ULONGLONG  MaximumAllocationSize;
    ULONGLONG  VirtualMemoryThreshold;
    ULONGLONG  ProcessAffinityMask;
    DWORD      ProcessHeapFlags;
    WORD       CSDVersion;
    WORD       Reserved1;
    ULONGLONG  EditList;                
    ULONGLONG  SecurityCookie;          
    ULONGLONG  SEHandlerTable;          
    ULONGLONG  SEHandlerCount;
} IMAGE_LOAD_CONFIG_DIRECTORY64, *PIMAGE_LOAD_CONFIG_DIRECTORY64;





typedef IMAGE_LOAD_CONFIG_DIRECTORY32     IMAGE_LOAD_CONFIG_DIRECTORY;
typedef PIMAGE_LOAD_CONFIG_DIRECTORY32    PIMAGE_LOAD_CONFIG_DIRECTORY;
#line 12319 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"










typedef struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY {
    DWORD FuncStart;
    DWORD PrologLen : 8;
    DWORD FuncLen : 22;
    DWORD ThirtyTwoBit : 1;
    DWORD ExceptionFlag : 1;
} IMAGE_CE_RUNTIME_FUNCTION_ENTRY, * PIMAGE_CE_RUNTIME_FUNCTION_ENTRY;

typedef struct _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY {
    ULONGLONG BeginAddress;
    ULONGLONG EndAddress;
    ULONGLONG ExceptionHandler;
    ULONGLONG HandlerData;
    ULONGLONG PrologEndAddress;
} IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY, *PIMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY;

typedef struct _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY {
    DWORD BeginAddress;
    DWORD EndAddress;
    DWORD ExceptionHandler;
    DWORD HandlerData;
    DWORD PrologEndAddress;
} IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY, *PIMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY;

typedef struct _IMAGE_RUNTIME_FUNCTION_ENTRY {
    DWORD BeginAddress;
    DWORD EndAddress;
    DWORD UnwindInfoAddress;
} _IMAGE_RUNTIME_FUNCTION_ENTRY, *_PIMAGE_RUNTIME_FUNCTION_ENTRY;

typedef  _IMAGE_RUNTIME_FUNCTION_ENTRY  IMAGE_IA64_RUNTIME_FUNCTION_ENTRY;
typedef _PIMAGE_RUNTIME_FUNCTION_ENTRY PIMAGE_IA64_RUNTIME_FUNCTION_ENTRY;








#line 12370 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"




#line 12375 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"

typedef  _IMAGE_RUNTIME_FUNCTION_ENTRY  IMAGE_RUNTIME_FUNCTION_ENTRY;
typedef _PIMAGE_RUNTIME_FUNCTION_ENTRY PIMAGE_RUNTIME_FUNCTION_ENTRY;

#line 12380 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"





typedef struct _IMAGE_DEBUG_DIRECTORY {
    DWORD   Characteristics;
    DWORD   TimeDateStamp;
    WORD    MajorVersion;
    WORD    MinorVersion;
    DWORD   Type;
    DWORD   SizeOfData;
    DWORD   AddressOfRawData;
    DWORD   PointerToRawData;
} IMAGE_DEBUG_DIRECTORY, *PIMAGE_DEBUG_DIRECTORY;















typedef struct _IMAGE_COFF_SYMBOLS_HEADER {
    DWORD   NumberOfSymbols;
    DWORD   LvaToFirstSymbol;
    DWORD   NumberOfLinenumbers;
    DWORD   LvaToFirstLinenumber;
    DWORD   RvaToFirstByteOfCode;
    DWORD   RvaToLastByteOfCode;
    DWORD   RvaToFirstByteOfData;
    DWORD   RvaToLastByteOfData;
} IMAGE_COFF_SYMBOLS_HEADER, *PIMAGE_COFF_SYMBOLS_HEADER;






typedef struct _FPO_DATA {
    DWORD       ulOffStart;             
    DWORD       cbProcSize;             
    DWORD       cdwLocals;              
    WORD        cdwParams;              
    WORD        cbProlog : 8;           
    WORD        cbRegs   : 3;           
    WORD        fHasSEH  : 1;           
    WORD        fUseBP   : 1;           
    WORD        reserved : 1;           
    WORD        cbFrame  : 2;           
} FPO_DATA, *PFPO_DATA;





typedef struct _IMAGE_DEBUG_MISC {
    DWORD       DataType;               
    DWORD       Length;                 
                                        
    BOOLEAN     Unicode;                
    BYTE        Reserved[ 3 ];
    BYTE        Data[ 1 ];              
} IMAGE_DEBUG_MISC, *PIMAGE_DEBUG_MISC;








typedef struct _IMAGE_FUNCTION_ENTRY {
    DWORD   StartingAddress;
    DWORD   EndingAddress;
    DWORD   EndOfPrologue;
} IMAGE_FUNCTION_ENTRY, *PIMAGE_FUNCTION_ENTRY;

typedef struct _IMAGE_FUNCTION_ENTRY64 {
    ULONGLONG   StartingAddress;
    ULONGLONG   EndingAddress;
    union {
        ULONGLONG   EndOfPrologue;
        ULONGLONG   UnwindInfoAddress;
    } ;
} IMAGE_FUNCTION_ENTRY64, *PIMAGE_FUNCTION_ENTRY64;





















typedef struct _IMAGE_SEPARATE_DEBUG_HEADER {
    WORD        Signature;
    WORD        Flags;
    WORD        Machine;
    WORD        Characteristics;
    DWORD       TimeDateStamp;
    DWORD       CheckSum;
    DWORD       ImageBase;
    DWORD       SizeOfImage;
    DWORD       NumberOfSections;
    DWORD       ExportedNamesSize;
    DWORD       DebugDirectorySize;
    DWORD       SectionAlignment;
    DWORD       Reserved[2];
} IMAGE_SEPARATE_DEBUG_HEADER, *PIMAGE_SEPARATE_DEBUG_HEADER;

typedef struct _NON_PAGED_DEBUG_INFO {
    WORD        Signature;
    WORD        Flags;
    DWORD       Size;
    WORD        Machine;
    WORD        Characteristics;
    DWORD       TimeDateStamp;
    DWORD       CheckSum;
    DWORD       SizeOfImage;
    ULONGLONG   ImageBase;
    
    
} NON_PAGED_DEBUG_INFO, *PNON_PAGED_DEBUG_INFO;







#line 12531 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"



                                                









typedef struct _ImageArchitectureHeader {
    unsigned int AmaskValue: 1;                 
                                                
    int :7;                                     
    unsigned int AmaskShift: 8;                 
    int :16;                                    
    DWORD FirstEntryRVA;                        
} IMAGE_ARCHITECTURE_HEADER, *PIMAGE_ARCHITECTURE_HEADER;

typedef struct _ImageArchitectureEntry {
    DWORD FixupInstRVA;                         
    DWORD NewInst;                              
} IMAGE_ARCHITECTURE_ENTRY, *PIMAGE_ARCHITECTURE_ENTRY;

#line 1 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\poppack.h"


























#pragma warning(disable:4103)

#pragma pack(pop)


#line 33 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\poppack.h"


#line 36 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\poppack.h"
#line 37 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\poppack.h"

#line 12559 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"








typedef struct IMPORT_OBJECT_HEADER {
    WORD    Sig1;                       
    WORD    Sig2;                       
    WORD    Version;
    WORD    Machine;
    DWORD   TimeDateStamp;              
    DWORD   SizeOfData;                 

    union {
        WORD    Ordinal;                
        WORD    Hint;
    } ;

    WORD    Type : 2;                   
    WORD    NameType : 3;               
    WORD    Reserved : 11;              
} IMPORT_OBJECT_HEADER;

typedef enum IMPORT_OBJECT_TYPE
{
    IMPORT_OBJECT_CODE = 0,
    IMPORT_OBJECT_DATA = 1,
    IMPORT_OBJECT_CONST = 2,
} IMPORT_OBJECT_TYPE;

typedef enum IMPORT_OBJECT_NAME_TYPE
{
    IMPORT_OBJECT_ORDINAL = 0,          
    IMPORT_OBJECT_NAME = 1,             
    IMPORT_OBJECT_NAME_NO_PREFIX = 2,   
    IMPORT_OBJECT_NAME_UNDECORATE = 3,  
                                        
} IMPORT_OBJECT_NAME_TYPE;





typedef enum ReplacesCorHdrNumericDefines
{

    COMIMAGE_FLAGS_ILONLY               =0x00000001,
    COMIMAGE_FLAGS_32BITREQUIRED        =0x00000002,
    COMIMAGE_FLAGS_IL_LIBRARY           =0x00000004,
    COMIMAGE_FLAGS_STRONGNAMESIGNED     =0x00000008,
    COMIMAGE_FLAGS_NATIVE_ENTRYPOINT    =0x00000010,
    COMIMAGE_FLAGS_TRACKDEBUGDATA       =0x00010000,


    COR_VERSION_MAJOR_V2                =2,
    COR_VERSION_MAJOR                   =COR_VERSION_MAJOR_V2,
    COR_VERSION_MINOR                   =0,
    COR_DELETED_NAME_LENGTH             =8,
    COR_VTABLEGAP_NAME_LENGTH           =8,


    NATIVE_TYPE_MAX_CB                  =1,
    COR_ILMETHOD_SECT_SMALL_MAX_DATASIZE=0xFF,


    IMAGE_COR_MIH_METHODRVA             =0x01,
    IMAGE_COR_MIH_EHRVA                 =0x02,
    IMAGE_COR_MIH_BASICBLOCK            =0x08,


    COR_VTABLE_32BIT                    =0x01,          
    COR_VTABLE_64BIT                    =0x02,          
    COR_VTABLE_FROM_UNMANAGED           =0x04,          
    COR_VTABLE_FROM_UNMANAGED_RETAIN_APPDOMAIN  =0x08,  
    COR_VTABLE_CALL_MOST_DERIVED        =0x10,          


    IMAGE_COR_EATJ_THUNK_SIZE           =32,            


    
    MAX_CLASS_NAME                      =1024,
    MAX_PACKAGE_NAME                    =1024,
} ReplacesCorHdrNumericDefines;


typedef struct IMAGE_COR20_HEADER
{
    
    DWORD                   cb;
    WORD                    MajorRuntimeVersion;
    WORD                    MinorRuntimeVersion;

    
    IMAGE_DATA_DIRECTORY    MetaData;
    DWORD                   Flags;

    
    
    union {
        DWORD               EntryPointToken;
        DWORD               EntryPointRVA;
    } ;

    
    IMAGE_DATA_DIRECTORY    Resources;
    IMAGE_DATA_DIRECTORY    StrongNameSignature;

    
    IMAGE_DATA_DIRECTORY    CodeManagerTable;
    IMAGE_DATA_DIRECTORY    VTableFixups;
    IMAGE_DATA_DIRECTORY    ExportAddressTableJumps;

    
    IMAGE_DATA_DIRECTORY    ManagedNativeHeader;

} IMAGE_COR20_HEADER, *PIMAGE_COR20_HEADER;

#line 12681 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"














#line 12696 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"




























#line 12725 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"





typedef SINGLE_LIST_ENTRY SLIST_ENTRY32, *PSLIST_ENTRY32;

#line 12733 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"











































#line 12777 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"

typedef union _SLIST_HEADER {
    ULONGLONG Alignment;
    struct {
        SINGLE_LIST_ENTRY Next;
        WORD   Depth;
        WORD   Sequence;
    } ;
} SLIST_HEADER, *PSLIST_HEADER;

typedef SLIST_HEADER SLIST_HEADER32, *PSLIST_HEADER32;

#line 12790 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"

#line 12792 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"


__declspec(dllimport)
void
__stdcall
RtlInitializeSListHead (
     PSLIST_HEADER ListHead
    );


__declspec(dllimport)
PSINGLE_LIST_ENTRY
__stdcall
RtlFirstEntrySList (
     const SLIST_HEADER *ListHead
    );

__declspec(dllimport)
PSINGLE_LIST_ENTRY
__stdcall
RtlInterlockedPopEntrySList (
     PSLIST_HEADER ListHead
    );

__declspec(dllimport)
PSINGLE_LIST_ENTRY
__stdcall
RtlInterlockedPushEntrySList (
     PSLIST_HEADER ListHead,
       PSINGLE_LIST_ENTRY ListEntry
    );

__declspec(dllimport)
PSINGLE_LIST_ENTRY
__stdcall
RtlInterlockedFlushSList (
     PSLIST_HEADER ListHead
    );

__declspec(dllimport)
WORD  
__stdcall
RtlQueryDepthSList (
     PSLIST_HEADER ListHead
    );










#line 12848 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"



























typedef union _RTL_RUN_ONCE {       
    PVOID Ptr;                      
} RTL_RUN_ONCE, *PRTL_RUN_ONCE;     

typedef
 
 
DWORD 
__stdcall
RTL_RUN_ONCE_INIT_FN (
     PRTL_RUN_ONCE RunOnce,
     PVOID Parameter,
     PVOID *Context
    );
typedef RTL_RUN_ONCE_INIT_FN *PRTL_RUN_ONCE_INIT_FN;

#line 12892 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"



 
__declspec(dllimport)
void
__stdcall
RtlRunOnceInitialize (
     PRTL_RUN_ONCE RunOnce
    );

 
 
__declspec(dllimport)
DWORD   
__stdcall
RtlRunOnceExecuteOnce (
     PRTL_RUN_ONCE RunOnce,
      PRTL_RUN_ONCE_INIT_FN InitFn,
     PVOID Parameter,
     PVOID *Context
    );

 

__declspec(dllimport)
DWORD   
__stdcall
RtlRunOnceBeginInitialize (
     PRTL_RUN_ONCE RunOnce,
     DWORD Flags,
     PVOID *Context
    );

 
__declspec(dllimport)
DWORD   
__stdcall
RtlRunOnceComplete (
     PRTL_RUN_ONCE RunOnce,
     DWORD Flags,
     PVOID Context
    );

#line 12937 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"
















__forceinline
DWORD
HEAP_MAKE_TAG_FLAGS (
     DWORD TagBase,
     DWORD Tag
    )

{
    __pragma(warning(push)) __pragma(warning(disable : 4548)) do {__noop(TagBase);} while((0,0) __pragma(warning(pop)) );
    return ((DWORD)((TagBase) + ((Tag) << 18)));
}
#line 12965 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"


__declspec(dllimport)
WORD  
__stdcall
RtlCaptureStackBackTrace(
     DWORD FramesToSkip,
     DWORD FramesToCapture,
     PVOID *BackTrace,
     PDWORD BackTraceHash
   );
#line 12977 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"


__declspec(dllimport)
void
__stdcall
RtlCaptureContext (
     PCONTEXT ContextRecord
    );
#line 12986 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"





















































#line 13040 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"



__declspec(dllimport)
SIZE_T
__stdcall
RtlCompareMemory (
     const void *Source1,
     const void *Source2,
     SIZE_T Length
    );

#line 13053 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"










__forceinline
PVOID
RtlSecureZeroMemory(
     PVOID ptr,
     SIZE_T cnt
    )
{
    volatile char *vptr = (volatile char *)ptr;





#line 13077 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"

    while (cnt) {
        *vptr = 0;
        vptr++;
        cnt--;
    }

#line 13085 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"

    return ptr;
}

#line 13090 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"



















typedef struct _MESSAGE_RESOURCE_ENTRY {
    WORD   Length;
    WORD   Flags;
    BYTE  Text[ 1 ];
} MESSAGE_RESOURCE_ENTRY, *PMESSAGE_RESOURCE_ENTRY;



typedef struct _MESSAGE_RESOURCE_BLOCK {
    DWORD LowId;
    DWORD HighId;
    DWORD OffsetToEntries;
} MESSAGE_RESOURCE_BLOCK, *PMESSAGE_RESOURCE_BLOCK;

typedef struct _MESSAGE_RESOURCE_DATA {
    DWORD NumberOfBlocks;
    MESSAGE_RESOURCE_BLOCK Blocks[ 1 ];
} MESSAGE_RESOURCE_DATA, *PMESSAGE_RESOURCE_DATA;


__declspec(dllimport)
PVOID
__stdcall
RtlPcToFileHeader(
     PVOID PcValue,
     PVOID *BaseOfImage
    );

typedef struct _OSVERSIONINFOA {
    DWORD dwOSVersionInfoSize;
    DWORD dwMajorVersion;
    DWORD dwMinorVersion;
    DWORD dwBuildNumber;
    DWORD dwPlatformId;
    CHAR   szCSDVersion[ 128 ];     
} OSVERSIONINFOA, *POSVERSIONINFOA, *LPOSVERSIONINFOA;

typedef struct _OSVERSIONINFOW {
    DWORD dwOSVersionInfoSize;
    DWORD dwMajorVersion;
    DWORD dwMinorVersion;
    DWORD dwBuildNumber;
    DWORD dwPlatformId;
    WCHAR  szCSDVersion[ 128 ];     
} OSVERSIONINFOW, *POSVERSIONINFOW, *LPOSVERSIONINFOW, RTL_OSVERSIONINFOW, *PRTL_OSVERSIONINFOW;





typedef OSVERSIONINFOA OSVERSIONINFO;
typedef POSVERSIONINFOA POSVERSIONINFO;
typedef LPOSVERSIONINFOA LPOSVERSIONINFO;
#line 13163 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"

typedef struct _OSVERSIONINFOEXA {
    DWORD dwOSVersionInfoSize;
    DWORD dwMajorVersion;
    DWORD dwMinorVersion;
    DWORD dwBuildNumber;
    DWORD dwPlatformId;
    CHAR   szCSDVersion[ 128 ];     
    WORD   wServicePackMajor;
    WORD   wServicePackMinor;
    WORD   wSuiteMask;
    BYTE  wProductType;
    BYTE  wReserved;
} OSVERSIONINFOEXA, *POSVERSIONINFOEXA, *LPOSVERSIONINFOEXA;
typedef struct _OSVERSIONINFOEXW {
    DWORD dwOSVersionInfoSize;
    DWORD dwMajorVersion;
    DWORD dwMinorVersion;
    DWORD dwBuildNumber;
    DWORD dwPlatformId;
    WCHAR  szCSDVersion[ 128 ];     
    WORD   wServicePackMajor;
    WORD   wServicePackMinor;
    WORD   wSuiteMask;
    BYTE  wProductType;
    BYTE  wReserved;
} OSVERSIONINFOEXW, *POSVERSIONINFOEXW, *LPOSVERSIONINFOEXW, RTL_OSVERSIONINFOEXW, *PRTL_OSVERSIONINFOEXW;





typedef OSVERSIONINFOEXA OSVERSIONINFOEX;
typedef POSVERSIONINFOEXA POSVERSIONINFOEX;
typedef LPOSVERSIONINFOEXA LPOSVERSIONINFOEX;
#line 13199 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"



























































__declspec(dllimport)
ULONGLONG
__stdcall
VerSetConditionMask(
     ULONGLONG ConditionMask,
     DWORD TypeMask,
     BYTE  Condition
    );
#line 13267 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"





__declspec(dllimport)
BOOLEAN
__stdcall
RtlGetProductInfo(
      DWORD  OSMajorVersion,
      DWORD  OSMinorVersion,
      DWORD  SpMajorVersion,
      DWORD  SpMinorVersion,
     PDWORD ReturnedProductType
    );

#line 13284 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"



typedef enum _RTL_UMS_THREAD_INFO_CLASS {
    UmsThreadInvalidInfoClass = 0,
    UmsThreadUserContext,
    UmsThreadPriority,
    UmsThreadAffinity,
    UmsThreadTeb,
    UmsThreadIsSuspended,
    UmsThreadIsTerminated,
    UmsThreadMaxInfoClass
} RTL_UMS_THREAD_INFO_CLASS, *PRTL_UMS_THREAD_INFO_CLASS;

typedef enum _RTL_UMS_SCHEDULER_REASON {
    UmsSchedulerStartup = 0,
    UmsSchedulerThreadBlocked,
    UmsSchedulerThreadYield,
} RTL_UMS_SCHEDULER_REASON, *PRTL_UMS_SCHEDULER_REASON;

typedef
 
void
__stdcall
RTL_UMS_SCHEDULER_ENTRY_POINT(
     RTL_UMS_SCHEDULER_REASON Reason,
     ULONG_PTR ActivationPayload,
     PVOID SchedulerParam
    );

typedef RTL_UMS_SCHEDULER_ENTRY_POINT *PRTL_UMS_SCHEDULER_ENTRY_POINT;





__declspec(dllimport)
DWORD   
__stdcall
RtlCopyExtendedContext (
     PCONTEXT_EX Destination,
     DWORD ContextFlags,
     PCONTEXT_EX Source
    );

__declspec(dllimport)
DWORD   
__stdcall
RtlInitializeExtendedContext (
     PVOID Context,
     DWORD ContextFlags,
     PCONTEXT_EX* ContextEx
    );

__declspec(dllimport)
DWORD64
__stdcall
RtlGetEnabledExtendedFeatures (
     DWORD64 FeatureMask
    );


__declspec(dllimport)
DWORD   
__stdcall
RtlGetExtendedContextLength (
     DWORD ContextFlags,
     PDWORD ContextLength
    );

__declspec(dllimport)
DWORD64
__stdcall
RtlGetExtendedFeaturesMask (
     PCONTEXT_EX ContextEx
    );

__declspec(dllimport)
PVOID
__stdcall
RtlLocateExtendedFeature (
     PCONTEXT_EX ContextEx,
     DWORD FeatureId,
     PDWORD Length
    );

__declspec(dllimport)
PCONTEXT
__stdcall
RtlLocateLegacyContext (
     PCONTEXT_EX ContextEx,
     PDWORD Length
    );

__declspec(dllimport)
void
__stdcall
RtlSetExtendedFeaturesMask (
     PCONTEXT_EX ContextEx,
     DWORD64 FeatureMask
    );

#line 13387 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"


typedef struct _RTL_CRITICAL_SECTION_DEBUG {
    WORD   Type;
    WORD   CreatorBackTraceIndex;
    struct _RTL_CRITICAL_SECTION *CriticalSection;
    LIST_ENTRY ProcessLocksList;
    DWORD EntryCount;
    DWORD ContentionCount;
    DWORD Flags;
    WORD   CreatorBackTraceIndexHigh;
    WORD   SpareWORD  ;
} RTL_CRITICAL_SECTION_DEBUG, *PRTL_CRITICAL_SECTION_DEBUG, RTL_RESOURCE_DEBUG, *PRTL_RESOURCE_DEBUG;


















#pragma pack(push, 8)

typedef struct _RTL_CRITICAL_SECTION {
    PRTL_CRITICAL_SECTION_DEBUG DebugInfo;

    
    
    
    

    LONG LockCount;
    LONG RecursionCount;
    HANDLE OwningThread;        
    HANDLE LockSemaphore;
    ULONG_PTR SpinCount;        
} RTL_CRITICAL_SECTION, *PRTL_CRITICAL_SECTION;

#pragma pack(pop)

typedef struct _RTL_SRWLOCK {                            
        PVOID Ptr;                                       
} RTL_SRWLOCK, *PRTL_SRWLOCK;                            

typedef struct _RTL_CONDITION_VARIABLE {                    
        PVOID Ptr;                                       
} RTL_CONDITION_VARIABLE, *PRTL_CONDITION_VARIABLE;      


typedef
void
(__stdcall *PAPCFUNC)(
     ULONG_PTR Parameter
    );
typedef LONG (__stdcall *PVECTORED_EXCEPTION_HANDLER)(
    struct _EXCEPTION_POINTERS *ExceptionInfo
    );

typedef enum _HEAP_INFORMATION_CLASS {

    HeapCompatibilityInformation,
    HeapEnableTerminationOnCorruption


} HEAP_INFORMATION_CLASS;













typedef void (__stdcall * WAITORTIMERCALLBACKFUNC) (PVOID, BOOLEAN );   
typedef void (__stdcall * WORKERCALLBACKFUNC) (PVOID );                 
typedef void (__stdcall * APC_CALLBACK_FUNCTION) (DWORD   , PVOID, PVOID); 
typedef
void
(__stdcall *PFLS_CALLBACK_FUNCTION) (
     PVOID lpFlsData
    );

typedef
BOOLEAN
(__stdcall *PSECURE_MEMORY_CACHE_CALLBACK) (
     PVOID Addr,
     SIZE_T Range
    );




typedef enum _ACTIVATION_CONTEXT_INFO_CLASS {
    ActivationContextBasicInformation                       = 1,
    ActivationContextDetailedInformation                    = 2,
    AssemblyDetailedInformationInActivationContext          = 3,
    FileInformationInAssemblyOfAssemblyInActivationContext  = 4,
    RunlevelInformationInActivationContext                  = 5,
    CompatibilityInformationInActivationContext             = 6,
    ActivationContextManifestResourceName                   = 7,
    MaxActivationContextInfoClass,

    
    
    
    AssemblyDetailedInformationInActivationContxt           = 3,
    FileInformationInAssemblyOfAssemblyInActivationContxt   = 4
} ACTIVATION_CONTEXT_INFO_CLASS;




typedef struct _ACTIVATION_CONTEXT_QUERY_INDEX {
    DWORD ulAssemblyIndex;
    DWORD ulFileIndexInAssembly;
} ACTIVATION_CONTEXT_QUERY_INDEX, * PACTIVATION_CONTEXT_QUERY_INDEX;

typedef const struct _ACTIVATION_CONTEXT_QUERY_INDEX * PCACTIVATION_CONTEXT_QUERY_INDEX;







typedef struct _ASSEMBLY_FILE_DETAILED_INFORMATION {
    DWORD ulFlags;
    DWORD ulFilenameLength;
    DWORD ulPathLength;

    PCWSTR lpFileName;
    PCWSTR lpFilePath;
} ASSEMBLY_FILE_DETAILED_INFORMATION, *PASSEMBLY_FILE_DETAILED_INFORMATION;
typedef const ASSEMBLY_FILE_DETAILED_INFORMATION *PCASSEMBLY_FILE_DETAILED_INFORMATION;










typedef struct _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION {
    DWORD ulFlags;
    DWORD ulEncodedAssemblyIdentityLength;      
    DWORD ulManifestPathType;                   
    DWORD ulManifestPathLength;                 
    LARGE_INTEGER liManifestLastWriteTime;      
    DWORD ulPolicyPathType;                     
    DWORD ulPolicyPathLength;                   
    LARGE_INTEGER liPolicyLastWriteTime;        
    DWORD ulMetadataSatelliteRosterIndex;

    DWORD ulManifestVersionMajor;               
    DWORD ulManifestVersionMinor;               
    DWORD ulPolicyVersionMajor;                 
    DWORD ulPolicyVersionMinor;                 
    DWORD ulAssemblyDirectoryNameLength;        

    PCWSTR lpAssemblyEncodedAssemblyIdentity;
    PCWSTR lpAssemblyManifestPath;
    PCWSTR lpAssemblyPolicyPath;
    PCWSTR lpAssemblyDirectoryName;

    DWORD  ulFileCount;
} ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION, * PACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION;

typedef const struct _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION * PCACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION ;

typedef enum
{
    ACTCTX_RUN_LEVEL_UNSPECIFIED = 0,
    ACTCTX_RUN_LEVEL_AS_INVOKER,
    ACTCTX_RUN_LEVEL_HIGHEST_AVAILABLE,
    ACTCTX_RUN_LEVEL_REQUIRE_ADMIN,
    ACTCTX_RUN_LEVEL_NUMBERS
} ACTCTX_REQUESTED_RUN_LEVEL;

typedef struct _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION {
    DWORD ulFlags;
    ACTCTX_REQUESTED_RUN_LEVEL  RunLevel;
    DWORD UiAccess;
} ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION, * PACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION;

typedef const struct _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION * PCACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION ;

typedef enum
{
    ACTCTX_COMPATIBILITY_ELEMENT_TYPE_UNKNOWN = 0,
    ACTCTX_COMPATIBILITY_ELEMENT_TYPE_OS,
    ACTCTX_COMPATIBILITY_ELEMENT_TYPE_MITIGATION
} ACTCTX_COMPATIBILITY_ELEMENT_TYPE;

typedef struct _COMPATIBILITY_CONTEXT_ELEMENT {
    GUID Id;
    ACTCTX_COMPATIBILITY_ELEMENT_TYPE Type;
} COMPATIBILITY_CONTEXT_ELEMENT, *PCOMPATIBILITY_CONTEXT_ELEMENT;

typedef const struct _COMPATIBILITY_CONTEXT_ELEMENT *PCCOMPATIBILITY_CONTEXT_ELEMENT;

#pragma warning(push)
#pragma warning(disable:4200)

typedef struct _ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION {
    DWORD ElementCount;
    COMPATIBILITY_CONTEXT_ELEMENT Elements[];
} ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION, * PACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION;

#pragma warning(pop)

typedef const struct _ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION * PCACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION;




typedef struct _SUPPORTED_OS_INFO {
    WORD   OsCount;
    WORD   MitigationExist;
    WORD   OsList[(4)];
} SUPPORTED_OS_INFO, *PSUPPORTED_OS_INFO;

typedef struct _ACTIVATION_CONTEXT_DETAILED_INFORMATION {
    DWORD dwFlags;
    DWORD ulFormatVersion;
    DWORD ulAssemblyCount;
    DWORD ulRootManifestPathType;
    DWORD ulRootManifestPathChars;
    DWORD ulRootConfigurationPathType;
    DWORD ulRootConfigurationPathChars;
    DWORD ulAppDirPathType;
    DWORD ulAppDirPathChars;
    PCWSTR lpRootManifestPath;
    PCWSTR lpRootConfigurationPath;
    PCWSTR lpAppDirPath;
} ACTIVATION_CONTEXT_DETAILED_INFORMATION, *PACTIVATION_CONTEXT_DETAILED_INFORMATION;

typedef const struct _ACTIVATION_CONTEXT_DETAILED_INFORMATION *PCACTIVATION_CONTEXT_DETAILED_INFORMATION;

typedef struct _HARDWARE_COUNTER_DATA {
    HARDWARE_COUNTER_TYPE Type;
    DWORD Reserved;
    DWORD64 Value;
} HARDWARE_COUNTER_DATA, *PHARDWARE_COUNTER_DATA;



typedef struct _PERFORMANCE_DATA {
    WORD   Size;
    BYTE  Version;
    BYTE  HwCountersCount;
    DWORD ContextSwitchCount;
    DWORD64 WaitReasonBitMap;
    DWORD64 CycleTime;
    DWORD RetryCount;
    DWORD Reserved;
    HARDWARE_COUNTER_DATA HwCounters[16];
} PERFORMANCE_DATA, *PPERFORMANCE_DATA;














































typedef struct _EVENTLOGRECORD {
    DWORD  Length;        
    DWORD  Reserved;      
    DWORD  RecordNumber;  
    DWORD  TimeGenerated; 
    DWORD  TimeWritten;   
    DWORD  EventID;
    WORD   EventType;
    WORD   NumStrings;
    WORD   EventCategory;
    WORD   ReservedFlags; 
    DWORD  ClosingRecordNumber; 
    DWORD  StringOffset;  
    DWORD  UserSidLength;
    DWORD  UserSidOffset;
    DWORD  DataLength;
    DWORD  DataOffset;    
    
    
    
    
    
    
    
    
    
    
    
} EVENTLOGRECORD, *PEVENTLOGRECORD;






#pragma warning(push)
#line 13744 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"
#pragma warning(disable : 4200) 

struct _EVENTSFORLOGFILE;
typedef struct _EVENTSFORLOGFILE EVENTSFORLOGFILE, *PEVENTSFORLOGFILE;

struct _PACKEDEVENTINFO;
typedef struct _PACKEDEVENTINFO PACKEDEVENTINFO, *PPACKEDEVENTINFO;



struct _EVENTSFORLOGFILE
{
    DWORD           ulSize;
    WCHAR           szLogicalLogFile[256];        
    DWORD           ulNumRecords;
    EVENTLOGRECORD  pEventLogRecords[];
};

struct _PACKEDEVENTINFO
{
    DWORD               ulSize;  
    DWORD               ulNumEventsForLogFile; 
    DWORD               ulOffsets[];           
};

#line 13770 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"


#pragma warning(pop)


#line 13776 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"





















































                                                    


                                                    


                                                    


                                                    
                                                    

































































 










                                            






























































typedef enum _CM_SERVICE_NODE_TYPE {
    DriverType               = 0x00000001,
    FileSystemType           = 0x00000002,
    Win32ServiceOwnProcess   = 0x00000010,
    Win32ServiceShareProcess = 0x00000020,
    AdapterType              = 0x00000004,
    RecognizerType           = 0x00000008
} SERVICE_NODE_TYPE;

typedef enum _CM_SERVICE_LOAD_TYPE {
    BootLoad    = 0x00000000,
    SystemLoad  = 0x00000001,
    AutoLoad    = 0x00000002,
    DemandLoad  = 0x00000003,
    DisableLoad = 0x00000004
} SERVICE_LOAD_TYPE;

typedef enum _CM_ERROR_CONTROL_TYPE {
    IgnoreError   = 0x00000000,
    NormalError   = 0x00000001,
    SevereError   = 0x00000002,
    CriticalError = 0x00000003
} SERVICE_ERROR_TYPE;






































typedef struct _TAPE_ERASE {
    DWORD Type;
    BOOLEAN Immediate;
} TAPE_ERASE, *PTAPE_ERASE;












typedef struct _TAPE_PREPARE {
    DWORD Operation;
    BOOLEAN Immediate;
} TAPE_PREPARE, *PTAPE_PREPARE;










typedef struct _TAPE_WRITE_MARKS {
    DWORD Type;
    DWORD Count;
    BOOLEAN Immediate;
} TAPE_WRITE_MARKS, *PTAPE_WRITE_MARKS;









typedef struct _TAPE_GET_POSITION {
    DWORD Type;
    DWORD Partition;
    LARGE_INTEGER Offset;
} TAPE_GET_POSITION, *PTAPE_GET_POSITION;
















typedef struct _TAPE_SET_POSITION {
    DWORD Method;
    DWORD Partition;
    LARGE_INTEGER Offset;
    BOOLEAN Immediate;
} TAPE_SET_POSITION, *PTAPE_SET_POSITION;























































































typedef struct _TAPE_GET_DRIVE_PARAMETERS {
    BOOLEAN ECC;
    BOOLEAN Compression;
    BOOLEAN DataPadding;
    BOOLEAN ReportSetmarks;
    DWORD DefaultBlockSize;
    DWORD MaximumBlockSize;
    DWORD MinimumBlockSize;
    DWORD MaximumPartitionCount;
    DWORD FeaturesLow;
    DWORD FeaturesHigh;
    DWORD EOTWarningZoneSize;
} TAPE_GET_DRIVE_PARAMETERS, *PTAPE_GET_DRIVE_PARAMETERS;





typedef struct _TAPE_SET_DRIVE_PARAMETERS {
    BOOLEAN ECC;
    BOOLEAN Compression;
    BOOLEAN DataPadding;
    BOOLEAN ReportSetmarks;
    DWORD EOTWarningZoneSize;
} TAPE_SET_DRIVE_PARAMETERS, *PTAPE_SET_DRIVE_PARAMETERS;





typedef struct _TAPE_GET_MEDIA_PARAMETERS {
    LARGE_INTEGER Capacity;
    LARGE_INTEGER Remaining;
    DWORD BlockSize;
    DWORD PartitionCount;
    BOOLEAN WriteProtected;
} TAPE_GET_MEDIA_PARAMETERS, *PTAPE_GET_MEDIA_PARAMETERS;





typedef struct _TAPE_SET_MEDIA_PARAMETERS {
    DWORD BlockSize;
} TAPE_SET_MEDIA_PARAMETERS, *PTAPE_SET_MEDIA_PARAMETERS;









typedef struct _TAPE_CREATE_PARTITION {
    DWORD Method;
    DWORD Count;
    DWORD Size;
} TAPE_CREATE_PARTITION, *PTAPE_CREATE_PARTITION;











typedef struct _TAPE_WMI_OPERATIONS {
   DWORD Method;
   DWORD DataBufferSize;
   PVOID DataBuffer;
} TAPE_WMI_OPERATIONS, *PTAPE_WMI_OPERATIONS;




typedef enum _TAPE_DRIVE_PROBLEM_TYPE {
   TapeDriveProblemNone, TapeDriveReadWriteWarning,
   TapeDriveReadWriteError, TapeDriveReadWarning,
   TapeDriveWriteWarning, TapeDriveReadError,
   TapeDriveWriteError, TapeDriveHardwareError,
   TapeDriveUnsupportedMedia, TapeDriveScsiConnectionError,
   TapeDriveTimetoClean, TapeDriveCleanDriveNow,
   TapeDriveMediaLifeExpired, TapeDriveSnappedTape
} TAPE_DRIVE_PROBLEM_TYPE;






extern "C" {
#line 14294 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"


#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\ktmtypes.h"






















extern "C" {
#line 25 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\ktmtypes.h"


typedef GUID UOW, *PUOW;
typedef GUID CRM_PROTOCOL_ID, *PCRM_PROTOCOL_ID;

















































typedef ULONG NOTIFICATION_MASK;






















































typedef struct _TRANSACTION_NOTIFICATION {
    PVOID         TransactionKey;
    ULONG         TransactionNotification;
    LARGE_INTEGER TmVirtualClock;
    ULONG         ArgumentLength;
} TRANSACTION_NOTIFICATION, *PTRANSACTION_NOTIFICATION;

typedef struct _TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT {
    GUID   EnlistmentId;
    UOW    UOW;
} TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT, *PTRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT;



typedef struct _TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT {
    GUID TmIdentity;
    ULONG Flags;
} TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT, *PTRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT;

typedef ULONG SAVEPOINT_ID, *PSAVEPOINT_ID;

typedef struct _TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT {
    SAVEPOINT_ID SavepointId;
} TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT, *PTRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT;

typedef struct _TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT {
    ULONG PropagationCookie;
    GUID  UOW;
    GUID  TmIdentity;
    ULONG BufferLength;
    
} TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT, *PTRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT;

typedef struct _TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT {
    ULONG MarshalCookie;
    GUID  UOW;
} TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT, *PTRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT;

typedef TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT TRANSACTION_NOTIFICATION_PROMOTE_ARGUMENT, *PTRANSACTION_NOTIFICATION_PROMOTE_ARGUMENT;







typedef struct _KCRM_MARSHAL_HEADER {
    ULONG              VersionMajor;
    ULONG              VersionMinor;
    ULONG              NumProtocols;
    ULONG              Unused;        
} KCRM_MARSHAL_HEADER, *PKCRM_MARSHAL_HEADER, * PRKCRM_MARSHAL_HEADER;

typedef struct _KCRM_TRANSACTION_BLOB {
    UOW                UOW;
    GUID               TmIdentity;
    ULONG              IsolationLevel;
    ULONG              IsolationFlags;
    ULONG              Timeout;
    WCHAR              Description[64];
} KCRM_TRANSACTION_BLOB, *PKCRM_TRANSACTION_BLOB, * PRKCRM_TRANSACTION_BLOB;

typedef struct _KCRM_PROTOCOL_BLOB {
    CRM_PROTOCOL_ID    ProtocolId;
     ULONG StaticInfoLength;
    ULONG              TransactionIdInfoLength; 
    ULONG              Unused1;        
    ULONG              Unused2;        
} KCRM_PROTOCOL_BLOB, *PKCRM_PROTOCOL_BLOB, * PRKCRM_PROTOCOL_BLOB;


}
#line 206 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\ktmtypes.h"

#line 208 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\ktmtypes.h"

#line 14297 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"








































































































































































typedef enum _TRANSACTION_OUTCOME {
    TransactionOutcomeUndetermined = 1,
    TransactionOutcomeCommitted,
    TransactionOutcomeAborted,
} TRANSACTION_OUTCOME;


typedef enum _TRANSACTION_STATE {
    TransactionStateNormal = 1,
    TransactionStateIndoubt,
    TransactionStateCommittedNotify,
} TRANSACTION_STATE;


typedef struct _TRANSACTION_BASIC_INFORMATION {
    GUID    TransactionId;
    DWORD   State;
    DWORD   Outcome;
} TRANSACTION_BASIC_INFORMATION, *PTRANSACTION_BASIC_INFORMATION;

typedef struct _TRANSACTIONMANAGER_BASIC_INFORMATION {
    GUID    TmIdentity;
    LARGE_INTEGER VirtualClock;
} TRANSACTIONMANAGER_BASIC_INFORMATION, *PTRANSACTIONMANAGER_BASIC_INFORMATION;

typedef struct _TRANSACTIONMANAGER_LOG_INFORMATION {
    GUID  LogIdentity;
} TRANSACTIONMANAGER_LOG_INFORMATION, *PTRANSACTIONMANAGER_LOG_INFORMATION;

typedef struct _TRANSACTIONMANAGER_LOGPATH_INFORMATION {
    DWORD LogPathLength;
     WCHAR LogPath[1]; 

} TRANSACTIONMANAGER_LOGPATH_INFORMATION, *PTRANSACTIONMANAGER_LOGPATH_INFORMATION;

typedef struct _TRANSACTIONMANAGER_RECOVERY_INFORMATION {
    ULONGLONG  LastRecoveredLsn;
} TRANSACTIONMANAGER_RECOVERY_INFORMATION, *PTRANSACTIONMANAGER_RECOVERY_INFORMATION;



typedef struct _TRANSACTIONMANAGER_OLDEST_INFORMATION {
    GUID OldestTransactionGuid;
} TRANSACTIONMANAGER_OLDEST_INFORMATION, *PTRANSACTIONMANAGER_OLDEST_INFORMATION;



typedef struct _TRANSACTION_PROPERTIES_INFORMATION {
    DWORD              IsolationLevel;
    DWORD              IsolationFlags;
    LARGE_INTEGER      Timeout;
    DWORD              Outcome;
    DWORD              DescriptionLength;
    WCHAR              Description[1];            

} TRANSACTION_PROPERTIES_INFORMATION, *PTRANSACTION_PROPERTIES_INFORMATION;



typedef struct _TRANSACTION_BIND_INFORMATION {
    HANDLE TmHandle;
} TRANSACTION_BIND_INFORMATION, *PTRANSACTION_BIND_INFORMATION;

typedef struct _TRANSACTION_ENLISTMENT_PAIR {
    GUID   EnlistmentId;
    GUID   ResourceManagerId;
} TRANSACTION_ENLISTMENT_PAIR, *PTRANSACTION_ENLISTMENT_PAIR;

typedef struct _TRANSACTION_ENLISTMENTS_INFORMATION {
    DWORD                       NumberOfEnlistments;
    TRANSACTION_ENLISTMENT_PAIR EnlistmentPair[1]; 
} TRANSACTION_ENLISTMENTS_INFORMATION, *PTRANSACTION_ENLISTMENTS_INFORMATION;

typedef struct _TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION {
    TRANSACTION_ENLISTMENT_PAIR SuperiorEnlistmentPair;
} TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION, *PTRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION;


typedef struct _RESOURCEMANAGER_BASIC_INFORMATION {
    GUID    ResourceManagerId;
    DWORD   DescriptionLength;
    WCHAR   Description[1];            
} RESOURCEMANAGER_BASIC_INFORMATION, *PRESOURCEMANAGER_BASIC_INFORMATION;

typedef struct _RESOURCEMANAGER_COMPLETION_INFORMATION {
    HANDLE    IoCompletionPortHandle;
    ULONG_PTR CompletionKey;
} RESOURCEMANAGER_COMPLETION_INFORMATION, *PRESOURCEMANAGER_COMPLETION_INFORMATION;




typedef enum _TRANSACTION_INFORMATION_CLASS {
    TransactionBasicInformation,
    TransactionPropertiesInformation,
    TransactionEnlistmentInformation,
    TransactionSuperiorEnlistmentInformation

    ,


    TransactionBindInformation, 
    TransactionDTCPrivateInformation 
    ,

} TRANSACTION_INFORMATION_CLASS;


typedef enum _TRANSACTIONMANAGER_INFORMATION_CLASS {
    TransactionManagerBasicInformation,
    TransactionManagerLogInformation,
    TransactionManagerLogPathInformation,
    TransactionManagerRecoveryInformation = 4

    ,



    TransactionManagerOnlineProbeInformation = 3,
    TransactionManagerOldestTransactionInformation = 5



} TRANSACTIONMANAGER_INFORMATION_CLASS;



typedef enum _RESOURCEMANAGER_INFORMATION_CLASS {
    ResourceManagerBasicInformation,
    ResourceManagerCompletionInformation,
} RESOURCEMANAGER_INFORMATION_CLASS;


typedef struct _ENLISTMENT_BASIC_INFORMATION {
    GUID    EnlistmentId;
    GUID    TransactionId;
    GUID    ResourceManagerId;
} ENLISTMENT_BASIC_INFORMATION, *PENLISTMENT_BASIC_INFORMATION;

typedef struct _ENLISTMENT_CRM_INFORMATION {
    GUID   CrmTransactionManagerId;
    GUID   CrmResourceManagerId;
    GUID   CrmEnlistmentId;
} ENLISTMENT_CRM_INFORMATION, *PENLISTMENT_CRM_INFORMATION;



typedef enum _ENLISTMENT_INFORMATION_CLASS {
    EnlistmentBasicInformation,
    EnlistmentRecoveryInformation,
    EnlistmentCrmInformation
} ENLISTMENT_INFORMATION_CLASS;

typedef struct _TRANSACTION_LIST_ENTRY {
    UOW    UOW;
} TRANSACTION_LIST_ENTRY, *PTRANSACTION_LIST_ENTRY;

typedef struct _TRANSACTION_LIST_INFORMATION {
    DWORD   NumberOfTransactions;
    TRANSACTION_LIST_ENTRY TransactionInformation[1]; 
} TRANSACTION_LIST_INFORMATION, *PTRANSACTION_LIST_INFORMATION;






typedef enum _KTMOBJECT_TYPE {

    KTMOBJECT_TRANSACTION,
    KTMOBJECT_TRANSACTION_MANAGER,
    KTMOBJECT_RESOURCE_MANAGER,
    KTMOBJECT_ENLISTMENT,
    KTMOBJECT_INVALID

} KTMOBJECT_TYPE, *PKTMOBJECT_TYPE;









typedef struct _KTMOBJECT_CURSOR {

    
    
    

    GUID    LastQuery;

    
    
    

    DWORD   ObjectIdCount;

    
    
    

    GUID    ObjectIds[1];

} KTMOBJECT_CURSOR, *PKTMOBJECT_CURSOR;




}
#line 14677 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"

#line 14679 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"
typedef DWORD TP_VERSION, *PTP_VERSION; 

typedef struct _TP_CALLBACK_INSTANCE TP_CALLBACK_INSTANCE, *PTP_CALLBACK_INSTANCE;

typedef void (__stdcall *PTP_SIMPLE_CALLBACK)(
         PTP_CALLBACK_INSTANCE Instance,
     PVOID                 Context
    );

typedef struct _TP_POOL TP_POOL, *PTP_POOL; 

typedef enum _TP_CALLBACK_PRIORITY {
    TP_CALLBACK_PRIORITY_HIGH,
    TP_CALLBACK_PRIORITY_NORMAL,
    TP_CALLBACK_PRIORITY_LOW,
    TP_CALLBACK_PRIORITY_INVALID
} TP_CALLBACK_PRIORITY;

typedef struct _TP_POOL_STACK_INFORMATION {
    SIZE_T StackReserve;
    SIZE_T StackCommit;
}TP_POOL_STACK_INFORMATION, *PTP_POOL_STACK_INFORMATION;

typedef struct _TP_CLEANUP_GROUP TP_CLEANUP_GROUP, *PTP_CLEANUP_GROUP; 

typedef void (__stdcall *PTP_CLEANUP_GROUP_CANCEL_CALLBACK)(
     PVOID ObjectContext,
     PVOID CleanupContext
    );








typedef struct _TP_CALLBACK_ENVIRON_V3 {
    TP_VERSION                         Version;
    PTP_POOL                           Pool;
    PTP_CLEANUP_GROUP                  CleanupGroup;
    PTP_CLEANUP_GROUP_CANCEL_CALLBACK  CleanupGroupCancelCallback;
    PVOID                              RaceDll;
    struct _ACTIVATION_CONTEXT        *ActivationContext;
    PTP_SIMPLE_CALLBACK                FinalizationCallback;
    union {
        DWORD                          Flags;
        struct {
            DWORD                      LongFunction :  1;
            DWORD                      Persistent   :  1;
            DWORD                      Private      : 30;
        } s;
    } u;    
    TP_CALLBACK_PRIORITY               CallbackPriority;
    DWORD                              Size;
} TP_CALLBACK_ENVIRON_V3;

typedef TP_CALLBACK_ENVIRON_V3 TP_CALLBACK_ENVIRON, *PTP_CALLBACK_ENVIRON;























#line 14761 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"



__forceinline
void
TpInitializeCallbackEnviron(
     PTP_CALLBACK_ENVIRON CallbackEnviron
    )
{



    CallbackEnviron->Version = 3;





#line 14780 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"

    CallbackEnviron->Pool = 0;
    CallbackEnviron->CleanupGroup = 0;
    CallbackEnviron->CleanupGroupCancelCallback = 0;
    CallbackEnviron->RaceDll = 0;
    CallbackEnviron->ActivationContext = 0;
    CallbackEnviron->FinalizationCallback = 0;
    CallbackEnviron->u.Flags = 0;



    CallbackEnviron->CallbackPriority = TP_CALLBACK_PRIORITY_NORMAL;
    CallbackEnviron->Size = sizeof(TP_CALLBACK_ENVIRON);

#line 14795 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"

}

__forceinline
void
TpSetCallbackThreadpool(
     PTP_CALLBACK_ENVIRON CallbackEnviron,
        PTP_POOL             Pool
    )
{
    CallbackEnviron->Pool = Pool;
}

__forceinline
void
TpSetCallbackCleanupGroup(
      PTP_CALLBACK_ENVIRON              CallbackEnviron,
         PTP_CLEANUP_GROUP                 CleanupGroup,
     PTP_CLEANUP_GROUP_CANCEL_CALLBACK CleanupGroupCancelCallback
    )
{
    CallbackEnviron->CleanupGroup = CleanupGroup;
    CallbackEnviron->CleanupGroupCancelCallback = CleanupGroupCancelCallback;
}

__forceinline
void
TpSetCallbackActivationContext(
      PTP_CALLBACK_ENVIRON CallbackEnviron,
     struct _ACTIVATION_CONTEXT *ActivationContext
    )
{
    CallbackEnviron->ActivationContext = ActivationContext;
}

__forceinline
void
TpSetCallbackNoActivationContext(
     PTP_CALLBACK_ENVIRON CallbackEnviron
    )
{
    CallbackEnviron->ActivationContext = (struct _ACTIVATION_CONTEXT *)(LONG_PTR) -1; 
}

__forceinline
void
TpSetCallbackLongFunction(
     PTP_CALLBACK_ENVIRON CallbackEnviron
    )
{
    CallbackEnviron->u.s.LongFunction = 1;
}

__forceinline
void
TpSetCallbackRaceWithDll(
     PTP_CALLBACK_ENVIRON CallbackEnviron,
        PVOID                DllHandle
    )
{
    CallbackEnviron->RaceDll = DllHandle;
}

__forceinline
void
TpSetCallbackFinalizationCallback(
     PTP_CALLBACK_ENVIRON CallbackEnviron,
        PTP_SIMPLE_CALLBACK  FinalizationCallback
    )
{
    CallbackEnviron->FinalizationCallback = FinalizationCallback;
}



__forceinline
void
TpSetCallbackPriority(
     PTP_CALLBACK_ENVIRON CallbackEnviron,
        TP_CALLBACK_PRIORITY Priority
    )
{
    CallbackEnviron->CallbackPriority = Priority;
}

#line 14881 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"

__forceinline
void
TpSetCallbackPersistent(
     PTP_CALLBACK_ENVIRON CallbackEnviron
    )
{
    CallbackEnviron->u.s.Persistent = 1;
}


__forceinline
void
TpDestroyCallbackEnviron(
     PTP_CALLBACK_ENVIRON CallbackEnviron
    )
{
    
    
    
    
    

    (CallbackEnviron);
}

#line 14908 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"


typedef struct _TP_WORK TP_WORK, *PTP_WORK;

typedef void (__stdcall *PTP_WORK_CALLBACK)(
         PTP_CALLBACK_INSTANCE Instance,
     PVOID                 Context,
         PTP_WORK              Work
    );

typedef struct _TP_TIMER TP_TIMER, *PTP_TIMER;

typedef void (__stdcall *PTP_TIMER_CALLBACK)(
         PTP_CALLBACK_INSTANCE Instance,
     PVOID                 Context,
         PTP_TIMER             Timer
    );

typedef DWORD    TP_WAIT_RESULT;

typedef struct _TP_WAIT TP_WAIT, *PTP_WAIT;

typedef void (__stdcall *PTP_WAIT_CALLBACK)(
         PTP_CALLBACK_INSTANCE Instance,
     PVOID                 Context,
         PTP_WAIT              Wait,
            TP_WAIT_RESULT        WaitResult
    );

typedef struct _TP_IO TP_IO, *PTP_IO;



































#line 14974 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"








__inline struct _TEB * NtCurrentTeb( void ) { return (struct _TEB *) (ULONG_PTR) __readfsdword (0x18); }

















#line 15001 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"

#line 15003 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"













#line 15017 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"


}
#line 15021 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"


#pragma warning(pop)



#line 15028 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"

#line 15030 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnt.h"



#line 178 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windef.h"
#line 179 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windef.h"




typedef UINT_PTR            WPARAM;
typedef LONG_PTR            LPARAM;
typedef LONG_PTR            LRESULT;





#line 192 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windef.h"



#line 196 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windef.h"

#line 198 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windef.h"










struct HWND__{int unused;}; typedef struct HWND__ *HWND;
struct HHOOK__{int unused;}; typedef struct HHOOK__ *HHOOK;



#line 214 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windef.h"

typedef WORD                ATOM;

typedef HANDLE          *SPHANDLE;
typedef HANDLE           *LPHANDLE;
typedef HANDLE              HGLOBAL;
typedef HANDLE              HLOCAL;
typedef HANDLE              GLOBALHANDLE;
typedef HANDLE              LOCALHANDLE;







typedef int ( __stdcall *FARPROC)();
typedef int ( __stdcall *NEARPROC)();
typedef int (__stdcall *PROC)();
#line 234 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windef.h"




#line 239 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windef.h"




#line 244 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windef.h"



typedef void * HGDIOBJ;


#line 251 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windef.h"
#line 252 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windef.h"

struct HKEY__{int unused;}; typedef struct HKEY__ *HKEY;
typedef HKEY *PHKEY;


struct HACCEL__{int unused;}; typedef struct HACCEL__ *HACCEL;
#line 259 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windef.h"

struct HBITMAP__{int unused;}; typedef struct HBITMAP__ *HBITMAP;
struct HBRUSH__{int unused;}; typedef struct HBRUSH__ *HBRUSH;
#line 263 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windef.h"

struct HCOLORSPACE__{int unused;}; typedef struct HCOLORSPACE__ *HCOLORSPACE;
#line 266 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windef.h"

struct HDC__{int unused;}; typedef struct HDC__ *HDC;
#line 269 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windef.h"
struct HGLRC__{int unused;}; typedef struct HGLRC__ *HGLRC;          
struct HDESK__{int unused;}; typedef struct HDESK__ *HDESK;
struct HENHMETAFILE__{int unused;}; typedef struct HENHMETAFILE__ *HENHMETAFILE;

struct HFONT__{int unused;}; typedef struct HFONT__ *HFONT;
#line 275 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windef.h"
struct HICON__{int unused;}; typedef struct HICON__ *HICON;

struct HMENU__{int unused;}; typedef struct HMENU__ *HMENU;
#line 279 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windef.h"
struct HMETAFILE__{int unused;}; typedef struct HMETAFILE__ *HMETAFILE;
struct HINSTANCE__{int unused;}; typedef struct HINSTANCE__ *HINSTANCE;
typedef HINSTANCE HMODULE;      

struct HPALETTE__{int unused;}; typedef struct HPALETTE__ *HPALETTE;
struct HPEN__{int unused;}; typedef struct HPEN__ *HPEN;
#line 286 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windef.h"
struct HRGN__{int unused;}; typedef struct HRGN__ *HRGN;
struct HRSRC__{int unused;}; typedef struct HRSRC__ *HRSRC;
struct HSPRITE__{int unused;}; typedef struct HSPRITE__ *HSPRITE;
struct HLSURF__{int unused;}; typedef struct HLSURF__ *HLSURF;
struct HSTR__{int unused;}; typedef struct HSTR__ *HSTR;
struct HTASK__{int unused;}; typedef struct HTASK__ *HTASK;
struct HWINSTA__{int unused;}; typedef struct HWINSTA__ *HWINSTA;
struct HKL__{int unused;}; typedef struct HKL__ *HKL;


struct HWINEVENTHOOK__{int unused;}; typedef struct HWINEVENTHOOK__ *HWINEVENTHOOK;
#line 298 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windef.h"



struct HMONITOR__{int unused;}; typedef struct HMONITOR__ *HMONITOR;
#line 303 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windef.h"
struct HUMPD__{int unused;}; typedef struct HUMPD__ *HUMPD;
#line 305 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windef.h"


typedef int HFILE;
typedef HICON HCURSOR;      



#line 313 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windef.h"

typedef DWORD   COLORREF;
typedef DWORD   *LPCOLORREF;



typedef struct tagRECT
{
    LONG    left;
    LONG    top;
    LONG    right;
    LONG    bottom;
} RECT, *PRECT,  *NPRECT,  *LPRECT;

typedef const RECT * LPCRECT;

typedef struct _RECTL       
{
    LONG    left;
    LONG    top;
    LONG    right;
    LONG    bottom;
} RECTL, *PRECTL, *LPRECTL;

typedef const RECTL * LPCRECTL;

typedef struct tagPOINT
{
    LONG  x;
    LONG  y;
} POINT, *PPOINT,  *NPPOINT,  *LPPOINT;

typedef struct _POINTL      
{
    LONG  x;
    LONG  y;
} POINTL, *PPOINTL;

typedef struct tagSIZE
{
    LONG        cx;
    LONG        cy;
} SIZE, *PSIZE, *LPSIZE;

typedef SIZE               SIZEL;
typedef SIZE               *PSIZEL, *LPSIZEL;

typedef struct tagPOINTS
{

    SHORT   x;
    SHORT   y;



#line 369 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windef.h"
} POINTS, *PPOINTS, *LPPOINTS;





typedef struct _FILETIME {
    DWORD dwLowDateTime;
    DWORD dwHighDateTime;
} FILETIME, *PFILETIME, *LPFILETIME;



































}
#line 416 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windef.h"

#line 418 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windef.h"


#line 156 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windows.h"
#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"












#pragma once
#line 15 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"













#line 29 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"





#line 35 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"





#line 41 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"


extern "C" {
#line 45 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

























































































































#line 167 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"
#line 168 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"











#line 180 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

#line 182 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"




























































typedef struct _OVERLAPPED {
    ULONG_PTR Internal;
    ULONG_PTR InternalHigh;
    union {
        struct {
            DWORD Offset;
            DWORD OffsetHigh;
        } ;
        PVOID Pointer;
    } ;

    HANDLE  hEvent;
} OVERLAPPED, *LPOVERLAPPED;

typedef struct _OVERLAPPED_ENTRY {
    ULONG_PTR lpCompletionKey;
    LPOVERLAPPED lpOverlapped;
    ULONG_PTR Internal;
    DWORD dwNumberOfBytesTransferred;
} OVERLAPPED_ENTRY, *LPOVERLAPPED_ENTRY;

typedef struct _SECURITY_ATTRIBUTES {
    DWORD nLength;
    LPVOID lpSecurityDescriptor;
    BOOL bInheritHandle;
} SECURITY_ATTRIBUTES, *PSECURITY_ATTRIBUTES, *LPSECURITY_ATTRIBUTES;

typedef struct _PROCESS_INFORMATION {
    HANDLE hProcess;
    HANDLE hThread;
    DWORD dwProcessId;
    DWORD dwThreadId;
} PROCESS_INFORMATION, *PPROCESS_INFORMATION, *LPPROCESS_INFORMATION;



















typedef struct _SYSTEMTIME {
    WORD wYear;
    WORD wMonth;
    WORD wDayOfWeek;
    WORD wDay;
    WORD wHour;
    WORD wMinute;
    WORD wSecond;
    WORD wMilliseconds;
} SYSTEMTIME, *PSYSTEMTIME, *LPSYSTEMTIME;


typedef DWORD (__stdcall *PTHREAD_START_ROUTINE)(
    LPVOID lpThreadParameter
    );
typedef PTHREAD_START_ROUTINE LPTHREAD_START_ROUTINE;


typedef void (__stdcall *PFIBER_START_ROUTINE)(
    LPVOID lpFiberParameter
    );
typedef PFIBER_START_ROUTINE LPFIBER_START_ROUTINE;
#line 317 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

typedef RTL_CRITICAL_SECTION CRITICAL_SECTION;
typedef PRTL_CRITICAL_SECTION PCRITICAL_SECTION;
typedef PRTL_CRITICAL_SECTION LPCRITICAL_SECTION;

typedef RTL_CRITICAL_SECTION_DEBUG CRITICAL_SECTION_DEBUG;
typedef PRTL_CRITICAL_SECTION_DEBUG PCRITICAL_SECTION_DEBUG;
typedef PRTL_CRITICAL_SECTION_DEBUG LPCRITICAL_SECTION_DEBUG;







typedef RTL_RUN_ONCE INIT_ONCE;
typedef PRTL_RUN_ONCE PINIT_ONCE;
typedef PRTL_RUN_ONCE LPINIT_ONCE;

























typedef
BOOL
(__stdcall *PINIT_ONCE_FN) (
     PINIT_ONCE InitOnce,
     PVOID Parameter,
     PVOID *Context
    );

__declspec(dllimport)
void
__stdcall
InitOnceInitialize (
     PINIT_ONCE InitOnce
    );

__declspec(dllimport)
BOOL
__stdcall
InitOnceExecuteOnce (
     PINIT_ONCE InitOnce,
      PINIT_ONCE_FN InitFn,
     PVOID Parameter,
     LPVOID *Context
    );

__declspec(dllimport)
BOOL
__stdcall
InitOnceBeginInitialize (
     LPINIT_ONCE lpInitOnce,
     DWORD dwFlags,
     PBOOL fPending,
     LPVOID *lpContext
    );

__declspec(dllimport)
BOOL
__stdcall
InitOnceComplete (
     LPINIT_ONCE lpInitOnce,
     DWORD dwFlags,
     LPVOID lpContext
    );

#line 405 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"





typedef RTL_SRWLOCK SRWLOCK, *PSRWLOCK;



__declspec(dllimport)
void
__stdcall
InitializeSRWLock (
      PSRWLOCK SRWLock
     );

__declspec(dllimport)
void
__stdcall
ReleaseSRWLockExclusive (
      PSRWLOCK SRWLock
     );

__declspec(dllimport)
void
__stdcall
ReleaseSRWLockShared (
      PSRWLOCK SRWLock
     );

__declspec(dllimport)
void
__stdcall
AcquireSRWLockExclusive (
      PSRWLOCK SRWLock
     );

__declspec(dllimport)
void
__stdcall
AcquireSRWLockShared (
      PSRWLOCK SRWLock
     );

__declspec(dllimport)
BOOLEAN
__stdcall
TryAcquireSRWLockExclusive (
     PSRWLOCK SRWLock
    );

__declspec(dllimport)
BOOLEAN
__stdcall
TryAcquireSRWLockShared (
     PSRWLOCK SRWLock
    );





typedef RTL_CONDITION_VARIABLE CONDITION_VARIABLE, *PCONDITION_VARIABLE;

__declspec(dllimport)
void
__stdcall
InitializeConditionVariable (
     PCONDITION_VARIABLE ConditionVariable
    );

__declspec(dllimport)
void
__stdcall
WakeConditionVariable (
     PCONDITION_VARIABLE ConditionVariable
    );

__declspec(dllimport)
void
__stdcall
WakeAllConditionVariable (
     PCONDITION_VARIABLE ConditionVariable
    );

__declspec(dllimport)
BOOL
__stdcall
SleepConditionVariableCS (
     PCONDITION_VARIABLE ConditionVariable,
     PCRITICAL_SECTION CriticalSection,
     DWORD dwMilliseconds
    );

__declspec(dllimport)
BOOL
__stdcall
SleepConditionVariableSRW (
     PCONDITION_VARIABLE ConditionVariable,
     PSRWLOCK SRWLock,
     DWORD dwMilliseconds,
     ULONG Flags
    );













__declspec(dllimport)

PVOID
__stdcall
EncodePointer (
     PVOID Ptr
    );

__declspec(dllimport)

PVOID
__stdcall
DecodePointer (
     PVOID Ptr
    );

__declspec(dllimport)

PVOID
__stdcall
EncodeSystemPointer (
     PVOID Ptr
    );

__declspec(dllimport)

PVOID
__stdcall
DecodeSystemPointer (
     PVOID Ptr
    );


typedef PLDT_ENTRY LPLDT_ENTRY;


#line 558 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"









































































































typedef struct _COMMPROP {
    WORD wPacketLength;
    WORD wPacketVersion;
    DWORD dwServiceMask;
    DWORD dwReserved1;
    DWORD dwMaxTxQueue;
    DWORD dwMaxRxQueue;
    DWORD dwMaxBaud;
    DWORD dwProvSubType;
    DWORD dwProvCapabilities;
    DWORD dwSettableParams;
    DWORD dwSettableBaud;
    WORD wSettableData;
    WORD wSettableStopParity;
    DWORD dwCurrentTxQueue;
    DWORD dwCurrentRxQueue;
    DWORD dwProvSpec1;
    DWORD dwProvSpec2;
    WCHAR wcProvChar[1];
} COMMPROP,*LPCOMMPROP;







typedef struct _COMSTAT {
    DWORD fCtsHold : 1;
    DWORD fDsrHold : 1;
    DWORD fRlsdHold : 1;
    DWORD fXoffHold : 1;
    DWORD fXoffSent : 1;
    DWORD fEof : 1;
    DWORD fTxim : 1;
    DWORD fReserved : 25;
    DWORD cbInQue;
    DWORD cbOutQue;
} COMSTAT, *LPCOMSTAT;
















typedef struct _DCB {
    DWORD DCBlength;      
    DWORD BaudRate;       
    DWORD fBinary: 1;     
    DWORD fParity: 1;     
    DWORD fOutxCtsFlow:1; 
    DWORD fOutxDsrFlow:1; 
    DWORD fDtrControl:2;  
    DWORD fDsrSensitivity:1; 
    DWORD fTXContinueOnXoff: 1; 
    DWORD fOutX: 1;       
    DWORD fInX: 1;        
    DWORD fErrorChar: 1;  
    DWORD fNull: 1;       
    DWORD fRtsControl:2;  
    DWORD fAbortOnError:1; 
    DWORD fDummy2:17;     
    WORD wReserved;       
    WORD XonLim;          
    WORD XoffLim;         
    BYTE ByteSize;        
    BYTE Parity;          
    BYTE StopBits;        
    char XonChar;         
    char XoffChar;        
    char ErrorChar;       
    char EofChar;         
    char EvtChar;         
    WORD wReserved1;      
} DCB, *LPDCB;

typedef struct _COMMTIMEOUTS {
    DWORD ReadIntervalTimeout;          
    DWORD ReadTotalTimeoutMultiplier;   
    DWORD ReadTotalTimeoutConstant;     
    DWORD WriteTotalTimeoutMultiplier;  
    DWORD WriteTotalTimeoutConstant;    
} COMMTIMEOUTS,*LPCOMMTIMEOUTS;

typedef struct _COMMCONFIG {
    DWORD dwSize;               
    WORD wVersion;              
    WORD wReserved;             
    DCB dcb;                    
    DWORD dwProviderSubType;    

    DWORD dwProviderOffset;     

    DWORD dwProviderSize;       
    WCHAR wcProviderData[1];    
} COMMCONFIG,*LPCOMMCONFIG;

typedef struct _SYSTEM_INFO {
    union {
        DWORD dwOemId;          
        struct {
            WORD wProcessorArchitecture;
            WORD wReserved;
        } ;
    } ;
    DWORD dwPageSize;
    LPVOID lpMinimumApplicationAddress;
    LPVOID lpMaximumApplicationAddress;
    DWORD_PTR dwActiveProcessorMask;
    DWORD dwNumberOfProcessors;
    DWORD dwProcessorType;
    DWORD dwAllocationGranularity;
    WORD wProcessorLevel;
    WORD wProcessorRevision;
} SYSTEM_INFO, *LPSYSTEM_INFO;




































typedef struct _MEMORYSTATUS {
    DWORD dwLength;
    DWORD dwMemoryLoad;
    SIZE_T dwTotalPhys;
    SIZE_T dwAvailPhys;
    SIZE_T dwTotalPageFile;
    SIZE_T dwAvailPageFile;
    SIZE_T dwTotalVirtual;
    SIZE_T dwAvailVirtual;
} MEMORYSTATUS, *LPMEMORYSTATUS;

























































































































typedef struct _EXCEPTION_DEBUG_INFO {
    EXCEPTION_RECORD ExceptionRecord;
    DWORD dwFirstChance;
} EXCEPTION_DEBUG_INFO, *LPEXCEPTION_DEBUG_INFO;

typedef struct _CREATE_THREAD_DEBUG_INFO {
    HANDLE hThread;
    LPVOID lpThreadLocalBase;
    LPTHREAD_START_ROUTINE lpStartAddress;
} CREATE_THREAD_DEBUG_INFO, *LPCREATE_THREAD_DEBUG_INFO;

typedef struct _CREATE_PROCESS_DEBUG_INFO {
    HANDLE hFile;
    HANDLE hProcess;
    HANDLE hThread;
    LPVOID lpBaseOfImage;
    DWORD dwDebugInfoFileOffset;
    DWORD nDebugInfoSize;
    LPVOID lpThreadLocalBase;
    LPTHREAD_START_ROUTINE lpStartAddress;
    LPVOID lpImageName;
    WORD fUnicode;
} CREATE_PROCESS_DEBUG_INFO, *LPCREATE_PROCESS_DEBUG_INFO;

typedef struct _EXIT_THREAD_DEBUG_INFO {
    DWORD dwExitCode;
} EXIT_THREAD_DEBUG_INFO, *LPEXIT_THREAD_DEBUG_INFO;

typedef struct _EXIT_PROCESS_DEBUG_INFO {
    DWORD dwExitCode;
} EXIT_PROCESS_DEBUG_INFO, *LPEXIT_PROCESS_DEBUG_INFO;

typedef struct _LOAD_DLL_DEBUG_INFO {
    HANDLE hFile;
    LPVOID lpBaseOfDll;
    DWORD dwDebugInfoFileOffset;
    DWORD nDebugInfoSize;
    LPVOID lpImageName;
    WORD fUnicode;
} LOAD_DLL_DEBUG_INFO, *LPLOAD_DLL_DEBUG_INFO;

typedef struct _UNLOAD_DLL_DEBUG_INFO {
    LPVOID lpBaseOfDll;
} UNLOAD_DLL_DEBUG_INFO, *LPUNLOAD_DLL_DEBUG_INFO;

typedef struct _OUTPUT_DEBUG_STRING_INFO {
    LPSTR lpDebugStringData;
    WORD fUnicode;
    WORD nDebugStringLength;
} OUTPUT_DEBUG_STRING_INFO, *LPOUTPUT_DEBUG_STRING_INFO;

typedef struct _RIP_INFO {
    DWORD dwError;
    DWORD dwType;
} RIP_INFO, *LPRIP_INFO;


typedef struct _DEBUG_EVENT {
    DWORD dwDebugEventCode;
    DWORD dwProcessId;
    DWORD dwThreadId;
    union {
        EXCEPTION_DEBUG_INFO Exception;
        CREATE_THREAD_DEBUG_INFO CreateThread;
        CREATE_PROCESS_DEBUG_INFO CreateProcessInfo;
        EXIT_THREAD_DEBUG_INFO ExitThread;
        EXIT_PROCESS_DEBUG_INFO ExitProcess;
        LOAD_DLL_DEBUG_INFO LoadDll;
        UNLOAD_DLL_DEBUG_INFO UnloadDll;
        OUTPUT_DEBUG_STRING_INFO DebugString;
        RIP_INFO RipInfo;
    } u;
} DEBUG_EVENT, *LPDEBUG_EVENT;






typedef struct _JIT_DEBUG_INFO {
    DWORD dwSize;
    DWORD dwProcessorArchitecture;
    DWORD dwThreadID;
    DWORD dwReserved0;
    ULONG64 lpExceptionAddress;
    ULONG64 lpExceptionRecord;
    ULONG64 lpContextRecord;
} JIT_DEBUG_INFO, *LPJIT_DEBUG_INFO;

typedef JIT_DEBUG_INFO JIT_DEBUG_INFO32, *LPJIT_DEBUG_INFO32;
typedef JIT_DEBUG_INFO JIT_DEBUG_INFO64, *LPJIT_DEBUG_INFO64;


typedef PCONTEXT LPCONTEXT;
typedef PEXCEPTION_RECORD LPEXCEPTION_RECORD;
typedef PEXCEPTION_POINTERS LPEXCEPTION_POINTERS;
#line 1052 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"














#line 1067 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"











































































































































































































typedef struct _OFSTRUCT {
    BYTE cBytes;
    BYTE fFixedDisk;
    WORD nErrCode;
    WORD Reserved1;
    WORD Reserved2;
    CHAR szPathName[128];
} OFSTRUCT, *LPOFSTRUCT, *POFSTRUCT;






















































































































































































































































































































































































































































































































































































































































































































































































































#line 2069 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"




















































































































































































































#line 2282 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
LONG
__stdcall
InterlockedIncrement (
     LONG volatile *lpAddend
    );

__declspec(dllimport)
LONG
__stdcall
InterlockedDecrement (
     LONG volatile *lpAddend
    );

__declspec(dllimport)
LONG
__stdcall
InterlockedExchange (
     LONG volatile *Target,
        LONG Value
    );




__declspec(dllimport)
LONG
__stdcall
InterlockedExchangeAdd (
     LONG volatile *Addend,
        LONG Value
    );

__declspec(dllimport)
LONG
__stdcall
InterlockedCompareExchange (
     LONG volatile *Destination,
        LONG Exchange,
        LONG Comperand
    );



__declspec(dllimport)
LONGLONG
__stdcall
InterlockedCompareExchange64 (
     LONGLONG volatile *Destination,
        LONGLONG Exchange,
        LONGLONG Comperand
    );

#line 2337 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"





__forceinline
LONGLONG
InterlockedAnd64 (
     LONGLONG volatile *Destination,
        LONGLONG Value
    )
{
    LONGLONG Old;

    do {
        Old = *Destination;
    } while (InterlockedCompareExchange64(Destination,
                                          Old & Value,
                                          Old) != Old);

    return Old;
}

__forceinline
LONGLONG
InterlockedOr64 (
     LONGLONG volatile *Destination,
        LONGLONG Value
    )
{
    LONGLONG Old;

    do {
        Old = *Destination;
    } while (InterlockedCompareExchange64(Destination,
                                          Old | Value,
                                          Old) != Old);

    return Old;
}

__forceinline
LONGLONG
InterlockedXor64 (
     LONGLONG volatile *Destination,
        LONGLONG Value
    )
{
    LONGLONG Old;

    do {
        Old = *Destination;
    } while (InterlockedCompareExchange64(Destination,
                                          Old ^ Value,
                                          Old) != Old);

    return Old;
}

__forceinline
LONGLONG
InterlockedIncrement64 (
     LONGLONG volatile *Addend
    )
{
    LONGLONG Old;

    do {
        Old = *Addend;
    } while (InterlockedCompareExchange64(Addend,
                                          Old + 1,
                                          Old) != Old);

    return Old + 1;
}

__forceinline
LONGLONG
InterlockedDecrement64 (
     LONGLONG volatile *Addend
    )
{
    LONGLONG Old;

    do {
        Old = *Addend;
    } while (InterlockedCompareExchange64(Addend,
                                          Old - 1,
                                          Old) != Old);

    return Old - 1;
}

__forceinline
LONGLONG
InterlockedExchange64 (
     LONGLONG volatile *Target,
        LONGLONG Value
    )
{
    LONGLONG Old;

    do {
        Old = *Target;
    } while (InterlockedCompareExchange64(Target,
                                          Value,
                                          Old) != Old);

    return Old;
}

__forceinline
LONGLONG
InterlockedExchangeAdd64(
     LONGLONG volatile *Addend,
        LONGLONG Value
    )
{
    LONGLONG Old;

    do {
        Old = *Addend;
    } while (InterlockedCompareExchange64(Addend,
                                          Old + Value,
                                          Old) != Old);

    return Old;
}

#line 2467 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"


#line 2470 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"







__forceinline
PVOID

__cdecl
#line 2482 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"
__InlineInterlockedCompareExchangePointer (
      PVOID volatile *Destination,
     PVOID ExChange,
     PVOID Comperand
    )
{
    return((PVOID)(LONG_PTR)InterlockedCompareExchange((LONG volatile *)Destination, (LONG)(LONG_PTR)ExChange, (LONG)(LONG_PTR)Comperand));
}








#line 2499 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"














#line 2514 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"



__declspec(dllimport)
void
__stdcall
InitializeSListHead (
     PSLIST_HEADER ListHead
    );

__declspec(dllimport)
PSINGLE_LIST_ENTRY
__stdcall
InterlockedPopEntrySList (
     PSLIST_HEADER ListHead
    );

__declspec(dllimport)
PSINGLE_LIST_ENTRY
__stdcall
InterlockedPushEntrySList (
     PSLIST_HEADER ListHead,
     PSINGLE_LIST_ENTRY ListEntry
    );

__declspec(dllimport)
PSINGLE_LIST_ENTRY
__stdcall
InterlockedFlushSList (
     PSLIST_HEADER ListHead
    );

__declspec(dllimport)
USHORT
__stdcall
QueryDepthSList (
     PSLIST_HEADER ListHead
    );

#line 2554 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

#line 2556 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

#line 2558 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
FreeResource(
     HGLOBAL hResData
    );

__declspec(dllimport)
LPVOID
__stdcall
LockResource(
     HGLOBAL hResData
    );






int



#line 2583 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"
__stdcall
#line 2585 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"


#line 2588 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"
WinMain (
     HINSTANCE hInstance,
     HINSTANCE hPrevInstance,
     LPSTR lpCmdLine,
     int nShowCmd
    );

int


#line 2599 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"
__stdcall
#line 2601 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"
wWinMain(
     HINSTANCE hInstance,
     HINSTANCE hPrevInstance,
     LPWSTR lpCmdLine,
     int nShowCmd
    );

__declspec(dllimport)
BOOL
__stdcall
FreeLibrary (
     HMODULE hLibModule
    );


__declspec(dllimport)
__declspec(noreturn)
void
__stdcall
FreeLibraryAndExitThread (
     HMODULE hLibModule,
     DWORD dwExitCode
    );

__declspec(dllimport)
BOOL
__stdcall
DisableThreadLibraryCalls (
     HMODULE hLibModule
    );

__declspec(dllimport)
FARPROC
__stdcall
GetProcAddress (
     HMODULE hModule,
     LPCSTR lpProcName
    );

__declspec(dllimport)
DWORD
__stdcall
GetVersion (
    void
    );

__declspec(dllimport)

HGLOBAL
__stdcall
GlobalAlloc (
     UINT uFlags,
     SIZE_T dwBytes
    );

__declspec(dllimport)

HGLOBAL
__stdcall
GlobalReAlloc (
     HGLOBAL hMem,
     SIZE_T dwBytes,
     UINT uFlags
    );

__declspec(dllimport)
SIZE_T
__stdcall
GlobalSize (
     HGLOBAL hMem
    );

__declspec(dllimport)
UINT
__stdcall
GlobalFlags (
     HGLOBAL hMem
    );

__declspec(dllimport)

LPVOID
__stdcall
GlobalLock (
     HGLOBAL hMem
    );

__declspec(dllimport)

HGLOBAL
__stdcall
GlobalHandle (
     LPCVOID pMem
    );

__declspec(dllimport)
BOOL
__stdcall
GlobalUnlock(
     HGLOBAL hMem
    );

__declspec(dllimport)

HGLOBAL
__stdcall
GlobalFree(
     HGLOBAL hMem
    );

__declspec(dllimport)
SIZE_T
__stdcall
GlobalCompact(
     DWORD dwMinFree
    );

__declspec(dllimport)
void
__stdcall
GlobalFix(
     HGLOBAL hMem
    );

__declspec(dllimport)
void
__stdcall
GlobalUnfix(
     HGLOBAL hMem
    );

__declspec(dllimport)

LPVOID
__stdcall
GlobalWire(
     HGLOBAL hMem
    );

__declspec(dllimport)
BOOL
__stdcall
GlobalUnWire(
     HGLOBAL hMem
    );

__declspec(dllimport)
void
__stdcall
GlobalMemoryStatus(
     LPMEMORYSTATUS lpBuffer
    );

typedef struct _MEMORYSTATUSEX {
    DWORD dwLength;
    DWORD dwMemoryLoad;
    DWORDLONG ullTotalPhys;
    DWORDLONG ullAvailPhys;
    DWORDLONG ullTotalPageFile;
    DWORDLONG ullAvailPageFile;
    DWORDLONG ullTotalVirtual;
    DWORDLONG ullAvailVirtual;
    DWORDLONG ullAvailExtendedVirtual;
} MEMORYSTATUSEX, *LPMEMORYSTATUSEX;

__declspec(dllimport)
BOOL
__stdcall
GlobalMemoryStatusEx(
     LPMEMORYSTATUSEX lpBuffer
    );

__declspec(dllimport)

HLOCAL
__stdcall
LocalAlloc(
     UINT uFlags,
     SIZE_T uBytes
    );

__declspec(dllimport)

HLOCAL
__stdcall
LocalReAlloc(
     HLOCAL hMem,
     SIZE_T uBytes,
     UINT uFlags
    );

__declspec(dllimport)

LPVOID
__stdcall
LocalLock(
     HLOCAL hMem
    );

__declspec(dllimport)

HLOCAL
__stdcall
LocalHandle(
     LPCVOID pMem
    );

__declspec(dllimport)
BOOL
__stdcall
LocalUnlock(
     HLOCAL hMem
    );

__declspec(dllimport)
SIZE_T
__stdcall
LocalSize(
     HLOCAL hMem
    );

__declspec(dllimport)
UINT
__stdcall
LocalFlags(
     HLOCAL hMem
    );

__declspec(dllimport)
HLOCAL
__stdcall
LocalFree(
     HLOCAL hMem
    );

__declspec(dllimport)
SIZE_T
__stdcall
LocalShrink(
     HLOCAL hMem,
     UINT cbNewSize
    );

__declspec(dllimport)
SIZE_T
__stdcall
LocalCompact(
     UINT uMinFree
    );

__declspec(dllimport)
BOOL
__stdcall
FlushInstructionCache(
     HANDLE hProcess,
     LPCVOID lpBaseAddress,
     SIZE_T dwSize
    );



__declspec(dllimport)
void
__stdcall
FlushProcessWriteBuffers(
    void
    );

__declspec(dllimport)
BOOL
__stdcall
QueryThreadCycleTime (
     HANDLE ThreadHandle,
     PULONG64 CycleTime
    );

__declspec(dllimport)
BOOL
__stdcall
QueryProcessCycleTime (
     HANDLE ProcessHandle,
     PULONG64 CycleTime
    );

__declspec(dllimport)
BOOL
__stdcall
QueryIdleProcessorCycleTime (
     PULONG BufferLength,
     PULONG64 ProcessorIdleCycleTime
    );

#line 2894 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"



__declspec(dllimport)
BOOL
__stdcall
QueryIdleProcessorCycleTimeEx (
     USHORT Group,
     PULONG BufferLength,
     PULONG64 ProcessorIdleCycleTime
    );

__declspec(dllimport)
BOOL
__stdcall
QueryUnbiasedInterruptTime (
     PULONGLONG UnbiasedTime
    );

__declspec(dllimport)
BOOL
__stdcall
GetProcessorSystemCycleTime (
     USHORT Group,
     PSYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION Buffer,
     PDWORD ReturnedLength
    );

#line 2923 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)

LPVOID
__stdcall
VirtualAlloc(
     LPVOID lpAddress,
         SIZE_T dwSize,
         DWORD flAllocationType,
         DWORD flProtect
    );

 
#line 2937 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

 
#line 2940 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

 
#line 2943 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"
__declspec(dllimport)
BOOL
__stdcall
VirtualFree(
     LPVOID lpAddress,
     SIZE_T dwSize,
     DWORD dwFreeType
    );

__declspec(dllimport)
BOOL
__stdcall
VirtualProtect(
      LPVOID lpAddress,
      SIZE_T dwSize,
      DWORD flNewProtect,
     PDWORD lpflOldProtect
    );

__declspec(dllimport)
SIZE_T
__stdcall
VirtualQuery(
     LPCVOID lpAddress,
     PMEMORY_BASIC_INFORMATION lpBuffer,
         SIZE_T dwLength
    );

__declspec(dllimport)

LPVOID
__stdcall
VirtualAllocEx(
         HANDLE hProcess,
     LPVOID lpAddress,
         SIZE_T dwSize,
         DWORD flAllocationType,
         DWORD flProtect
    );



__declspec(dllimport)

LPVOID
__stdcall
VirtualAllocExNuma(
         HANDLE hProcess,
     LPVOID lpAddress,
         SIZE_T dwSize,
         DWORD  flAllocationType,
         DWORD  flProtect,
         DWORD  nndPreferred
    );

#line 2999 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
UINT
__stdcall
GetWriteWatch(
     DWORD dwFlags,
     PVOID lpBaseAddress,
     SIZE_T dwRegionSize,
     PVOID *lpAddresses,
     ULONG_PTR *lpdwCount,
     PULONG lpdwGranularity
    );

__declspec(dllimport)
UINT
__stdcall
ResetWriteWatch(
     LPVOID lpBaseAddress,
     SIZE_T dwRegionSize
    );

__declspec(dllimport)
SIZE_T
__stdcall
GetLargePageMinimum(
    void
    );

__declspec(dllimport)
UINT
__stdcall
EnumSystemFirmwareTables(
     DWORD FirmwareTableProviderSignature,
     PVOID pFirmwareTableEnumBuffer,
     DWORD BufferSize
    );

__declspec(dllimport)
UINT
__stdcall
GetSystemFirmwareTable(
     DWORD FirmwareTableProviderSignature,
     DWORD FirmwareTableID,
     PVOID pFirmwareTableBuffer,
     DWORD BufferSize
    );

__declspec(dllimport)
BOOL
__stdcall
GetPhysicallyInstalledSystemMemory(
     PULONGLONG TotalMemoryInKilobytes
    );

 
#line 3055 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

 
#line 3058 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

 
#line 3061 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

 
#line 3064 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"
__declspec(dllimport)
BOOL
__stdcall
VirtualFreeEx(
     HANDLE hProcess,
     LPVOID lpAddress,
     SIZE_T dwSize,
     DWORD  dwFreeType
    );

__declspec(dllimport)
BOOL
__stdcall
VirtualProtectEx(
      HANDLE hProcess,
      LPVOID lpAddress,
      SIZE_T dwSize,
      DWORD flNewProtect,
     PDWORD lpflOldProtect
    );

__declspec(dllimport)
SIZE_T
__stdcall
VirtualQueryEx(
         HANDLE hProcess,
     LPCVOID lpAddress,
     PMEMORY_BASIC_INFORMATION lpBuffer,
         SIZE_T dwLength
    );

__declspec(dllimport)

HANDLE
__stdcall
HeapCreate(
     DWORD flOptions,
     SIZE_T dwInitialSize,
     SIZE_T dwMaximumSize
    );

__declspec(dllimport)
BOOL
__stdcall
HeapDestroy(
     HANDLE hHeap
    );

__declspec(dllimport)

LPVOID
__stdcall
HeapAlloc(
     HANDLE hHeap,
     DWORD dwFlags,
     SIZE_T dwBytes
    );

__declspec(dllimport)

LPVOID
__stdcall
HeapReAlloc(
     HANDLE hHeap,
        DWORD dwFlags,
     LPVOID lpMem,
        SIZE_T dwBytes
    );

__declspec(dllimport)
BOOL
__stdcall
HeapFree(
     HANDLE hHeap,
        DWORD dwFlags,
         LPVOID lpMem
    );

__declspec(dllimport)
SIZE_T
__stdcall
HeapSize(
     HANDLE hHeap,
     DWORD dwFlags,
     LPCVOID lpMem
    );

__declspec(dllimport)
BOOL
__stdcall
HeapValidate(
         HANDLE hHeap,
         DWORD dwFlags,
     LPCVOID lpMem
    );

__declspec(dllimport)
SIZE_T
__stdcall
HeapCompact(
     HANDLE hHeap,
     DWORD dwFlags
    );

__declspec(dllimport)

HANDLE
__stdcall
GetProcessHeap( void );

__declspec(dllimport)
DWORD
__stdcall
GetProcessHeaps(
     DWORD NumberOfHeaps,
     PHANDLE ProcessHeaps
    );

typedef struct _PROCESS_HEAP_ENTRY {
    PVOID lpData;
    DWORD cbData;
    BYTE cbOverhead;
    BYTE iRegionIndex;
    WORD wFlags;
    union {
        struct {
            HANDLE hMem;
            DWORD dwReserved[ 3 ];
        } Block;
        struct {
            DWORD dwCommittedSize;
            DWORD dwUnCommittedSize;
            LPVOID lpFirstBlock;
            LPVOID lpLastBlock;
        } Region;
    } ;
} PROCESS_HEAP_ENTRY, *LPPROCESS_HEAP_ENTRY, *PPROCESS_HEAP_ENTRY;







__declspec(dllimport)
BOOL
__stdcall
HeapLock(
     HANDLE hHeap
    );

__declspec(dllimport)
BOOL
__stdcall
HeapUnlock(
     HANDLE hHeap
    );


__declspec(dllimport)
BOOL
__stdcall
HeapWalk(
        HANDLE hHeap,
     LPPROCESS_HEAP_ENTRY lpEntry
    );

__declspec(dllimport)
BOOL
__stdcall
HeapSetInformation (
     HANDLE HeapHandle,
     HEAP_INFORMATION_CLASS HeapInformationClass,
     PVOID HeapInformation,
     SIZE_T HeapInformationLength
    );

__declspec(dllimport)
BOOL
__stdcall
HeapQueryInformation (
     HANDLE HeapHandle,
     HEAP_INFORMATION_CLASS HeapInformationClass,
     PVOID HeapInformation,
     SIZE_T HeapInformationLength,
     PSIZE_T ReturnLength
    );













#line 3265 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

#line 3267 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
GetBinaryTypeA(
      LPCSTR lpApplicationName,
     LPDWORD  lpBinaryType
    );
__declspec(dllimport)
BOOL
__stdcall
GetBinaryTypeW(
      LPCWSTR lpApplicationName,
     LPDWORD  lpBinaryType
    );




#line 3287 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
DWORD
__stdcall
GetShortPathNameA(
     LPCSTR lpszLongPath,
     LPSTR  lpszShortPath,
     DWORD cchBuffer
    );
__declspec(dllimport)
DWORD
__stdcall
GetShortPathNameW(
     LPCWSTR lpszLongPath,
     LPWSTR  lpszShortPath,
     DWORD cchBuffer
    );




#line 3309 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
DWORD
__stdcall
GetLongPathNameA(
     LPCSTR lpszShortPath,
     LPSTR  lpszLongPath,
     DWORD cchBuffer
    );
__declspec(dllimport)
DWORD
__stdcall
GetLongPathNameW(
     LPCWSTR lpszShortPath,
     LPWSTR  lpszLongPath,
     DWORD cchBuffer
    );




#line 3331 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"



__declspec(dllimport)
DWORD
__stdcall
GetLongPathNameTransactedA(
         LPCSTR lpszShortPath,
     LPSTR  lpszLongPath,
         DWORD cchBuffer,
         HANDLE hTransaction
    );
__declspec(dllimport)
DWORD
__stdcall
GetLongPathNameTransactedW(
         LPCWSTR lpszShortPath,
     LPWSTR  lpszLongPath,
         DWORD cchBuffer,
         HANDLE hTransaction
    );




#line 3357 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

#line 3359 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
GetProcessAffinityMask(
      HANDLE hProcess,
     PDWORD_PTR lpProcessAffinityMask,
     PDWORD_PTR lpSystemAffinityMask
    );

__declspec(dllimport)
BOOL
__stdcall
SetProcessAffinityMask(
     HANDLE hProcess,
     DWORD_PTR dwProcessAffinityMask
    );



BOOL
__stdcall
GetProcessGroupAffinity(
     HANDLE hProcess,
     PUSHORT GroupCount,
     PUSHORT GroupArray
    );

#line 3388 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"



__declspec(dllimport)
BOOL
__stdcall
GetProcessHandleCount(
      HANDLE hProcess,
     PDWORD pdwHandleCount
    );

#line 3400 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
GetProcessTimes(
      HANDLE hProcess,
     LPFILETIME lpCreationTime,
     LPFILETIME lpExitTime,
     LPFILETIME lpKernelTime,
     LPFILETIME lpUserTime
    );

__declspec(dllimport)
BOOL
__stdcall
GetProcessIoCounters(
      HANDLE hProcess,
     PIO_COUNTERS lpIoCounters
    );

__declspec(dllimport)
BOOL
__stdcall
GetProcessWorkingSetSize(
      HANDLE hProcess,
     PSIZE_T lpMinimumWorkingSetSize,
     PSIZE_T lpMaximumWorkingSetSize
    );

__declspec(dllimport)
BOOL
__stdcall
GetProcessWorkingSetSizeEx(
      HANDLE hProcess,
     PSIZE_T lpMinimumWorkingSetSize,
     PSIZE_T lpMaximumWorkingSetSize,
     PDWORD Flags
    );

__declspec(dllimport)
BOOL
__stdcall
SetProcessWorkingSetSize(
     HANDLE hProcess,
     SIZE_T dwMinimumWorkingSetSize,
     SIZE_T dwMaximumWorkingSetSize
    );

__declspec(dllimport)
BOOL
__stdcall
SetProcessWorkingSetSizeEx(
     HANDLE hProcess,
     SIZE_T dwMinimumWorkingSetSize,
     SIZE_T dwMaximumWorkingSetSize,
     DWORD Flags
    );





__declspec(dllimport)
BOOL
__stdcall
SetProcessAffinityUpdateMode(
     HANDLE hProcess,
     DWORD dwFlags
    );

__declspec(dllimport)
BOOL
__stdcall
QueryProcessAffinityUpdateMode(
     HANDLE hProcess,
     LPDWORD lpdwFlags
    );

#line 3479 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
HANDLE
__stdcall
OpenProcess(
     DWORD dwDesiredAccess,
     BOOL bInheritHandle,
     DWORD dwProcessId
    );

__declspec(dllimport)

HANDLE
__stdcall
GetCurrentProcess(
    void
    );

__declspec(dllimport)
DWORD
__stdcall
GetCurrentProcessId(
    void
    );

__declspec(dllimport)
__declspec(noreturn)
void
__stdcall
ExitProcess(
     UINT uExitCode
    );

__declspec(dllimport)
BOOL
__stdcall
TerminateProcess(
     HANDLE hProcess,
     UINT uExitCode
    );

__declspec(dllimport)
BOOL
__stdcall
GetExitCodeProcess(
      HANDLE hProcess,
     LPDWORD lpExitCode
    );

__declspec(dllimport)
void
__stdcall
FatalExit(
     int ExitCode
    );

__declspec(dllimport)


LPCH
__stdcall
GetEnvironmentStrings(
    void
    );

__declspec(dllimport)


LPWCH
__stdcall
GetEnvironmentStringsW(
    void
    );





#line 3558 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
SetEnvironmentStringsA(
      LPCH NewEnvironment
    );
__declspec(dllimport)
BOOL
__stdcall
SetEnvironmentStringsW(
      LPWCH NewEnvironment
    );




#line 3576 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
FreeEnvironmentStringsA(
      LPCH
    );
__declspec(dllimport)
BOOL
__stdcall
FreeEnvironmentStringsW(
      LPWCH
    );




#line 3594 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
void
__stdcall
RaiseException(
     DWORD dwExceptionCode,
     DWORD dwExceptionFlags,
     DWORD nNumberOfArguments,
     const ULONG_PTR *lpArguments
    );

__declspec(dllimport)
void
__stdcall
RaiseFailFastException(
     PEXCEPTION_RECORD pExceptionRecord,
     PCONTEXT pContextRecord,
     DWORD dwFlags
    );


__declspec(dllimport)
LONG
__stdcall
UnhandledExceptionFilter(
     struct _EXCEPTION_POINTERS *ExceptionInfo
    );

typedef LONG (__stdcall *PTOP_LEVEL_EXCEPTION_FILTER)(
     struct _EXCEPTION_POINTERS *ExceptionInfo
    );
typedef PTOP_LEVEL_EXCEPTION_FILTER LPTOP_LEVEL_EXCEPTION_FILTER;

__declspec(dllimport)
LPTOP_LEVEL_EXCEPTION_FILTER
__stdcall
SetUnhandledExceptionFilter(
     LPTOP_LEVEL_EXCEPTION_FILTER lpTopLevelExceptionFilter
    );









__declspec(dllimport)

LPVOID
__stdcall
CreateFiber(
         SIZE_T dwStackSize,
         LPFIBER_START_ROUTINE lpStartAddress,
     LPVOID lpParameter
    );

__declspec(dllimport)

LPVOID
__stdcall
CreateFiberEx(
         SIZE_T dwStackCommitSize,
         SIZE_T dwStackReserveSize,
         DWORD dwFlags,
         LPFIBER_START_ROUTINE lpStartAddress,
     LPVOID lpParameter
    );

__declspec(dllimport)
void
__stdcall
DeleteFiber(
     LPVOID lpFiber
    );

__declspec(dllimport)

LPVOID
__stdcall
ConvertThreadToFiber(
     LPVOID lpParameter
    );

__declspec(dllimport)

LPVOID
__stdcall
ConvertThreadToFiberEx(
     LPVOID lpParameter,
         DWORD dwFlags
    );



__declspec(dllimport)
BOOL
__stdcall
ConvertFiberToThread(
    void
    );

#line 3698 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"



__declspec(dllimport)
BOOL
__stdcall
IsThreadAFiber(
    void
    );

#line 3709 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
void
__stdcall
SwitchToFiber(
     LPVOID lpFiber
    );

__declspec(dllimport)
BOOL
__stdcall
SwitchToThread(
    void
    );









typedef void *PUMS_CONTEXT;

typedef void *PUMS_COMPLETION_LIST;

typedef enum _RTL_UMS_THREAD_INFO_CLASS UMS_THREAD_INFO_CLASS, *PUMS_THREAD_INFO_CLASS;

typedef enum _RTL_UMS_SCHEDULER_REASON UMS_SCHEDULER_REASON;

typedef PRTL_UMS_SCHEDULER_ENTRY_POINT PUMS_SCHEDULER_ENTRY_POINT;

typedef struct _UMS_SCHEDULER_STARTUP_INFO {

    
    
    
    ULONG UmsVersion;

    
    
    
    PUMS_COMPLETION_LIST CompletionList;

    
    
    
    
    PUMS_SCHEDULER_ENTRY_POINT SchedulerProc;

    
    
    
    PVOID SchedulerParam;

} UMS_SCHEDULER_STARTUP_INFO, *PUMS_SCHEDULER_STARTUP_INFO;


__declspec(dllimport)
BOOL
__stdcall
CreateUmsCompletionList(
     PUMS_COMPLETION_LIST* UmsCompletionList
    );

__declspec(dllimport)
BOOL
__stdcall
DequeueUmsCompletionListItems(
     PUMS_COMPLETION_LIST UmsCompletionList,
     DWORD WaitTimeOut,
     PUMS_CONTEXT* UmsThreadList
    );

__declspec(dllimport)
BOOL
__stdcall
GetUmsCompletionListEvent(
     PUMS_COMPLETION_LIST UmsCompletionList,
     PHANDLE UmsCompletionEvent
    );

__declspec(dllimport)
BOOL
__stdcall
ExecuteUmsThread(
     PUMS_CONTEXT UmsThread
    );

__declspec(dllimport)
BOOL
__stdcall
UmsThreadYield(
     PVOID SchedulerParam
    );

__declspec(dllimport)
BOOL
__stdcall
DeleteUmsCompletionList(
     PUMS_COMPLETION_LIST UmsCompletionList
    );

__declspec(dllimport)
PUMS_CONTEXT
__stdcall
GetCurrentUmsThread(
    void
    );

__declspec(dllimport)
PUMS_CONTEXT
__stdcall
GetNextUmsListItem(
     PUMS_CONTEXT UmsContext
    );

__declspec(dllimport)
BOOL
__stdcall
QueryUmsThreadInformation(
     PUMS_CONTEXT UmsThread,
     UMS_THREAD_INFO_CLASS UmsThreadInfoClass,
     PVOID UmsThreadInformation,
     ULONG UmsThreadInformationLength,
     PULONG ReturnLength
    );

__declspec(dllimport)
BOOL
__stdcall
SetUmsThreadInformation(
     PUMS_CONTEXT UmsThread,
     UMS_THREAD_INFO_CLASS UmsThreadInfoClass,
     PVOID UmsThreadInformation,
     ULONG UmsThreadInformationLength
    );

__declspec(dllimport)
BOOL
__stdcall
DeleteUmsThreadContext(
     PUMS_CONTEXT UmsThread
    );

__declspec(dllimport)
BOOL
__stdcall
CreateUmsThreadContext(
     PUMS_CONTEXT *lpUmsThread
    );

__declspec(dllimport)
BOOL
__stdcall
EnterUmsSchedulingMode(
     PUMS_SCHEDULER_STARTUP_INFO SchedulerStartupInfo
    );

#line 3870 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"





#line 3876 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

typedef struct _PROC_THREAD_ATTRIBUTE_LIST *PPROC_THREAD_ATTRIBUTE_LIST, *LPPROC_THREAD_ATTRIBUTE_LIST;

__declspec(dllimport)

HANDLE
__stdcall
CreateThread(
      LPSECURITY_ATTRIBUTES lpThreadAttributes,
          SIZE_T dwStackSize,
          LPTHREAD_START_ROUTINE lpStartAddress,
        LPVOID lpParameter,
          DWORD dwCreationFlags,
     LPDWORD lpThreadId
    );

__declspec(dllimport)

HANDLE
__stdcall
CreateRemoteThread(
          HANDLE hProcess,
      LPSECURITY_ATTRIBUTES lpThreadAttributes,
          SIZE_T dwStackSize,
          LPTHREAD_START_ROUTINE lpStartAddress,
      LPVOID lpParameter,
          DWORD dwCreationFlags,
     LPDWORD lpThreadId
    );

__declspec(dllimport)

HANDLE
__stdcall
CreateRemoteThreadEx(
          HANDLE hProcess,
      LPSECURITY_ATTRIBUTES lpThreadAttributes,
          SIZE_T dwStackSize,
          LPTHREAD_START_ROUTINE lpStartAddress,
      LPVOID lpParameter,
          DWORD dwCreationFlags,
      LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList,
     LPDWORD lpThreadId
    );

__declspec(dllimport)

HANDLE
__stdcall
GetCurrentThread(
    void
    );

__declspec(dllimport)
DWORD
__stdcall
GetCurrentThreadId(
    void
    );

__declspec(dllimport)
BOOL
__stdcall
SetThreadStackGuarantee (
     PULONG StackSizeInBytes
    );

__declspec(dllimport)
DWORD
__stdcall
GetProcessIdOfThread(
     HANDLE Thread
    );



__declspec(dllimport)
DWORD
__stdcall
GetThreadId(
     HANDLE Thread
    );

#line 3960 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
DWORD
__stdcall
GetProcessId(
     HANDLE Process
    );

__declspec(dllimport)
DWORD
__stdcall
GetCurrentProcessorNumber(
    void
    );


__declspec(dllimport)
void
__stdcall
GetCurrentProcessorNumberEx(
     PPROCESSOR_NUMBER ProcNumber
    );
#line 3983 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"


__declspec(dllimport)
BOOL
__stdcall
GetThreadGroupAffinity(
     HANDLE hThread,
     PGROUP_AFFINITY GroupAffinity
    );
#line 3993 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
DWORD_PTR
__stdcall
SetThreadAffinityMask(
     HANDLE hThread,
     DWORD_PTR dwThreadAffinityMask
    );


__declspec(dllimport)
BOOL
__stdcall
SetThreadGroupAffinity(
     HANDLE hThread,
     const GROUP_AFFINITY *GroupAffinity,
     PGROUP_AFFINITY PreviousGroupAffinity
    );

__declspec(dllimport)
BOOL
__stdcall
SetThreadIdealProcessorEx (
     HANDLE hThread,
     PPROCESSOR_NUMBER lpIdealProcessor,
     PPROCESSOR_NUMBER lpPreviousIdealProcessor
    );

__declspec(dllimport)
BOOL
__stdcall
GetThreadIdealProcessorEx (
     HANDLE hThread,
     PPROCESSOR_NUMBER lpIdealProcessor
    );

#line 4030 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"


__declspec(dllimport)
DWORD
__stdcall
SetThreadIdealProcessor(
     HANDLE hThread,
     DWORD dwIdealProcessor
    );
#line 4040 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"






__declspec(dllimport)
BOOL
__stdcall
SetProcessDEPPolicy(
     DWORD dwFlags
    );

__declspec(dllimport)
BOOL
__stdcall
GetProcessDEPPolicy(
     HANDLE hProcess,
     LPDWORD lpFlags,
     PBOOL lpPermanent
    );

#line 4063 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
SetProcessPriorityBoost(
     HANDLE hProcess,
     BOOL bDisablePriorityBoost
    );

__declspec(dllimport)
BOOL
__stdcall
GetProcessPriorityBoost(
      HANDLE hProcess,
     PBOOL  pDisablePriorityBoost
    );

__declspec(dllimport)
BOOL
__stdcall
RequestWakeupLatency(
     LATENCY_TIME latency
    );

__declspec(dllimport)
BOOL
__stdcall
IsSystemResumeAutomatic(
    void
    );

__declspec(dllimport)

HANDLE
__stdcall
OpenThread(
     DWORD dwDesiredAccess,
     BOOL bInheritHandle,
     DWORD dwThreadId
    );

__declspec(dllimport)
BOOL
__stdcall
SetThreadPriority(
     HANDLE hThread,
     int nPriority
    );

__declspec(dllimport)
BOOL
__stdcall
SetThreadPriorityBoost(
     HANDLE hThread,
     BOOL bDisablePriorityBoost
    );

__declspec(dllimport)
BOOL
__stdcall
GetThreadPriorityBoost(
      HANDLE hThread,
     PBOOL pDisablePriorityBoost
    );

__declspec(dllimport)
int
__stdcall
GetThreadPriority(
     HANDLE hThread
    );

__declspec(dllimport)
BOOL
__stdcall
GetThreadTimes(
      HANDLE hThread,
     LPFILETIME lpCreationTime,
     LPFILETIME lpExitTime,
     LPFILETIME lpKernelTime,
     LPFILETIME lpUserTime
    );



__declspec(dllimport)
BOOL
__stdcall
GetThreadIOPendingFlag(
      HANDLE hThread,
     PBOOL  lpIOIsPending
    );

#line 4157 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
__declspec(noreturn)
void
__stdcall
ExitThread(
     DWORD dwExitCode
    );

__declspec(dllimport)
BOOL
__stdcall
TerminateThread(
     HANDLE hThread,
     DWORD dwExitCode
    );

__declspec(dllimport)

BOOL
__stdcall
GetExitCodeThread(
      HANDLE hThread,
     LPDWORD lpExitCode
    );

__declspec(dllimport)
BOOL
__stdcall
GetThreadSelectorEntry(
      HANDLE hThread,
      DWORD dwSelector,
     LPLDT_ENTRY lpSelectorEntry
    );

__declspec(dllimport)
EXECUTION_STATE
__stdcall
SetThreadExecutionState(
     EXECUTION_STATE esFlags
    );



typedef struct _REASON_CONTEXT {
    ULONG Version;
    DWORD Flags;
    union {
        struct {
            HMODULE LocalizedReasonModule;
            ULONG LocalizedReasonId;
            ULONG ReasonStringCount;
            LPWSTR *ReasonStrings;

        } Detailed;

        LPWSTR SimpleReasonString;
    } Reason;
} REASON_CONTEXT, *PREASON_CONTEXT;





typedef REASON_CONTEXT POWER_REQUEST_CONTEXT, *PPOWER_REQUEST_CONTEXT, *LPPOWER_REQUEST_CONTEXT;

__declspec(dllimport)
HANDLE
__stdcall
PowerCreateRequest (
     PREASON_CONTEXT Context
    );

__declspec(dllimport)
BOOL
__stdcall
PowerSetRequest (
     HANDLE PowerRequest,
     POWER_REQUEST_TYPE RequestType
    );

__declspec(dllimport)
BOOL
__stdcall
PowerClearRequest (
     HANDLE PowerRequest,
     POWER_REQUEST_TYPE RequestType
    );

#line 4247 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"




__declspec(dllimport)

DWORD
__stdcall
GetLastError(
    void
    );
#line 4259 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
void
__stdcall
SetLastError(
     DWORD dwErrCode
    );

















#line 4284 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"
#line 4285 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"



__declspec(dllimport)
BOOL
__stdcall
GetOverlappedResult(
      HANDLE hFile,
      LPOVERLAPPED lpOverlapped,
     LPDWORD lpNumberOfBytesTransferred,
      BOOL bWait
    );

__declspec(dllimport)

HANDLE
__stdcall
CreateIoCompletionPort(
         HANDLE FileHandle,
     HANDLE ExistingCompletionPort,
         ULONG_PTR CompletionKey,
         DWORD NumberOfConcurrentThreads
    );

__declspec(dllimport)
BOOL
__stdcall
GetQueuedCompletionStatus(
      HANDLE CompletionPort,
     LPDWORD lpNumberOfBytesTransferred,
     PULONG_PTR lpCompletionKey,
     LPOVERLAPPED *lpOverlapped,
      DWORD dwMilliseconds
    );



__declspec(dllimport)
BOOL
__stdcall
GetQueuedCompletionStatusEx(
      HANDLE CompletionPort,
     LPOVERLAPPED_ENTRY lpCompletionPortEntries,
      ULONG ulCount,
     PULONG ulNumEntriesRemoved,
      DWORD dwMilliseconds,
      BOOL fAlertable
    );

#line 4335 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
PostQueuedCompletionStatus(
         HANDLE CompletionPort,
         DWORD dwNumberOfBytesTransferred,
         ULONG_PTR dwCompletionKey,
     LPOVERLAPPED lpOverlapped
    );



















__declspec(dllimport)
BOOL
__stdcall
SetFileCompletionNotificationModes(
     HANDLE FileHandle,
     UCHAR Flags
    );

__declspec(dllimport)
BOOL
__stdcall
SetFileIoOverlappedRange(
     HANDLE FileHandle,
     PUCHAR OverlappedRangeStart,
     ULONG Length
    );

#line 4382 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"






__declspec(dllimport)
UINT
__stdcall
GetErrorMode(
    void
    );

__declspec(dllimport)
UINT
__stdcall
SetErrorMode(
     UINT uMode
    );





__declspec(dllimport)
DWORD
__stdcall
GetThreadErrorMode(
    void
    );

__declspec(dllimport)
BOOL
__stdcall
SetThreadErrorMode(
     DWORD dwNewMode,
     LPDWORD lpOldMode
    );

__declspec(dllimport)
BOOL
__stdcall
ReadProcessMemory(
          HANDLE hProcess,
          LPCVOID lpBaseAddress,
     LPVOID lpBuffer,
          SIZE_T nSize,
     SIZE_T * lpNumberOfBytesRead
    );

__declspec(dllimport)
BOOL
__stdcall
WriteProcessMemory(
          HANDLE hProcess,
          LPVOID lpBaseAddress,
     LPCVOID lpBuffer,
          SIZE_T nSize,
     SIZE_T * lpNumberOfBytesWritten
    );


__declspec(dllimport)
BOOL
__stdcall
GetThreadContext(
        HANDLE hThread,
     LPCONTEXT lpContext
    );

__declspec(dllimport)
BOOL
__stdcall
SetThreadContext(
     HANDLE hThread,
     const CONTEXT *lpContext
    );

__declspec(dllimport)
BOOL
__stdcall
Wow64GetThreadContext(
        HANDLE hThread,
     PWOW64_CONTEXT lpContext
    );



__declspec(dllimport)
BOOL
__stdcall
Wow64GetThreadSelectorEntry(
     HANDLE hThread,
     DWORD dwSelector,
     PWOW64_LDT_ENTRY lpSelectorEntry
    );

#line 4480 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
Wow64SetThreadContext(
     HANDLE hThread,
     const WOW64_CONTEXT *lpContext
    );

#line 4490 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
DWORD
__stdcall
SuspendThread(
     HANDLE hThread
    );

__declspec(dllimport)
DWORD
__stdcall
Wow64SuspendThread(
     HANDLE hThread
    );

__declspec(dllimport)
DWORD
__stdcall
ResumeThread(
     HANDLE hThread
    );




__declspec(dllimport)
DWORD
__stdcall
QueueUserAPC(
     PAPCFUNC pfnAPC,
     HANDLE hThread,
     ULONG_PTR dwData
    );

#line 4525 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"


__declspec(dllimport)
BOOL
__stdcall
IsDebuggerPresent(
    void
    );
#line 4534 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"



__declspec(dllimport)
BOOL
__stdcall
CheckRemoteDebuggerPresent(
      HANDLE hProcess,
     PBOOL pbDebuggerPresent
    );

#line 4546 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
void
__stdcall
DebugBreak(
    void
    );

__declspec(dllimport)
BOOL
__stdcall
WaitForDebugEvent(
     LPDEBUG_EVENT lpDebugEvent,
     DWORD dwMilliseconds
    );

__declspec(dllimport)
BOOL
__stdcall
ContinueDebugEvent(
     DWORD dwProcessId,
     DWORD dwThreadId,
     DWORD dwContinueStatus
    );

__declspec(dllimport)
BOOL
__stdcall
DebugActiveProcess(
     DWORD dwProcessId
    );

__declspec(dllimport)
BOOL
__stdcall
DebugActiveProcessStop(
     DWORD dwProcessId
    );

__declspec(dllimport)
BOOL
__stdcall
DebugSetProcessKillOnExit(
     BOOL KillOnExit
    );

__declspec(dllimport)
BOOL
__stdcall
DebugBreakProcess (
     HANDLE Process
    );



#line 4602 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"
__declspec(dllimport)
void
__stdcall
InitializeCriticalSection(
     LPCRITICAL_SECTION lpCriticalSection
    );

__declspec(dllimport)
void
__stdcall
EnterCriticalSection(
     LPCRITICAL_SECTION lpCriticalSection
    );

__declspec(dllimport)
void
__stdcall
LeaveCriticalSection(
     LPCRITICAL_SECTION lpCriticalSection
    );




__declspec(dllimport)
BOOL
__stdcall
InitializeCriticalSectionAndSpinCount(
     LPCRITICAL_SECTION lpCriticalSection,
      DWORD dwSpinCount
    );

__declspec(dllimport)
BOOL
__stdcall
InitializeCriticalSectionEx(
     LPCRITICAL_SECTION lpCriticalSection,
      DWORD dwSpinCount,
      DWORD Flags
    );

__declspec(dllimport)
DWORD
__stdcall
SetCriticalSectionSpinCount(
     LPCRITICAL_SECTION lpCriticalSection,
        DWORD dwSpinCount
    );
#line 4651 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"


__declspec(dllimport)
BOOL
__stdcall
TryEnterCriticalSection(
     LPCRITICAL_SECTION lpCriticalSection
    );
#line 4660 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
void
__stdcall
DeleteCriticalSection(
     LPCRITICAL_SECTION lpCriticalSection
    );

__declspec(dllimport)
BOOL
__stdcall
SetEvent(
     HANDLE hEvent
    );

__declspec(dllimport)
BOOL
__stdcall
ResetEvent(
     HANDLE hEvent
    );

__declspec(dllimport)
BOOL
__stdcall
PulseEvent(
     HANDLE hEvent
    );

__declspec(dllimport)
BOOL
__stdcall
ReleaseSemaphore(
          HANDLE hSemaphore,
          LONG lReleaseCount,
     LPLONG lpPreviousCount
    );

__declspec(dllimport)
BOOL
__stdcall
ReleaseMutex(
     HANDLE hMutex
    );

__declspec(dllimport)
DWORD
__stdcall
WaitForSingleObject(
     HANDLE hHandle,
     DWORD dwMilliseconds
    );

__declspec(dllimport)
DWORD
__stdcall
WaitForMultipleObjects(
     DWORD nCount,
     const HANDLE *lpHandles,
     BOOL bWaitAll,
     DWORD dwMilliseconds
    );

__declspec(dllimport)
void
__stdcall
Sleep(
     DWORD dwMilliseconds
    );

__declspec(dllimport)

HGLOBAL
__stdcall
LoadResource(
     HMODULE hModule,
     HRSRC hResInfo
    );

__declspec(dllimport)
DWORD
__stdcall
SizeofResource(
     HMODULE hModule,
     HRSRC hResInfo
    );


__declspec(dllimport)
ATOM
__stdcall
GlobalDeleteAtom(
     ATOM nAtom
    );

__declspec(dllimport)
BOOL
__stdcall
InitAtomTable(
     DWORD nSize
    );

__declspec(dllimport)
ATOM
__stdcall
DeleteAtom(
     ATOM nAtom
    );

__declspec(dllimport)
UINT
__stdcall
SetHandleCount(
     UINT uNumber
    );

__declspec(dllimport)
DWORD
__stdcall
GetLogicalDrives(
    void
    );

__declspec(dllimport)
BOOL
__stdcall
LockFile(
     HANDLE hFile,
     DWORD dwFileOffsetLow,
     DWORD dwFileOffsetHigh,
     DWORD nNumberOfBytesToLockLow,
     DWORD nNumberOfBytesToLockHigh
    );

__declspec(dllimport)
BOOL
__stdcall
UnlockFile(
     HANDLE hFile,
     DWORD dwFileOffsetLow,
     DWORD dwFileOffsetHigh,
     DWORD nNumberOfBytesToUnlockLow,
     DWORD nNumberOfBytesToUnlockHigh
    );

__declspec(dllimport)
BOOL
__stdcall
LockFileEx(
           HANDLE hFile,
           DWORD dwFlags,
     DWORD dwReserved,
           DWORD nNumberOfBytesToLockLow,
           DWORD nNumberOfBytesToLockHigh,
        LPOVERLAPPED lpOverlapped
    );




__declspec(dllimport)
BOOL
__stdcall
UnlockFileEx(
           HANDLE hFile,
     DWORD dwReserved,
           DWORD nNumberOfBytesToUnlockLow,
           DWORD nNumberOfBytesToUnlockHigh,
        LPOVERLAPPED lpOverlapped
    );

typedef struct _BY_HANDLE_FILE_INFORMATION {
    DWORD dwFileAttributes;
    FILETIME ftCreationTime;
    FILETIME ftLastAccessTime;
    FILETIME ftLastWriteTime;
    DWORD dwVolumeSerialNumber;
    DWORD nFileSizeHigh;
    DWORD nFileSizeLow;
    DWORD nNumberOfLinks;
    DWORD nFileIndexHigh;
    DWORD nFileIndexLow;
} BY_HANDLE_FILE_INFORMATION, *PBY_HANDLE_FILE_INFORMATION, *LPBY_HANDLE_FILE_INFORMATION;

__declspec(dllimport)
BOOL
__stdcall
GetFileInformationByHandle(
      HANDLE hFile,
     LPBY_HANDLE_FILE_INFORMATION lpFileInformation
    );

__declspec(dllimport)
DWORD
__stdcall
GetFileType(
     HANDLE hFile
    );

__declspec(dllimport)
DWORD
__stdcall
GetFileSize(
          HANDLE hFile,
     LPDWORD lpFileSizeHigh
    );

__declspec(dllimport)
BOOL
__stdcall
GetFileSizeEx(
      HANDLE hFile,
     PLARGE_INTEGER lpFileSize
    );


__declspec(dllimport)
HANDLE
__stdcall
GetStdHandle(
     DWORD nStdHandle
    );

__declspec(dllimport)
BOOL
__stdcall
SetStdHandle(
     DWORD nStdHandle,
     HANDLE hHandle
    );



__declspec(dllimport)
BOOL
__stdcall
SetStdHandleEx(
          DWORD nStdHandle,
          HANDLE hHandle,
     PHANDLE phPrevValue
    );

#line 4903 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
WriteFile(
            HANDLE hFile,
     LPCVOID lpBuffer,
            DWORD nNumberOfBytesToWrite,
       LPDWORD lpNumberOfBytesWritten,
     LPOVERLAPPED lpOverlapped
    );

__declspec(dllimport)
BOOL
__stdcall
ReadFile(
            HANDLE hFile,
      LPVOID lpBuffer,
            DWORD nNumberOfBytesToRead,
       LPDWORD lpNumberOfBytesRead,
     LPOVERLAPPED lpOverlapped
    );

__declspec(dllimport)
BOOL
__stdcall
FlushFileBuffers(
     HANDLE hFile
    );

__declspec(dllimport)
BOOL
__stdcall
DeviceIoControl(
            HANDLE hDevice,
            DWORD dwIoControlCode,
     LPVOID lpInBuffer,
            DWORD nInBufferSize,
     LPVOID lpOutBuffer,
            DWORD nOutBufferSize,
       LPDWORD lpBytesReturned,
     LPOVERLAPPED lpOverlapped
    );

__declspec(dllimport)
BOOL
__stdcall
RequestDeviceWakeup(
     HANDLE hDevice
    );

__declspec(dllimport)
BOOL
__stdcall
CancelDeviceWakeupRequest(
     HANDLE hDevice
    );

__declspec(dllimport)
BOOL
__stdcall
GetDevicePowerState(
      HANDLE hDevice,
     BOOL *pfOn
    );

__declspec(dllimport)
BOOL
__stdcall
SetMessageWaitingIndicator(
     HANDLE hMsgIndicator,
     ULONG ulMsgCount
    );

__declspec(dllimport)
BOOL
__stdcall
SetEndOfFile(
     HANDLE hFile
    );

__declspec(dllimport)
DWORD
__stdcall
SetFilePointer(
            HANDLE hFile,
            LONG lDistanceToMove,
     PLONG lpDistanceToMoveHigh,
            DWORD dwMoveMethod
    );

__declspec(dllimport)
BOOL
__stdcall
SetFilePointerEx(
          HANDLE hFile,
          LARGE_INTEGER liDistanceToMove,
     PLARGE_INTEGER lpNewFilePointer,
          DWORD dwMoveMethod
    );

__declspec(dllimport)
BOOL
__stdcall
FindClose(
     HANDLE hFindFile
    );

__declspec(dllimport)
BOOL
__stdcall
GetFileTime(
          HANDLE hFile,
     LPFILETIME lpCreationTime,
     LPFILETIME lpLastAccessTime,
     LPFILETIME lpLastWriteTime
    );

__declspec(dllimport)
BOOL
__stdcall
SetFileTime(
         HANDLE hFile,
     const FILETIME *lpCreationTime,
     const FILETIME *lpLastAccessTime,
     const FILETIME *lpLastWriteTime
    );




__declspec(dllimport)
BOOL
__stdcall
SetFileValidData(
     HANDLE hFile,
     LONGLONG ValidDataLength
    );

#line 5043 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"


__declspec(dllimport)
BOOL
__stdcall
SetFileShortNameA(
     HANDLE hFile,
     LPCSTR lpShortName
    );
__declspec(dllimport)
BOOL
__stdcall
SetFileShortNameW(
     HANDLE hFile,
     LPCWSTR lpShortName
    );




#line 5064 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
CloseHandle(
     HANDLE hObject
    );

__declspec(dllimport)
BOOL
__stdcall
DuplicateHandle(
            HANDLE hSourceProcessHandle,
            HANDLE hSourceHandle,
            HANDLE hTargetProcessHandle,
     LPHANDLE lpTargetHandle,
            DWORD dwDesiredAccess,
            BOOL bInheritHandle,
            DWORD dwOptions
    );

__declspec(dllimport)
BOOL
__stdcall
GetHandleInformation(
      HANDLE hObject,
     LPDWORD lpdwFlags
    );

__declspec(dllimport)
BOOL
__stdcall
SetHandleInformation(
     HANDLE hObject,
     DWORD dwMask,
     DWORD dwFlags
    );






__declspec(dllimport)
DWORD
__stdcall
LoadModule(
     LPCSTR lpModuleName,
     LPVOID lpParameterBlock
    );


 
__declspec(dllimport)
UINT
__stdcall
WinExec(
     LPCSTR lpCmdLine,
     UINT uCmdShow
    );

__declspec(dllimport)
BOOL
__stdcall
ClearCommBreak(
     HANDLE hFile
    );

__declspec(dllimport)
BOOL
__stdcall
ClearCommError(
          HANDLE hFile,
     LPDWORD lpErrors,
     LPCOMSTAT lpStat
    );

__declspec(dllimport)
BOOL
__stdcall
SetupComm(
     HANDLE hFile,
     DWORD dwInQueue,
     DWORD dwOutQueue
    );

__declspec(dllimport)
BOOL
__stdcall
EscapeCommFunction(
     HANDLE hFile,
     DWORD dwFunc
    );

__declspec(dllimport)

BOOL
__stdcall
GetCommConfig(
          HANDLE hCommDev,
     LPCOMMCONFIG lpCC,
       LPDWORD lpdwSize
    );

__declspec(dllimport)
BOOL
__stdcall
GetCommMask(
      HANDLE hFile,
     LPDWORD lpEvtMask
    );

__declspec(dllimport)
BOOL
__stdcall
GetCommProperties(
        HANDLE hFile,
     LPCOMMPROP lpCommProp
    );

__declspec(dllimport)
BOOL
__stdcall
GetCommModemStatus(
      HANDLE hFile,
     LPDWORD lpModemStat
    );

__declspec(dllimport)
BOOL
__stdcall
GetCommState(
      HANDLE hFile,
     LPDCB lpDCB
    );

__declspec(dllimport)
BOOL
__stdcall
GetCommTimeouts(
      HANDLE hFile,
     LPCOMMTIMEOUTS lpCommTimeouts
    );

__declspec(dllimport)
BOOL
__stdcall
PurgeComm(
     HANDLE hFile,
     DWORD dwFlags
    );

__declspec(dllimport)
BOOL
__stdcall
SetCommBreak(
     HANDLE hFile
    );

__declspec(dllimport)
BOOL
__stdcall
SetCommConfig(
     HANDLE hCommDev,
     LPCOMMCONFIG lpCC,
     DWORD dwSize
    );

__declspec(dllimport)
BOOL
__stdcall
SetCommMask(
     HANDLE hFile,
     DWORD dwEvtMask
    );

__declspec(dllimport)
BOOL
__stdcall
SetCommState(
     HANDLE hFile,
     LPDCB lpDCB
    );

__declspec(dllimport)
BOOL
__stdcall
SetCommTimeouts(
     HANDLE hFile,
     LPCOMMTIMEOUTS lpCommTimeouts
    );

__declspec(dllimport)
BOOL
__stdcall
TransmitCommChar(
     HANDLE hFile,
     char cChar
    );

__declspec(dllimport)
BOOL
__stdcall
WaitCommEvent(
            HANDLE hFile,
         LPDWORD lpEvtMask,
     LPOVERLAPPED lpOverlapped
    );


__declspec(dllimport)
DWORD
__stdcall
SetTapePosition(
     HANDLE hDevice,
     DWORD dwPositionMethod,
     DWORD dwPartition,
     DWORD dwOffsetLow,
     DWORD dwOffsetHigh,
     BOOL bImmediate
    );

__declspec(dllimport)
DWORD
__stdcall
GetTapePosition(
      HANDLE hDevice,
      DWORD dwPositionType,
     LPDWORD lpdwPartition,
     LPDWORD lpdwOffsetLow,
     LPDWORD lpdwOffsetHigh
    );

__declspec(dllimport)
DWORD
__stdcall
PrepareTape(
     HANDLE hDevice,
     DWORD dwOperation,
     BOOL bImmediate
    );

__declspec(dllimport)
DWORD
__stdcall
EraseTape(
     HANDLE hDevice,
     DWORD dwEraseType,
     BOOL bImmediate
    );

__declspec(dllimport)
DWORD
__stdcall
CreateTapePartition(
     HANDLE hDevice,
     DWORD dwPartitionMethod,
     DWORD dwCount,
     DWORD dwSize
    );

__declspec(dllimport)
DWORD
__stdcall
WriteTapemark(
     HANDLE hDevice,
     DWORD dwTapemarkType,
     DWORD dwTapemarkCount,
     BOOL bImmediate
    );

__declspec(dllimport)
DWORD
__stdcall
GetTapeStatus(
     HANDLE hDevice
    );

__declspec(dllimport)
DWORD
__stdcall
GetTapeParameters(
        HANDLE hDevice,
        DWORD dwOperation,
     LPDWORD lpdwSize,
     LPVOID lpTapeInformation
    );




__declspec(dllimport)
DWORD
__stdcall
SetTapeParameters(
     HANDLE hDevice,
     DWORD dwOperation,
     LPVOID lpTapeInformation
    );




__declspec(dllimport)
BOOL
__stdcall
Beep(
     DWORD dwFreq,
     DWORD dwDuration
    );

__declspec(dllimport)
int
__stdcall
MulDiv(
     int nNumber,
     int nNumerator,
     int nDenominator
    );

__declspec(dllimport)
void
__stdcall
GetSystemTime(
     LPSYSTEMTIME lpSystemTime
    );

__declspec(dllimport)
void
__stdcall
GetSystemTimeAsFileTime(
     LPFILETIME lpSystemTimeAsFileTime
    );

__declspec(dllimport)
BOOL
__stdcall
SetSystemTime(
     const SYSTEMTIME *lpSystemTime
    );

__declspec(dllimport)
void
__stdcall
GetLocalTime(
     LPSYSTEMTIME lpSystemTime
    );

__declspec(dllimport)
BOOL
__stdcall
SetLocalTime(
     const SYSTEMTIME *lpSystemTime
    );

__declspec(dllimport)
void
__stdcall
GetSystemInfo(
     LPSYSTEM_INFO lpSystemInfo
    );

typedef enum _DEP_SYSTEM_POLICY_TYPE {
    DEPPolicyAlwaysOff = 0,
    DEPPolicyAlwaysOn,
    DEPPolicyOptIn,
    DEPPolicyOptOut,
    DEPTotalPolicyCount
} DEP_SYSTEM_POLICY_TYPE;

__declspec(dllimport)
DEP_SYSTEM_POLICY_TYPE
__stdcall
GetSystemDEPPolicy(
    void
    );










__declspec(dllimport)
BOOL
__stdcall
SetSystemFileCacheSize (
     SIZE_T MinimumFileCacheSize,
     SIZE_T MaximumFileCacheSize,
     DWORD Flags
    );

__declspec(dllimport)
BOOL
__stdcall
GetSystemFileCacheSize (
     PSIZE_T lpMinimumFileCacheSize,
     PSIZE_T lpMaximumFileCacheSize,
     PDWORD lpFlags
    );

#line 5469 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"



__declspec(dllimport)
BOOL
__stdcall
GetSystemRegistryQuota(
     PDWORD pdwQuotaAllowed,
     PDWORD pdwQuotaUsed
    );

BOOL
__stdcall
GetSystemTimes(
     LPFILETIME lpIdleTime,
     LPFILETIME lpKernelTime,
     LPFILETIME lpUserTime
    );

#line 5489 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"


__declspec(dllimport)
void
__stdcall
GetNativeSystemInfo(
     LPSYSTEM_INFO lpSystemInfo
    );
#line 5498 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
IsProcessorFeaturePresent(
     DWORD ProcessorFeature
    );

typedef struct _TIME_ZONE_INFORMATION {
    LONG Bias;
    WCHAR StandardName[ 32 ];
    SYSTEMTIME StandardDate;
    LONG StandardBias;
    WCHAR DaylightName[ 32 ];
    SYSTEMTIME DaylightDate;
    LONG DaylightBias;
} TIME_ZONE_INFORMATION, *PTIME_ZONE_INFORMATION, *LPTIME_ZONE_INFORMATION;

typedef struct _TIME_DYNAMIC_ZONE_INFORMATION {
    LONG Bias;
    WCHAR StandardName[ 32 ];
    SYSTEMTIME StandardDate;
    LONG StandardBias;
    WCHAR DaylightName[ 32 ];
    SYSTEMTIME DaylightDate;
    LONG DaylightBias;
    WCHAR TimeZoneKeyName[ 128 ];
    BOOLEAN DynamicDaylightTimeDisabled;
} DYNAMIC_TIME_ZONE_INFORMATION, *PDYNAMIC_TIME_ZONE_INFORMATION;


__declspec(dllimport)
BOOL
__stdcall
SystemTimeToTzSpecificLocalTime(
     const TIME_ZONE_INFORMATION *lpTimeZoneInformation,
         const SYSTEMTIME *lpUniversalTime,
        LPSYSTEMTIME lpLocalTime
    );

__declspec(dllimport)
BOOL
__stdcall
TzSpecificLocalTimeToSystemTime(
     const TIME_ZONE_INFORMATION *lpTimeZoneInformation,
         const SYSTEMTIME *lpLocalTime,
        LPSYSTEMTIME lpUniversalTime
    );

BOOL
__stdcall
GetTimeZoneInformationForYear(
     USHORT wYear,
     PDYNAMIC_TIME_ZONE_INFORMATION pdtzi,
     LPTIME_ZONE_INFORMATION ptzi
    );

__declspec(dllimport)
DWORD
__stdcall
GetTimeZoneInformation(
     LPTIME_ZONE_INFORMATION lpTimeZoneInformation
    );

__declspec(dllimport)
BOOL
__stdcall
SetTimeZoneInformation(
     const TIME_ZONE_INFORMATION *lpTimeZoneInformation
    );

__declspec(dllimport)
DWORD
__stdcall
GetDynamicTimeZoneInformation(
     PDYNAMIC_TIME_ZONE_INFORMATION pTimeZoneInformation
    );

__declspec(dllimport)
BOOL
__stdcall
SetDynamicTimeZoneInformation(
     const DYNAMIC_TIME_ZONE_INFORMATION *lpTimeZoneInformation
    );







__declspec(dllimport)
BOOL
__stdcall
SystemTimeToFileTime(
      const SYSTEMTIME *lpSystemTime,
     LPFILETIME lpFileTime
    );

__declspec(dllimport)
BOOL
__stdcall
FileTimeToLocalFileTime(
      const FILETIME *lpFileTime,
     LPFILETIME lpLocalFileTime
    );

__declspec(dllimport)
BOOL
__stdcall
LocalFileTimeToFileTime(
      const FILETIME *lpLocalFileTime,
     LPFILETIME lpFileTime
    );

__declspec(dllimport)
BOOL
__stdcall
FileTimeToSystemTime(
      const FILETIME *lpFileTime,
     LPSYSTEMTIME lpSystemTime
    );

__declspec(dllimport)
LONG
__stdcall
CompareFileTime(
     const FILETIME *lpFileTime1,
     const FILETIME *lpFileTime2
    );

__declspec(dllimport)
BOOL
__stdcall
FileTimeToDosDateTime(
      const FILETIME *lpFileTime,
     LPWORD lpFatDate,
     LPWORD lpFatTime
    );

__declspec(dllimport)
BOOL
__stdcall
DosDateTimeToFileTime(
      WORD wFatDate,
      WORD wFatTime,
     LPFILETIME lpFileTime
    );

 
__declspec(dllimport)
DWORD
__stdcall
GetTickCount(
    void
    );



__declspec(dllimport)
ULONGLONG
__stdcall
GetTickCount64(
    void
    );

#line 5665 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
SetSystemTimeAdjustment(
     DWORD dwTimeAdjustment,
     BOOL  bTimeAdjustmentDisabled
    );

__declspec(dllimport)
BOOL
__stdcall
GetSystemTimeAdjustment(
     PDWORD lpTimeAdjustment,
     PDWORD lpTimeIncrement,
     PBOOL  lpTimeAdjustmentDisabled
    );


__declspec(dllimport)
DWORD
__stdcall
FormatMessageA(
         DWORD dwFlags,
     LPCVOID lpSource,
         DWORD dwMessageId,
         DWORD dwLanguageId,
        LPSTR lpBuffer,
         DWORD nSize,
     va_list *Arguments
    );
__declspec(dllimport)
DWORD
__stdcall
FormatMessageW(
         DWORD dwFlags,
     LPCVOID lpSource,
         DWORD dwMessageId,
         DWORD dwLanguageId,
        LPWSTR lpBuffer,
         DWORD nSize,
     va_list *Arguments
    );




#line 5713 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"





























#line 5743 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"
#line 5744 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"











__declspec(dllimport)
BOOL
__stdcall
CreatePipe(
     PHANDLE hReadPipe,
     PHANDLE hWritePipe,
     LPSECURITY_ATTRIBUTES lpPipeAttributes,
         DWORD nSize
    );

__declspec(dllimport)
BOOL
__stdcall
ConnectNamedPipe(
            HANDLE hNamedPipe,
     LPOVERLAPPED lpOverlapped
    );

__declspec(dllimport)
BOOL
__stdcall
DisconnectNamedPipe(
     HANDLE hNamedPipe
    );

__declspec(dllimport)
BOOL
__stdcall
SetNamedPipeHandleState(
         HANDLE hNamedPipe,
     LPDWORD lpMode,
     LPDWORD lpMaxCollectionCount,
     LPDWORD lpCollectDataTimeout
    );

__declspec(dllimport)
BOOL
__stdcall
GetNamedPipeInfo(
          HANDLE hNamedPipe,
     LPDWORD lpFlags,
     LPDWORD lpOutBufferSize,
     LPDWORD lpInBufferSize,
     LPDWORD lpMaxInstances
    );

__declspec(dllimport)
BOOL
__stdcall
PeekNamedPipe(
          HANDLE hNamedPipe,
     LPVOID lpBuffer,
          DWORD nBufferSize,
     LPDWORD lpBytesRead,
     LPDWORD lpTotalBytesAvail,
     LPDWORD lpBytesLeftThisMessage
    );

__declspec(dllimport)
BOOL
__stdcall
TransactNamedPipe(
            HANDLE hNamedPipe,
     LPVOID lpInBuffer,
            DWORD nInBufferSize,
     LPVOID lpOutBuffer,
            DWORD nOutBufferSize,
           LPDWORD lpBytesRead,
     LPOVERLAPPED lpOverlapped
    );

__declspec(dllimport)

HANDLE
__stdcall
CreateMailslotA(
         LPCSTR lpName,
         DWORD nMaxMessageSize,
         DWORD lReadTimeout,
     LPSECURITY_ATTRIBUTES lpSecurityAttributes
    );
__declspec(dllimport)

HANDLE
__stdcall
CreateMailslotW(
         LPCWSTR lpName,
         DWORD nMaxMessageSize,
         DWORD lReadTimeout,
     LPSECURITY_ATTRIBUTES lpSecurityAttributes
    );




#line 5851 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
GetMailslotInfo(
          HANDLE hMailslot,
     LPDWORD lpMaxMessageSize,
     LPDWORD lpNextSize,
     LPDWORD lpMessageCount,
     LPDWORD lpReadTimeout
    );

__declspec(dllimport)
BOOL
__stdcall
SetMailslotInfo(
     HANDLE hMailslot,
     DWORD lReadTimeout
    );

__declspec(dllimport)
 
LPVOID
__stdcall
MapViewOfFile(
     HANDLE hFileMappingObject,
     DWORD dwDesiredAccess,
     DWORD dwFileOffsetHigh,
     DWORD dwFileOffsetLow,
     SIZE_T dwNumberOfBytesToMap
    );

__declspec(dllimport)
BOOL
__stdcall
FlushViewOfFile(
     LPCVOID lpBaseAddress,
     SIZE_T dwNumberOfBytesToFlush
    );

__declspec(dllimport)
BOOL
__stdcall
UnmapViewOfFile(
     LPCVOID lpBaseAddress
    );





__declspec(dllimport)
BOOL
__stdcall
EncryptFileA(
     LPCSTR lpFileName
    );
__declspec(dllimport)
BOOL
__stdcall
EncryptFileW(
     LPCWSTR lpFileName
    );




#line 5919 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
DecryptFileA(
           LPCSTR lpFileName,
     DWORD dwReserved
    );
__declspec(dllimport)
BOOL
__stdcall
DecryptFileW(
           LPCWSTR lpFileName,
     DWORD dwReserved
    );




#line 5939 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"
















__declspec(dllimport)
BOOL
__stdcall
FileEncryptionStatusA(
      LPCSTR lpFileName,
     LPDWORD  lpStatus
    );
__declspec(dllimport)
BOOL
__stdcall
FileEncryptionStatusW(
      LPCWSTR lpFileName,
     LPDWORD  lpStatus
    );




#line 5974 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"







typedef
DWORD
(__stdcall *PFE_EXPORT_FUNC)(
     PBYTE pbData,
     PVOID pvCallbackContext,
         ULONG ulLength
    );

typedef
DWORD
(__stdcall *PFE_IMPORT_FUNC)(
     PBYTE pbData,
     PVOID pvCallbackContext,
      PULONG ulLength
    );












__declspec(dllimport)
DWORD
__stdcall
OpenEncryptedFileRawA(
            LPCSTR lpFileName,
            ULONG    ulFlags,
     PVOID   *pvContext
    );
__declspec(dllimport)
DWORD
__stdcall
OpenEncryptedFileRawW(
            LPCWSTR lpFileName,
            ULONG    ulFlags,
     PVOID   *pvContext
    );




#line 6029 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
DWORD
__stdcall
ReadEncryptedFileRaw(
         PFE_EXPORT_FUNC pfExportCallback,
     PVOID           pvCallbackContext,
         PVOID           pvContext
    );

__declspec(dllimport)
DWORD
__stdcall
WriteEncryptedFileRaw(
         PFE_IMPORT_FUNC pfImportCallback,
     PVOID           pvCallbackContext,
         PVOID           pvContext
    );

__declspec(dllimport)
void
__stdcall
CloseEncryptedFileRaw(
     PVOID           pvContext
    );





__declspec(dllimport)
int
__stdcall
lstrcmpA(
     LPCSTR lpString1,
     LPCSTR lpString2
    );
__declspec(dllimport)
int
__stdcall
lstrcmpW(
     LPCWSTR lpString1,
     LPCWSTR lpString2
    );




#line 6078 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
int
__stdcall
lstrcmpiA(
     LPCSTR lpString1,
     LPCSTR lpString2
    );
__declspec(dllimport)
int
__stdcall
lstrcmpiW(
     LPCWSTR lpString1,
     LPCWSTR lpString2
    );




#line 6098 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)

LPSTR
__stdcall
lstrcpynA(
     LPSTR lpString1,
     LPCSTR lpString2,
     int iMaxLength
    );
__declspec(dllimport)

LPWSTR
__stdcall
lstrcpynW(
     LPWSTR lpString1,
     LPCWSTR lpString2,
     int iMaxLength
    );




#line 6122 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"


#pragma warning(push)
#pragma warning(disable:4995)
#line 6127 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)

LPSTR
__stdcall
lstrcpyA(
     LPSTR lpString1, 
      LPCSTR lpString2
    );
__declspec(dllimport)

LPWSTR
__stdcall
lstrcpyW(
     LPWSTR lpString1, 
      LPCWSTR lpString2
    );




#line 6149 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)

LPSTR
__stdcall
lstrcatA(
     LPSTR lpString1,
        LPCSTR lpString2
    );
__declspec(dllimport)

LPWSTR
__stdcall
lstrcatW(
     LPWSTR lpString1,
        LPCWSTR lpString2
    );




#line 6171 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"


#pragma warning(pop)
#line 6175 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
int
__stdcall
lstrlenA(
     LPCSTR lpString
    );
__declspec(dllimport)
int
__stdcall
lstrlenW(
     LPCWSTR lpString
    );




#line 6193 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
HFILE
__stdcall
OpenFile(
        LPCSTR lpFileName,
     LPOFSTRUCT lpReOpenBuff,
        UINT uStyle
    );

__declspec(dllimport)
HFILE
__stdcall
_lopen(
     LPCSTR lpPathName,
     int iReadWrite
    );

__declspec(dllimport)
HFILE
__stdcall
_lcreat(
     LPCSTR lpPathName,
     int  iAttribute
    );

__declspec(dllimport)
UINT
__stdcall
_lread(
     HFILE hFile,
     LPVOID lpBuffer,
     UINT uBytes
    );

__declspec(dllimport)
UINT
__stdcall
_lwrite(
     HFILE hFile,
     LPCCH lpBuffer,
     UINT uBytes
    );

__declspec(dllimport)
long
__stdcall
_hread(
     HFILE hFile,
     LPVOID lpBuffer,
     long lBytes
    );

__declspec(dllimport)
long
__stdcall
_hwrite(
     HFILE hFile,
     LPCCH lpBuffer,
     long lBytes
    );

__declspec(dllimport)
HFILE
__stdcall
_lclose(
     HFILE hFile
    );

__declspec(dllimport)
LONG
__stdcall
_llseek(
     HFILE hFile,
     LONG lOffset,
     int iOrigin
    );

__declspec(dllimport)
BOOL
__stdcall
IsTextUnicode(
     const void* lpv,
            int iSize,
     LPINT lpiResult
    );



__declspec(dllimport)
DWORD
__stdcall
FlsAlloc(
     PFLS_CALLBACK_FUNCTION lpCallback
    );

__declspec(dllimport)
PVOID
__stdcall
FlsGetValue(
     DWORD dwFlsIndex
    );

__declspec(dllimport)
BOOL
__stdcall
FlsSetValue(
         DWORD dwFlsIndex,
     PVOID lpFlsData
    );

__declspec(dllimport)
BOOL
__stdcall
FlsFree(
     DWORD dwFlsIndex
    );



__declspec(dllimport)
DWORD
__stdcall
TlsAlloc(
    void
    );

__declspec(dllimport)
LPVOID
__stdcall
TlsGetValue(
     DWORD dwTlsIndex
    );

__declspec(dllimport)
BOOL
__stdcall
TlsSetValue(
         DWORD dwTlsIndex,
     LPVOID lpTlsValue
    );

__declspec(dllimport)
BOOL
__stdcall
TlsFree(
     DWORD dwTlsIndex
    );

typedef
void
(__stdcall *LPOVERLAPPED_COMPLETION_ROUTINE)(
        DWORD dwErrorCode,
        DWORD dwNumberOfBytesTransfered,
     LPOVERLAPPED lpOverlapped
    );

__declspec(dllimport)
DWORD
__stdcall
SleepEx(
     DWORD dwMilliseconds,
     BOOL bAlertable
    );

__declspec(dllimport)
DWORD
__stdcall
WaitForSingleObjectEx(
     HANDLE hHandle,
     DWORD dwMilliseconds,
     BOOL bAlertable
    );

__declspec(dllimport)
DWORD
__stdcall
WaitForMultipleObjectsEx(
     DWORD nCount,
     const HANDLE *lpHandles,
     BOOL bWaitAll,
     DWORD dwMilliseconds,
     BOOL bAlertable
    );


__declspec(dllimport)
DWORD
__stdcall
SignalObjectAndWait(
     HANDLE hObjectToSignal,
     HANDLE hObjectToWaitOn,
     DWORD dwMilliseconds,
     BOOL bAlertable
    );
#line 6389 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
ReadFileEx(
         HANDLE hFile,
      LPVOID lpBuffer,
         DWORD nNumberOfBytesToRead,
      LPOVERLAPPED lpOverlapped,
     LPOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine
    );

__declspec(dllimport)
BOOL
__stdcall
WriteFileEx(
         HANDLE hFile,
     LPCVOID lpBuffer,
         DWORD nNumberOfBytesToWrite,
      LPOVERLAPPED lpOverlapped,
     LPOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine
    );

__declspec(dllimport)
BOOL
__stdcall
BackupRead(
        HANDLE hFile,
     LPBYTE lpBuffer,
        DWORD nNumberOfBytesToRead,
       LPDWORD lpNumberOfBytesRead,
        BOOL bAbort,
        BOOL bProcessSecurity,
     LPVOID *lpContext
    );

__declspec(dllimport)
BOOL
__stdcall
BackupSeek(
        HANDLE hFile,
        DWORD  dwLowBytesToSeek,
        DWORD  dwHighBytesToSeek,
       LPDWORD lpdwLowByteSeeked,
       LPDWORD lpdwHighByteSeeked,
     LPVOID *lpContext
    );

__declspec(dllimport)
BOOL
__stdcall
BackupWrite(
        HANDLE hFile,
     LPBYTE lpBuffer,
        DWORD nNumberOfBytesToWrite,
       LPDWORD lpNumberOfBytesWritten,
        BOOL bAbort,
        BOOL bProcessSecurity,
     LPVOID *lpContext
    );




typedef struct _WIN32_STREAM_ID {
        DWORD          dwStreamId ;
        DWORD          dwStreamAttributes ;
        LARGE_INTEGER  Size ;
        DWORD          dwStreamNameSize ;
        WCHAR          cStreamName[ 1 ] ;
} WIN32_STREAM_ID, *LPWIN32_STREAM_ID ;




























__declspec(dllimport)
BOOL
__stdcall
ReadFileScatter(
           HANDLE hFile,
           FILE_SEGMENT_ELEMENT aSegmentArray[],
           DWORD nNumberOfBytesToRead,
     LPDWORD lpReserved,
        LPOVERLAPPED lpOverlapped
    );

__declspec(dllimport)
BOOL
__stdcall
WriteFileGather(
           HANDLE hFile,
           FILE_SEGMENT_ELEMENT aSegmentArray[],
           DWORD nNumberOfBytesToWrite,
     LPDWORD lpReserved,
        LPOVERLAPPED lpOverlapped
    );





















#line 6531 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

typedef struct _STARTUPINFOA {
    DWORD   cb;
    LPSTR   lpReserved;
    LPSTR   lpDesktop;
    LPSTR   lpTitle;
    DWORD   dwX;
    DWORD   dwY;
    DWORD   dwXSize;
    DWORD   dwYSize;
    DWORD   dwXCountChars;
    DWORD   dwYCountChars;
    DWORD   dwFillAttribute;
    DWORD   dwFlags;
    WORD    wShowWindow;
    WORD    cbReserved2;
    LPBYTE  lpReserved2;
    HANDLE  hStdInput;
    HANDLE  hStdOutput;
    HANDLE  hStdError;
} STARTUPINFOA, *LPSTARTUPINFOA;
typedef struct _STARTUPINFOW {
    DWORD   cb;
    LPWSTR  lpReserved;
    LPWSTR  lpDesktop;
    LPWSTR  lpTitle;
    DWORD   dwX;
    DWORD   dwY;
    DWORD   dwXSize;
    DWORD   dwYSize;
    DWORD   dwXCountChars;
    DWORD   dwYCountChars;
    DWORD   dwFillAttribute;
    DWORD   dwFlags;
    WORD    wShowWindow;
    WORD    cbReserved2;
    LPBYTE  lpReserved2;
    HANDLE  hStdInput;
    HANDLE  hStdOutput;
    HANDLE  hStdError;
} STARTUPINFOW, *LPSTARTUPINFOW;




typedef STARTUPINFOA STARTUPINFO;
typedef LPSTARTUPINFOA LPSTARTUPINFO;
#line 6579 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"



typedef struct _STARTUPINFOEXA {
    STARTUPINFOA StartupInfo;
    LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList;
} STARTUPINFOEXA, *LPSTARTUPINFOEXA;
typedef struct _STARTUPINFOEXW {
    STARTUPINFOW StartupInfo;
    LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList;
} STARTUPINFOEXW, *LPSTARTUPINFOEXW;




typedef STARTUPINFOEXA STARTUPINFOEX;
typedef LPSTARTUPINFOEXA LPSTARTUPINFOEX;
#line 6597 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

#line 6599 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"



typedef struct _WIN32_FIND_DATAA {
    DWORD dwFileAttributes;
    FILETIME ftCreationTime;
    FILETIME ftLastAccessTime;
    FILETIME ftLastWriteTime;
    DWORD nFileSizeHigh;
    DWORD nFileSizeLow;
    DWORD dwReserved0;
    DWORD dwReserved1;
    CHAR   cFileName[ 260 ];
    CHAR   cAlternateFileName[ 14 ];





} WIN32_FIND_DATAA, *PWIN32_FIND_DATAA, *LPWIN32_FIND_DATAA;
typedef struct _WIN32_FIND_DATAW {
    DWORD dwFileAttributes;
    FILETIME ftCreationTime;
    FILETIME ftLastAccessTime;
    FILETIME ftLastWriteTime;
    DWORD nFileSizeHigh;
    DWORD nFileSizeLow;
    DWORD dwReserved0;
    DWORD dwReserved1;
    WCHAR  cFileName[ 260 ];
    WCHAR  cAlternateFileName[ 14 ];





} WIN32_FIND_DATAW, *PWIN32_FIND_DATAW, *LPWIN32_FIND_DATAW;





typedef WIN32_FIND_DATAA WIN32_FIND_DATA;
typedef PWIN32_FIND_DATAA PWIN32_FIND_DATA;
typedef LPWIN32_FIND_DATAA LPWIN32_FIND_DATA;
#line 6645 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

typedef struct _WIN32_FILE_ATTRIBUTE_DATA {
    DWORD dwFileAttributes;
    FILETIME ftCreationTime;
    FILETIME ftLastAccessTime;
    FILETIME ftLastWriteTime;
    DWORD nFileSizeHigh;
    DWORD nFileSizeLow;
} WIN32_FILE_ATTRIBUTE_DATA, *LPWIN32_FILE_ATTRIBUTE_DATA;





__declspec(dllimport)

HANDLE
__stdcall
CreateMutexA(
     LPSECURITY_ATTRIBUTES lpMutexAttributes,
         BOOL bInitialOwner,
     LPCSTR lpName
    );
__declspec(dllimport)

HANDLE
__stdcall
CreateMutexW(
     LPSECURITY_ATTRIBUTES lpMutexAttributes,
         BOOL bInitialOwner,
     LPCWSTR lpName
    );




#line 6682 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)

HANDLE
__stdcall
OpenMutexA(
     DWORD dwDesiredAccess,
     BOOL bInheritHandle,
     LPCSTR lpName
    );
__declspec(dllimport)

HANDLE
__stdcall
OpenMutexW(
     DWORD dwDesiredAccess,
     BOOL bInheritHandle,
     LPCWSTR lpName
    );




#line 6706 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)

HANDLE
__stdcall
CreateEventA(
     LPSECURITY_ATTRIBUTES lpEventAttributes,
         BOOL bManualReset,
         BOOL bInitialState,
     LPCSTR lpName
    );
__declspec(dllimport)

HANDLE
__stdcall
CreateEventW(
     LPSECURITY_ATTRIBUTES lpEventAttributes,
         BOOL bManualReset,
         BOOL bInitialState,
     LPCWSTR lpName
    );




#line 6732 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)

HANDLE
__stdcall
OpenEventA(
     DWORD dwDesiredAccess,
     BOOL bInheritHandle,
     LPCSTR lpName
    );
__declspec(dllimport)

HANDLE
__stdcall
OpenEventW(
     DWORD dwDesiredAccess,
     BOOL bInheritHandle,
     LPCWSTR lpName
    );




#line 6756 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)

HANDLE
__stdcall
CreateSemaphoreA(
     LPSECURITY_ATTRIBUTES lpSemaphoreAttributes,
         LONG lInitialCount,
         LONG lMaximumCount,
     LPCSTR lpName
    );
__declspec(dllimport)

HANDLE
__stdcall
CreateSemaphoreW(
     LPSECURITY_ATTRIBUTES lpSemaphoreAttributes,
         LONG lInitialCount,
         LONG lMaximumCount,
     LPCWSTR lpName
    );




#line 6782 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)

HANDLE
__stdcall
OpenSemaphoreA(
     DWORD dwDesiredAccess,
     BOOL bInheritHandle,
     LPCSTR lpName
    );
__declspec(dllimport)

HANDLE
__stdcall
OpenSemaphoreW(
     DWORD dwDesiredAccess,
     BOOL bInheritHandle,
     LPCWSTR lpName
    );




#line 6806 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"


typedef
void
(__stdcall *PTIMERAPCROUTINE)(
     LPVOID lpArgToCompletionRoutine,
         DWORD dwTimerLowValue,
         DWORD dwTimerHighValue
    );

__declspec(dllimport)

HANDLE
__stdcall
CreateWaitableTimerA(
     LPSECURITY_ATTRIBUTES lpTimerAttributes,
         BOOL bManualReset,
     LPCSTR lpTimerName
    );
__declspec(dllimport)

HANDLE
__stdcall
CreateWaitableTimerW(
     LPSECURITY_ATTRIBUTES lpTimerAttributes,
         BOOL bManualReset,
     LPCWSTR lpTimerName
    );




#line 6839 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)

HANDLE
__stdcall
OpenWaitableTimerA(
     DWORD dwDesiredAccess,
     BOOL bInheritHandle,
     LPCSTR lpTimerName
    );
__declspec(dllimport)

HANDLE
__stdcall
OpenWaitableTimerW(
     DWORD dwDesiredAccess,
     BOOL bInheritHandle,
     LPCWSTR lpTimerName
    );




#line 6863 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"



BOOL
__stdcall
SetWaitableTimerEx(
         HANDLE hTimer,
         const LARGE_INTEGER *lpDueTime,
         LONG lPeriod,
     PTIMERAPCROUTINE pfnCompletionRoutine,
     LPVOID lpArgToCompletionRoutine,
     PREASON_CONTEXT WakeContext,
         ULONG TolerableDelay
    );

#line 6879 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
SetWaitableTimer(
         HANDLE hTimer,
         const LARGE_INTEGER *lpDueTime,
         LONG lPeriod,
     PTIMERAPCROUTINE pfnCompletionRoutine,
     LPVOID lpArgToCompletionRoutine,
         BOOL fResume
    );

__declspec(dllimport)
BOOL
__stdcall
CancelWaitableTimer(
     HANDLE hTimer
    );





__declspec(dllimport)

HANDLE
__stdcall
CreateMutexExA(
     LPSECURITY_ATTRIBUTES lpMutexAttributes,
     LPCSTR lpName,
         DWORD dwFlags,
         DWORD dwDesiredAccess
    );
__declspec(dllimport)

HANDLE
__stdcall
CreateMutexExW(
     LPSECURITY_ATTRIBUTES lpMutexAttributes,
     LPCWSTR lpName,
         DWORD dwFlags,
         DWORD dwDesiredAccess
    );




#line 6928 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"




__declspec(dllimport)

HANDLE
__stdcall
CreateEventExA(
     LPSECURITY_ATTRIBUTES lpEventAttributes,
     LPCSTR lpName,
         DWORD dwFlags,
         DWORD dwDesiredAccess
    );
__declspec(dllimport)

HANDLE
__stdcall
CreateEventExW(
     LPSECURITY_ATTRIBUTES lpEventAttributes,
     LPCWSTR lpName,
         DWORD dwFlags,
         DWORD dwDesiredAccess
    );




#line 6957 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)

HANDLE
__stdcall
CreateSemaphoreExA(
        LPSECURITY_ATTRIBUTES lpSemaphoreAttributes,
            LONG lInitialCount,
            LONG lMaximumCount,
        LPCSTR lpName,
      DWORD dwFlags,
            DWORD dwDesiredAccess
    );
__declspec(dllimport)

HANDLE
__stdcall
CreateSemaphoreExW(
        LPSECURITY_ATTRIBUTES lpSemaphoreAttributes,
            LONG lInitialCount,
            LONG lMaximumCount,
        LPCWSTR lpName,
      DWORD dwFlags,
            DWORD dwDesiredAccess
    );




#line 6987 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"



__declspec(dllimport)

HANDLE
__stdcall
CreateWaitableTimerExA(
     LPSECURITY_ATTRIBUTES lpTimerAttributes,
     LPCSTR lpTimerName,
         DWORD dwFlags,
         DWORD dwDesiredAccess
    );
__declspec(dllimport)

HANDLE
__stdcall
CreateWaitableTimerExW(
     LPSECURITY_ATTRIBUTES lpTimerAttributes,
     LPCWSTR lpTimerName,
         DWORD dwFlags,
         DWORD dwDesiredAccess
    );




#line 7015 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

#line 7017 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

#line 7019 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)

HANDLE
__stdcall
CreateFileMappingA(
         HANDLE hFile,
     LPSECURITY_ATTRIBUTES lpFileMappingAttributes,
         DWORD flProtect,
         DWORD dwMaximumSizeHigh,
         DWORD dwMaximumSizeLow,
     LPCSTR lpName
    );
__declspec(dllimport)

HANDLE
__stdcall
CreateFileMappingW(
         HANDLE hFile,
     LPSECURITY_ATTRIBUTES lpFileMappingAttributes,
         DWORD flProtect,
         DWORD dwMaximumSizeHigh,
         DWORD dwMaximumSizeLow,
     LPCWSTR lpName
    );




#line 7049 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"



__declspec(dllimport)

HANDLE
__stdcall
CreateFileMappingNumaA(
         HANDLE hFile,
     LPSECURITY_ATTRIBUTES lpFileMappingAttributes,
         DWORD flProtect,
         DWORD dwMaximumSizeHigh,
         DWORD dwMaximumSizeLow,
     LPCSTR lpName,
         DWORD nndPreferred
    );
__declspec(dllimport)

HANDLE
__stdcall
CreateFileMappingNumaW(
         HANDLE hFile,
     LPSECURITY_ATTRIBUTES lpFileMappingAttributes,
         DWORD flProtect,
         DWORD dwMaximumSizeHigh,
         DWORD dwMaximumSizeLow,
     LPCWSTR lpName,
         DWORD nndPreferred
    );




#line 7083 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

#line 7085 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)

HANDLE
__stdcall
OpenFileMappingA(
     DWORD dwDesiredAccess,
     BOOL bInheritHandle,
     LPCSTR lpName
    );
__declspec(dllimport)

HANDLE
__stdcall
OpenFileMappingW(
     DWORD dwDesiredAccess,
     BOOL bInheritHandle,
     LPCWSTR lpName
    );




#line 7109 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
DWORD
__stdcall
GetLogicalDriveStringsA(
     DWORD nBufferLength,
     LPSTR lpBuffer
    );
__declspec(dllimport)
DWORD
__stdcall
GetLogicalDriveStringsW(
     DWORD nBufferLength,
     LPWSTR lpBuffer
    );




#line 7129 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"



typedef enum _MEMORY_RESOURCE_NOTIFICATION_TYPE {
    LowMemoryResourceNotification,
    HighMemoryResourceNotification
} MEMORY_RESOURCE_NOTIFICATION_TYPE;

__declspec(dllimport)

HANDLE
__stdcall
CreateMemoryResourceNotification(
     MEMORY_RESOURCE_NOTIFICATION_TYPE NotificationType
    );

__declspec(dllimport)
BOOL
__stdcall
QueryMemoryResourceNotification(
      HANDLE ResourceNotificationHandle,
     PBOOL  ResourceState
    );

#line 7154 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"


__declspec(dllimport)

HMODULE
__stdcall
LoadLibraryA(
     LPCSTR lpLibFileName
    );
__declspec(dllimport)

HMODULE
__stdcall
LoadLibraryW(
     LPCWSTR lpLibFileName
    );




#line 7175 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)

HMODULE
__stdcall
LoadLibraryExA(
           LPCSTR lpLibFileName,
     HANDLE hFile,
           DWORD dwFlags
    );
__declspec(dllimport)

HMODULE
__stdcall
LoadLibraryExW(
           LPCWSTR lpLibFileName,
     HANDLE hFile,
           DWORD dwFlags
    );




#line 7199 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"









__declspec(dllimport)
DWORD
__stdcall
GetModuleFileNameA(
     HMODULE hModule,
     LPSTR lpFilename,
         DWORD nSize
    );
__declspec(dllimport)
DWORD
__stdcall
GetModuleFileNameW(
     HMODULE hModule,
     LPWSTR lpFilename,
         DWORD nSize
    );




#line 7229 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)

HMODULE
__stdcall
GetModuleHandleA(
     LPCSTR lpModuleName
    );
__declspec(dllimport)

HMODULE
__stdcall
GetModuleHandleW(
     LPCWSTR lpModuleName
    );




#line 7249 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"








typedef
BOOL
(__stdcall*
PGET_MODULE_HANDLE_EXA)(
            DWORD        dwFlags,
        LPCSTR     lpModuleName,
     HMODULE*    phModule
    );
typedef
BOOL
(__stdcall*
PGET_MODULE_HANDLE_EXW)(
            DWORD        dwFlags,
        LPCWSTR     lpModuleName,
     HMODULE*    phModule
    );




#line 7278 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
GetModuleHandleExA(
            DWORD    dwFlags,
        LPCSTR lpModuleName,
     HMODULE* phModule
    );
__declspec(dllimport)
BOOL
__stdcall
GetModuleHandleExW(
            DWORD    dwFlags,
        LPCWSTR lpModuleName,
     HMODULE* phModule
    );




#line 7300 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

#line 7302 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"
#line 7303 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"



__declspec(dllimport)
BOOL
__stdcall
NeedCurrentDirectoryForExePathA(
     LPCSTR ExeName
    );
__declspec(dllimport)
BOOL
__stdcall
NeedCurrentDirectoryForExePathW(
     LPCWSTR ExeName
    );




#line 7323 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

#line 7325 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"





__declspec(dllimport)
BOOL
__stdcall
QueryFullProcessImageNameA(
     HANDLE hProcess,
     DWORD dwFlags,
     LPSTR lpExeName,
     PDWORD lpdwSize
    );
__declspec(dllimport)
BOOL
__stdcall
QueryFullProcessImageNameW(
     HANDLE hProcess,
     DWORD dwFlags,
     LPWSTR lpExeName,
     PDWORD lpdwSize
    );




#line 7353 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

#line 7355 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"












typedef enum _PROC_THREAD_ATTRIBUTE_NUM {
    ProcThreadAttributeParentProcess = 0,
    ProcThreadAttributeExtendedFlags,
    ProcThreadAttributeHandleList,
    ProcThreadAttributeGroupAffinity,
    ProcThreadAttributePreferredNode,
    ProcThreadAttributeIdealProcessor,
    ProcThreadAttributeUmsThread,
    ProcThreadAttributeMitigationPolicy,
    ProcThreadAttributeMax
} PROC_THREAD_ATTRIBUTE_NUM;





























__declspec(dllimport)
BOOL
__stdcall
InitializeProcThreadAttributeList(
     LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList,
     DWORD dwAttributeCount,
     DWORD dwFlags,
     PSIZE_T lpSize
    );

__declspec(dllimport)
void
__stdcall
DeleteProcThreadAttributeList(
     LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList
    );



__declspec(dllimport)
BOOL
__stdcall
UpdateProcThreadAttribute(
     LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList,
     DWORD dwFlags,
     DWORD_PTR Attribute,
     PVOID lpValue,
     SIZE_T cbSize,
     PVOID lpPreviousValue,
     PSIZE_T lpReturnSize
    );

#line 7440 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"


__declspec(dllimport)
BOOL
__stdcall
CreateProcessA(
        LPCSTR lpApplicationName,
     LPSTR lpCommandLine,
        LPSECURITY_ATTRIBUTES lpProcessAttributes,
        LPSECURITY_ATTRIBUTES lpThreadAttributes,
            BOOL bInheritHandles,
            DWORD dwCreationFlags,
        LPVOID lpEnvironment,
        LPCSTR lpCurrentDirectory,
            LPSTARTUPINFOA lpStartupInfo,
           LPPROCESS_INFORMATION lpProcessInformation
    );
__declspec(dllimport)
BOOL
__stdcall
CreateProcessW(
        LPCWSTR lpApplicationName,
     LPWSTR lpCommandLine,
        LPSECURITY_ATTRIBUTES lpProcessAttributes,
        LPSECURITY_ATTRIBUTES lpThreadAttributes,
            BOOL bInheritHandles,
            DWORD dwCreationFlags,
        LPVOID lpEnvironment,
        LPCWSTR lpCurrentDirectory,
            LPSTARTUPINFOW lpStartupInfo,
           LPPROCESS_INFORMATION lpProcessInformation
    );




#line 7477 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"



__declspec(dllimport)
BOOL
__stdcall
SetProcessShutdownParameters(
     DWORD dwLevel,
     DWORD dwFlags
    );

__declspec(dllimport)
BOOL
__stdcall
GetProcessShutdownParameters(
     LPDWORD lpdwLevel,
     LPDWORD lpdwFlags
    );

__declspec(dllimport)
DWORD
__stdcall
GetProcessVersion(
     DWORD ProcessId
    );

__declspec(dllimport)
void
__stdcall
FatalAppExitA(
     UINT uAction,
     LPCSTR lpMessageText
    );
__declspec(dllimport)
void
__stdcall
FatalAppExitW(
     UINT uAction,
     LPCWSTR lpMessageText
    );




#line 7522 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
void
__stdcall
GetStartupInfoA(
     LPSTARTUPINFOA lpStartupInfo
    );
__declspec(dllimport)
void
__stdcall
GetStartupInfoW(
     LPSTARTUPINFOW lpStartupInfo
    );




#line 7540 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)

LPSTR
__stdcall
GetCommandLineA(
    void
    );
__declspec(dllimport)

LPWSTR
__stdcall
GetCommandLineW(
    void
    );




#line 7560 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)


DWORD
__stdcall
GetEnvironmentVariableA(
     LPCSTR lpName,
     LPSTR lpBuffer,
     DWORD nSize
    );
__declspec(dllimport)


DWORD
__stdcall
GetEnvironmentVariableW(
     LPCWSTR lpName,
     LPWSTR lpBuffer,
     DWORD nSize
    );




#line 7586 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"





















#line 7608 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
SetEnvironmentVariableA(
         LPCSTR lpName,
     LPCSTR lpValue
    );
__declspec(dllimport)
BOOL
__stdcall
SetEnvironmentVariableW(
         LPCWSTR lpName,
     LPCWSTR lpValue
    );




#line 7628 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"



















#line 7648 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)


DWORD
__stdcall
ExpandEnvironmentStringsA(
     LPCSTR lpSrc,
     LPSTR lpDst,
     DWORD nSize
    );
__declspec(dllimport)


DWORD
__stdcall
ExpandEnvironmentStringsW(
     LPCWSTR lpSrc,
     LPWSTR lpDst,
     DWORD nSize
    );




#line 7674 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
DWORD
__stdcall
GetFirmwareEnvironmentVariableA(
     LPCSTR lpName,
     LPCSTR lpGuid,
     PVOID pBuffer,
     DWORD    nSize
    );
__declspec(dllimport)
DWORD
__stdcall
GetFirmwareEnvironmentVariableW(
     LPCWSTR lpName,
     LPCWSTR lpGuid,
     PVOID pBuffer,
     DWORD    nSize
    );




#line 7698 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
SetFirmwareEnvironmentVariableA(
     LPCSTR lpName,
     LPCSTR lpGuid,
     PVOID pValue,
     DWORD    nSize
    );
__declspec(dllimport)
BOOL
__stdcall
SetFirmwareEnvironmentVariableW(
     LPCWSTR lpName,
     LPCWSTR lpGuid,
     PVOID pValue,
     DWORD    nSize
    );




#line 7722 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"


__declspec(dllimport)
void
__stdcall
OutputDebugStringA(
     LPCSTR lpOutputString
    );
__declspec(dllimport)
void
__stdcall
OutputDebugStringW(
     LPCWSTR lpOutputString
    );




#line 7741 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)

HRSRC
__stdcall
FindResourceA(
     HMODULE hModule,
         LPCSTR lpName,
         LPCSTR lpType
    );
__declspec(dllimport)

HRSRC
__stdcall
FindResourceW(
     HMODULE hModule,
         LPCWSTR lpName,
         LPCWSTR lpType
    );




#line 7765 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)

HRSRC
__stdcall
FindResourceExA(
     HMODULE hModule,
         LPCSTR lpType,
         LPCSTR lpName,
         WORD    wLanguage
    );
__declspec(dllimport)

HRSRC
__stdcall
FindResourceExW(
     HMODULE hModule,
         LPCWSTR lpType,
         LPCWSTR lpName,
         WORD    wLanguage
    );




#line 7791 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"


typedef BOOL (__stdcall* ENUMRESTYPEPROCA)( HMODULE hModule,  LPSTR lpType,
 LONG_PTR lParam);
typedef BOOL (__stdcall* ENUMRESTYPEPROCW)( HMODULE hModule,  LPWSTR lpType,
 LONG_PTR lParam);




#line 7802 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"
typedef BOOL (__stdcall* ENUMRESNAMEPROCA)( HMODULE hModule,  LPCSTR lpType,
 LPSTR lpName,  LONG_PTR lParam);
typedef BOOL (__stdcall* ENUMRESNAMEPROCW)( HMODULE hModule,  LPCWSTR lpType,
 LPWSTR lpName,  LONG_PTR lParam);




#line 7811 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"
typedef BOOL (__stdcall* ENUMRESLANGPROCA)( HMODULE hModule,  LPCSTR lpType,
 LPCSTR lpName,  WORD  wLanguage,  LONG_PTR lParam);
typedef BOOL (__stdcall* ENUMRESLANGPROCW)( HMODULE hModule,  LPCWSTR lpType,
 LPCWSTR lpName,  WORD  wLanguage,  LONG_PTR lParam);




#line 7820 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"






















#line 7843 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
EnumResourceTypesA(
     HMODULE hModule,
         ENUMRESTYPEPROCA lpEnumFunc,
         LONG_PTR lParam
    );
__declspec(dllimport)
BOOL
__stdcall
EnumResourceTypesW(
     HMODULE hModule,
         ENUMRESTYPEPROCW lpEnumFunc,
         LONG_PTR lParam
    );




#line 7865 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
EnumResourceNamesA(
     HMODULE hModule,
         LPCSTR lpType,
         ENUMRESNAMEPROCA lpEnumFunc,
         LONG_PTR lParam
    );
__declspec(dllimport)
BOOL
__stdcall
EnumResourceNamesW(
     HMODULE hModule,
         LPCWSTR lpType,
         ENUMRESNAMEPROCW lpEnumFunc,
         LONG_PTR lParam
    );




#line 7889 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
EnumResourceLanguagesA(
     HMODULE hModule,
         LPCSTR lpType,
         LPCSTR lpName,
         ENUMRESLANGPROCA lpEnumFunc,
         LONG_PTR lParam
    );
__declspec(dllimport)
BOOL
__stdcall
EnumResourceLanguagesW(
     HMODULE hModule,
         LPCWSTR lpType,
         LPCWSTR lpName,
         ENUMRESLANGPROCW lpEnumFunc,
         LONG_PTR lParam
    );




#line 7915 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"







__declspec(dllimport)
BOOL
__stdcall
EnumResourceTypesExA(
     HMODULE hModule,
     ENUMRESTYPEPROCA lpEnumFunc,
     LONG_PTR lParam,
    DWORD dwFlags,
    LANGID LangId
    );
__declspec(dllimport)
BOOL
__stdcall
EnumResourceTypesExW(
     HMODULE hModule,
     ENUMRESTYPEPROCW lpEnumFunc,
     LONG_PTR lParam,
    DWORD dwFlags,
    LANGID LangId
    );




#line 7947 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"


__declspec(dllimport)
BOOL
__stdcall
EnumResourceNamesExA(
     HMODULE hModule,
     LPCSTR lpType,
     ENUMRESNAMEPROCA lpEnumFunc,
     LONG_PTR lParam,
    DWORD dwFlags,
    LANGID LangId
    );
__declspec(dllimport)
BOOL
__stdcall
EnumResourceNamesExW(
     HMODULE hModule,
     LPCWSTR lpType,
     ENUMRESNAMEPROCW lpEnumFunc,
     LONG_PTR lParam,
    DWORD dwFlags,
    LANGID LangId
    );




#line 7976 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
EnumResourceLanguagesExA(
     HMODULE hModule,
     LPCSTR lpType,
     LPCSTR lpName,
     ENUMRESLANGPROCA lpEnumFunc,
     LONG_PTR lParam,
    DWORD dwFlags,
    LANGID LangId
    );
__declspec(dllimport)
BOOL
__stdcall
EnumResourceLanguagesExW(
     HMODULE hModule,
     LPCWSTR lpType,
     LPCWSTR lpName,
     ENUMRESLANGPROCW lpEnumFunc,
     LONG_PTR lParam,
    DWORD dwFlags,
    LANGID LangId
    );




#line 8006 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
HANDLE
__stdcall
BeginUpdateResourceA(
     LPCSTR pFileName,
     BOOL bDeleteExistingResources
    );
__declspec(dllimport)
HANDLE
__stdcall
BeginUpdateResourceW(
     LPCWSTR pFileName,
     BOOL bDeleteExistingResources
    );




#line 8026 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
UpdateResourceA(
     HANDLE hUpdate,
     LPCSTR lpType,
     LPCSTR lpName,
     WORD wLanguage,
     LPVOID lpData,
     DWORD cb
    );
__declspec(dllimport)
BOOL
__stdcall
UpdateResourceW(
     HANDLE hUpdate,
     LPCWSTR lpType,
     LPCWSTR lpName,
     WORD wLanguage,
     LPVOID lpData,
     DWORD cb
    );




#line 8054 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
EndUpdateResourceA(
     HANDLE hUpdate,
     BOOL   fDiscard
    );
__declspec(dllimport)
BOOL
__stdcall
EndUpdateResourceW(
     HANDLE hUpdate,
     BOOL   fDiscard
    );




#line 8074 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"


__declspec(dllimport)
ATOM
__stdcall
GlobalAddAtomA(
     LPCSTR lpString
    );
__declspec(dllimport)
ATOM
__stdcall
GlobalAddAtomW(
     LPCWSTR lpString
    );




#line 8093 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
ATOM
__stdcall
GlobalFindAtomA(
     LPCSTR lpString
    );
__declspec(dllimport)
ATOM
__stdcall
GlobalFindAtomW(
     LPCWSTR lpString
    );




#line 8111 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
UINT
__stdcall
GlobalGetAtomNameA(
     ATOM nAtom,
     LPSTR lpBuffer,
     int nSize
    );
__declspec(dllimport)
UINT
__stdcall
GlobalGetAtomNameW(
     ATOM nAtom,
     LPWSTR lpBuffer,
     int nSize
    );




#line 8133 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
ATOM
__stdcall
AddAtomA(
     LPCSTR lpString
    );
__declspec(dllimport)
ATOM
__stdcall
AddAtomW(
     LPCWSTR lpString
    );




#line 8151 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
ATOM
__stdcall
FindAtomA(
     LPCSTR lpString
    );
__declspec(dllimport)
ATOM
__stdcall
FindAtomW(
     LPCWSTR lpString
    );




#line 8169 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
UINT
__stdcall
GetAtomNameA(
     ATOM nAtom,
     LPSTR lpBuffer,
     int nSize
    );
__declspec(dllimport)
UINT
__stdcall
GetAtomNameW(
     ATOM nAtom,
     LPWSTR lpBuffer,
     int nSize
    );




#line 8191 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
UINT
__stdcall
GetProfileIntA(
     LPCSTR lpAppName,
     LPCSTR lpKeyName,
     INT nDefault
    );
__declspec(dllimport)
UINT
__stdcall
GetProfileIntW(
     LPCWSTR lpAppName,
     LPCWSTR lpKeyName,
     INT nDefault
    );




#line 8213 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
DWORD
__stdcall
GetProfileStringA(
     LPCSTR lpAppName,
     LPCSTR lpKeyName,
     LPCSTR lpDefault,
     LPSTR lpReturnedString,
         DWORD nSize
    );
__declspec(dllimport)
DWORD
__stdcall
GetProfileStringW(
     LPCWSTR lpAppName,
     LPCWSTR lpKeyName,
     LPCWSTR lpDefault,
     LPWSTR lpReturnedString,
         DWORD nSize
    );




#line 8239 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
WriteProfileStringA(
     LPCSTR lpAppName,
     LPCSTR lpKeyName,
     LPCSTR lpString
    );
__declspec(dllimport)
BOOL
__stdcall
WriteProfileStringW(
     LPCWSTR lpAppName,
     LPCWSTR lpKeyName,
     LPCWSTR lpString
    );




#line 8261 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
DWORD
__stdcall
GetProfileSectionA(
     LPCSTR lpAppName,
     LPSTR lpReturnedString,
     DWORD nSize
    );
__declspec(dllimport)
DWORD
__stdcall
GetProfileSectionW(
     LPCWSTR lpAppName,
     LPWSTR lpReturnedString,
     DWORD nSize
    );




#line 8283 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
WriteProfileSectionA(
     LPCSTR lpAppName,
     LPCSTR lpString
    );
__declspec(dllimport)
BOOL
__stdcall
WriteProfileSectionW(
     LPCWSTR lpAppName,
     LPCWSTR lpString
    );




#line 8303 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
UINT
__stdcall
GetPrivateProfileIntA(
         LPCSTR lpAppName,
         LPCSTR lpKeyName,
         INT nDefault,
     LPCSTR lpFileName
    );
__declspec(dllimport)
UINT
__stdcall
GetPrivateProfileIntW(
         LPCWSTR lpAppName,
         LPCWSTR lpKeyName,
         INT nDefault,
     LPCWSTR lpFileName
    );




#line 8327 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"























#line 8351 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
DWORD
__stdcall
GetPrivateProfileStringA(
     LPCSTR lpAppName,
     LPCSTR lpKeyName,
     LPCSTR lpDefault,
     LPSTR lpReturnedString,
         DWORD nSize,
     LPCSTR lpFileName
    );
__declspec(dllimport)
DWORD
__stdcall
GetPrivateProfileStringW(
     LPCWSTR lpAppName,
     LPCWSTR lpKeyName,
     LPCWSTR lpDefault,
     LPWSTR lpReturnedString,
         DWORD nSize,
     LPCWSTR lpFileName
    );




#line 8379 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"



























#line 8407 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
WritePrivateProfileStringA(
     LPCSTR lpAppName,
     LPCSTR lpKeyName,
     LPCSTR lpString,
     LPCSTR lpFileName
    );
__declspec(dllimport)
BOOL
__stdcall
WritePrivateProfileStringW(
     LPCWSTR lpAppName,
     LPCWSTR lpKeyName,
     LPCWSTR lpString,
     LPCWSTR lpFileName
    );




#line 8431 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
DWORD
__stdcall
GetPrivateProfileSectionA(
         LPCSTR lpAppName,
     LPSTR lpReturnedString,
         DWORD nSize,
     LPCSTR lpFileName
    );
__declspec(dllimport)
DWORD
__stdcall
GetPrivateProfileSectionW(
         LPCWSTR lpAppName,
     LPWSTR lpReturnedString,
         DWORD nSize,
     LPCWSTR lpFileName
    );




#line 8455 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"























#line 8479 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
WritePrivateProfileSectionA(
     LPCSTR lpAppName,
     LPCSTR lpString,
     LPCSTR lpFileName
    );
__declspec(dllimport)
BOOL
__stdcall
WritePrivateProfileSectionW(
     LPCWSTR lpAppName,
     LPCWSTR lpString,
     LPCWSTR lpFileName
    );




#line 8501 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"


__declspec(dllimport)
DWORD
__stdcall
GetPrivateProfileSectionNamesA(
     LPSTR lpszReturnBuffer,
         DWORD nSize,
     LPCSTR lpFileName
    );
__declspec(dllimport)
DWORD
__stdcall
GetPrivateProfileSectionNamesW(
     LPWSTR lpszReturnBuffer,
         DWORD nSize,
     LPCWSTR lpFileName
    );




#line 8524 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"





















#line 8546 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
GetPrivateProfileStructA(
         LPCSTR lpszSection,
         LPCSTR lpszKey,
     LPVOID   lpStruct,
         UINT     uSizeStruct,
     LPCSTR szFile
    );
__declspec(dllimport)
BOOL
__stdcall
GetPrivateProfileStructW(
         LPCWSTR lpszSection,
         LPCWSTR lpszKey,
     LPVOID   lpStruct,
         UINT     uSizeStruct,
     LPCWSTR szFile
    );




#line 8572 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

























#line 8598 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
WritePrivateProfileStructA(
         LPCSTR lpszSection,
         LPCSTR lpszKey,
     LPVOID lpStruct,
         UINT     uSizeStruct,
     LPCSTR szFile
    );
__declspec(dllimport)
BOOL
__stdcall
WritePrivateProfileStructW(
         LPCWSTR lpszSection,
         LPCWSTR lpszKey,
     LPVOID lpStruct,
         UINT     uSizeStruct,
     LPCWSTR szFile
    );




#line 8624 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"


__declspec(dllimport)
UINT
__stdcall
GetDriveTypeA(
     LPCSTR lpRootPathName
    );
__declspec(dllimport)
UINT
__stdcall
GetDriveTypeW(
     LPCWSTR lpRootPathName
    );




#line 8643 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
UINT
__stdcall
GetSystemDirectoryA(
     LPSTR lpBuffer,
     UINT uSize
    );
__declspec(dllimport)
UINT
__stdcall
GetSystemDirectoryW(
     LPWSTR lpBuffer,
     UINT uSize
    );




#line 8663 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
DWORD
__stdcall
GetTempPathA(
     DWORD nBufferLength,
     LPSTR lpBuffer
    );
__declspec(dllimport)
DWORD
__stdcall
GetTempPathW(
     DWORD nBufferLength,
     LPWSTR lpBuffer
    );




#line 8683 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
UINT
__stdcall
GetTempFileNameA(
     LPCSTR lpPathName,
     LPCSTR lpPrefixString,
     UINT uUnique,
     LPSTR lpTempFileName
    );
__declspec(dllimport)
UINT
__stdcall
GetTempFileNameW(
     LPCWSTR lpPathName,
     LPCWSTR lpPrefixString,
     UINT uUnique,
     LPWSTR lpTempFileName
    );




#line 8707 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"























#line 8731 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
UINT
__stdcall
GetWindowsDirectoryA(
     LPSTR lpBuffer,
     UINT uSize
    );
__declspec(dllimport)
UINT
__stdcall
GetWindowsDirectoryW(
     LPWSTR lpBuffer,
     UINT uSize
    );




#line 8751 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
UINT
__stdcall
GetSystemWindowsDirectoryA(
     LPSTR lpBuffer,
     UINT uSize
    );
__declspec(dllimport)
UINT
__stdcall
GetSystemWindowsDirectoryW(
     LPWSTR lpBuffer,
     UINT uSize
    );




#line 8771 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"




__declspec(dllimport)
UINT
__stdcall
GetSystemWow64DirectoryA(
     LPSTR lpBuffer,
     UINT uSize
    );
__declspec(dllimport)
UINT
__stdcall
GetSystemWow64DirectoryW(
     LPWSTR lpBuffer,
     UINT uSize
    );




#line 8794 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOLEAN
__stdcall
Wow64EnableWow64FsRedirection (
     BOOLEAN Wow64FsEnableRedirection
    );

__declspec(dllimport)
BOOL
__stdcall
Wow64DisableWow64FsRedirection (
     PVOID *OldValue
    );

__declspec(dllimport)
BOOL
__stdcall
Wow64RevertWow64FsRedirection (
     PVOID OlValue
    );





typedef UINT (__stdcall* PGET_SYSTEM_WOW64_DIRECTORY_A)( LPSTR lpBuffer,  UINT uSize);
typedef UINT (__stdcall* PGET_SYSTEM_WOW64_DIRECTORY_W)( LPWSTR lpBuffer,  UINT uSize);





















#line 8844 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

#line 8846 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"
#line 8847 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
SetCurrentDirectoryA(
     LPCSTR lpPathName
    );
__declspec(dllimport)
BOOL
__stdcall
SetCurrentDirectoryW(
     LPCWSTR lpPathName
    );




#line 8865 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

















#line 8883 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
DWORD
__stdcall
GetCurrentDirectoryA(
     DWORD nBufferLength,
     LPSTR lpBuffer
    );
__declspec(dllimport)
DWORD
__stdcall
GetCurrentDirectoryW(
     DWORD nBufferLength,
     LPWSTR lpBuffer
    );




#line 8903 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"



















#line 8923 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"



__declspec(dllimport)
BOOL
__stdcall
SetDllDirectoryA(
     LPCSTR lpPathName
    );
__declspec(dllimport)
BOOL
__stdcall
SetDllDirectoryW(
     LPCWSTR lpPathName
    );




#line 8943 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
DWORD
__stdcall
GetDllDirectoryA(
     DWORD nBufferLength,
     LPSTR lpBuffer
    );
__declspec(dllimport)
DWORD
__stdcall
GetDllDirectoryW(
     DWORD nBufferLength,
     LPWSTR lpBuffer
    );




#line 8963 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

#line 8965 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"






__declspec(dllimport)
BOOL
__stdcall
SetSearchPathMode (
     DWORD Flags
    );

__declspec(dllimport)
BOOL
__stdcall
GetDiskFreeSpaceA(
      LPCSTR lpRootPathName,
     LPDWORD lpSectorsPerCluster,
     LPDWORD lpBytesPerSector,
     LPDWORD lpNumberOfFreeClusters,
     LPDWORD lpTotalNumberOfClusters
    );
__declspec(dllimport)
BOOL
__stdcall
GetDiskFreeSpaceW(
      LPCWSTR lpRootPathName,
     LPDWORD lpSectorsPerCluster,
     LPDWORD lpBytesPerSector,
     LPDWORD lpNumberOfFreeClusters,
     LPDWORD lpTotalNumberOfClusters
    );




#line 9003 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
GetDiskFreeSpaceExA(
      LPCSTR lpDirectoryName,
     PULARGE_INTEGER lpFreeBytesAvailableToCaller,
     PULARGE_INTEGER lpTotalNumberOfBytes,
     PULARGE_INTEGER lpTotalNumberOfFreeBytes
    );
__declspec(dllimport)
BOOL
__stdcall
GetDiskFreeSpaceExW(
      LPCWSTR lpDirectoryName,
     PULARGE_INTEGER lpFreeBytesAvailableToCaller,
     PULARGE_INTEGER lpTotalNumberOfBytes,
     PULARGE_INTEGER lpTotalNumberOfFreeBytes
    );




#line 9027 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
CreateDirectoryA(
         LPCSTR lpPathName,
     LPSECURITY_ATTRIBUTES lpSecurityAttributes
    );
__declspec(dllimport)
BOOL
__stdcall
CreateDirectoryW(
         LPCWSTR lpPathName,
     LPSECURITY_ATTRIBUTES lpSecurityAttributes
    );




#line 9047 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"



















#line 9067 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
CreateDirectoryExA(
         LPCSTR lpTemplateDirectory,
         LPCSTR lpNewDirectory,
     LPSECURITY_ATTRIBUTES lpSecurityAttributes
    );
__declspec(dllimport)
BOOL
__stdcall
CreateDirectoryExW(
         LPCWSTR lpTemplateDirectory,
         LPCWSTR lpNewDirectory,
     LPSECURITY_ATTRIBUTES lpSecurityAttributes
    );




#line 9089 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"



__declspec(dllimport)
BOOL
__stdcall
CreateDirectoryTransactedA(
     LPCSTR lpTemplateDirectory,
         LPCSTR lpNewDirectory,
     LPSECURITY_ATTRIBUTES lpSecurityAttributes,
         HANDLE hTransaction
    );
__declspec(dllimport)
BOOL
__stdcall
CreateDirectoryTransactedW(
     LPCWSTR lpTemplateDirectory,
         LPCWSTR lpNewDirectory,
     LPSECURITY_ATTRIBUTES lpSecurityAttributes,
         HANDLE hTransaction
    );




#line 9115 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

#line 9117 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
RemoveDirectoryA(
     LPCSTR lpPathName
    );
__declspec(dllimport)
BOOL
__stdcall
RemoveDirectoryW(
     LPCWSTR lpPathName
    );




#line 9135 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"



__declspec(dllimport)
BOOL
__stdcall
RemoveDirectoryTransactedA(
     LPCSTR lpPathName,
         HANDLE hTransaction
    );
__declspec(dllimport)
BOOL
__stdcall
RemoveDirectoryTransactedW(
     LPCWSTR lpPathName,
         HANDLE hTransaction
    );




#line 9157 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

#line 9159 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
DWORD
__stdcall
GetFullPathNameA(
                LPCSTR lpFileName,
                DWORD nBufferLength,
     LPSTR lpBuffer,
     LPSTR *lpFilePart
    );
__declspec(dllimport)
DWORD
__stdcall
GetFullPathNameW(
                LPCWSTR lpFileName,
                DWORD nBufferLength,
     LPWSTR lpBuffer,
     LPWSTR *lpFilePart
    );




#line 9183 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"


__declspec(dllimport)
DWORD
__stdcall
GetFullPathNameTransactedA(
                LPCSTR lpFileName,
                DWORD nBufferLength,
     LPSTR lpBuffer,
     LPSTR *lpFilePart,
                HANDLE hTransaction
    );
__declspec(dllimport)
DWORD
__stdcall
GetFullPathNameTransactedW(
                LPCWSTR lpFileName,
                DWORD nBufferLength,
     LPWSTR lpBuffer,
     LPWSTR *lpFilePart,
                HANDLE hTransaction
    );




#line 9210 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

#line 9212 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"







__declspec(dllimport)
BOOL
__stdcall
DefineDosDeviceA(
         DWORD dwFlags,
         LPCSTR lpDeviceName,
     LPCSTR lpTargetPath
    );
__declspec(dllimport)
BOOL
__stdcall
DefineDosDeviceW(
         DWORD dwFlags,
         LPCWSTR lpDeviceName,
     LPCWSTR lpTargetPath
    );




#line 9240 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
DWORD
__stdcall
QueryDosDeviceA(
     LPCSTR lpDeviceName,
     LPSTR lpTargetPath,
         DWORD ucchMax
    );
__declspec(dllimport)
DWORD
__stdcall
QueryDosDeviceW(
     LPCWSTR lpDeviceName,
     LPWSTR lpTargetPath,
         DWORD ucchMax
    );




#line 9262 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"



__declspec(dllimport)

HANDLE
__stdcall
CreateFileA(
         LPCSTR lpFileName,
         DWORD dwDesiredAccess,
         DWORD dwShareMode,
     LPSECURITY_ATTRIBUTES lpSecurityAttributes,
         DWORD dwCreationDisposition,
         DWORD dwFlagsAndAttributes,
     HANDLE hTemplateFile
    );
__declspec(dllimport)

HANDLE
__stdcall
CreateFileW(
         LPCWSTR lpFileName,
         DWORD dwDesiredAccess,
         DWORD dwShareMode,
     LPSECURITY_ATTRIBUTES lpSecurityAttributes,
         DWORD dwCreationDisposition,
         DWORD dwFlagsAndAttributes,
     HANDLE hTemplateFile
    );




#line 9296 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"



__declspec(dllimport)

HANDLE
__stdcall
CreateFileTransactedA(
           LPCSTR lpFileName,
           DWORD dwDesiredAccess,
           DWORD dwShareMode,
       LPSECURITY_ATTRIBUTES lpSecurityAttributes,
           DWORD dwCreationDisposition,
           DWORD dwFlagsAndAttributes,
       HANDLE hTemplateFile,
           HANDLE hTransaction,
       PUSHORT pusMiniVersion,
     PVOID  lpExtendedParameter
    );
__declspec(dllimport)

HANDLE
__stdcall
CreateFileTransactedW(
           LPCWSTR lpFileName,
           DWORD dwDesiredAccess,
           DWORD dwShareMode,
       LPSECURITY_ATTRIBUTES lpSecurityAttributes,
           DWORD dwCreationDisposition,
           DWORD dwFlagsAndAttributes,
       HANDLE hTemplateFile,
           HANDLE hTransaction,
       PUSHORT pusMiniVersion,
     PVOID  lpExtendedParameter
    );




#line 9336 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

#line 9338 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"




__declspec(dllimport)

HANDLE
__stdcall
ReOpenFile(
     HANDLE  hOriginalFile,
     DWORD   dwDesiredAccess,
     DWORD   dwShareMode,
     DWORD   dwFlagsAndAttributes
    );

#line 9354 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
SetFileAttributesA(
     LPCSTR lpFileName,
     DWORD dwFileAttributes
    );
__declspec(dllimport)
BOOL
__stdcall
SetFileAttributesW(
     LPCWSTR lpFileName,
     DWORD dwFileAttributes
    );




#line 9374 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
DWORD
__stdcall
GetFileAttributesA(
     LPCSTR lpFileName
    );
__declspec(dllimport)
DWORD
__stdcall
GetFileAttributesW(
     LPCWSTR lpFileName
    );




#line 9392 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"



__declspec(dllimport)
BOOL
__stdcall
SetFileAttributesTransactedA(
         LPCSTR lpFileName,
         DWORD dwFileAttributes,
         HANDLE hTransaction
    );
__declspec(dllimport)
BOOL
__stdcall
SetFileAttributesTransactedW(
         LPCWSTR lpFileName,
         DWORD dwFileAttributes,
         HANDLE hTransaction
    );




#line 9416 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

#line 9418 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

typedef enum _GET_FILEEX_INFO_LEVELS {
    GetFileExInfoStandard,
    GetFileExMaxInfoLevel
} GET_FILEEX_INFO_LEVELS;



__declspec(dllimport)
BOOL
__stdcall
GetFileAttributesTransactedA(
      LPCSTR lpFileName,
      GET_FILEEX_INFO_LEVELS fInfoLevelId,
     LPVOID lpFileInformation,
         HANDLE hTransaction
    );
__declspec(dllimport)
BOOL
__stdcall
GetFileAttributesTransactedW(
      LPCWSTR lpFileName,
      GET_FILEEX_INFO_LEVELS fInfoLevelId,
     LPVOID lpFileInformation,
         HANDLE hTransaction
    );




#line 9449 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

#line 9451 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
GetFileAttributesExA(
      LPCSTR lpFileName,
      GET_FILEEX_INFO_LEVELS fInfoLevelId,
     LPVOID lpFileInformation
    );
__declspec(dllimport)
BOOL
__stdcall
GetFileAttributesExW(
      LPCWSTR lpFileName,
      GET_FILEEX_INFO_LEVELS fInfoLevelId,
     LPVOID lpFileInformation
    );




#line 9473 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
DWORD
__stdcall
GetCompressedFileSizeA(
      LPCSTR lpFileName,
     LPDWORD  lpFileSizeHigh
    );
__declspec(dllimport)
DWORD
__stdcall
GetCompressedFileSizeW(
      LPCWSTR lpFileName,
     LPDWORD  lpFileSizeHigh
    );




#line 9493 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"



__declspec(dllimport)
DWORD
__stdcall
GetCompressedFileSizeTransactedA(
          LPCSTR lpFileName,
     LPDWORD  lpFileSizeHigh,
          HANDLE hTransaction
    );
__declspec(dllimport)
DWORD
__stdcall
GetCompressedFileSizeTransactedW(
          LPCWSTR lpFileName,
     LPDWORD  lpFileSizeHigh,
          HANDLE hTransaction
    );




#line 9517 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

#line 9519 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
DeleteFileA(
     LPCSTR lpFileName
    );
__declspec(dllimport)
BOOL
__stdcall
DeleteFileW(
     LPCWSTR lpFileName
    );




#line 9537 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"



__declspec(dllimport)
BOOL
__stdcall
DeleteFileTransactedA(
         LPCSTR lpFileName,
         HANDLE hTransaction
    );
__declspec(dllimport)
BOOL
__stdcall
DeleteFileTransactedW(
         LPCWSTR lpFileName,
         HANDLE hTransaction
    );




#line 9559 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

#line 9561 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

















#line 9579 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"




__declspec(dllimport)
BOOL
__stdcall
CheckNameLegalDOS8Dot3A(
          LPCSTR lpName,
     LPSTR lpOemName,
          DWORD OemNameSize,
     PBOOL pbNameContainsSpaces ,
         PBOOL pbNameLegal
    );
__declspec(dllimport)
BOOL
__stdcall
CheckNameLegalDOS8Dot3W(
          LPCWSTR lpName,
     LPSTR lpOemName,
          DWORD OemNameSize,
     PBOOL pbNameContainsSpaces ,
         PBOOL pbNameLegal
    );




#line 9608 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

#line 9610 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"


typedef enum _FINDEX_INFO_LEVELS {
    FindExInfoStandard,
    FindExInfoBasic,
    FindExInfoMaxInfoLevel
} FINDEX_INFO_LEVELS;

typedef enum _FINDEX_SEARCH_OPS {
    FindExSearchNameMatch,
    FindExSearchLimitToDirectories,
    FindExSearchLimitToDevices,
    FindExSearchMaxSearchOp
} FINDEX_SEARCH_OPS;




__declspec(dllimport)

HANDLE
__stdcall
FindFirstFileExA(
           LPCSTR lpFileName,
           FINDEX_INFO_LEVELS fInfoLevelId,
          LPVOID lpFindFileData,
           FINDEX_SEARCH_OPS fSearchOp,
     LPVOID lpSearchFilter,
           DWORD dwAdditionalFlags
    );
__declspec(dllimport)

HANDLE
__stdcall
FindFirstFileExW(
           LPCWSTR lpFileName,
           FINDEX_INFO_LEVELS fInfoLevelId,
          LPVOID lpFindFileData,
           FINDEX_SEARCH_OPS fSearchOp,
     LPVOID lpSearchFilter,
           DWORD dwAdditionalFlags
    );




#line 9657 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"



__declspec(dllimport)

HANDLE
__stdcall
FindFirstFileTransactedA(
           LPCSTR lpFileName,
           FINDEX_INFO_LEVELS fInfoLevelId,
          LPVOID lpFindFileData,
           FINDEX_SEARCH_OPS fSearchOp,
     LPVOID lpSearchFilter,
           DWORD dwAdditionalFlags,
           HANDLE hTransaction
    );
__declspec(dllimport)

HANDLE
__stdcall
FindFirstFileTransactedW(
           LPCWSTR lpFileName,
           FINDEX_INFO_LEVELS fInfoLevelId,
          LPVOID lpFindFileData,
           FINDEX_SEARCH_OPS fSearchOp,
     LPVOID lpSearchFilter,
           DWORD dwAdditionalFlags,
           HANDLE hTransaction
    );




#line 9691 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

#line 9693 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

#line 9695 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)

HANDLE
__stdcall
FindFirstFileA(
      LPCSTR lpFileName,
     LPWIN32_FIND_DATAA lpFindFileData
    );
__declspec(dllimport)

HANDLE
__stdcall
FindFirstFileW(
      LPCWSTR lpFileName,
     LPWIN32_FIND_DATAW lpFindFileData
    );




#line 9717 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
FindNextFileA(
      HANDLE hFindFile,
     LPWIN32_FIND_DATAA lpFindFileData
    );
__declspec(dllimport)
BOOL
__stdcall
FindNextFileW(
      HANDLE hFindFile,
     LPWIN32_FIND_DATAW lpFindFileData
    );




#line 9737 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"


__declspec(dllimport)
DWORD
__stdcall
SearchPathA(
      LPCSTR lpPath,
          LPCSTR lpFileName,
      LPCSTR lpExtension,
          DWORD nBufferLength,
     LPSTR lpBuffer,
     LPSTR *lpFilePart
    );
__declspec(dllimport)
DWORD
__stdcall
SearchPathW(
      LPCWSTR lpPath,
          LPCWSTR lpFileName,
      LPCWSTR lpExtension,
          DWORD nBufferLength,
     LPWSTR lpBuffer,
     LPWSTR *lpFilePart
    );




#line 9766 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
CopyFileA(
     LPCSTR lpExistingFileName,
     LPCSTR lpNewFileName,
     BOOL bFailIfExists
    );
__declspec(dllimport)
BOOL
__stdcall
CopyFileW(
     LPCWSTR lpExistingFileName,
     LPCWSTR lpNewFileName,
     BOOL bFailIfExists
    );




#line 9788 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"





















#line 9810 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"


typedef
DWORD
(__stdcall *LPPROGRESS_ROUTINE)(
         LARGE_INTEGER TotalFileSize,
         LARGE_INTEGER TotalBytesTransferred,
         LARGE_INTEGER StreamSize,
         LARGE_INTEGER StreamBytesTransferred,
         DWORD dwStreamNumber,
         DWORD dwCallbackReason,
         HANDLE hSourceFile,
         HANDLE hDestinationFile,
     LPVOID lpData
    );

__declspec(dllimport)
BOOL
__stdcall
CopyFileExA(
         LPCSTR lpExistingFileName,
         LPCSTR lpNewFileName,
     LPPROGRESS_ROUTINE lpProgressRoutine,
     LPVOID lpData,
     LPBOOL pbCancel,
         DWORD dwCopyFlags
    );
__declspec(dllimport)
BOOL
__stdcall
CopyFileExW(
         LPCWSTR lpExistingFileName,
         LPCWSTR lpNewFileName,
     LPPROGRESS_ROUTINE lpProgressRoutine,
     LPVOID lpData,
     LPBOOL pbCancel,
         DWORD dwCopyFlags
    );




#line 9853 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"



__declspec(dllimport)
BOOL
__stdcall
CopyFileTransactedA(
         LPCSTR lpExistingFileName,
         LPCSTR lpNewFileName,
     LPPROGRESS_ROUTINE lpProgressRoutine,
     LPVOID lpData,
     LPBOOL pbCancel,
         DWORD dwCopyFlags,
         HANDLE hTransaction
    );
__declspec(dllimport)
BOOL
__stdcall
CopyFileTransactedW(
         LPCWSTR lpExistingFileName,
         LPCWSTR lpNewFileName,
     LPPROGRESS_ROUTINE lpProgressRoutine,
     LPVOID lpData,
     LPBOOL pbCancel,
         DWORD dwCopyFlags,
         HANDLE hTransaction
    );




#line 9885 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

#line 9887 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"
#line 9888 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
MoveFileA(
     LPCSTR lpExistingFileName,
     LPCSTR lpNewFileName
    );
__declspec(dllimport)
BOOL
__stdcall
MoveFileW(
     LPCWSTR lpExistingFileName,
     LPCWSTR lpNewFileName
    );




#line 9908 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"



















#line 9928 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
MoveFileExA(
         LPCSTR lpExistingFileName,
     LPCSTR lpNewFileName,
         DWORD    dwFlags
    );
__declspec(dllimport)
BOOL
__stdcall
MoveFileExW(
         LPCWSTR lpExistingFileName,
     LPCWSTR lpNewFileName,
         DWORD    dwFlags
    );




#line 9950 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"


__declspec(dllimport)
BOOL
__stdcall
MoveFileWithProgressA(
         LPCSTR lpExistingFileName,
     LPCSTR lpNewFileName,
     LPPROGRESS_ROUTINE lpProgressRoutine,
     LPVOID lpData,
         DWORD dwFlags
    );
__declspec(dllimport)
BOOL
__stdcall
MoveFileWithProgressW(
         LPCWSTR lpExistingFileName,
     LPCWSTR lpNewFileName,
     LPPROGRESS_ROUTINE lpProgressRoutine,
     LPVOID lpData,
         DWORD dwFlags
    );




#line 9977 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"
#line 9978 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"


__declspec(dllimport)
BOOL
__stdcall
MoveFileTransactedA(
         LPCSTR lpExistingFileName,
     LPCSTR lpNewFileName,
     LPPROGRESS_ROUTINE lpProgressRoutine,
     LPVOID lpData,
         DWORD dwFlags,
         HANDLE hTransaction
    );
__declspec(dllimport)
BOOL
__stdcall
MoveFileTransactedW(
         LPCWSTR lpExistingFileName,
     LPCWSTR lpNewFileName,
     LPPROGRESS_ROUTINE lpProgressRoutine,
     LPVOID lpData,
         DWORD dwFlags,
         HANDLE hTransaction
    );




#line 10007 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"
#line 10008 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"








#line 10017 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"





__declspec(dllimport)
BOOL
__stdcall
ReplaceFileA(
           LPCSTR lpReplacedFileName,
           LPCSTR lpReplacementFileName,
       LPCSTR lpBackupFileName,
           DWORD    dwReplaceFlags,
     LPVOID   lpExclude,
     LPVOID  lpReserved
    );
__declspec(dllimport)
BOOL
__stdcall
ReplaceFileW(
           LPCWSTR lpReplacedFileName,
           LPCWSTR lpReplacementFileName,
       LPCWSTR lpBackupFileName,
           DWORD    dwReplaceFlags,
     LPVOID   lpExclude,
     LPVOID  lpReserved
    );




#line 10049 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"
#line 10050 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"







__declspec(dllimport)
BOOL
__stdcall
CreateHardLinkA(
           LPCSTR lpFileName,
           LPCSTR lpExistingFileName,
     LPSECURITY_ATTRIBUTES lpSecurityAttributes
    );
__declspec(dllimport)
BOOL
__stdcall
CreateHardLinkW(
           LPCWSTR lpFileName,
           LPCWSTR lpExistingFileName,
     LPSECURITY_ATTRIBUTES lpSecurityAttributes
    );




#line 10078 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

#line 10080 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"






__declspec(dllimport)
BOOL
__stdcall
CreateHardLinkTransactedA(
           LPCSTR lpFileName,
           LPCSTR lpExistingFileName,
     LPSECURITY_ATTRIBUTES lpSecurityAttributes,
           HANDLE hTransaction
    );
__declspec(dllimport)
BOOL
__stdcall
CreateHardLinkTransactedW(
           LPCWSTR lpFileName,
           LPCWSTR lpExistingFileName,
     LPSECURITY_ATTRIBUTES lpSecurityAttributes,
           HANDLE hTransaction
    );




#line 10109 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

#line 10111 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"








typedef enum _STREAM_INFO_LEVELS {

    FindStreamInfoStandard,
    FindStreamInfoMaxInfoLevel

} STREAM_INFO_LEVELS;

typedef struct _WIN32_FIND_STREAM_DATA {

    LARGE_INTEGER StreamSize;
    WCHAR cStreamName[ 260 + 36 ];

} WIN32_FIND_STREAM_DATA, *PWIN32_FIND_STREAM_DATA;

__declspec(dllimport)

HANDLE
__stdcall
FindFirstStreamW(
           LPCWSTR lpFileName,
           STREAM_INFO_LEVELS InfoLevel,
          LPVOID lpFindStreamData,
     DWORD dwFlags
    );


__declspec(dllimport)
HANDLE
__stdcall
FindFirstStreamTransactedW (
           LPCWSTR lpFileName,
           STREAM_INFO_LEVELS InfoLevel,
          LPVOID lpFindStreamData,
     DWORD dwFlags,
           HANDLE hTransaction
    );
#line 10156 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
FindNextStreamW(
      HANDLE hFindStream,
     LPVOID lpFindStreamData
    );
#line 10165 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"



__declspec(dllimport)
HANDLE
__stdcall
FindFirstFileNameW (
        LPCWSTR lpFileName,
        DWORD dwFlags,
     LPDWORD StringLength,
     PWCHAR LinkName
    );

__declspec(dllimport)
BOOL
__stdcall
FindNextFileNameW (
        HANDLE hFindStream,
     LPDWORD StringLength,
     PWCHAR LinkName
    );

__declspec(dllimport)
HANDLE
__stdcall
FindFirstFileNameTransactedW (
         LPCWSTR lpFileName,
         DWORD dwFlags,
      LPDWORD StringLength,
     PWCHAR LinkName,
     HANDLE hTransaction
    );

#line 10199 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"


__declspec(dllimport)

HANDLE
__stdcall
CreateNamedPipeA(
         LPCSTR lpName,
         DWORD dwOpenMode,
         DWORD dwPipeMode,
         DWORD nMaxInstances,
         DWORD nOutBufferSize,
         DWORD nInBufferSize,
         DWORD nDefaultTimeOut,
     LPSECURITY_ATTRIBUTES lpSecurityAttributes
    );
__declspec(dllimport)

HANDLE
__stdcall
CreateNamedPipeW(
         LPCWSTR lpName,
         DWORD dwOpenMode,
         DWORD dwPipeMode,
         DWORD nMaxInstances,
         DWORD nOutBufferSize,
         DWORD nInBufferSize,
         DWORD nDefaultTimeOut,
     LPSECURITY_ATTRIBUTES lpSecurityAttributes
    );




#line 10234 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
GetNamedPipeHandleStateA(
          HANDLE hNamedPipe,
     LPDWORD lpState,
     LPDWORD lpCurInstances,
     LPDWORD lpMaxCollectionCount,
     LPDWORD lpCollectDataTimeout,
     LPSTR lpUserName,
          DWORD nMaxUserNameSize
    );
__declspec(dllimport)
BOOL
__stdcall
GetNamedPipeHandleStateW(
          HANDLE hNamedPipe,
     LPDWORD lpState,
     LPDWORD lpCurInstances,
     LPDWORD lpMaxCollectionCount,
     LPDWORD lpCollectDataTimeout,
     LPWSTR lpUserName,
          DWORD nMaxUserNameSize
    );




#line 10264 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
CallNamedPipeA(
      LPCSTR lpNamedPipeName,
     LPVOID lpInBuffer,
      DWORD nInBufferSize,
     LPVOID lpOutBuffer,
      DWORD nOutBufferSize,
     LPDWORD lpBytesRead,
      DWORD nTimeOut
    );
__declspec(dllimport)
BOOL
__stdcall
CallNamedPipeW(
      LPCWSTR lpNamedPipeName,
     LPVOID lpInBuffer,
      DWORD nInBufferSize,
     LPVOID lpOutBuffer,
      DWORD nOutBufferSize,
     LPDWORD lpBytesRead,
      DWORD nTimeOut
    );




#line 10294 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
WaitNamedPipeA(
     LPCSTR lpNamedPipeName,
     DWORD nTimeOut
    );
__declspec(dllimport)
BOOL
__stdcall
WaitNamedPipeW(
     LPCWSTR lpNamedPipeName,
     DWORD nTimeOut
    );




#line 10314 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

typedef enum {
    PipeAttribute,
    PipeConnectionAttribute,
    PipeHandleAttribute
} PIPE_ATTRIBUTE_TYPE;

__declspec(dllimport)
BOOL
__stdcall
GetNamedPipeAttribute(
     HANDLE Pipe,
     PIPE_ATTRIBUTE_TYPE AttributeType,
     PSTR AttributeName,
     PVOID AttributeValue,
     PSIZE_T AttributeValueLength
    );

__declspec(dllimport)
BOOL
__stdcall
SetNamedPipeAttribute(
     HANDLE Pipe,
     PIPE_ATTRIBUTE_TYPE AttributeType,
     PSTR AttributeName,
     PVOID AttributeValue,
     SIZE_T AttributeValueLength
    );

__declspec(dllimport)
BOOL
__stdcall
GetNamedPipeClientComputerNameA(
     HANDLE Pipe,
      LPSTR ClientComputerName,
     ULONG ClientComputerNameLength
    );
__declspec(dllimport)
BOOL
__stdcall
GetNamedPipeClientComputerNameW(
     HANDLE Pipe,
      LPWSTR ClientComputerName,
     ULONG ClientComputerNameLength
    );




#line 10364 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
GetNamedPipeClientProcessId(
     HANDLE Pipe,
     PULONG ClientProcessId
    );

__declspec(dllimport)
BOOL
__stdcall
GetNamedPipeClientSessionId(
     HANDLE Pipe,
     PULONG ClientSessionId
    );

__declspec(dllimport)
BOOL
__stdcall
GetNamedPipeServerProcessId(
     HANDLE Pipe,
     PULONG ServerProcessId
    );

__declspec(dllimport)
BOOL
__stdcall
GetNamedPipeServerSessionId(
     HANDLE Pipe,
     PULONG ServerSessionId
    );

__declspec(dllimport)
BOOL
__stdcall
SetVolumeLabelA(
     LPCSTR lpRootPathName,
     LPCSTR lpVolumeName
    );
__declspec(dllimport)
BOOL
__stdcall
SetVolumeLabelW(
     LPCWSTR lpRootPathName,
     LPCWSTR lpVolumeName
    );




#line 10416 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
void
__stdcall
SetFileApisToOEM( void );

__declspec(dllimport)
void
__stdcall
SetFileApisToANSI( void );

__declspec(dllimport)
BOOL
__stdcall
AreFileApisANSI( void );

__declspec(dllimport)
BOOL
__stdcall
GetVolumeInformationA(
      LPCSTR lpRootPathName,
     LPSTR lpVolumeNameBuffer,
          DWORD nVolumeNameSize,
     LPDWORD lpVolumeSerialNumber,
     LPDWORD lpMaximumComponentLength,
     LPDWORD lpFileSystemFlags,
     LPSTR lpFileSystemNameBuffer,
          DWORD nFileSystemNameSize
    );
__declspec(dllimport)
BOOL
__stdcall
GetVolumeInformationW(
      LPCWSTR lpRootPathName,
     LPWSTR lpVolumeNameBuffer,
          DWORD nVolumeNameSize,
     LPDWORD lpVolumeSerialNumber,
     LPDWORD lpMaximumComponentLength,
     LPDWORD lpFileSystemFlags,
     LPWSTR lpFileSystemNameBuffer,
          DWORD nFileSystemNameSize
    );




#line 10463 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"


__declspec(dllimport)
BOOL
__stdcall
GetVolumeInformationByHandleW(
          HANDLE hFile,
     LPWSTR lpVolumeNameBuffer,
          DWORD nVolumeNameSize,
     LPDWORD lpVolumeSerialNumber,
     LPDWORD lpMaximumComponentLength,
     LPDWORD lpFileSystemFlags,
     LPWSTR lpFileSystemNameBuffer,
          DWORD nFileSystemNameSize
    );
#line 10479 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
CancelSynchronousIo(
     HANDLE hThread
    );

__declspec(dllimport)
BOOL
__stdcall
CancelIoEx(
     HANDLE hFile,
     LPOVERLAPPED lpOverlapped
    );

__declspec(dllimport)
BOOL
__stdcall
CancelIo(
     HANDLE hFile
    );

__declspec(dllimport)
BOOL
__stdcall
SetFileBandwidthReservation(
      HANDLE  hFile,
      DWORD   nPeriodMilliseconds,
      DWORD   nBytesPerPeriod,
      BOOL    bDiscardable,
     LPDWORD lpTransferSize,
     LPDWORD lpNumOutstandingRequests
    );

__declspec(dllimport)
BOOL
__stdcall
GetFileBandwidthReservation(
      HANDLE  hFile,
     LPDWORD lpPeriodMilliseconds,
     LPDWORD lpBytesPerPeriod,
     LPBOOL  pDiscardable,
     LPDWORD lpTransferSize,
     LPDWORD lpNumOutstandingRequests
    );





__declspec(dllimport)
BOOL
__stdcall
ClearEventLogA (
         HANDLE hEventLog,
     LPCSTR lpBackupFileName
    );
__declspec(dllimport)
BOOL
__stdcall
ClearEventLogW (
         HANDLE hEventLog,
     LPCWSTR lpBackupFileName
    );




#line 10549 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
BackupEventLogA (
     HANDLE hEventLog,
     LPCSTR lpBackupFileName
    );
__declspec(dllimport)
BOOL
__stdcall
BackupEventLogW (
     HANDLE hEventLog,
     LPCWSTR lpBackupFileName
    );




#line 10569 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
CloseEventLog (
     HANDLE hEventLog
    );

__declspec(dllimport)
BOOL
__stdcall
DeregisterEventSource (
     HANDLE hEventLog
    );

__declspec(dllimport)
BOOL
__stdcall
NotifyChangeEventLog(
     HANDLE  hEventLog,
     HANDLE  hEvent
    );

__declspec(dllimport)
BOOL
__stdcall
GetNumberOfEventLogRecords (
      HANDLE hEventLog,
     PDWORD NumberOfRecords
    );

__declspec(dllimport)
BOOL
__stdcall
GetOldestEventLogRecord (
      HANDLE hEventLog,
     PDWORD OldestRecord
    );

__declspec(dllimport)

HANDLE
__stdcall
OpenEventLogA (
     LPCSTR lpUNCServerName,
         LPCSTR lpSourceName
    );
__declspec(dllimport)

HANDLE
__stdcall
OpenEventLogW (
     LPCWSTR lpUNCServerName,
         LPCWSTR lpSourceName
    );




#line 10629 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)

HANDLE
__stdcall
RegisterEventSourceA (
     LPCSTR lpUNCServerName,
         LPCSTR lpSourceName
    );
__declspec(dllimport)

HANDLE
__stdcall
RegisterEventSourceW (
     LPCWSTR lpUNCServerName,
         LPCWSTR lpSourceName
    );




#line 10651 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)

HANDLE
__stdcall
OpenBackupEventLogA (
     LPCSTR lpUNCServerName,
         LPCSTR lpFileName
    );
__declspec(dllimport)

HANDLE
__stdcall
OpenBackupEventLogW (
     LPCWSTR lpUNCServerName,
         LPCWSTR lpFileName
    );




#line 10673 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
ReadEventLogA (
      HANDLE     hEventLog,
      DWORD      dwReadFlags,
      DWORD      dwRecordOffset,
     LPVOID     lpBuffer,
      DWORD      nNumberOfBytesToRead,
     DWORD      *pnBytesRead,
     DWORD      *pnMinNumberOfBytesNeeded
    );
__declspec(dllimport)
BOOL
__stdcall
ReadEventLogW (
      HANDLE     hEventLog,
      DWORD      dwReadFlags,
      DWORD      dwRecordOffset,
     LPVOID     lpBuffer,
      DWORD      nNumberOfBytesToRead,
     DWORD      *pnBytesRead,
     DWORD      *pnMinNumberOfBytesNeeded
    );




#line 10703 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
ReportEventA (
         HANDLE     hEventLog,
         WORD       wType,
         WORD       wCategory,
         DWORD      dwEventID,
     PSID       lpUserSid,
         WORD       wNumStrings,
         DWORD      dwDataSize,
     LPCSTR *lpStrings,
     LPVOID lpRawData
    );
__declspec(dllimport)
BOOL
__stdcall
ReportEventW (
         HANDLE     hEventLog,
         WORD       wType,
         WORD       wCategory,
         DWORD      dwEventID,
     PSID       lpUserSid,
         WORD       wNumStrings,
         DWORD      dwDataSize,
     LPCWSTR *lpStrings,
     LPVOID lpRawData
    );




#line 10737 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"




typedef struct _EVENTLOG_FULL_INFORMATION
{
    DWORD    dwFull;
}
EVENTLOG_FULL_INFORMATION, *LPEVENTLOG_FULL_INFORMATION;

__declspec(dllimport)
BOOL
__stdcall
GetEventLogInformation (
      HANDLE     hEventLog,
      DWORD      dwInfoLevel,
     LPVOID lpBuffer,
      DWORD      cbBufSize,
     LPDWORD    pcbBytesNeeded
    );







__declspec(dllimport)
BOOL
__stdcall
DuplicateToken(
            HANDLE ExistingTokenHandle,
            SECURITY_IMPERSONATION_LEVEL ImpersonationLevel,
     PHANDLE DuplicateTokenHandle
    );

__declspec(dllimport)
BOOL
__stdcall
GetKernelObjectSecurity (
      HANDLE Handle,
      SECURITY_INFORMATION RequestedInformation,
     PSECURITY_DESCRIPTOR pSecurityDescriptor,
      DWORD nLength,
     LPDWORD lpnLengthNeeded
    );

__declspec(dllimport)
BOOL
__stdcall
ImpersonateNamedPipeClient(
     HANDLE hNamedPipe
    );

__declspec(dllimport)
BOOL
__stdcall
ImpersonateSelf(
     SECURITY_IMPERSONATION_LEVEL ImpersonationLevel
    );


__declspec(dllimport)
BOOL
__stdcall
RevertToSelf (
    void
    );

__declspec(dllimport)
BOOL
__stdcall
SetThreadToken (
     PHANDLE Thread,
     HANDLE Token
    );

__declspec(dllimport)
BOOL
__stdcall
AccessCheck (
        PSECURITY_DESCRIPTOR pSecurityDescriptor,
        HANDLE ClientToken,
        DWORD DesiredAccess,
        PGENERIC_MAPPING GenericMapping,
     PPRIVILEGE_SET PrivilegeSet,
     LPDWORD PrivilegeSetLength,
       LPDWORD GrantedAccess,
       LPBOOL AccessStatus
    );


__declspec(dllimport)
BOOL
__stdcall
AccessCheckByType (
         PSECURITY_DESCRIPTOR pSecurityDescriptor,
     PSID PrincipalSelfSid,
         HANDLE ClientToken,
         DWORD DesiredAccess,
     POBJECT_TYPE_LIST ObjectTypeList,
         DWORD ObjectTypeListLength,
         PGENERIC_MAPPING GenericMapping,
     PPRIVILEGE_SET PrivilegeSet,
      LPDWORD PrivilegeSetLength,
        LPDWORD GrantedAccess,
        LPBOOL AccessStatus
    );

__declspec(dllimport)
BOOL
__stdcall
AccessCheckByTypeResultList (
         PSECURITY_DESCRIPTOR pSecurityDescriptor,
     PSID PrincipalSelfSid,
         HANDLE ClientToken,
         DWORD DesiredAccess,
     POBJECT_TYPE_LIST ObjectTypeList,
         DWORD ObjectTypeListLength,
         PGENERIC_MAPPING GenericMapping,
     PPRIVILEGE_SET PrivilegeSet,
      LPDWORD PrivilegeSetLength,
        LPDWORD GrantedAccessList,
        LPDWORD AccessStatusList
    );
#line 10863 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"


__declspec(dllimport)
BOOL
__stdcall
OpenProcessToken (
            HANDLE ProcessHandle,
            DWORD DesiredAccess,
     PHANDLE TokenHandle
    );


__declspec(dllimport)
BOOL
__stdcall
OpenThreadToken (
            HANDLE ThreadHandle,
            DWORD DesiredAccess,
            BOOL OpenAsSelf,
     PHANDLE TokenHandle
    );


__declspec(dllimport)
BOOL
__stdcall
GetTokenInformation (
          HANDLE TokenHandle,
          TOKEN_INFORMATION_CLASS TokenInformationClass,
     LPVOID TokenInformation,
          DWORD TokenInformationLength,
         PDWORD ReturnLength
    );


__declspec(dllimport)
BOOL
__stdcall
SetTokenInformation (
     HANDLE TokenHandle,
     TOKEN_INFORMATION_CLASS TokenInformationClass,
     LPVOID TokenInformation,
     DWORD TokenInformationLength
    );


__declspec(dllimport)
BOOL
__stdcall
AdjustTokenPrivileges (
          HANDLE TokenHandle,
          BOOL DisableAllPrivileges,
      PTOKEN_PRIVILEGES NewState,
          DWORD BufferLength,
     PTOKEN_PRIVILEGES PreviousState,
     PDWORD ReturnLength
    );


__declspec(dllimport)
BOOL
__stdcall
AdjustTokenGroups (
          HANDLE TokenHandle,
          BOOL ResetToDefault,
      PTOKEN_GROUPS NewState,
          DWORD BufferLength,
     PTOKEN_GROUPS PreviousState,
     PDWORD ReturnLength
    );


__declspec(dllimport)
BOOL
__stdcall
PrivilegeCheck (
        HANDLE ClientToken,
     PPRIVILEGE_SET RequiredPrivileges,
       LPBOOL pfResult
    );


__declspec(dllimport)
BOOL
__stdcall
AccessCheckAndAuditAlarmA (
         LPCSTR SubsystemName,
     LPVOID HandleId,
         LPSTR ObjectTypeName,
     LPSTR ObjectName,
         PSECURITY_DESCRIPTOR SecurityDescriptor,
         DWORD DesiredAccess,
         PGENERIC_MAPPING GenericMapping,
         BOOL ObjectCreation,
        LPDWORD GrantedAccess,
        LPBOOL AccessStatus,
        LPBOOL pfGenerateOnClose
    );
__declspec(dllimport)
BOOL
__stdcall
AccessCheckAndAuditAlarmW (
         LPCWSTR SubsystemName,
     LPVOID HandleId,
         LPWSTR ObjectTypeName,
     LPWSTR ObjectName,
         PSECURITY_DESCRIPTOR SecurityDescriptor,
         DWORD DesiredAccess,
         PGENERIC_MAPPING GenericMapping,
         BOOL ObjectCreation,
        LPDWORD GrantedAccess,
        LPBOOL AccessStatus,
        LPBOOL pfGenerateOnClose
    );




#line 10982 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"



__declspec(dllimport)
BOOL
__stdcall
AccessCheckByTypeAndAuditAlarmA (
         LPCSTR SubsystemName,
         LPVOID HandleId,
         LPCSTR ObjectTypeName,
     LPCSTR ObjectName,
         PSECURITY_DESCRIPTOR SecurityDescriptor,
     PSID PrincipalSelfSid,
         DWORD DesiredAccess,
         AUDIT_EVENT_TYPE AuditType,
         DWORD Flags,
     POBJECT_TYPE_LIST ObjectTypeList,
         DWORD ObjectTypeListLength,
         PGENERIC_MAPPING GenericMapping,
         BOOL ObjectCreation,
        LPDWORD GrantedAccess,
        LPBOOL AccessStatus,
        LPBOOL pfGenerateOnClose
    );
__declspec(dllimport)
BOOL
__stdcall
AccessCheckByTypeAndAuditAlarmW (
         LPCWSTR SubsystemName,
         LPVOID HandleId,
         LPCWSTR ObjectTypeName,
     LPCWSTR ObjectName,
         PSECURITY_DESCRIPTOR SecurityDescriptor,
     PSID PrincipalSelfSid,
         DWORD DesiredAccess,
         AUDIT_EVENT_TYPE AuditType,
         DWORD Flags,
     POBJECT_TYPE_LIST ObjectTypeList,
         DWORD ObjectTypeListLength,
         PGENERIC_MAPPING GenericMapping,
         BOOL ObjectCreation,
        LPDWORD GrantedAccess,
        LPBOOL AccessStatus,
        LPBOOL pfGenerateOnClose
    );




#line 11032 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
AccessCheckByTypeResultListAndAuditAlarmA (
         LPCSTR SubsystemName,
         LPVOID HandleId,
         LPCSTR ObjectTypeName,
     LPCSTR ObjectName,
         PSECURITY_DESCRIPTOR SecurityDescriptor,
     PSID PrincipalSelfSid,
         DWORD DesiredAccess,
         AUDIT_EVENT_TYPE AuditType,
         DWORD Flags,
     POBJECT_TYPE_LIST ObjectTypeList,
         DWORD ObjectTypeListLength,
         PGENERIC_MAPPING GenericMapping,
         BOOL ObjectCreation,
        LPDWORD GrantedAccess,
        LPDWORD AccessStatusList,
        LPBOOL pfGenerateOnClose
    );
__declspec(dllimport)
BOOL
__stdcall
AccessCheckByTypeResultListAndAuditAlarmW (
         LPCWSTR SubsystemName,
         LPVOID HandleId,
         LPCWSTR ObjectTypeName,
     LPCWSTR ObjectName,
         PSECURITY_DESCRIPTOR SecurityDescriptor,
     PSID PrincipalSelfSid,
         DWORD DesiredAccess,
         AUDIT_EVENT_TYPE AuditType,
         DWORD Flags,
     POBJECT_TYPE_LIST ObjectTypeList,
         DWORD ObjectTypeListLength,
         PGENERIC_MAPPING GenericMapping,
         BOOL ObjectCreation,
        LPDWORD GrantedAccess,
        LPDWORD AccessStatusList,
        LPBOOL pfGenerateOnClose
    );




#line 11080 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
AccessCheckByTypeResultListAndAuditAlarmByHandleA (
         LPCSTR SubsystemName,
         LPVOID HandleId,
         HANDLE ClientToken,
         LPCSTR ObjectTypeName,
     LPCSTR ObjectName,
         PSECURITY_DESCRIPTOR SecurityDescriptor,
     PSID PrincipalSelfSid,
         DWORD DesiredAccess,
         AUDIT_EVENT_TYPE AuditType,
         DWORD Flags,
     POBJECT_TYPE_LIST ObjectTypeList,
         DWORD ObjectTypeListLength,
         PGENERIC_MAPPING GenericMapping,
         BOOL ObjectCreation,
        LPDWORD GrantedAccess,
        LPDWORD AccessStatusList,
        LPBOOL pfGenerateOnClose
    );
__declspec(dllimport)
BOOL
__stdcall
AccessCheckByTypeResultListAndAuditAlarmByHandleW (
         LPCWSTR SubsystemName,
         LPVOID HandleId,
         HANDLE ClientToken,
         LPCWSTR ObjectTypeName,
     LPCWSTR ObjectName,
         PSECURITY_DESCRIPTOR SecurityDescriptor,
     PSID PrincipalSelfSid,
         DWORD DesiredAccess,
         AUDIT_EVENT_TYPE AuditType,
         DWORD Flags,
     POBJECT_TYPE_LIST ObjectTypeList,
         DWORD ObjectTypeListLength,
         PGENERIC_MAPPING GenericMapping,
         BOOL ObjectCreation,
        LPDWORD GrantedAccess,
        LPDWORD AccessStatusList,
        LPBOOL pfGenerateOnClose
    );




#line 11130 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

#line 11132 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
ObjectOpenAuditAlarmA (
         LPCSTR SubsystemName,
         LPVOID HandleId,
         LPSTR ObjectTypeName,
     LPSTR ObjectName,
         PSECURITY_DESCRIPTOR pSecurityDescriptor,
         HANDLE ClientToken,
         DWORD DesiredAccess,
         DWORD GrantedAccess,
     PPRIVILEGE_SET Privileges,
         BOOL ObjectCreation,
         BOOL AccessGranted,
        LPBOOL GenerateOnClose
    );
__declspec(dllimport)
BOOL
__stdcall
ObjectOpenAuditAlarmW (
         LPCWSTR SubsystemName,
         LPVOID HandleId,
         LPWSTR ObjectTypeName,
     LPWSTR ObjectName,
         PSECURITY_DESCRIPTOR pSecurityDescriptor,
         HANDLE ClientToken,
         DWORD DesiredAccess,
         DWORD GrantedAccess,
     PPRIVILEGE_SET Privileges,
         BOOL ObjectCreation,
         BOOL AccessGranted,
        LPBOOL GenerateOnClose
    );




#line 11172 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"


__declspec(dllimport)
BOOL
__stdcall
ObjectPrivilegeAuditAlarmA (
     LPCSTR SubsystemName,
     LPVOID HandleId,
     HANDLE ClientToken,
     DWORD DesiredAccess,
     PPRIVILEGE_SET Privileges,
     BOOL AccessGranted
    );
__declspec(dllimport)
BOOL
__stdcall
ObjectPrivilegeAuditAlarmW (
     LPCWSTR SubsystemName,
     LPVOID HandleId,
     HANDLE ClientToken,
     DWORD DesiredAccess,
     PPRIVILEGE_SET Privileges,
     BOOL AccessGranted
    );




#line 11201 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"


__declspec(dllimport)
BOOL
__stdcall
ObjectCloseAuditAlarmA (
     LPCSTR SubsystemName,
     LPVOID HandleId,
     BOOL GenerateOnClose
    );
__declspec(dllimport)
BOOL
__stdcall
ObjectCloseAuditAlarmW (
     LPCWSTR SubsystemName,
     LPVOID HandleId,
     BOOL GenerateOnClose
    );




#line 11224 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"


__declspec(dllimport)
BOOL
__stdcall
ObjectDeleteAuditAlarmA (
     LPCSTR SubsystemName,
     LPVOID HandleId,
     BOOL GenerateOnClose
    );
__declspec(dllimport)
BOOL
__stdcall
ObjectDeleteAuditAlarmW (
     LPCWSTR SubsystemName,
     LPVOID HandleId,
     BOOL GenerateOnClose
    );




#line 11247 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"


__declspec(dllimport)
BOOL
__stdcall
PrivilegedServiceAuditAlarmA (
     LPCSTR SubsystemName,
     LPCSTR ServiceName,
     HANDLE ClientToken,
     PPRIVILEGE_SET Privileges,
     BOOL AccessGranted
    );
__declspec(dllimport)
BOOL
__stdcall
PrivilegedServiceAuditAlarmW (
     LPCWSTR SubsystemName,
     LPCWSTR ServiceName,
     HANDLE ClientToken,
     PPRIVILEGE_SET Privileges,
     BOOL AccessGranted
    );




#line 11274 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"






__declspec(dllimport)
BOOL
__stdcall
IsWellKnownSid (
     PSID pSid,
     WELL_KNOWN_SID_TYPE WellKnownSidType
    );

__declspec(dllimport)
 BOOL
__stdcall
CreateWellKnownSid(
         WELL_KNOWN_SID_TYPE WellKnownSidType,
     PSID DomainSid,
     PSID pSid,
      DWORD *cbSid
    );

__declspec(dllimport)
 BOOL
__stdcall
EqualDomainSid(
      PSID pSid1,
      PSID pSid2,
     BOOL *pfEqual
    );

__declspec(dllimport)
 BOOL
__stdcall
GetWindowsAccountDomainSid(
        PSID pSid,
     PSID pDomainSid,
     DWORD* cbDomainSid
    );

#line 11317 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
IsValidSid (
     PSID pSid
    );


__declspec(dllimport)
BOOL
__stdcall
EqualSid (
     PSID pSid1,
     PSID pSid2
    );


__declspec(dllimport)
BOOL
__stdcall
EqualPrefixSid (
     PSID pSid1,
     PSID pSid2
    );


__declspec(dllimport)
DWORD
__stdcall
GetSidLengthRequired (
     UCHAR nSubAuthorityCount
    );


__declspec(dllimport)
BOOL
__stdcall
AllocateAndInitializeSid (
            PSID_IDENTIFIER_AUTHORITY pIdentifierAuthority,
            BYTE nSubAuthorityCount,
            DWORD nSubAuthority0,
            DWORD nSubAuthority1,
            DWORD nSubAuthority2,
            DWORD nSubAuthority3,
            DWORD nSubAuthority4,
            DWORD nSubAuthority5,
            DWORD nSubAuthority6,
            DWORD nSubAuthority7,
     PSID *pSid
    );

__declspec(dllimport)
PVOID
__stdcall
FreeSid(
     PSID pSid
    );

__declspec(dllimport)
BOOL
__stdcall
InitializeSid (
     PSID Sid,
      PSID_IDENTIFIER_AUTHORITY pIdentifierAuthority,
      BYTE nSubAuthorityCount
    );


__declspec(dllimport)

PSID_IDENTIFIER_AUTHORITY
__stdcall
GetSidIdentifierAuthority (
     PSID pSid
    );


__declspec(dllimport)

PDWORD
__stdcall
GetSidSubAuthority (
     PSID pSid,
     DWORD nSubAuthority
    );


__declspec(dllimport)

PUCHAR
__stdcall
GetSidSubAuthorityCount (
     PSID pSid
    );


__declspec(dllimport)
DWORD
__stdcall
GetLengthSid (
     PSID pSid
    );


__declspec(dllimport)
BOOL
__stdcall
CopySid (
     DWORD nDestinationSidLength,
     PSID pDestinationSid,
     PSID pSourceSid
    );


__declspec(dllimport)
BOOL
__stdcall
AreAllAccessesGranted (
     DWORD GrantedAccess,
     DWORD DesiredAccess
    );


__declspec(dllimport)
BOOL
__stdcall
AreAnyAccessesGranted (
     DWORD GrantedAccess,
     DWORD DesiredAccess
    );


__declspec(dllimport)
void
__stdcall
MapGenericMask (
     PDWORD AccessMask,
        PGENERIC_MAPPING GenericMapping
    );


__declspec(dllimport)
BOOL
__stdcall
IsValidAcl (
     PACL pAcl
    );


__declspec(dllimport)
BOOL
__stdcall
InitializeAcl (
     PACL pAcl,
     DWORD nAclLength,
     DWORD dwAclRevision
    );


__declspec(dllimport)
BOOL
__stdcall
GetAclInformation (
     PACL pAcl,
     LPVOID pAclInformation,
     DWORD nAclInformationLength,
     ACL_INFORMATION_CLASS dwAclInformationClass
    );


__declspec(dllimport)
BOOL
__stdcall
SetAclInformation (
     PACL pAcl,
     LPVOID pAclInformation,
        DWORD nAclInformationLength,
        ACL_INFORMATION_CLASS dwAclInformationClass
    );


__declspec(dllimport)
BOOL
__stdcall
AddAce (
     PACL pAcl,
        DWORD dwAceRevision,
        DWORD dwStartingAceIndex,
     LPVOID pAceList,
        DWORD nAceListLength
    );


__declspec(dllimport)
BOOL
__stdcall
DeleteAce (
     PACL pAcl,
        DWORD dwAceIndex
    );


__declspec(dllimport)
BOOL
__stdcall
GetAce (
            PACL pAcl,
            DWORD dwAceIndex,
     LPVOID *pAce
    );


__declspec(dllimport)
BOOL
__stdcall
AddAccessAllowedAce (
     PACL pAcl,
        DWORD dwAceRevision,
        DWORD AccessMask,
        PSID pSid
    );


__declspec(dllimport)
BOOL
__stdcall
AddAccessAllowedAceEx (
     PACL pAcl,
        DWORD dwAceRevision,
        DWORD AceFlags,
        DWORD AccessMask,
        PSID pSid
    );
#line 11552 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"


__declspec(dllimport)
BOOL
__stdcall
AddMandatoryAce (
     PACL pAcl,
        DWORD dwAceRevision,
        DWORD AceFlags,
        DWORD MandatoryPolicy,
        PSID pLabelSid
    );
#line 11565 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"


__declspec(dllimport)
BOOL
__stdcall
AddConditionalAce (
     PACL pAcl,
        DWORD dwAceRevision,
        DWORD AceFlags,
        UCHAR AceType,
        DWORD AccessMask,
        PSID pSid,
        PWCHAR ConditionStr,
     DWORD *ReturnLength
    );
#line 11581 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
AddAccessDeniedAce (
     PACL pAcl,
        DWORD dwAceRevision,
        DWORD AccessMask,
        PSID pSid
    );


__declspec(dllimport)
BOOL
__stdcall
AddAccessDeniedAceEx (
     PACL pAcl,
        DWORD dwAceRevision,
        DWORD AceFlags,
        DWORD AccessMask,
        PSID pSid
    );
#line 11604 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
AddAuditAccessAce(
     PACL pAcl,
        DWORD dwAceRevision,
        DWORD dwAccessMask,
        PSID pSid,
        BOOL bAuditSuccess,
        BOOL bAuditFailure
    );


__declspec(dllimport)
BOOL
__stdcall
AddAuditAccessAceEx(
     PACL pAcl,
        DWORD dwAceRevision,
        DWORD AceFlags,
        DWORD dwAccessMask,
        PSID pSid,
        BOOL bAuditSuccess,
        BOOL bAuditFailure
    );

__declspec(dllimport)
BOOL
__stdcall
AddAccessAllowedObjectAce (
      PACL pAcl,
         DWORD dwAceRevision,
         DWORD AceFlags,
         DWORD AccessMask,
     GUID *ObjectTypeGuid,
     GUID *InheritedObjectTypeGuid,
         PSID pSid
    );

__declspec(dllimport)
BOOL
__stdcall
AddAccessDeniedObjectAce (
      PACL pAcl,
         DWORD dwAceRevision,
         DWORD AceFlags,
         DWORD AccessMask,
     GUID *ObjectTypeGuid,
     GUID *InheritedObjectTypeGuid,
         PSID pSid
    );

__declspec(dllimport)
BOOL
__stdcall
AddAuditAccessObjectAce (
      PACL pAcl,
         DWORD dwAceRevision,
         DWORD AceFlags,
         DWORD AccessMask,
     GUID *ObjectTypeGuid,
     GUID *InheritedObjectTypeGuid,
         PSID pSid,
         BOOL bAuditSuccess,
         BOOL bAuditFailure
    );
#line 11672 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
FindFirstFreeAce (
            PACL pAcl,
     LPVOID *pAce
    );


__declspec(dllimport)
BOOL
__stdcall
InitializeSecurityDescriptor (
     PSECURITY_DESCRIPTOR pSecurityDescriptor,
      DWORD dwRevision
    );


__declspec(dllimport)
BOOL
__stdcall
IsValidSecurityDescriptor (
     PSECURITY_DESCRIPTOR pSecurityDescriptor
    );

__declspec(dllimport)
BOOL
__stdcall
IsValidRelativeSecurityDescriptor (
     PSECURITY_DESCRIPTOR pSecurityDescriptor,
     ULONG SecurityDescriptorLength,
     SECURITY_INFORMATION RequiredInformation
    );

__declspec(dllimport)
DWORD
__stdcall
GetSecurityDescriptorLength (
     PSECURITY_DESCRIPTOR pSecurityDescriptor
    );


__declspec(dllimport)
BOOL
__stdcall
GetSecurityDescriptorControl (
      PSECURITY_DESCRIPTOR pSecurityDescriptor,
     PSECURITY_DESCRIPTOR_CONTROL pControl,
     LPDWORD lpdwRevision
    );


__declspec(dllimport)
BOOL
__stdcall
SetSecurityDescriptorControl (
     PSECURITY_DESCRIPTOR pSecurityDescriptor,
     SECURITY_DESCRIPTOR_CONTROL ControlBitsOfInterest,
     SECURITY_DESCRIPTOR_CONTROL ControlBitsToSet
    );
#line 11734 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
SetSecurityDescriptorDacl (
      PSECURITY_DESCRIPTOR pSecurityDescriptor,
         BOOL bDaclPresent,
     PACL pDacl,
         BOOL bDaclDefaulted
    );


__declspec(dllimport)
BOOL
__stdcall
GetSecurityDescriptorDacl (
            PSECURITY_DESCRIPTOR pSecurityDescriptor,
           LPBOOL lpbDaclPresent,
     PACL *pDacl,
           LPBOOL lpbDaclDefaulted
    );


__declspec(dllimport)
BOOL
__stdcall
SetSecurityDescriptorSacl (
      PSECURITY_DESCRIPTOR pSecurityDescriptor,
         BOOL bSaclPresent,
     PACL pSacl,
         BOOL bSaclDefaulted
    );


__declspec(dllimport)
BOOL
__stdcall
GetSecurityDescriptorSacl (
            PSECURITY_DESCRIPTOR pSecurityDescriptor,
           LPBOOL lpbSaclPresent,
     PACL *pSacl,
           LPBOOL lpbSaclDefaulted
    );


__declspec(dllimport)
BOOL
__stdcall
SetSecurityDescriptorOwner (
      PSECURITY_DESCRIPTOR pSecurityDescriptor,
     PSID pOwner,
         BOOL bOwnerDefaulted
    );


__declspec(dllimport)
BOOL
__stdcall
GetSecurityDescriptorOwner (
            PSECURITY_DESCRIPTOR pSecurityDescriptor,
     PSID *pOwner,
           LPBOOL lpbOwnerDefaulted
    );


__declspec(dllimport)
BOOL
__stdcall
SetSecurityDescriptorGroup (
      PSECURITY_DESCRIPTOR pSecurityDescriptor,
     PSID pGroup,
         BOOL bGroupDefaulted
    );


__declspec(dllimport)
BOOL
__stdcall
GetSecurityDescriptorGroup (
            PSECURITY_DESCRIPTOR pSecurityDescriptor,
     PSID *pGroup,
           LPBOOL lpbGroupDefaulted
    );


__declspec(dllimport)
DWORD
__stdcall
SetSecurityDescriptorRMControl(
      PSECURITY_DESCRIPTOR SecurityDescriptor,
     PUCHAR RMControl
    );

__declspec(dllimport)
DWORD
__stdcall
GetSecurityDescriptorRMControl(
      PSECURITY_DESCRIPTOR SecurityDescriptor,
     PUCHAR RMControl
    );

__declspec(dllimport)
BOOL
__stdcall
CreatePrivateObjectSecurity (
        PSECURITY_DESCRIPTOR ParentDescriptor,
        PSECURITY_DESCRIPTOR CreatorDescriptor,
     PSECURITY_DESCRIPTOR * NewDescriptor,
            BOOL IsDirectoryObject,
        HANDLE Token,
            PGENERIC_MAPPING GenericMapping
    );


__declspec(dllimport)
BOOL
__stdcall
ConvertToAutoInheritPrivateObjectSecurity(
        PSECURITY_DESCRIPTOR ParentDescriptor,
            PSECURITY_DESCRIPTOR CurrentSecurityDescriptor,
     PSECURITY_DESCRIPTOR *NewSecurityDescriptor,
        GUID *ObjectType,
            BOOLEAN IsDirectoryObject,
            PGENERIC_MAPPING GenericMapping
    );

__declspec(dllimport)
BOOL
__stdcall
CreatePrivateObjectSecurityEx (
        PSECURITY_DESCRIPTOR ParentDescriptor,
        PSECURITY_DESCRIPTOR CreatorDescriptor,
     PSECURITY_DESCRIPTOR * NewDescriptor,
        GUID *ObjectType,
            BOOL IsContainerObject,
            ULONG AutoInheritFlags,
        HANDLE Token,
            PGENERIC_MAPPING GenericMapping
    );

__declspec(dllimport)
BOOL
__stdcall
CreatePrivateObjectSecurityWithMultipleInheritance (
        PSECURITY_DESCRIPTOR ParentDescriptor,
        PSECURITY_DESCRIPTOR CreatorDescriptor,
     PSECURITY_DESCRIPTOR * NewDescriptor,
     GUID **ObjectTypes,
            ULONG GuidCount,
            BOOL IsContainerObject,
            ULONG AutoInheritFlags,
        HANDLE Token,
            PGENERIC_MAPPING GenericMapping
    );
#line 11889 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
SetPrivateObjectSecurity (
              SECURITY_INFORMATION SecurityInformation,
              PSECURITY_DESCRIPTOR ModificationDescriptor,
     PSECURITY_DESCRIPTOR *ObjectsSecurityDescriptor,
              PGENERIC_MAPPING GenericMapping,
          HANDLE Token
    );


__declspec(dllimport)
BOOL
__stdcall
SetPrivateObjectSecurityEx (
              SECURITY_INFORMATION SecurityInformation,
              PSECURITY_DESCRIPTOR ModificationDescriptor,
     PSECURITY_DESCRIPTOR *ObjectsSecurityDescriptor,
              ULONG AutoInheritFlags,
              PGENERIC_MAPPING GenericMapping,
          HANDLE Token
    );
#line 11914 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
 BOOL
__stdcall
GetPrivateObjectSecurity (
      PSECURITY_DESCRIPTOR ObjectDescriptor,
      SECURITY_INFORMATION SecurityInformation,
     PSECURITY_DESCRIPTOR ResultantDescriptor,
      DWORD DescriptorLength,
     PDWORD ReturnLength
    );


__declspec(dllimport)
BOOL
__stdcall
DestroyPrivateObjectSecurity (
     PSECURITY_DESCRIPTOR * ObjectDescriptor
    );


__declspec(dllimport)
 BOOL
__stdcall
MakeSelfRelativeSD (
        PSECURITY_DESCRIPTOR pAbsoluteSecurityDescriptor,
     PSECURITY_DESCRIPTOR pSelfRelativeSecurityDescriptor,
     LPDWORD lpdwBufferLength
    );


__declspec(dllimport)
 BOOL
__stdcall
MakeAbsoluteSD (
        PSECURITY_DESCRIPTOR pSelfRelativeSecurityDescriptor,
     PSECURITY_DESCRIPTOR pAbsoluteSecurityDescriptor,
     LPDWORD lpdwAbsoluteSecurityDescriptorSize,
     PACL pDacl,
     LPDWORD lpdwDaclSize,
     PACL pSacl,
     LPDWORD lpdwSaclSize,
     PSID pOwner,
     LPDWORD lpdwOwnerSize,
     PSID pPrimaryGroup,
     LPDWORD lpdwPrimaryGroupSize
    );


__declspec(dllimport)
 BOOL
__stdcall
MakeAbsoluteSD2 (
     PSECURITY_DESCRIPTOR pSelfRelativeSecurityDescriptor,
     LPDWORD lpdwBufferSize
    );

__declspec(dllimport)
void
__stdcall
QuerySecurityAccessMask(
     SECURITY_INFORMATION SecurityInformation,
     LPDWORD DesiredAccess
    );

__declspec(dllimport)
void
__stdcall
SetSecurityAccessMask(
     SECURITY_INFORMATION SecurityInformation,
     LPDWORD DesiredAccess
    );

__declspec(dllimport)
BOOL
__stdcall
SetFileSecurityA (
     LPCSTR lpFileName,
     SECURITY_INFORMATION SecurityInformation,
     PSECURITY_DESCRIPTOR pSecurityDescriptor
    );
__declspec(dllimport)
BOOL
__stdcall
SetFileSecurityW (
     LPCWSTR lpFileName,
     SECURITY_INFORMATION SecurityInformation,
     PSECURITY_DESCRIPTOR pSecurityDescriptor
    );




#line 12008 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"


__declspec(dllimport)
BOOL
__stdcall
GetFileSecurityA (
      LPCSTR lpFileName,
      SECURITY_INFORMATION RequestedInformation,
     PSECURITY_DESCRIPTOR pSecurityDescriptor,
      DWORD nLength,
     LPDWORD lpnLengthNeeded
    );
__declspec(dllimport)
BOOL
__stdcall
GetFileSecurityW (
      LPCWSTR lpFileName,
      SECURITY_INFORMATION RequestedInformation,
     PSECURITY_DESCRIPTOR pSecurityDescriptor,
      DWORD nLength,
     LPDWORD lpnLengthNeeded
    );




#line 12035 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"


__declspec(dllimport)
BOOL
__stdcall
SetKernelObjectSecurity (
     HANDLE Handle,
     SECURITY_INFORMATION SecurityInformation,
     PSECURITY_DESCRIPTOR SecurityDescriptor
    );

__declspec(dllimport)

HANDLE
__stdcall
FindFirstChangeNotificationA(
     LPCSTR lpPathName,
     BOOL bWatchSubtree,
     DWORD dwNotifyFilter
    );
__declspec(dllimport)

HANDLE
__stdcall
FindFirstChangeNotificationW(
     LPCWSTR lpPathName,
     BOOL bWatchSubtree,
     DWORD dwNotifyFilter
    );




#line 12069 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
FindNextChangeNotification(
     HANDLE hChangeHandle
    );

__declspec(dllimport)
BOOL
__stdcall
FindCloseChangeNotification(
     HANDLE hChangeHandle
    );


__declspec(dllimport)
BOOL
__stdcall
ReadDirectoryChangesW(
            HANDLE hDirectory,
     LPVOID lpBuffer,
            DWORD nBufferLength,
            BOOL bWatchSubtree,
            DWORD dwNotifyFilter,
       LPDWORD lpBytesReturned,
     LPOVERLAPPED lpOverlapped,
        LPOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine
    );
#line 12099 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
VirtualLock(
     LPVOID lpAddress,
     SIZE_T dwSize
    );

__declspec(dllimport)
BOOL
__stdcall
VirtualUnlock(
     LPVOID lpAddress,
     SIZE_T dwSize
    );

__declspec(dllimport)
 
LPVOID
__stdcall
MapViewOfFileEx(
         HANDLE hFileMappingObject,
         DWORD dwDesiredAccess,
         DWORD dwFileOffsetHigh,
         DWORD dwFileOffsetLow,
         SIZE_T dwNumberOfBytesToMap,
     LPVOID lpBaseAddress
    );



__declspec(dllimport)
 
LPVOID
__stdcall
MapViewOfFileExNuma(
         HANDLE hFileMappingObject,
         DWORD dwDesiredAccess,
         DWORD dwFileOffsetHigh,
         DWORD dwFileOffsetLow,
         SIZE_T dwNumberOfBytesToMap,
     LPVOID lpBaseAddress,
         DWORD nndPreferred
    );

#line 12146 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
SetPriorityClass(
     HANDLE hProcess,
     DWORD dwPriorityClass
    );

__declspec(dllimport)
DWORD
__stdcall
GetPriorityClass(
     HANDLE hProcess
    );

__declspec(dllimport)
BOOL
__stdcall
IsBadReadPtr(
     const void *lp,
         UINT_PTR ucb
    );

__declspec(dllimport)
BOOL
__stdcall
IsBadWritePtr(
     LPVOID lp,
         UINT_PTR ucb
    );

__declspec(dllimport)
BOOL
__stdcall
IsBadHugeReadPtr(
     const void *lp,
         UINT_PTR ucb
    );

__declspec(dllimport)
BOOL
__stdcall
IsBadHugeWritePtr(
     LPVOID lp,
         UINT_PTR ucb
    );

__declspec(dllimport)
BOOL
__stdcall
IsBadCodePtr(
     FARPROC lpfn
    );

__declspec(dllimport)
BOOL
__stdcall
IsBadStringPtrA(
     LPCSTR lpsz,
         UINT_PTR ucchMax
    );
__declspec(dllimport)
BOOL
__stdcall
IsBadStringPtrW(
     LPCWSTR lpsz,
         UINT_PTR ucchMax
    );




#line 12220 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
 BOOL
__stdcall
LookupAccountSidA(
     LPCSTR lpSystemName,
     PSID Sid,
     LPSTR Name,
      LPDWORD cchName,
     LPSTR ReferencedDomainName,
     LPDWORD cchReferencedDomainName,
     PSID_NAME_USE peUse
    );
__declspec(dllimport)
 BOOL
__stdcall
LookupAccountSidW(
     LPCWSTR lpSystemName,
     PSID Sid,
     LPWSTR Name,
      LPDWORD cchName,
     LPWSTR ReferencedDomainName,
     LPDWORD cchReferencedDomainName,
     PSID_NAME_USE peUse
    );




#line 12250 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
 BOOL
__stdcall
LookupAccountSidLocalA(
     PSID Sid,
     LPSTR Name,
      LPDWORD cchName,
     LPSTR ReferencedDomainName,
     LPDWORD cchReferencedDomainName,
     PSID_NAME_USE peUse
    );
__declspec(dllimport)
 BOOL
__stdcall
LookupAccountSidLocalW(
     PSID Sid,
     LPWSTR Name,
      LPDWORD cchName,
     LPWSTR ReferencedDomainName,
     LPDWORD cchReferencedDomainName,
     PSID_NAME_USE peUse
    );




#line 12278 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
 BOOL
__stdcall
LookupAccountNameA(
     LPCSTR lpSystemName,
         LPCSTR lpAccountName,
     PSID Sid,
      LPDWORD cbSid,
     LPSTR ReferencedDomainName,
      LPDWORD cchReferencedDomainName,
        PSID_NAME_USE peUse
    );
__declspec(dllimport)
 BOOL
__stdcall
LookupAccountNameW(
     LPCWSTR lpSystemName,
         LPCWSTR lpAccountName,
     PSID Sid,
      LPDWORD cbSid,
     LPWSTR ReferencedDomainName,
      LPDWORD cchReferencedDomainName,
        PSID_NAME_USE peUse
    );




#line 12308 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
 BOOL
__stdcall
LookupAccountNameLocalA(
         LPCSTR lpAccountName,
     PSID Sid,
      LPDWORD cbSid,
     LPSTR ReferencedDomainName,
      LPDWORD cchReferencedDomainName,
        PSID_NAME_USE peUse
    );
__declspec(dllimport)
 BOOL
__stdcall
LookupAccountNameLocalW(
         LPCWSTR lpAccountName,
     PSID Sid,
      LPDWORD cbSid,
     LPWSTR ReferencedDomainName,
      LPDWORD cchReferencedDomainName,
        PSID_NAME_USE peUse
    );




#line 12336 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
LookupPrivilegeValueA(
     LPCSTR lpSystemName,
         LPCSTR lpName,
        PLUID   lpLuid
    );
__declspec(dllimport)
BOOL
__stdcall
LookupPrivilegeValueW(
     LPCWSTR lpSystemName,
         LPCWSTR lpName,
        PLUID   lpLuid
    );




#line 12358 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
 BOOL
__stdcall
LookupPrivilegeNameA(
     LPCSTR lpSystemName,
         PLUID   lpLuid,
     LPSTR lpName,
      LPDWORD cchName
    );
__declspec(dllimport)
 BOOL
__stdcall
LookupPrivilegeNameW(
     LPCWSTR lpSystemName,
         PLUID   lpLuid,
     LPWSTR lpName,
      LPDWORD cchName
    );




#line 12382 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
 BOOL
__stdcall
LookupPrivilegeDisplayNameA(
     LPCSTR lpSystemName,
         LPCSTR lpName,
     LPSTR lpDisplayName,
      LPDWORD cchDisplayName,
        LPDWORD lpLanguageId
    );
__declspec(dllimport)
 BOOL
__stdcall
LookupPrivilegeDisplayNameW(
     LPCWSTR lpSystemName,
         LPCWSTR lpName,
     LPWSTR lpDisplayName,
      LPDWORD cchDisplayName,
        LPDWORD lpLanguageId
    );




#line 12408 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
AllocateLocallyUniqueId(
     PLUID Luid
    );

__declspec(dllimport)
BOOL
__stdcall
BuildCommDCBA(
      LPCSTR lpDef,
     LPDCB lpDCB
    );
__declspec(dllimport)
BOOL
__stdcall
BuildCommDCBW(
      LPCWSTR lpDef,
     LPDCB lpDCB
    );




#line 12435 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
BuildCommDCBAndTimeoutsA(
      LPCSTR lpDef,
     LPDCB lpDCB,
     LPCOMMTIMEOUTS lpCommTimeouts
    );
__declspec(dllimport)
BOOL
__stdcall
BuildCommDCBAndTimeoutsW(
      LPCWSTR lpDef,
     LPDCB lpDCB,
     LPCOMMTIMEOUTS lpCommTimeouts
    );




#line 12457 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
CommConfigDialogA(
         LPCSTR lpszName,
     HWND hWnd,
      LPCOMMCONFIG lpCC
    );
__declspec(dllimport)
BOOL
__stdcall
CommConfigDialogW(
         LPCWSTR lpszName,
     HWND hWnd,
      LPCOMMCONFIG lpCC
    );




#line 12479 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
GetDefaultCommConfigA(
        LPCSTR lpszName,
     LPCOMMCONFIG lpCC,
     LPDWORD lpdwSize
    );
__declspec(dllimport)
BOOL
__stdcall
GetDefaultCommConfigW(
        LPCWSTR lpszName,
     LPCOMMCONFIG lpCC,
     LPDWORD lpdwSize
    );




#line 12501 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
SetDefaultCommConfigA(
     LPCSTR lpszName,
     LPCOMMCONFIG lpCC,
     DWORD dwSize
    );
__declspec(dllimport)
BOOL
__stdcall
SetDefaultCommConfigW(
     LPCWSTR lpszName,
     LPCOMMCONFIG lpCC,
     DWORD dwSize
    );




#line 12523 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"





#line 12529 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)

BOOL
__stdcall
GetComputerNameA (
     LPSTR lpBuffer,
     LPDWORD nSize
    );
__declspec(dllimport)

BOOL
__stdcall
GetComputerNameW (
     LPWSTR lpBuffer,
     LPDWORD nSize
    );




#line 12551 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
SetComputerNameA (
     LPCSTR lpComputerName
    );
__declspec(dllimport)
BOOL
__stdcall
SetComputerNameW (
     LPCWSTR lpComputerName
    );




#line 12569 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"




typedef enum _COMPUTER_NAME_FORMAT {
    ComputerNameNetBIOS,
    ComputerNameDnsHostname,
    ComputerNameDnsDomain,
    ComputerNameDnsFullyQualified,
    ComputerNamePhysicalNetBIOS,
    ComputerNamePhysicalDnsHostname,
    ComputerNamePhysicalDnsDomain,
    ComputerNamePhysicalDnsFullyQualified,
    ComputerNameMax
} COMPUTER_NAME_FORMAT ;

__declspec(dllimport)

BOOL
__stdcall
GetComputerNameExA (
        COMPUTER_NAME_FORMAT NameType,
     LPSTR lpBuffer,
     LPDWORD nSize
    );
__declspec(dllimport)

BOOL
__stdcall
GetComputerNameExW (
        COMPUTER_NAME_FORMAT NameType,
     LPWSTR lpBuffer,
     LPDWORD nSize
    );




#line 12608 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
SetComputerNameExA (
     COMPUTER_NAME_FORMAT NameType,
     LPCSTR lpBuffer
    );
__declspec(dllimport)
BOOL
__stdcall
SetComputerNameExW (
     COMPUTER_NAME_FORMAT NameType,
     LPCWSTR lpBuffer
    );




#line 12628 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"


__declspec(dllimport)

BOOL
__stdcall
DnsHostnameToComputerNameA (
        LPCSTR Hostname,
     LPSTR ComputerName,
     LPDWORD nSize
    );
__declspec(dllimport)

BOOL
__stdcall
DnsHostnameToComputerNameW (
        LPCWSTR Hostname,
     LPWSTR ComputerName,
     LPDWORD nSize
    );




#line 12653 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

#line 12655 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
GetUserNameA (
     LPSTR lpBuffer,
     LPDWORD pcbBuffer
    );
__declspec(dllimport)
BOOL
__stdcall
GetUserNameW (
     LPWSTR lpBuffer,
     LPDWORD pcbBuffer
    );




#line 12675 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"













#line 12689 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"





#line 12695 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"


#line 12698 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"


#line 12701 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"



__declspec(dllimport)
BOOL
__stdcall
LogonUserA (
            LPCSTR lpszUsername,
        LPCSTR lpszDomain,
            LPCSTR lpszPassword,
            DWORD dwLogonType,
            DWORD dwLogonProvider,
     PHANDLE phToken
    );
__declspec(dllimport)
BOOL
__stdcall
LogonUserW (
            LPCWSTR lpszUsername,
        LPCWSTR lpszDomain,
            LPCWSTR lpszPassword,
            DWORD dwLogonType,
            DWORD dwLogonProvider,
     PHANDLE phToken
    );




#line 12731 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
LogonUserExA (
                LPCSTR lpszUsername,
            LPCSTR lpszDomain,
                LPCSTR lpszPassword,
                DWORD dwLogonType,
                DWORD dwLogonProvider,
     PHANDLE phToken,
     PSID  *ppLogonSid,
     PVOID *ppProfileBuffer,
           LPDWORD pdwProfileLength,
           PQUOTA_LIMITS pQuotaLimits
    );
__declspec(dllimport)
BOOL
__stdcall
LogonUserExW (
                LPCWSTR lpszUsername,
            LPCWSTR lpszDomain,
                LPCWSTR lpszPassword,
                DWORD dwLogonType,
                DWORD dwLogonProvider,
     PHANDLE phToken,
     PSID  *ppLogonSid,
     PVOID *ppProfileBuffer,
           LPDWORD pdwProfileLength,
           PQUOTA_LIMITS pQuotaLimits
    );




#line 12767 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"





#line 12773 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
ImpersonateLoggedOnUser(
     HANDLE  hToken
    );

__declspec(dllimport)
BOOL
__stdcall
CreateProcessAsUserA (
        HANDLE hToken,
        LPCSTR lpApplicationName,
     LPSTR lpCommandLine,
        LPSECURITY_ATTRIBUTES lpProcessAttributes,
        LPSECURITY_ATTRIBUTES lpThreadAttributes,
            BOOL bInheritHandles,
            DWORD dwCreationFlags,
        LPVOID lpEnvironment,
        LPCSTR lpCurrentDirectory,
            LPSTARTUPINFOA lpStartupInfo,
           LPPROCESS_INFORMATION lpProcessInformation
    );
__declspec(dllimport)
BOOL
__stdcall
CreateProcessAsUserW (
        HANDLE hToken,
        LPCWSTR lpApplicationName,
     LPWSTR lpCommandLine,
        LPSECURITY_ATTRIBUTES lpProcessAttributes,
        LPSECURITY_ATTRIBUTES lpThreadAttributes,
            BOOL bInheritHandles,
            DWORD dwCreationFlags,
        LPVOID lpEnvironment,
        LPCWSTR lpCurrentDirectory,
            LPSTARTUPINFOW lpStartupInfo,
           LPPROCESS_INFORMATION lpProcessInformation
    );




#line 12818 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"











__declspec(dllimport)
 BOOL
__stdcall
CreateProcessWithLogonW(
            LPCWSTR lpUsername,
        LPCWSTR lpDomain,
            LPCWSTR lpPassword,
            DWORD dwLogonFlags,
        LPCWSTR lpApplicationName,
     LPWSTR lpCommandLine,
            DWORD dwCreationFlags,
        LPVOID lpEnvironment,
        LPCWSTR lpCurrentDirectory,
            LPSTARTUPINFOW lpStartupInfo,
           LPPROCESS_INFORMATION lpProcessInformation
      );

__declspec(dllimport)
 BOOL
__stdcall
CreateProcessWithTokenW(
            HANDLE hToken,
            DWORD dwLogonFlags,
        LPCWSTR lpApplicationName,
     LPWSTR lpCommandLine,
            DWORD dwCreationFlags,
        LPVOID lpEnvironment,
        LPCWSTR lpCurrentDirectory,
            LPSTARTUPINFOW lpStartupInfo,
           LPPROCESS_INFORMATION lpProcessInformation
      );

#line 12862 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
ImpersonateAnonymousToken(
     HANDLE ThreadHandle
    );

__declspec(dllimport)
BOOL
__stdcall
DuplicateTokenEx(
            HANDLE hExistingToken,
            DWORD dwDesiredAccess,
        LPSECURITY_ATTRIBUTES lpTokenAttributes,
            SECURITY_IMPERSONATION_LEVEL ImpersonationLevel,
            TOKEN_TYPE TokenType,
     PHANDLE phNewToken);

__declspec(dllimport)
BOOL
__stdcall
CreateRestrictedToken(
            HANDLE ExistingTokenHandle,
            DWORD Flags,
            DWORD DisableSidCount,
     PSID_AND_ATTRIBUTES SidsToDisable,
            DWORD DeletePrivilegeCount,
     PLUID_AND_ATTRIBUTES PrivilegesToDelete,
            DWORD RestrictedSidCount,
     PSID_AND_ATTRIBUTES SidsToRestrict,
     PHANDLE NewTokenHandle
    );


__declspec(dllimport)
BOOL
__stdcall
IsTokenRestricted(
     HANDLE TokenHandle
    );

__declspec(dllimport)
BOOL
__stdcall
IsTokenUntrusted(
     HANDLE TokenHandle
    );

__declspec(dllimport)
BOOL
__stdcall
CheckTokenMembership(
     HANDLE TokenHandle,
         PSID SidToCheck,
        PBOOL IsMember
    );







typedef WAITORTIMERCALLBACKFUNC WAITORTIMERCALLBACK ;

__declspec(dllimport)
BOOL
__stdcall
RegisterWaitForSingleObject(
     PHANDLE phNewWaitObject,
            HANDLE hObject,
            WAITORTIMERCALLBACK Callback,
        PVOID Context,
            ULONG dwMilliseconds,
            ULONG dwFlags
    );

__declspec(dllimport)
HANDLE
__stdcall
RegisterWaitForSingleObjectEx(
         HANDLE hObject,
         WAITORTIMERCALLBACK Callback,
     PVOID Context,
         ULONG dwMilliseconds,
         ULONG dwFlags
    );

__declspec(dllimport)

BOOL
__stdcall
UnregisterWait(
     HANDLE WaitHandle
    );

__declspec(dllimport)

BOOL
__stdcall
UnregisterWaitEx(
         HANDLE WaitHandle,
     HANDLE CompletionEvent
    );

__declspec(dllimport)
BOOL
__stdcall
QueueUserWorkItem(
         LPTHREAD_START_ROUTINE Function,
     PVOID Context,
         ULONG Flags
    );

__declspec(dllimport)
BOOL
__stdcall
BindIoCompletionCallback (
     HANDLE FileHandle,
     LPOVERLAPPED_COMPLETION_ROUTINE Function,
     ULONG Flags
    );

__declspec(dllimport)

HANDLE
__stdcall
CreateTimerQueue(
    void
    );

__declspec(dllimport)
BOOL
__stdcall
CreateTimerQueueTimer(
     PHANDLE phNewTimer,
        HANDLE TimerQueue,
            WAITORTIMERCALLBACK Callback,
        PVOID Parameter,
            DWORD DueTime,
            DWORD Period,
            ULONG Flags
    ) ;

__declspec(dllimport)

BOOL
__stdcall
ChangeTimerQueueTimer(
     HANDLE TimerQueue,
      HANDLE Timer,
         ULONG DueTime,
         ULONG Period
    );

__declspec(dllimport)

BOOL
__stdcall
DeleteTimerQueueTimer(
     HANDLE TimerQueue,
         HANDLE Timer,
     HANDLE CompletionEvent
    );

__declspec(dllimport)

BOOL
__stdcall
DeleteTimerQueueEx(
         HANDLE TimerQueue,
     HANDLE CompletionEvent
    );

__declspec(dllimport)
HANDLE
__stdcall
SetTimerQueueTimer(
     HANDLE TimerQueue,
         WAITORTIMERCALLBACK Callback,
     PVOID Parameter,
         DWORD DueTime,
         DWORD Period,
         BOOL PreferIo
    );

__declspec(dllimport)

BOOL
__stdcall
CancelTimerQueueTimer(
     HANDLE TimerQueue,
         HANDLE Timer
    );

__declspec(dllimport)

BOOL
__stdcall
DeleteTimerQueue(
     HANDLE TimerQueue
    );



typedef void (__stdcall *PTP_WIN32_IO_CALLBACK)(
         PTP_CALLBACK_INSTANCE Instance,
     PVOID                 Context,
     PVOID                 Overlapped,
            ULONG                 IoResult,
            ULONG_PTR             NumberOfBytesTransferred,
         PTP_IO                Io
    );

__declspec(dllimport)


PTP_POOL
__stdcall
CreateThreadpool(
     PVOID reserved
    );

__declspec(dllimport)
void
__stdcall
SetThreadpoolThreadMaximum(
     PTP_POOL ptpp,
        DWORD    cthrdMost
    );

__declspec(dllimport)
BOOL
__stdcall
SetThreadpoolThreadMinimum(
     PTP_POOL ptpp,
        DWORD    cthrdMic
    );

__declspec(dllimport)
BOOL
__stdcall
SetThreadpoolStackInformation(
     PTP_POOL           ptpp,
        PTP_POOL_STACK_INFORMATION ptpsi
    );

__declspec(dllimport)
BOOL
__stdcall
QueryThreadpoolStackInformation(
        PTP_POOL           ptpp,
       PTP_POOL_STACK_INFORMATION ptpsi
    );

__declspec(dllimport)
void
__stdcall
CloseThreadpool(
     PTP_POOL ptpp
    );

__declspec(dllimport)


PTP_CLEANUP_GROUP
__stdcall
CreateThreadpoolCleanupGroup(
    void
    );

__declspec(dllimport)
void
__stdcall
CloseThreadpoolCleanupGroupMembers(
         PTP_CLEANUP_GROUP ptpcg,
            BOOL              fCancelPendingCallbacks,
     PVOID             pvCleanupContext
    );

__declspec(dllimport)
void
__stdcall
CloseThreadpoolCleanupGroup(
     PTP_CLEANUP_GROUP ptpcg
    );



__forceinline
void
InitializeThreadpoolEnvironment(
     PTP_CALLBACK_ENVIRON pcbe
    )
{
    TpInitializeCallbackEnviron(pcbe);
}

__forceinline
void
SetThreadpoolCallbackPool(
     PTP_CALLBACK_ENVIRON pcbe,
        PTP_POOL             ptpp
    )
{
    TpSetCallbackThreadpool(pcbe, ptpp);
}

__forceinline
void
SetThreadpoolCallbackCleanupGroup(
      PTP_CALLBACK_ENVIRON              pcbe,
         PTP_CLEANUP_GROUP                 ptpcg,
     PTP_CLEANUP_GROUP_CANCEL_CALLBACK pfng
    )
{
    TpSetCallbackCleanupGroup(pcbe, ptpcg, pfng);
}

__forceinline
void
SetThreadpoolCallbackRunsLong(
     PTP_CALLBACK_ENVIRON pcbe
    )
{
    TpSetCallbackLongFunction(pcbe);
}

__forceinline
void
SetThreadpoolCallbackLibrary(
     PTP_CALLBACK_ENVIRON pcbe,
        PVOID                mod
    )
{
    TpSetCallbackRaceWithDll(pcbe, mod);
}



__forceinline
void
SetThreadpoolCallbackPriority(
     PTP_CALLBACK_ENVIRON pcbe,
        TP_CALLBACK_PRIORITY Priority
    )
{
    TpSetCallbackPriority(pcbe, Priority);
}

#line 13214 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__forceinline
void
SetThreadpoolCallbackPersistent(
     PTP_CALLBACK_ENVIRON pcbe
    )
{
    TpSetCallbackPersistent(pcbe);
}

__forceinline
void
DestroyThreadpoolEnvironment(
     PTP_CALLBACK_ENVIRON pcbe
    )
{
    TpDestroyCallbackEnviron(pcbe);
}

#line 13234 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
void
__stdcall
SetEventWhenCallbackReturns(
     PTP_CALLBACK_INSTANCE pci,
        HANDLE                evt
    );

__declspec(dllimport)
void
__stdcall
ReleaseSemaphoreWhenCallbackReturns(
     PTP_CALLBACK_INSTANCE pci,
        HANDLE                sem,
        DWORD                 crel
    );

__declspec(dllimport)
void
__stdcall
ReleaseMutexWhenCallbackReturns(
     PTP_CALLBACK_INSTANCE pci,
        HANDLE                mut
    );

__declspec(dllimport)
void
__stdcall
LeaveCriticalSectionWhenCallbackReturns(
     PTP_CALLBACK_INSTANCE pci,
     PCRITICAL_SECTION     pcs
    );

__declspec(dllimport)
void
__stdcall
FreeLibraryWhenCallbackReturns(
     PTP_CALLBACK_INSTANCE pci,
        HMODULE               mod
    );

__declspec(dllimport)
BOOL
__stdcall
CallbackMayRunLong(
     PTP_CALLBACK_INSTANCE pci
    );

__declspec(dllimport)
void
__stdcall
DisassociateCurrentThreadFromCallback(
     PTP_CALLBACK_INSTANCE pci
    );

__declspec(dllimport)

BOOL
__stdcall
TrySubmitThreadpoolCallback(
            PTP_SIMPLE_CALLBACK  pfns,
     PVOID                pv,
        PTP_CALLBACK_ENVIRON pcbe
    );

__declspec(dllimport)


PTP_WORK
__stdcall
CreateThreadpoolWork(
            PTP_WORK_CALLBACK    pfnwk,
     PVOID                pv,
        PTP_CALLBACK_ENVIRON pcbe
    );

__declspec(dllimport)
void
__stdcall
SubmitThreadpoolWork(
     PTP_WORK pwk
    );

__declspec(dllimport)
void
__stdcall
WaitForThreadpoolWorkCallbacks(
     PTP_WORK pwk,
        BOOL     fCancelPendingCallbacks
    );

__declspec(dllimport)
void
__stdcall
CloseThreadpoolWork(
     PTP_WORK pwk
    );

__declspec(dllimport)


PTP_TIMER
__stdcall
CreateThreadpoolTimer(
            PTP_TIMER_CALLBACK   pfnti,
     PVOID                pv,
        PTP_CALLBACK_ENVIRON pcbe
    );

__declspec(dllimport)
void
__stdcall
SetThreadpoolTimer(
      PTP_TIMER pti,
     PFILETIME pftDueTime,
         DWORD     msPeriod,
     DWORD     msWindowLength
    );

__declspec(dllimport)
BOOL
__stdcall
IsThreadpoolTimerSet(
     PTP_TIMER pti
    );

__declspec(dllimport)
void
__stdcall
WaitForThreadpoolTimerCallbacks(
     PTP_TIMER pti,
        BOOL      fCancelPendingCallbacks
    );

__declspec(dllimport)
void
__stdcall
CloseThreadpoolTimer(
     PTP_TIMER pti
    );

__declspec(dllimport)


PTP_WAIT
__stdcall
CreateThreadpoolWait(
            PTP_WAIT_CALLBACK    pfnwa,
     PVOID                pv,
        PTP_CALLBACK_ENVIRON pcbe
    );

__declspec(dllimport)
void
__stdcall
SetThreadpoolWait(
      PTP_WAIT  pwa,
     HANDLE    h,
     PFILETIME pftTimeout
    );

__declspec(dllimport)
void
__stdcall
WaitForThreadpoolWaitCallbacks(
     PTP_WAIT pwa,
        BOOL     fCancelPendingCallbacks
    );

__declspec(dllimport)
void
__stdcall
CloseThreadpoolWait(
     PTP_WAIT pwa
    );

__declspec(dllimport)


PTP_IO
__stdcall
CreateThreadpoolIo(
            HANDLE                fl,
            PTP_WIN32_IO_CALLBACK pfnio,
     PVOID                 pv,
        PTP_CALLBACK_ENVIRON  pcbe
    );

__declspec(dllimport)
void
__stdcall
StartThreadpoolIo(
     PTP_IO pio
    );

__declspec(dllimport)
void
__stdcall
CancelThreadpoolIo(
     PTP_IO pio
    );

__declspec(dllimport)
void
__stdcall
WaitForThreadpoolIoCallbacks(
     PTP_IO pio,
        BOOL   fCancelPendingCallbacks
    );

__declspec(dllimport)
void
__stdcall
CloseThreadpoolIo(
     PTP_IO pio
    );





__declspec(dllimport)

HANDLE
__stdcall
CreatePrivateNamespaceA(
     LPSECURITY_ATTRIBUTES lpPrivateNamespaceAttributes,
         LPVOID lpBoundaryDescriptor,
         LPCSTR lpAliasPrefix
    );
__declspec(dllimport)

HANDLE
__stdcall
CreatePrivateNamespaceW(
     LPSECURITY_ATTRIBUTES lpPrivateNamespaceAttributes,
         LPVOID lpBoundaryDescriptor,
         LPCWSTR lpAliasPrefix
    );




#line 13479 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)

HANDLE
__stdcall
OpenPrivateNamespaceA(
         LPVOID lpBoundaryDescriptor,
         LPCSTR lpAliasPrefix
    );
__declspec(dllimport)

HANDLE
__stdcall
OpenPrivateNamespaceW(
         LPVOID lpBoundaryDescriptor,
         LPCWSTR lpAliasPrefix
    );




#line 13501 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"




__declspec(dllimport)
BOOLEAN
__stdcall
ClosePrivateNamespace(
     HANDLE Handle,
     ULONG Flags
    );






__declspec(dllimport)

HANDLE
__stdcall
CreateBoundaryDescriptorA(
     LPCSTR Name,
     ULONG Flags
    );
__declspec(dllimport)

HANDLE
__stdcall
CreateBoundaryDescriptorW(
     LPCWSTR Name,
     ULONG Flags
    );




#line 13539 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
AddSIDToBoundaryDescriptor(
     HANDLE * BoundaryDescriptor,
     PSID RequiredSid
    );

__declspec(dllimport)
BOOL
__stdcall
AddIntegrityLabelToBoundaryDescriptor(
     HANDLE * BoundaryDescriptor,
     PSID IntegrityLabel
    );


__declspec(dllimport)
void
__stdcall
DeleteBoundaryDescriptor(
     HANDLE BoundaryDescriptor
    );


#line 13566 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

#line 13568 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"
















typedef struct tagHW_PROFILE_INFOA {
    DWORD  dwDockInfo;
    CHAR   szHwProfileGuid[39];
    CHAR   szHwProfileName[80];
} HW_PROFILE_INFOA, *LPHW_PROFILE_INFOA;
typedef struct tagHW_PROFILE_INFOW {
    DWORD  dwDockInfo;
    WCHAR  szHwProfileGuid[39];
    WCHAR  szHwProfileName[80];
} HW_PROFILE_INFOW, *LPHW_PROFILE_INFOW;




typedef HW_PROFILE_INFOA HW_PROFILE_INFO;
typedef LPHW_PROFILE_INFOA LPHW_PROFILE_INFO;
#line 13601 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"


__declspec(dllimport)
BOOL
__stdcall
GetCurrentHwProfileA (
     LPHW_PROFILE_INFOA  lpHwProfileInfo
    );
__declspec(dllimport)
BOOL
__stdcall
GetCurrentHwProfileW (
     LPHW_PROFILE_INFOW  lpHwProfileInfo
    );




#line 13620 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"
#line 13621 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"





__declspec(dllimport)
BOOL
__stdcall
QueryPerformanceCounter(
     LARGE_INTEGER *lpPerformanceCount
    );

__declspec(dllimport)
BOOL
__stdcall
QueryPerformanceFrequency(
     LARGE_INTEGER *lpFrequency
    );



__declspec(dllimport)
BOOL
__stdcall
GetVersionExA(
     LPOSVERSIONINFOA lpVersionInformation
    );
__declspec(dllimport)
BOOL
__stdcall
GetVersionExW(
     LPOSVERSIONINFOW lpVersionInformation
    );




#line 13659 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"



__declspec(dllimport)
BOOL
__stdcall
VerifyVersionInfoA(
     LPOSVERSIONINFOEXA lpVersionInformation,
        DWORD dwTypeMask,
        DWORDLONG dwlConditionMask
    );
__declspec(dllimport)
BOOL
__stdcall
VerifyVersionInfoW(
     LPOSVERSIONINFOEXW lpVersionInformation,
        DWORD dwTypeMask,
        DWORDLONG dwlConditionMask
    );




#line 13683 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"



__declspec(dllimport)
BOOL
__stdcall
GetProductInfo(
      DWORD  dwOSMajorVersion,
      DWORD  dwOSMinorVersion,
      DWORD  dwSpMajorVersion,
      DWORD  dwSpMinorVersion,
     PDWORD pdwReturnedProductType
    );

#line 13698 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"





#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winerror.h"












#pragma once
#line 15 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winerror.h"
















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 20640 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winerror.h"






























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 23839 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winerror.h"


__forceinline HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (7 << 16) | 0x80000000);}


#line 23845 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winerror.h"










































#line 23888 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winerror.h"


























































































































































































#line 24075 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winerror.h"









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































 
 
 
 
 






























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 41176 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winerror.h"














































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 43975 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winerror.h"


#line 13704 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"





























typedef struct _SYSTEM_POWER_STATUS {
    BYTE ACLineStatus;
    BYTE BatteryFlag;
    BYTE BatteryLifePercent;
    BYTE Reserved1;
    DWORD BatteryLifeTime;
    DWORD BatteryFullLifeTime;
}   SYSTEM_POWER_STATUS, *LPSYSTEM_POWER_STATUS;

__declspec(dllimport)
BOOL
__stdcall
GetSystemPowerStatus(
     LPSYSTEM_POWER_STATUS lpSystemPowerStatus
    );

__declspec(dllimport)
BOOL
__stdcall
SetSystemPowerState(
     BOOL fSuspend,
     BOOL fForce
    );

#line 13758 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"






__declspec(dllimport)
BOOL
__stdcall
AllocateUserPhysicalPages(
        HANDLE hProcess,
     PULONG_PTR NumberOfPages,
     PULONG_PTR PageArray
    );



__declspec(dllimport)
BOOL
__stdcall
AllocateUserPhysicalPagesNuma(
        HANDLE hProcess,
     PULONG_PTR NumberOfPages,
     PULONG_PTR PageArray,
        DWORD nndPreferred
    );

#line 13786 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
FreeUserPhysicalPages(
        HANDLE hProcess,
     PULONG_PTR NumberOfPages,
     PULONG_PTR PageArray
    );

__declspec(dllimport)
BOOL
__stdcall
MapUserPhysicalPages(
     PVOID VirtualAddress,
     ULONG_PTR NumberOfPages,
     PULONG_PTR PageArray
    );

__declspec(dllimport)
BOOL
__stdcall
MapUserPhysicalPagesScatter(
     PVOID *VirtualAddresses,
     ULONG_PTR NumberOfPages,
     PULONG_PTR PageArray
    );

__declspec(dllimport)

HANDLE
__stdcall
CreateJobObjectA(
     LPSECURITY_ATTRIBUTES lpJobAttributes,
     LPCSTR lpName
    );
__declspec(dllimport)

HANDLE
__stdcall
CreateJobObjectW(
     LPSECURITY_ATTRIBUTES lpJobAttributes,
     LPCWSTR lpName
    );




#line 13835 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)

HANDLE
__stdcall
OpenJobObjectA(
     DWORD dwDesiredAccess,
     BOOL bInheritHandle,
     LPCSTR lpName
    );
__declspec(dllimport)

HANDLE
__stdcall
OpenJobObjectW(
     DWORD dwDesiredAccess,
     BOOL bInheritHandle,
     LPCWSTR lpName
    );




#line 13859 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
AssignProcessToJobObject(
     HANDLE hJob,
     HANDLE hProcess
    );

__declspec(dllimport)
BOOL
__stdcall
TerminateJobObject(
     HANDLE hJob,
     UINT uExitCode
    );

__declspec(dllimport)
BOOL
__stdcall
QueryInformationJobObject(
      HANDLE hJob,
          JOBOBJECTINFOCLASS JobObjectInformationClass,
     LPVOID lpJobObjectInformation,
          DWORD cbJobObjectInformationLength,
     LPDWORD lpReturnLength
    );

__declspec(dllimport)
BOOL
__stdcall
SetInformationJobObject(
     HANDLE hJob,
     JOBOBJECTINFOCLASS JobObjectInformationClass,
     LPVOID lpJobObjectInformation,
     DWORD cbJobObjectInformationLength
    );



__declspec(dllimport)
BOOL
__stdcall
IsProcessInJob (
         HANDLE ProcessHandle,
     HANDLE JobHandle,
        PBOOL Result
    );

#line 13909 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
CreateJobSet (
     ULONG NumJob,
     PJOB_SET_ARRAY UserJobSet,
     ULONG Flags);

__declspec(dllimport)

PVOID
__stdcall
AddVectoredExceptionHandler (
     ULONG First,
     PVECTORED_EXCEPTION_HANDLER Handler
    );

__declspec(dllimport)
ULONG
__stdcall
RemoveVectoredExceptionHandler (
     PVOID Handle
    );

__declspec(dllimport)

PVOID
__stdcall
AddVectoredContinueHandler (
     ULONG First,
     PVECTORED_EXCEPTION_HANDLER Handler
    );

__declspec(dllimport)
ULONG
__stdcall
RemoveVectoredContinueHandler (
     PVOID Handle
    );





__declspec(dllimport)

HANDLE
__stdcall
FindFirstVolumeA(
     LPSTR lpszVolumeName,
     DWORD cchBufferLength
    );
__declspec(dllimport)

HANDLE
__stdcall
FindFirstVolumeW(
     LPWSTR lpszVolumeName,
     DWORD cchBufferLength
    );




#line 13975 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
FindNextVolumeA(
     HANDLE hFindVolume,
     LPSTR lpszVolumeName,
        DWORD cchBufferLength
    );
__declspec(dllimport)
BOOL
__stdcall
FindNextVolumeW(
     HANDLE hFindVolume,
     LPWSTR lpszVolumeName,
        DWORD cchBufferLength
    );




#line 13997 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
FindVolumeClose(
     HANDLE hFindVolume
    );

__declspec(dllimport)

HANDLE
__stdcall
FindFirstVolumeMountPointA(
     LPCSTR lpszRootPathName,
     LPSTR lpszVolumeMountPoint,
     DWORD cchBufferLength
    );
__declspec(dllimport)

HANDLE
__stdcall
FindFirstVolumeMountPointW(
     LPCWSTR lpszRootPathName,
     LPWSTR lpszVolumeMountPoint,
     DWORD cchBufferLength
    );




#line 14028 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
FindNextVolumeMountPointA(
     HANDLE hFindVolumeMountPoint,
     LPSTR lpszVolumeMountPoint,
     DWORD cchBufferLength
    );
__declspec(dllimport)
BOOL
__stdcall
FindNextVolumeMountPointW(
     HANDLE hFindVolumeMountPoint,
     LPWSTR lpszVolumeMountPoint,
     DWORD cchBufferLength
    );




#line 14050 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
FindVolumeMountPointClose(
     HANDLE hFindVolumeMountPoint
    );

__declspec(dllimport)
BOOL
__stdcall
SetVolumeMountPointA(
     LPCSTR lpszVolumeMountPoint,
     LPCSTR lpszVolumeName
    );
__declspec(dllimport)
BOOL
__stdcall
SetVolumeMountPointW(
     LPCWSTR lpszVolumeMountPoint,
     LPCWSTR lpszVolumeName
    );




#line 14077 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
DeleteVolumeMountPointA(
     LPCSTR lpszVolumeMountPoint
    );
__declspec(dllimport)
BOOL
__stdcall
DeleteVolumeMountPointW(
     LPCWSTR lpszVolumeMountPoint
    );




#line 14095 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
GetVolumeNameForVolumeMountPointA(
     LPCSTR lpszVolumeMountPoint,
     LPSTR lpszVolumeName,
     DWORD cchBufferLength
    );
__declspec(dllimport)
BOOL
__stdcall
GetVolumeNameForVolumeMountPointW(
     LPCWSTR lpszVolumeMountPoint,
     LPWSTR lpszVolumeName,
     DWORD cchBufferLength
    );




#line 14117 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
GetVolumePathNameA(
     LPCSTR lpszFileName,
     LPSTR lpszVolumePathName,
     DWORD cchBufferLength
    );
__declspec(dllimport)
BOOL
__stdcall
GetVolumePathNameW(
     LPCWSTR lpszFileName,
     LPWSTR lpszVolumePathName,
     DWORD cchBufferLength
    );




#line 14139 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

#line 14141 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"



__declspec(dllimport)
BOOL
__stdcall
GetVolumePathNamesForVolumeNameA(
      LPCSTR lpszVolumeName,
      LPCH lpszVolumePathNames,
      DWORD cchBufferLength,
     PDWORD lpcchReturnLength
    );
__declspec(dllimport)
BOOL
__stdcall
GetVolumePathNamesForVolumeNameW(
      LPCWSTR lpszVolumeName,
      LPWCH lpszVolumePathNames,
      DWORD cchBufferLength,
     PDWORD lpcchReturnLength
    );




#line 14167 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

#line 14169 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"












typedef struct tagACTCTXA {
    ULONG       cbSize;
    DWORD       dwFlags;
    LPCSTR      lpSource;
    USHORT      wProcessorArchitecture;
    LANGID      wLangId;
    LPCSTR      lpAssemblyDirectory;
    LPCSTR      lpResourceName;
    LPCSTR      lpApplicationName;
    HMODULE     hModule;
} ACTCTXA, *PACTCTXA;
typedef struct tagACTCTXW {
    ULONG       cbSize;
    DWORD       dwFlags;
    LPCWSTR     lpSource;
    USHORT      wProcessorArchitecture;
    LANGID      wLangId;
    LPCWSTR     lpAssemblyDirectory;
    LPCWSTR     lpResourceName;
    LPCWSTR     lpApplicationName;
    HMODULE     hModule;
} ACTCTXW, *PACTCTXW;




typedef ACTCTXA ACTCTX;
typedef PACTCTXA PACTCTX;
#line 14210 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

typedef const ACTCTXA *PCACTCTXA;
typedef const ACTCTXW *PCACTCTXW;



typedef PCACTCTXA PCACTCTX;
#line 14218 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"



__declspec(dllimport)

HANDLE
__stdcall
CreateActCtxA(
     PCACTCTXA pActCtx
    );
__declspec(dllimport)

HANDLE
__stdcall
CreateActCtxW(
     PCACTCTXW pActCtx
    );




#line 14240 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
void
__stdcall
AddRefActCtx(
     HANDLE hActCtx
    );


__declspec(dllimport)
void
__stdcall
ReleaseActCtx(
     HANDLE hActCtx
    );

__declspec(dllimport)
BOOL
__stdcall
ZombifyActCtx(
     HANDLE hActCtx
    );


__declspec(dllimport)
BOOL
__stdcall
ActivateActCtx(
     HANDLE hActCtx,
       ULONG_PTR *lpCookie
    );




__declspec(dllimport)
BOOL
__stdcall
DeactivateActCtx(
     DWORD dwFlags,
     ULONG_PTR ulCookie
    );

__declspec(dllimport)
BOOL
__stdcall
GetCurrentActCtx(
     HANDLE *lphActCtx);


typedef struct tagACTCTX_SECTION_KEYED_DATA_2600 {
    ULONG cbSize;
    ULONG ulDataFormatVersion;
    PVOID lpData;
    ULONG ulLength;
    PVOID lpSectionGlobalData;
    ULONG ulSectionGlobalDataLength;
    PVOID lpSectionBase;
    ULONG ulSectionTotalLength;
    HANDLE hActCtx;
    ULONG ulAssemblyRosterIndex;
} ACTCTX_SECTION_KEYED_DATA_2600, *PACTCTX_SECTION_KEYED_DATA_2600;
typedef const ACTCTX_SECTION_KEYED_DATA_2600 * PCACTCTX_SECTION_KEYED_DATA_2600;

typedef struct tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA {
    PVOID lpInformation;
    PVOID lpSectionBase;
    ULONG ulSectionLength;
    PVOID lpSectionGlobalDataBase;
    ULONG ulSectionGlobalDataLength;
} ACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA, *PACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA;
typedef const ACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA *PCACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA;

typedef struct tagACTCTX_SECTION_KEYED_DATA {
    ULONG cbSize;
    ULONG ulDataFormatVersion;
    PVOID lpData;
    ULONG ulLength;
    PVOID lpSectionGlobalData;
    ULONG ulSectionGlobalDataLength;
    PVOID lpSectionBase;
    ULONG ulSectionTotalLength;
    HANDLE hActCtx;
    ULONG ulAssemblyRosterIndex;

    ULONG ulFlags;
    ACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA AssemblyMetadata;
} ACTCTX_SECTION_KEYED_DATA, *PACTCTX_SECTION_KEYED_DATA;
typedef const ACTCTX_SECTION_KEYED_DATA * PCACTCTX_SECTION_KEYED_DATA;







__declspec(dllimport)
BOOL
__stdcall
FindActCtxSectionStringA(
           DWORD dwFlags,
     const GUID *lpExtensionGuid,
           ULONG ulSectionId,
           LPCSTR lpStringToFind,
          PACTCTX_SECTION_KEYED_DATA ReturnedData
    );
__declspec(dllimport)
BOOL
__stdcall
FindActCtxSectionStringW(
           DWORD dwFlags,
     const GUID *lpExtensionGuid,
           ULONG ulSectionId,
           LPCWSTR lpStringToFind,
          PACTCTX_SECTION_KEYED_DATA ReturnedData
    );




#line 14361 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
FindActCtxSectionGuid(
           DWORD dwFlags,
     const GUID *lpExtensionGuid,
           ULONG ulSectionId,
       const GUID *lpGuidToFind,
          PACTCTX_SECTION_KEYED_DATA ReturnedData
    );





typedef struct _ACTIVATION_CONTEXT_BASIC_INFORMATION {
    HANDLE  hActCtx;
    DWORD   dwFlags;
} ACTIVATION_CONTEXT_BASIC_INFORMATION, *PACTIVATION_CONTEXT_BASIC_INFORMATION;

typedef const struct _ACTIVATION_CONTEXT_BASIC_INFORMATION *PCACTIVATION_CONTEXT_BASIC_INFORMATION;



#line 14387 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"
#line 14388 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"




































__declspec(dllimport)
BOOL
__stdcall
QueryActCtxW(
          DWORD dwFlags,
          HANDLE hActCtx,
      PVOID pvSubInstance,
          ULONG ulInfoClass,
     PVOID pvBuffer,
          SIZE_T cbBuffer,
     SIZE_T *pcbWrittenOrRequired
    );

typedef BOOL (__stdcall * PQUERYACTCTXW_FUNC)(
          DWORD dwFlags,
          HANDLE hActCtx,
      PVOID pvSubInstance,
          ULONG ulInfoClass,
     PVOID pvBuffer,
          SIZE_T cbBuffer,
     SIZE_T *pcbWrittenOrRequired
    );

#line 14448 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"


__declspec(dllimport)
BOOL
__stdcall
ProcessIdToSessionId(
      DWORD dwProcessId,
     DWORD *pSessionId
    );



__declspec(dllimport)
DWORD
__stdcall
WTSGetActiveConsoleSessionId(
    void
    );

__declspec(dllimport)
BOOL
__stdcall
IsWow64Process(
      HANDLE hProcess,
     PBOOL Wow64Process
    );

#line 14476 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
GetLogicalProcessorInformation(
     PSYSTEM_LOGICAL_PROCESSOR_INFORMATION Buffer,
     PDWORD ReturnedLength
    );



__declspec(dllimport)
BOOL
__stdcall
GetLogicalProcessorInformationEx(
     LOGICAL_PROCESSOR_RELATIONSHIP RelationshipType,
     PSYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX Buffer,
     PDWORD ReturnedLength
    );

__declspec(dllimport)
WORD
__stdcall
GetActiveProcessorGroupCount(
    void
    );

__declspec(dllimport)
WORD
__stdcall
GetMaximumProcessorGroupCount(
    void
    );

__declspec(dllimport)
DWORD
__stdcall
GetActiveProcessorCount(
     WORD GroupNumber
    );

__declspec(dllimport)
DWORD
__stdcall
GetMaximumProcessorCount(
     WORD GroupNumber
    );

#line 14525 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"





__declspec(dllimport)
BOOL
__stdcall
GetNumaHighestNodeNumber(
     PULONG HighestNodeNumber
    );

__declspec(dllimport)
BOOL
__stdcall
GetNumaProcessorNode(
      UCHAR Processor,
     PUCHAR NodeNumber
    );



__declspec(dllimport)
BOOL
__stdcall
GetNumaNodeNumberFromHandle(
      HANDLE hFile,
     PUSHORT NodeNumber
    );

#line 14556 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"



__declspec(dllimport)
BOOL
__stdcall
GetNumaProcessorNodeEx(
      PPROCESSOR_NUMBER Processor,
     PUSHORT NodeNumber
    );

#line 14568 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
GetNumaNodeProcessorMask(
      UCHAR Node,
     PULONGLONG ProcessorMask
    );



__declspec(dllimport)
BOOL
__stdcall
GetNumaNodeProcessorMaskEx(
      USHORT Node,
     PGROUP_AFFINITY ProcessorMask
    );

#line 14588 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOL
__stdcall
GetNumaAvailableMemoryNode(
      UCHAR Node,
     PULONGLONG AvailableBytes
    );



__declspec(dllimport)
BOOL
__stdcall
GetNumaAvailableMemoryNodeEx(
      USHORT Node,
     PULONGLONG AvailableBytes
    );

#line 14608 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"



__declspec(dllimport)
BOOL
__stdcall
GetNumaProximityNode(
      ULONG ProximityId,
     PUCHAR NodeNumber
    );

#line 14620 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"



__declspec(dllimport)
BOOL
__stdcall
GetNumaProximityNodeEx(
      ULONG ProximityId,
     PUSHORT NodeNumber
    );

#line 14632 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"




typedef DWORD (__stdcall *APPLICATION_RECOVERY_CALLBACK)(PVOID pvParameter);


























__declspec(dllimport)
HRESULT
__stdcall
RegisterApplicationRecoveryCallback(
      APPLICATION_RECOVERY_CALLBACK pRecoveyCallback,
      PVOID pvParameter,
     DWORD dwPingInterval,
     DWORD dwFlags
    );

__declspec(dllimport)
HRESULT
__stdcall
UnregisterApplicationRecoveryCallback(void);

__declspec(dllimport)
HRESULT
__stdcall
RegisterApplicationRestart(
     PCWSTR pwzCommandline,
     DWORD dwFlags
    );

__declspec(dllimport)
HRESULT
__stdcall
UnregisterApplicationRestart(void);




__declspec(dllimport)
HRESULT
__stdcall
GetApplicationRecoveryCallback(
      HANDLE hProcess,
     APPLICATION_RECOVERY_CALLBACK* pRecoveryCallback,
     PVOID* ppvParameter,
     PDWORD pdwPingInterval,
     PDWORD pdwFlags
    );

__declspec(dllimport)
HRESULT
__stdcall
GetApplicationRestartSettings(
     HANDLE hProcess,
     PWSTR pwzCommandline,
     PDWORD pcchSize,
     PDWORD pdwFlags
    );

__declspec(dllimport)
HRESULT
__stdcall
ApplicationRecoveryInProgress(
     PBOOL pbCancelled
    );

__declspec(dllimport)
void
__stdcall
ApplicationRecoveryFinished(
     BOOL bSuccess
    );


typedef enum _FILE_INFO_BY_HANDLE_CLASS {
    FileBasicInfo,
    FileStandardInfo,
    FileNameInfo,
    FileRenameInfo,
    FileDispositionInfo,
    FileAllocationInfo,
    FileEndOfFileInfo,
    FileStreamInfo,
    FileCompressionInfo,
    FileAttributeTagInfo,
    FileIdBothDirectoryInfo,
    FileIdBothDirectoryRestartInfo,
    FileIoPriorityHintInfo,
    FileRemoteProtocolInfo, 
    MaximumFileInfoByHandleClass
} FILE_INFO_BY_HANDLE_CLASS, *PFILE_INFO_BY_HANDLE_CLASS;

typedef struct _FILE_BASIC_INFO {
    LARGE_INTEGER CreationTime;
    LARGE_INTEGER LastAccessTime;
    LARGE_INTEGER LastWriteTime;
    LARGE_INTEGER ChangeTime;
    DWORD FileAttributes;
} FILE_BASIC_INFO, *PFILE_BASIC_INFO;

typedef struct _FILE_STANDARD_INFO {
    LARGE_INTEGER AllocationSize;
    LARGE_INTEGER EndOfFile;
    DWORD NumberOfLinks;
    BOOLEAN DeletePending;
    BOOLEAN Directory;
} FILE_STANDARD_INFO, *PFILE_STANDARD_INFO;

typedef struct _FILE_NAME_INFO {
    DWORD FileNameLength;
    WCHAR FileName[1];
} FILE_NAME_INFO, *PFILE_NAME_INFO;

typedef struct _FILE_RENAME_INFO {
    BOOLEAN ReplaceIfExists;
    HANDLE RootDirectory;
    DWORD FileNameLength;
    WCHAR FileName[1];
} FILE_RENAME_INFO, *PFILE_RENAME_INFO;

typedef struct _FILE_ALLOCATION_INFO {
    LARGE_INTEGER AllocationSize;
} FILE_ALLOCATION_INFO, *PFILE_ALLOCATION_INFO;

typedef struct _FILE_END_OF_FILE_INFO {
    LARGE_INTEGER EndOfFile;
} FILE_END_OF_FILE_INFO, *PFILE_END_OF_FILE_INFO;

typedef struct _FILE_STREAM_INFO {
    DWORD NextEntryOffset;
    DWORD StreamNameLength;
    LARGE_INTEGER StreamSize;
    LARGE_INTEGER StreamAllocationSize;
    WCHAR StreamName[1];
} FILE_STREAM_INFO, *PFILE_STREAM_INFO;

typedef struct _FILE_COMPRESSION_INFO {
    LARGE_INTEGER CompressedFileSize;
    WORD CompressionFormat;
    UCHAR CompressionUnitShift;
    UCHAR ChunkShift;
    UCHAR ClusterShift;
    UCHAR Reserved[3];
} FILE_COMPRESSION_INFO, *PFILE_COMPRESSION_INFO;

typedef struct _FILE_ATTRIBUTE_TAG_INFO {
    DWORD FileAttributes;
    DWORD ReparseTag;
} FILE_ATTRIBUTE_TAG_INFO, *PFILE_ATTRIBUTE_TAG_INFO;

typedef struct _FILE_DISPOSITION_INFO {
    BOOLEAN DeleteFileA;
} FILE_DISPOSITION_INFO, *PFILE_DISPOSITION_INFO;

typedef struct _FILE_ID_BOTH_DIR_INFO {
    DWORD NextEntryOffset;
    DWORD FileIndex;
    LARGE_INTEGER CreationTime;
    LARGE_INTEGER LastAccessTime;
    LARGE_INTEGER LastWriteTime;
    LARGE_INTEGER ChangeTime;
    LARGE_INTEGER EndOfFile;
    LARGE_INTEGER AllocationSize;
    DWORD FileAttributes;
    DWORD FileNameLength;
    DWORD EaSize;
    CCHAR ShortNameLength;
    WCHAR ShortName[12];
    LARGE_INTEGER FileId;
    WCHAR FileName[1];
} FILE_ID_BOTH_DIR_INFO, *PFILE_ID_BOTH_DIR_INFO;

typedef enum _PRIORITY_HINT {
      IoPriorityHintVeryLow = 0,
      IoPriorityHintLow,
      IoPriorityHintNormal,
      MaximumIoPriorityHintType
} PRIORITY_HINT;

typedef struct _FILE_IO_PRIORITY_HINT_INFO {
    PRIORITY_HINT PriorityHint;
} FILE_IO_PRIORITY_HINT_INFO, *PFILE_IO_PRIORITY_HINT_INFO;






typedef struct _FILE_REMOTE_PROTOCOL_INFO
{
    
    USHORT StructureVersion;     
    USHORT StructureSize;        
    
    DWORD  Protocol;             
    
    
    USHORT ProtocolMajorVersion;
    USHORT ProtocolMinorVersion;
    USHORT ProtocolRevision;
    
    USHORT Reserved;
    
    
    DWORD  Flags;
    
    struct {
        DWORD Reserved[8];
    } GenericReserved;

    
    
    struct {
        DWORD Reserved[16];
    } ProtocolSpecificReserved;
    
} FILE_REMOTE_PROTOCOL_INFO, *PFILE_REMOTE_PROTOCOL_INFO;


__declspec(dllimport)
BOOL
__stdcall
SetFileInformationByHandle(
      HANDLE hFile,
      FILE_INFO_BY_HANDLE_CLASS FileInformationClass,
      LPVOID lpFileInformation,
      DWORD dwBufferSize
);

__declspec(dllimport)
BOOL
__stdcall
GetFileInformationByHandleEx(
      HANDLE hFile,
      FILE_INFO_BY_HANDLE_CLASS FileInformationClass,
     LPVOID lpFileInformation,
      DWORD dwBufferSize
);

typedef enum _FILE_ID_TYPE {
      FileIdType,
      ObjectIdType,
      MaximumFileIdType
} FILE_ID_TYPE, *PFILE_ID_TYPE;

typedef struct FILE_ID_DESCRIPTOR {
    DWORD dwSize;  
    FILE_ID_TYPE Type; 
    union {
        LARGE_INTEGER FileId;
        GUID ObjectId;
    } ;
} FILE_ID_DESCRIPTOR, *LPFILE_ID_DESCRIPTOR;

__declspec(dllimport)

HANDLE
__stdcall
OpenFileById (
         HANDLE hVolumeHint,
         LPFILE_ID_DESCRIPTOR lpFileId,
         DWORD dwDesiredAccess,
         DWORD dwShareMode,
     LPSECURITY_ATTRIBUTES lpSecurityAttributes,
         DWORD dwFlagsAndAttributes
    );
#line 14923 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"











__declspec(dllimport)
BOOLEAN
__stdcall
CreateSymbolicLinkA (
     LPCSTR lpSymlinkFileName,
     LPCSTR lpTargetFileName,
     DWORD dwFlags
    );
__declspec(dllimport)
BOOLEAN
__stdcall
CreateSymbolicLinkW (
     LPCWSTR lpSymlinkFileName,
     LPCWSTR lpTargetFileName,
     DWORD dwFlags
    );




#line 14955 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
BOOLEAN
__stdcall
CreateSymbolicLinkTransactedA (
         LPCSTR lpSymlinkFileName,
         LPCSTR lpTargetFileName,
         DWORD dwFlags,
         HANDLE hTransaction
    );
__declspec(dllimport)
BOOLEAN
__stdcall
CreateSymbolicLinkTransactedW (
         LPCWSTR lpSymlinkFileName,
         LPCWSTR lpTargetFileName,
         DWORD dwFlags,
         HANDLE hTransaction
    );




#line 14979 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__declspec(dllimport)
DWORD
__stdcall
GetFinalPathNameByHandleA (
     HANDLE hFile,
     LPSTR lpszFilePath,
     DWORD cchFilePath,
     DWORD dwFlags
);
__declspec(dllimport)
DWORD
__stdcall
GetFinalPathNameByHandleW (
     HANDLE hFile,
     LPWSTR lpszFilePath,
     DWORD cchFilePath,
     DWORD dwFlags
);




#line 15003 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

#line 15005 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"




__declspec(dllimport)
BOOL
__stdcall
QueryActCtxSettingsW(
          DWORD dwFlags,
          HANDLE hActCtx,
          PCWSTR settingsNameSpace,
              PCWSTR settingName,
     PWSTR pvBuffer,
          SIZE_T dwBuffer,
     SIZE_T *pdwWrittenOrRequired
    );

#line 15023 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"



__declspec(dllimport)
BOOL
__stdcall
ReplacePartitionUnit (
     PWSTR TargetPartition,
     PWSTR SparePartition,
     ULONG Flags
    );

#line 15036 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"




__declspec(dllimport)
BOOL
__stdcall
AddSecureMemoryCacheCallback(
      PSECURE_MEMORY_CACHE_CALLBACK pfnCallBack
    );

__declspec(dllimport)
BOOL
__stdcall
RemoveSecureMemoryCacheCallback(
      PSECURE_MEMORY_CACHE_CALLBACK pfnCallBack
    );

#line 15055 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"




__declspec(dllimport)
BOOL
__stdcall
CopyExtendedContext(
     PCONTEXT_EX Destination,
     DWORD ContextFlags,
     PCONTEXT_EX Source
    );


__declspec(dllimport)
BOOL
__stdcall
InitializeExtendedContext(
     PVOID Context,
     DWORD ContextFlags,
     PCONTEXT_EX* ContextEx
    );

__declspec(dllimport)
DWORD64
__stdcall
GetEnabledExtendedFeatures(
     DWORD64 FeatureMask
    );


__declspec(dllimport)
BOOL
__stdcall
GetExtendedContextLength(
     DWORD ContextFlags,
     PDWORD ContextLength
    );

__declspec(dllimport)
DWORD64
__stdcall
GetExtendedFeaturesMask(
     PCONTEXT_EX ContextEx
    );

__declspec(dllimport)
PVOID
__stdcall
LocateExtendedFeature(
     PCONTEXT_EX ContextEx,
     DWORD FeatureId,
     PDWORD Length
    );

__declspec(dllimport)
PCONTEXT
__stdcall
LocateLegacyContext(
     PCONTEXT_EX ContextEx,
     PDWORD Length
    );

__declspec(dllimport)
void
__stdcall
SetExtendedFeaturesMask(
     PCONTEXT_EX ContextEx,
     DWORD64 FeatureMask
    );

__declspec(dllimport)
DWORD
__stdcall
EnableThreadProfiling(
     HANDLE ThreadHandle,
     DWORD Flags,
     DWORD64 HardwareCounters,
     HANDLE *PerformanceDataHandle
    );

__declspec(dllimport)
DWORD
__stdcall
DisableThreadProfiling(
     HANDLE PerformanceDataHandle
    );

__declspec(dllimport)
DWORD
__stdcall
QueryThreadProfiling(
     HANDLE ThreadHandle,
     PBOOLEAN Enabled
    );

__declspec(dllimport)
DWORD
__stdcall
ReadThreadProfilingData(
     HANDLE PerformanceDataHandle,
     DWORD Flags,
     PPERFORMANCE_DATA PerformanceData
    );

#line 15161 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"






#line 15168 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"
#line 15169 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"


}
#line 15173 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"



#line 15177 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"




























#pragma once
#line 15207 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"










#line 15218 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"





extern "C++" {

__forceinline
unsigned
InterlockedIncrement(
       unsigned volatile *Addend
    )
{
    return (unsigned) InterlockedIncrement((volatile long*) Addend);
}

__forceinline
unsigned long
InterlockedIncrement(
       unsigned long volatile *Addend
    )
{
    return (unsigned long) InterlockedIncrement((volatile long*) Addend);
}



__forceinline
unsigned __int64
InterlockedIncrement(
       unsigned __int64 volatile *Addend
    )
{
    return (unsigned __int64) InterlockedIncrement64((volatile __int64*) Addend);
}

#line 15255 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__forceinline
unsigned
InterlockedDecrement(
       unsigned volatile *Addend
    )
{
    return (unsigned long) InterlockedDecrement((volatile long*) Addend);
}

__forceinline
unsigned long
InterlockedDecrement(
       unsigned long volatile *Addend
    )
{
    return (unsigned long) InterlockedDecrement((volatile long*) Addend);
}



__forceinline
unsigned __int64
InterlockedDecrement(
       unsigned __int64 volatile *Addend
    )
{
    return (unsigned __int64) InterlockedDecrement64((volatile __int64*) Addend);
}

#line 15286 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__forceinline
unsigned
InterlockedExchange(
       unsigned volatile *Target,
     unsigned Value
    )
{
    return (unsigned) InterlockedExchange((volatile long*) Target, (long) Value);
}

__forceinline
unsigned long
InterlockedExchange(
       unsigned long volatile *Target,
     unsigned long Value
    )
{
    return (unsigned long) InterlockedExchange((volatile long*) Target, (long) Value);
}



__forceinline
unsigned __int64
InterlockedExchange(
       unsigned __int64 volatile *Target,
     unsigned __int64 Value
    )
{
    return (unsigned __int64) InterlockedExchange64((volatile __int64*) Target, (__int64) Value);
}

#line 15320 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__forceinline
unsigned
InterlockedExchangeAdd(
       unsigned volatile *Addend,
     unsigned Value
    )
{
    return (unsigned) InterlockedExchangeAdd((volatile long*) Addend, (long) Value);
}

__forceinline
unsigned
InterlockedExchangeSubtract(
       unsigned volatile *Addend,
     unsigned Value
    )
{
    return (unsigned) InterlockedExchangeAdd((volatile long*) Addend,  - (long) Value);
}

__forceinline
unsigned long
InterlockedExchangeAdd(
       unsigned long volatile *Addend,
     unsigned long Value
    )
{
    return (unsigned long) InterlockedExchangeAdd((volatile long*) Addend, (long) Value);
}

__forceinline
unsigned long
InterlockedExchangeSubtract(
       unsigned long volatile *Addend,
     unsigned long Value
    )
{
    return (unsigned long) InterlockedExchangeAdd((volatile long*) Addend,  - (long) Value);
}



__forceinline
unsigned __int64
InterlockedExchangeAdd(
       unsigned __int64 volatile *Addend,
     unsigned __int64 Value
    )
{
    return (unsigned __int64) InterlockedExchangeAdd64((volatile __int64*) Addend,  (__int64) Value);
}

__forceinline
unsigned __int64
InterlockedExchangeSubtract(
       unsigned __int64 volatile *Addend,
     unsigned __int64 Value
    )
{
    return (unsigned __int64) InterlockedExchangeAdd64((volatile __int64*) Addend,  - (__int64) Value);
}

#line 15384 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

__forceinline
unsigned
InterlockedCompareExchange(
       unsigned volatile *Destination,
     unsigned Exchange,
     unsigned Comperand
    )
{
    return (unsigned) InterlockedCompareExchange((volatile long*) Destination, (long) Exchange, (long) Comperand);
}

__forceinline
unsigned long
InterlockedCompareExchange(
       unsigned long volatile *Destination,
     unsigned long Exchange,
     unsigned long Comperand
    )
{
    return (unsigned long) InterlockedCompareExchange((volatile long*) Destination, (long) Exchange, (long) Comperand);
}



__forceinline
unsigned __int64
InterlockedCompareExchange(
       unsigned __int64 volatile *Destination,
     unsigned __int64 Exchange,
     unsigned __int64 Comperand
    )
{
    return (unsigned __int64) InterlockedCompareExchange64((volatile __int64*) Destination, (__int64) Exchange, (__int64) Comperand);
}

__forceinline
unsigned __int64
InterlockedAnd(
       unsigned __int64 volatile *Destination,
     unsigned __int64 Value
    )
{
    return (unsigned __int64) InterlockedAnd64((volatile __int64*) Destination, (__int64) Value);
}

__forceinline
unsigned __int64
InterlockedOr(
       unsigned __int64 volatile *Destination,
     unsigned __int64 Value
    )
{
    return (unsigned __int64) InterlockedOr64((volatile __int64*) Destination, (__int64) Value);
}

__forceinline
unsigned __int64
InterlockedXor(
       unsigned __int64 volatile *Destination,
     unsigned __int64 Value
    )
{
    return (unsigned __int64) InterlockedXor64((volatile __int64*) Destination, (__int64) Value);
}

#line 15451 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

} 
#line 15454 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"

#line 15456 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"




#line 15461 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"
#line 15462 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"
#line 15463 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"
#line 15464 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"
#line 15465 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"
#line 15466 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winbase.h"


#line 157 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windows.h"
#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"












#pragma once


#pragma warning(push)
#pragma warning(disable: 4201)      
#line 19 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"














#line 34 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"









#line 44 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"


extern "C" {
#line 48 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
















































#line 97 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"





#line 103 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"






#line 110 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"






























#line 141 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"













#line 155 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"

















#line 173 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
















#line 190 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"


#line 193 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"


#line 196 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"














































































#line 275 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"









typedef struct _DRAWPATRECT {
        POINT ptPosition;
        POINT ptSize;
        WORD wStyle;
        WORD wPattern;
} DRAWPATRECT, *PDRAWPATRECT;
#line 291 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"

#line 293 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"




































































































#line 394 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"















typedef struct _PSINJECTDATA {

    DWORD   DataBytes;      
    WORD    InjectionPoint; 
    WORD    PageNumber;     

    

} PSINJECTDATA, *PPSINJECTDATA;



































































#line 486 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"





typedef struct _PSFEATURE_OUTPUT {

    BOOL bPageIndependent;
    BOOL bSetPageDevice;

} PSFEATURE_OUTPUT, *PPSFEATURE_OUTPUT;





typedef struct _PSFEATURE_CUSTPAPER {

    LONG lOrientation;
    LONG lWidth;
    LONG lHeight;
    LONG lWidthOffset;
    LONG lHeightOffset;

} PSFEATURE_CUSTPAPER, *PPSFEATURE_CUSTPAPER;


















































typedef struct  tagXFORM
  {
    FLOAT   eM11;
    FLOAT   eM12;
    FLOAT   eM21;
    FLOAT   eM22;
    FLOAT   eDx;
    FLOAT   eDy;
  } XFORM, *PXFORM,  *LPXFORM;


typedef struct tagBITMAP
  {
    LONG        bmType;
    LONG        bmWidth;
    LONG        bmHeight;
    LONG        bmWidthBytes;
    WORD        bmPlanes;
    WORD        bmBitsPixel;
    LPVOID      bmBits;
  } BITMAP, *PBITMAP,  *NPBITMAP,  *LPBITMAP;

#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\pshpack1.h"























#pragma warning(disable:4103)

#pragma pack(push,1)


#line 30 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\pshpack1.h"


#line 33 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\pshpack1.h"
#line 34 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\pshpack1.h"

#line 584 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
typedef struct tagRGBTRIPLE {
        BYTE    rgbtBlue;
        BYTE    rgbtGreen;
        BYTE    rgbtRed;
} RGBTRIPLE, *PRGBTRIPLE,  *NPRGBTRIPLE,  *LPRGBTRIPLE;
#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\poppack.h"


























#pragma warning(disable:4103)

#pragma pack(pop)


#line 33 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\poppack.h"


#line 36 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\poppack.h"
#line 37 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\poppack.h"

#line 590 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"

typedef struct tagRGBQUAD {
        BYTE    rgbBlue;
        BYTE    rgbGreen;
        BYTE    rgbRed;
        BYTE    rgbReserved;
} RGBQUAD;
typedef RGBQUAD * LPRGBQUAD;


















typedef LONG   LCSCSTYPE;


typedef LONG    LCSGAMUTMATCH;


























typedef long            FXPT16DOT16,  *LPFXPT16DOT16;
typedef long            FXPT2DOT30,  *LPFXPT2DOT30;




typedef struct tagCIEXYZ
{
        FXPT2DOT30 ciexyzX;
        FXPT2DOT30 ciexyzY;
        FXPT2DOT30 ciexyzZ;
} CIEXYZ;
typedef CIEXYZ   *LPCIEXYZ;

typedef struct tagICEXYZTRIPLE
{
        CIEXYZ  ciexyzRed;
        CIEXYZ  ciexyzGreen;
        CIEXYZ  ciexyzBlue;
} CIEXYZTRIPLE;
typedef CIEXYZTRIPLE     *LPCIEXYZTRIPLE;






typedef struct tagLOGCOLORSPACEA {
    DWORD lcsSignature;
    DWORD lcsVersion;
    DWORD lcsSize;
    LCSCSTYPE lcsCSType;
    LCSGAMUTMATCH lcsIntent;
    CIEXYZTRIPLE lcsEndpoints;
    DWORD lcsGammaRed;
    DWORD lcsGammaGreen;
    DWORD lcsGammaBlue;
    CHAR   lcsFilename[260];
} LOGCOLORSPACEA, *LPLOGCOLORSPACEA;
typedef struct tagLOGCOLORSPACEW {
    DWORD lcsSignature;
    DWORD lcsVersion;
    DWORD lcsSize;
    LCSCSTYPE lcsCSType;
    LCSGAMUTMATCH lcsIntent;
    CIEXYZTRIPLE lcsEndpoints;
    DWORD lcsGammaRed;
    DWORD lcsGammaGreen;
    DWORD lcsGammaBlue;
    WCHAR  lcsFilename[260];
} LOGCOLORSPACEW, *LPLOGCOLORSPACEW;




typedef LOGCOLORSPACEA LOGCOLORSPACE;
typedef LPLOGCOLORSPACEA LPLOGCOLORSPACE;
#line 704 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"

#line 706 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"


typedef struct tagBITMAPCOREHEADER {
        DWORD   bcSize;                 
        WORD    bcWidth;
        WORD    bcHeight;
        WORD    bcPlanes;
        WORD    bcBitCount;
} BITMAPCOREHEADER,  *LPBITMAPCOREHEADER, *PBITMAPCOREHEADER;

typedef struct tagBITMAPINFOHEADER{
        DWORD      biSize;
        LONG       biWidth;
        LONG       biHeight;
        WORD       biPlanes;
        WORD       biBitCount;
        DWORD      biCompression;
        DWORD      biSizeImage;
        LONG       biXPelsPerMeter;
        LONG       biYPelsPerMeter;
        DWORD      biClrUsed;
        DWORD      biClrImportant;
} BITMAPINFOHEADER,  *LPBITMAPINFOHEADER, *PBITMAPINFOHEADER;


typedef struct {
        DWORD        bV4Size;
        LONG         bV4Width;
        LONG         bV4Height;
        WORD         bV4Planes;
        WORD         bV4BitCount;
        DWORD        bV4V4Compression;
        DWORD        bV4SizeImage;
        LONG         bV4XPelsPerMeter;
        LONG         bV4YPelsPerMeter;
        DWORD        bV4ClrUsed;
        DWORD        bV4ClrImportant;
        DWORD        bV4RedMask;
        DWORD        bV4GreenMask;
        DWORD        bV4BlueMask;
        DWORD        bV4AlphaMask;
        DWORD        bV4CSType;
        CIEXYZTRIPLE bV4Endpoints;
        DWORD        bV4GammaRed;
        DWORD        bV4GammaGreen;
        DWORD        bV4GammaBlue;
} BITMAPV4HEADER,  *LPBITMAPV4HEADER, *PBITMAPV4HEADER;
#line 754 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"


typedef struct {
        DWORD        bV5Size;
        LONG         bV5Width;
        LONG         bV5Height;
        WORD         bV5Planes;
        WORD         bV5BitCount;
        DWORD        bV5Compression;
        DWORD        bV5SizeImage;
        LONG         bV5XPelsPerMeter;
        LONG         bV5YPelsPerMeter;
        DWORD        bV5ClrUsed;
        DWORD        bV5ClrImportant;
        DWORD        bV5RedMask;
        DWORD        bV5GreenMask;
        DWORD        bV5BlueMask;
        DWORD        bV5AlphaMask;
        DWORD        bV5CSType;
        CIEXYZTRIPLE bV5Endpoints;
        DWORD        bV5GammaRed;
        DWORD        bV5GammaGreen;
        DWORD        bV5GammaBlue;
        DWORD        bV5Intent;
        DWORD        bV5ProfileData;
        DWORD        bV5ProfileSize;
        DWORD        bV5Reserved;
} BITMAPV5HEADER,  *LPBITMAPV5HEADER, *PBITMAPV5HEADER;




#line 787 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"









#line 797 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"

typedef struct tagBITMAPINFO {
    BITMAPINFOHEADER    bmiHeader;
    RGBQUAD             bmiColors[1];
} BITMAPINFO,  *LPBITMAPINFO, *PBITMAPINFO;

typedef struct tagBITMAPCOREINFO {
    BITMAPCOREHEADER    bmciHeader;
    RGBTRIPLE           bmciColors[1];
} BITMAPCOREINFO,  *LPBITMAPCOREINFO, *PBITMAPCOREINFO;

#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\pshpack2.h"























#pragma warning(disable:4103)

#pragma pack(push,2)


#line 30 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\pshpack2.h"


#line 33 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\pshpack2.h"
#line 34 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\pshpack2.h"

#line 809 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
typedef struct tagBITMAPFILEHEADER {
        WORD    bfType;
        DWORD   bfSize;
        WORD    bfReserved1;
        WORD    bfReserved2;
        DWORD   bfOffBits;
} BITMAPFILEHEADER,  *LPBITMAPFILEHEADER, *PBITMAPFILEHEADER;
#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\poppack.h"


























#pragma warning(disable:4103)

#pragma pack(pop)


#line 33 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\poppack.h"


#line 36 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\poppack.h"
#line 37 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\poppack.h"

#line 817 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"





typedef struct tagFONTSIGNATURE
{
    DWORD fsUsb[4];
    DWORD fsCsb[2];
} FONTSIGNATURE, *PFONTSIGNATURE, *LPFONTSIGNATURE;

typedef struct tagCHARSETINFO
{
    UINT ciCharset;
    UINT ciACP;
    FONTSIGNATURE fs;
} CHARSETINFO, *PCHARSETINFO,  *NPCHARSETINFO,  *LPCHARSETINFO;






#line 841 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"

typedef struct tagLOCALESIGNATURE
{
    DWORD lsUsb[4];
    DWORD lsCsbDefault[2];
    DWORD lsCsbSupported[2];
} LOCALESIGNATURE, *PLOCALESIGNATURE, *LPLOCALESIGNATURE;


#line 851 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
#line 852 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"




typedef struct tagHANDLETABLE
  {
    HGDIOBJ     objectHandle[1];
  } HANDLETABLE, *PHANDLETABLE,  *LPHANDLETABLE;

typedef struct tagMETARECORD
  {
    DWORD       rdSize;
    WORD        rdFunction;
    WORD        rdParm[1];
  } METARECORD;
typedef struct tagMETARECORD  *PMETARECORD;
typedef struct tagMETARECORD   *LPMETARECORD;

typedef struct tagMETAFILEPICT
  {
    LONG        mm;
    LONG        xExt;
    LONG        yExt;
    HMETAFILE   hMF;
  } METAFILEPICT,  *LPMETAFILEPICT;

#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\pshpack2.h"























#pragma warning(disable:4103)

#pragma pack(push,2)


#line 30 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\pshpack2.h"


#line 33 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\pshpack2.h"
#line 34 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\pshpack2.h"

#line 879 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
typedef struct tagMETAHEADER
{
    WORD        mtType;
    WORD        mtHeaderSize;
    WORD        mtVersion;
    DWORD       mtSize;
    WORD        mtNoObjects;
    DWORD       mtMaxRecord;
    WORD        mtNoParameters;
} METAHEADER;
typedef struct tagMETAHEADER  *PMETAHEADER;
typedef struct tagMETAHEADER   *LPMETAHEADER;

#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\poppack.h"


























#pragma warning(disable:4103)

#pragma pack(pop)


#line 33 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\poppack.h"


#line 36 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\poppack.h"
#line 37 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\poppack.h"

#line 893 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"


typedef struct tagENHMETARECORD
{
    DWORD   iType;              
    DWORD   nSize;              
    DWORD   dParm[1];           
} ENHMETARECORD, *PENHMETARECORD, *LPENHMETARECORD;

typedef struct tagENHMETAHEADER
{
    DWORD   iType;              
    DWORD   nSize;              
                                
    RECTL   rclBounds;          
    RECTL   rclFrame;           
    DWORD   dSignature;         
    DWORD   nVersion;           
    DWORD   nBytes;             
    DWORD   nRecords;           
    WORD    nHandles;           
                                
    WORD    sReserved;          
    DWORD   nDescription;       
                                
    DWORD   offDescription;     
                                
    DWORD   nPalEntries;        
    SIZEL   szlDevice;          
    SIZEL   szlMillimeters;     

    DWORD   cbPixelFormat;      
                                
    DWORD   offPixelFormat;     
                                
    DWORD   bOpenGL;            
                                
#line 931 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"

    SIZEL   szlMicrometers;     
#line 934 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"

} ENHMETAHEADER, *PENHMETAHEADER, *LPENHMETAHEADER;

#line 938 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"















    typedef BYTE BCHAR;
#line 955 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"



#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\pshpack4.h"























#pragma warning(disable:4103)

#pragma pack(push,4)


#line 30 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\pshpack4.h"


#line 33 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\pshpack4.h"
#line 34 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\pshpack4.h"

#line 959 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
typedef struct tagTEXTMETRICA
{
    LONG        tmHeight;
    LONG        tmAscent;
    LONG        tmDescent;
    LONG        tmInternalLeading;
    LONG        tmExternalLeading;
    LONG        tmAveCharWidth;
    LONG        tmMaxCharWidth;
    LONG        tmWeight;
    LONG        tmOverhang;
    LONG        tmDigitizedAspectX;
    LONG        tmDigitizedAspectY;
    BYTE        tmFirstChar;
    BYTE        tmLastChar;
    BYTE        tmDefaultChar;
    BYTE        tmBreakChar;
    BYTE        tmItalic;
    BYTE        tmUnderlined;
    BYTE        tmStruckOut;
    BYTE        tmPitchAndFamily;
    BYTE        tmCharSet;
} TEXTMETRICA, *PTEXTMETRICA,  *NPTEXTMETRICA,  *LPTEXTMETRICA;
typedef struct tagTEXTMETRICW
{
    LONG        tmHeight;
    LONG        tmAscent;
    LONG        tmDescent;
    LONG        tmInternalLeading;
    LONG        tmExternalLeading;
    LONG        tmAveCharWidth;
    LONG        tmMaxCharWidth;
    LONG        tmWeight;
    LONG        tmOverhang;
    LONG        tmDigitizedAspectX;
    LONG        tmDigitizedAspectY;
    WCHAR       tmFirstChar;
    WCHAR       tmLastChar;
    WCHAR       tmDefaultChar;
    WCHAR       tmBreakChar;
    BYTE        tmItalic;
    BYTE        tmUnderlined;
    BYTE        tmStruckOut;
    BYTE        tmPitchAndFamily;
    BYTE        tmCharSet;
} TEXTMETRICW, *PTEXTMETRICW,  *NPTEXTMETRICW,  *LPTEXTMETRICW;






typedef TEXTMETRICA TEXTMETRIC;
typedef PTEXTMETRICA PTEXTMETRIC;
typedef NPTEXTMETRICA NPTEXTMETRIC;
typedef LPTEXTMETRICA LPTEXTMETRIC;
#line 1016 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\poppack.h"


























#pragma warning(disable:4103)

#pragma pack(pop)


#line 33 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\poppack.h"


#line 36 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\poppack.h"
#line 37 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\poppack.h"

#line 1017 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
#line 1018 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"















#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\pshpack4.h"























#pragma warning(disable:4103)

#pragma pack(push,4)


#line 30 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\pshpack4.h"


#line 33 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\pshpack4.h"
#line 34 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\pshpack4.h"

#line 1034 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
typedef struct tagNEWTEXTMETRICA
{
    LONG        tmHeight;
    LONG        tmAscent;
    LONG        tmDescent;
    LONG        tmInternalLeading;
    LONG        tmExternalLeading;
    LONG        tmAveCharWidth;
    LONG        tmMaxCharWidth;
    LONG        tmWeight;
    LONG        tmOverhang;
    LONG        tmDigitizedAspectX;
    LONG        tmDigitizedAspectY;
    BYTE        tmFirstChar;
    BYTE        tmLastChar;
    BYTE        tmDefaultChar;
    BYTE        tmBreakChar;
    BYTE        tmItalic;
    BYTE        tmUnderlined;
    BYTE        tmStruckOut;
    BYTE        tmPitchAndFamily;
    BYTE        tmCharSet;
    DWORD   ntmFlags;
    UINT    ntmSizeEM;
    UINT    ntmCellHeight;
    UINT    ntmAvgWidth;
} NEWTEXTMETRICA, *PNEWTEXTMETRICA,  *NPNEWTEXTMETRICA,  *LPNEWTEXTMETRICA;
typedef struct tagNEWTEXTMETRICW
{
    LONG        tmHeight;
    LONG        tmAscent;
    LONG        tmDescent;
    LONG        tmInternalLeading;
    LONG        tmExternalLeading;
    LONG        tmAveCharWidth;
    LONG        tmMaxCharWidth;
    LONG        tmWeight;
    LONG        tmOverhang;
    LONG        tmDigitizedAspectX;
    LONG        tmDigitizedAspectY;
    WCHAR       tmFirstChar;
    WCHAR       tmLastChar;
    WCHAR       tmDefaultChar;
    WCHAR       tmBreakChar;
    BYTE        tmItalic;
    BYTE        tmUnderlined;
    BYTE        tmStruckOut;
    BYTE        tmPitchAndFamily;
    BYTE        tmCharSet;
    DWORD   ntmFlags;
    UINT    ntmSizeEM;
    UINT    ntmCellHeight;
    UINT    ntmAvgWidth;
} NEWTEXTMETRICW, *PNEWTEXTMETRICW,  *NPNEWTEXTMETRICW,  *LPNEWTEXTMETRICW;






typedef NEWTEXTMETRICA NEWTEXTMETRIC;
typedef PNEWTEXTMETRICA PNEWTEXTMETRIC;
typedef NPNEWTEXTMETRICA NPNEWTEXTMETRIC;
typedef LPNEWTEXTMETRICA LPNEWTEXTMETRIC;
#line 1099 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\poppack.h"


























#pragma warning(disable:4103)

#pragma pack(pop)


#line 33 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\poppack.h"


#line 36 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\poppack.h"
#line 37 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\poppack.h"

#line 1100 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"


typedef struct tagNEWTEXTMETRICEXA
{
    NEWTEXTMETRICA  ntmTm;
    FONTSIGNATURE   ntmFontSig;
}NEWTEXTMETRICEXA;
typedef struct tagNEWTEXTMETRICEXW
{
    NEWTEXTMETRICW  ntmTm;
    FONTSIGNATURE   ntmFontSig;
}NEWTEXTMETRICEXW;



typedef NEWTEXTMETRICEXA NEWTEXTMETRICEX;
#line 1117 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
#line 1118 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"

#line 1120 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"



typedef struct tagPELARRAY
  {
    LONG        paXCount;
    LONG        paYCount;
    LONG        paXExt;
    LONG        paYExt;
    BYTE        paRGBs;
  } PELARRAY, *PPELARRAY,  *NPPELARRAY,  *LPPELARRAY;


typedef struct tagLOGBRUSH
  {
    UINT        lbStyle;
    COLORREF    lbColor;
    ULONG_PTR   lbHatch;
  } LOGBRUSH, *PLOGBRUSH,  *NPLOGBRUSH,  *LPLOGBRUSH;

typedef struct tagLOGBRUSH32
  {
    UINT        lbStyle;
    COLORREF    lbColor;
    ULONG       lbHatch;
  } LOGBRUSH32, *PLOGBRUSH32,  *NPLOGBRUSH32,  *LPLOGBRUSH32;

typedef LOGBRUSH            PATTERN;
typedef PATTERN             *PPATTERN;
typedef PATTERN         *NPPATTERN;
typedef PATTERN          *LPPATTERN;


typedef struct tagLOGPEN
  {
    UINT        lopnStyle;
    POINT       lopnWidth;
    COLORREF    lopnColor;
  } LOGPEN, *PLOGPEN,  *NPLOGPEN,  *LPLOGPEN;

typedef struct tagEXTLOGPEN {
    DWORD       elpPenStyle;
    DWORD       elpWidth;
    UINT        elpBrushStyle;
    COLORREF    elpColor;
    ULONG_PTR   elpHatch;
    DWORD       elpNumEntries;
    DWORD       elpStyleEntry[1];
} EXTLOGPEN, *PEXTLOGPEN,  *NPEXTLOGPEN,  *LPEXTLOGPEN;

typedef struct tagEXTLOGPEN32 {
    DWORD       elpPenStyle;
    DWORD       elpWidth;
    UINT        elpBrushStyle;
    COLORREF    elpColor;
    ULONG       elpHatch;
    DWORD       elpNumEntries;
    DWORD       elpStyleEntry[1];
} EXTLOGPEN32, *PEXTLOGPEN32,  *NPEXTLOGPEN32,  *LPEXTLOGPEN32;



typedef struct tagPALETTEENTRY {
    BYTE        peRed;
    BYTE        peGreen;
    BYTE        peBlue;
    BYTE        peFlags;
} PALETTEENTRY, *PPALETTEENTRY,  *LPPALETTEENTRY;
#line 1189 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"




typedef struct tagLOGPALETTE {
    WORD        palVersion;
    WORD        palNumEntries;
     PALETTEENTRY        palPalEntry[1];
} LOGPALETTE, *PLOGPALETTE,  *NPLOGPALETTE,  *LPLOGPALETTE;
#line 1199 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"





typedef struct tagLOGFONTA
{
    LONG      lfHeight;
    LONG      lfWidth;
    LONG      lfEscapement;
    LONG      lfOrientation;
    LONG      lfWeight;
    BYTE      lfItalic;
    BYTE      lfUnderline;
    BYTE      lfStrikeOut;
    BYTE      lfCharSet;
    BYTE      lfOutPrecision;
    BYTE      lfClipPrecision;
    BYTE      lfQuality;
    BYTE      lfPitchAndFamily;
    CHAR      lfFaceName[32];
} LOGFONTA, *PLOGFONTA,  *NPLOGFONTA,  *LPLOGFONTA;
typedef struct tagLOGFONTW
{
    LONG      lfHeight;
    LONG      lfWidth;
    LONG      lfEscapement;
    LONG      lfOrientation;
    LONG      lfWeight;
    BYTE      lfItalic;
    BYTE      lfUnderline;
    BYTE      lfStrikeOut;
    BYTE      lfCharSet;
    BYTE      lfOutPrecision;
    BYTE      lfClipPrecision;
    BYTE      lfQuality;
    BYTE      lfPitchAndFamily;
    WCHAR     lfFaceName[32];
} LOGFONTW, *PLOGFONTW,  *NPLOGFONTW,  *LPLOGFONTW;






typedef LOGFONTA LOGFONT;
typedef PLOGFONTA PLOGFONT;
typedef NPLOGFONTA NPLOGFONT;
typedef LPLOGFONTA LPLOGFONT;
#line 1249 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"




typedef struct tagENUMLOGFONTA
{
    LOGFONTA elfLogFont;
    BYTE     elfFullName[64];
    BYTE     elfStyle[32];
} ENUMLOGFONTA, * LPENUMLOGFONTA;

typedef struct tagENUMLOGFONTW
{
    LOGFONTW elfLogFont;
    WCHAR    elfFullName[64];
    WCHAR    elfStyle[32];
} ENUMLOGFONTW, * LPENUMLOGFONTW;




typedef ENUMLOGFONTA ENUMLOGFONT;
typedef LPENUMLOGFONTA LPENUMLOGFONT;
#line 1273 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"


typedef struct tagENUMLOGFONTEXA
{
    LOGFONTA    elfLogFont;
    BYTE        elfFullName[64];
    BYTE        elfStyle[32];
    BYTE        elfScript[32];
} ENUMLOGFONTEXA,  *LPENUMLOGFONTEXA;
typedef struct tagENUMLOGFONTEXW
{
    LOGFONTW    elfLogFont;
    WCHAR       elfFullName[64];
    WCHAR       elfStyle[32];
    WCHAR       elfScript[32];
} ENUMLOGFONTEXW,  *LPENUMLOGFONTEXW;




typedef ENUMLOGFONTEXA ENUMLOGFONTEX;
typedef LPENUMLOGFONTEXA LPENUMLOGFONTEX;
#line 1296 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
#line 1297 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"





















#line 1319 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"








#line 1328 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"




#line 1333 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"






#line 1340 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"








































#line 1381 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"




                                    

                                    

                                    



































typedef struct tagPANOSE
{
    BYTE    bFamilyType;
    BYTE    bSerifStyle;
    BYTE    bWeight;
    BYTE    bProportion;
    BYTE    bContrast;
    BYTE    bStrokeVariation;
    BYTE    bArmStyle;
    BYTE    bLetterform;
    BYTE    bMidline;
    BYTE    bXHeight;
} PANOSE, * LPPANOSE;

















































































































typedef struct tagEXTLOGFONTA {
    LOGFONTA    elfLogFont;
    BYTE        elfFullName[64];
    BYTE        elfStyle[32];
    DWORD       elfVersion;     
    DWORD       elfStyleSize;
    DWORD       elfMatch;
    DWORD       elfReserved;
    BYTE        elfVendorId[4];
    DWORD       elfCulture;     
    PANOSE      elfPanose;
} EXTLOGFONTA, *PEXTLOGFONTA,  *NPEXTLOGFONTA,  *LPEXTLOGFONTA;
typedef struct tagEXTLOGFONTW {
    LOGFONTW    elfLogFont;
    WCHAR       elfFullName[64];
    WCHAR       elfStyle[32];
    DWORD       elfVersion;     
    DWORD       elfStyleSize;
    DWORD       elfMatch;
    DWORD       elfReserved;
    BYTE        elfVendorId[4];
    DWORD       elfCulture;     
    PANOSE      elfPanose;
} EXTLOGFONTW, *PEXTLOGFONTW,  *NPEXTLOGFONTW,  *LPEXTLOGFONTW;






typedef EXTLOGFONTA EXTLOGFONT;
typedef PEXTLOGFONTA PEXTLOGFONT;
typedef NPEXTLOGFONTA NPEXTLOGFONT;
typedef LPEXTLOGFONTA LPEXTLOGFONT;
#line 1586 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
















































































#line 1667 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"




#line 1672 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"







#line 1680 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"


































































































                             

                             

                             





#line 1789 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"










































































#line 1864 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"





































#line 1902 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"




























typedef struct _devicemodeA {
    BYTE   dmDeviceName[32];
    WORD dmSpecVersion;
    WORD dmDriverVersion;
    WORD dmSize;
    WORD dmDriverExtra;
    DWORD dmFields;
    union {
      
      struct {
        short dmOrientation;
        short dmPaperSize;
        short dmPaperLength;
        short dmPaperWidth;
        short dmScale;
        short dmCopies;
        short dmDefaultSource;
        short dmPrintQuality;
      };
      
      struct {
        POINTL dmPosition;
        DWORD  dmDisplayOrientation;
        DWORD  dmDisplayFixedOutput;
      };
    };
    short dmColor;
    short dmDuplex;
    short dmYResolution;
    short dmTTOption;
    short dmCollate;
    BYTE   dmFormName[32];
    WORD   dmLogPixels;
    DWORD  dmBitsPerPel;
    DWORD  dmPelsWidth;
    DWORD  dmPelsHeight;
    union {
        DWORD  dmDisplayFlags;
        DWORD  dmNup;
    };
    DWORD  dmDisplayFrequency;

    DWORD  dmICMMethod;
    DWORD  dmICMIntent;
    DWORD  dmMediaType;
    DWORD  dmDitherType;
    DWORD  dmReserved1;
    DWORD  dmReserved2;

    DWORD  dmPanningWidth;
    DWORD  dmPanningHeight;
#line 1982 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
#line 1983 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
} DEVMODEA, *PDEVMODEA, *NPDEVMODEA, *LPDEVMODEA;
typedef struct _devicemodeW {
    WCHAR  dmDeviceName[32];
    WORD dmSpecVersion;
    WORD dmDriverVersion;
    WORD dmSize;
    WORD dmDriverExtra;
    DWORD dmFields;
    union {
      
      struct {
        short dmOrientation;
        short dmPaperSize;
        short dmPaperLength;
        short dmPaperWidth;
        short dmScale;
        short dmCopies;
        short dmDefaultSource;
        short dmPrintQuality;
      };
      
      struct {
        POINTL dmPosition;
        DWORD  dmDisplayOrientation;
        DWORD  dmDisplayFixedOutput;
      };
    };
    short dmColor;
    short dmDuplex;
    short dmYResolution;
    short dmTTOption;
    short dmCollate;
    WCHAR  dmFormName[32];
    WORD   dmLogPixels;
    DWORD  dmBitsPerPel;
    DWORD  dmPelsWidth;
    DWORD  dmPelsHeight;
    union {
        DWORD  dmDisplayFlags;
        DWORD  dmNup;
    };
    DWORD  dmDisplayFrequency;

    DWORD  dmICMMethod;
    DWORD  dmICMIntent;
    DWORD  dmMediaType;
    DWORD  dmDitherType;
    DWORD  dmReserved1;
    DWORD  dmReserved2;

    DWORD  dmPanningWidth;
    DWORD  dmPanningHeight;
#line 2036 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
#line 2037 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
} DEVMODEW, *PDEVMODEW, *NPDEVMODEW, *LPDEVMODEW;






typedef DEVMODEA DEVMODE;
typedef PDEVMODEA PDEVMODE;
typedef NPDEVMODEA NPDEVMODE;
typedef LPDEVMODEA LPDEVMODE;
#line 2049 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"












































































































#line 2158 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"







#line 2166 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"










#line 2177 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"


#line 2180 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"






















#line 2203 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"


#line 2206 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"













































































#line 2284 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"




















































#line 2337 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"







#line 2345 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"












































#line 2390 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
















#line 2407 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"

















































#line 2457 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"

typedef struct _DISPLAY_DEVICEA {
    DWORD  cb;
    CHAR   DeviceName[32];
    CHAR   DeviceString[128];
    DWORD  StateFlags;
    CHAR   DeviceID[128];
    CHAR   DeviceKey[128];
} DISPLAY_DEVICEA, *PDISPLAY_DEVICEA, *LPDISPLAY_DEVICEA;
typedef struct _DISPLAY_DEVICEW {
    DWORD  cb;
    WCHAR  DeviceName[32];
    WCHAR  DeviceString[128];
    DWORD  StateFlags;
    WCHAR  DeviceID[128];
    WCHAR  DeviceKey[128];
} DISPLAY_DEVICEW, *PDISPLAY_DEVICEW, *LPDISPLAY_DEVICEW;





typedef DISPLAY_DEVICEA DISPLAY_DEVICE;
typedef PDISPLAY_DEVICEA PDISPLAY_DEVICE;
typedef LPDISPLAY_DEVICEA LPDISPLAY_DEVICE;
#line 2483 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"








#line 2492 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"




#line 2497 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"



#line 2501 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"





#line 2507 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"




                                          
                                          

typedef struct DISPLAYCONFIG_RATIONAL
{
    UINT32    Numerator;
    UINT32    Denominator;
} DISPLAYCONFIG_RATIONAL;

typedef enum
{
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_OTHER                   = -1,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_HD15                    =  0,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_SVIDEO                  =  1,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_COMPOSITE_VIDEO         =  2,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_COMPONENT_VIDEO         =  3,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_DVI                     =  4,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_HDMI                    =  5,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_LVDS                    =  6,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_D_JPN                   =  8,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_SDI                     =  9,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_DISPLAYPORT_EXTERNAL    = 10,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_DISPLAYPORT_EMBEDDED    = 11,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_UDI_EXTERNAL            = 12,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_UDI_EMBEDDED            = 13,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_SDTVDONGLE              = 14,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_INTERNAL                = 0x80000000,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_FORCE_UINT32            = 0xFFFFFFFF
} DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY;

typedef enum
{
    DISPLAYCONFIG_SCANLINE_ORDERING_UNSPECIFIED                 = 0,
    DISPLAYCONFIG_SCANLINE_ORDERING_PROGRESSIVE                 = 1,
    DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED                  = 2,
    DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED_UPPERFIELDFIRST  = DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED,
    DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED_LOWERFIELDFIRST  = 3,
    DISPLAYCONFIG_SCANLINE_ORDERING_FORCE_UINT32                = 0xFFFFFFFF
} DISPLAYCONFIG_SCANLINE_ORDERING;

typedef struct DISPLAYCONFIG_2DREGION
{
    UINT32 cx;
    UINT32 cy;
} DISPLAYCONFIG_2DREGION;

typedef struct DISPLAYCONFIG_VIDEO_SIGNAL_INFO
{
    UINT64                          pixelRate;
    DISPLAYCONFIG_RATIONAL          hSyncFreq;
    DISPLAYCONFIG_RATIONAL          vSyncFreq;
    DISPLAYCONFIG_2DREGION          activeSize;
    DISPLAYCONFIG_2DREGION          totalSize;
    UINT32                          videoStandard;
    DISPLAYCONFIG_SCANLINE_ORDERING scanLineOrdering;
} DISPLAYCONFIG_VIDEO_SIGNAL_INFO;

typedef enum
{
    DISPLAYCONFIG_SCALING_IDENTITY                  = 1,
    DISPLAYCONFIG_SCALING_CENTERED                  = 2,
    DISPLAYCONFIG_SCALING_STRETCHED                 = 3,
    DISPLAYCONFIG_SCALING_ASPECTRATIOCENTEREDMAX    = 4,
    DISPLAYCONFIG_SCALING_CUSTOM                    = 5,
    DISPLAYCONFIG_SCALING_PREFERRED                 = 128,
    DISPLAYCONFIG_SCALING_FORCE_UINT32              = 0xFFFFFFFF
} DISPLAYCONFIG_SCALING;

typedef enum
{
    DISPLAYCONFIG_ROTATION_IDENTITY     = 1,
    DISPLAYCONFIG_ROTATION_ROTATE90     = 2,
    DISPLAYCONFIG_ROTATION_ROTATE180    = 3,
    DISPLAYCONFIG_ROTATION_ROTATE270    = 4,
    DISPLAYCONFIG_ROTATION_FORCE_UINT32 = 0xFFFFFFFF
} DISPLAYCONFIG_ROTATION;

typedef enum
{
    DISPLAYCONFIG_MODE_INFO_TYPE_SOURCE = 1,
    DISPLAYCONFIG_MODE_INFO_TYPE_TARGET = 2,
    DISPLAYCONFIG_MODE_INFO_TYPE_FORCE_UINT32 = 0xFFFFFFFF
} DISPLAYCONFIG_MODE_INFO_TYPE;

typedef enum
{
    DISPLAYCONFIG_PIXELFORMAT_8BPP          = 1,
    DISPLAYCONFIG_PIXELFORMAT_16BPP         = 2,
    DISPLAYCONFIG_PIXELFORMAT_24BPP         = 3,
    DISPLAYCONFIG_PIXELFORMAT_32BPP         = 4,
    DISPLAYCONFIG_PIXELFORMAT_NONGDI        = 5,
    DISPLAYCONFIG_PIXELFORMAT_FORCE_UINT32  = 0xffffffff
} DISPLAYCONFIG_PIXELFORMAT;

typedef struct DISPLAYCONFIG_SOURCE_MODE
{
    UINT32                      width;
    UINT32                      height;
    DISPLAYCONFIG_PIXELFORMAT   pixelFormat;
    POINTL                      position;
} DISPLAYCONFIG_SOURCE_MODE;

typedef struct DISPLAYCONFIG_TARGET_MODE
{
    DISPLAYCONFIG_VIDEO_SIGNAL_INFO   targetVideoSignalInfo;
} DISPLAYCONFIG_TARGET_MODE;

typedef struct DISPLAYCONFIG_MODE_INFO
{
    DISPLAYCONFIG_MODE_INFO_TYPE    infoType;
    UINT32                          id;
    LUID                            adapterId;
    union
    {
        DISPLAYCONFIG_TARGET_MODE   targetMode;
        DISPLAYCONFIG_SOURCE_MODE   sourceMode;
    };
} DISPLAYCONFIG_MODE_INFO;



typedef struct DISPLAYCONFIG_PATH_SOURCE_INFO
{
    LUID    adapterId;
    UINT32  id;
    UINT32  modeInfoIdx;
    UINT32  statusFlags;
} DISPLAYCONFIG_PATH_SOURCE_INFO;







typedef struct DISPLAYCONFIG_PATH_TARGET_INFO
{
    LUID                                    adapterId;
    UINT32                                  id;
    UINT32                                  modeInfoIdx;
    DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY   outputTechnology;
    DISPLAYCONFIG_ROTATION                  rotation;
    DISPLAYCONFIG_SCALING                   scaling;
    DISPLAYCONFIG_RATIONAL                  refreshRate;
    DISPLAYCONFIG_SCANLINE_ORDERING         scanLineOrdering;
    BOOL                                    targetAvailable;
    UINT32                                  statusFlags;
} DISPLAYCONFIG_PATH_TARGET_INFO;










typedef struct DISPLAYCONFIG_PATH_INFO
{
    DISPLAYCONFIG_PATH_SOURCE_INFO  sourceInfo;
    DISPLAYCONFIG_PATH_TARGET_INFO  targetInfo;
    UINT32                          flags;
} DISPLAYCONFIG_PATH_INFO;







typedef enum
{
      DISPLAYCONFIG_TOPOLOGY_INTERNAL       = 0x00000001,
      DISPLAYCONFIG_TOPOLOGY_CLONE          = 0x00000002,
      DISPLAYCONFIG_TOPOLOGY_EXTEND         = 0x00000004,
      DISPLAYCONFIG_TOPOLOGY_EXTERNAL       = 0x00000008,
      DISPLAYCONFIG_TOPOLOGY_FORCE_UINT32   = 0xFFFFFFFF
} DISPLAYCONFIG_TOPOLOGY_ID;

typedef enum
{
      DISPLAYCONFIG_DEVICE_INFO_GET_SOURCE_NAME             = 1,
      DISPLAYCONFIG_DEVICE_INFO_GET_TARGET_NAME             = 2,
      DISPLAYCONFIG_DEVICE_INFO_GET_TARGET_PREFERRED_MODE   = 3,
      DISPLAYCONFIG_DEVICE_INFO_GET_ADAPTER_NAME            = 4,
      DISPLAYCONFIG_DEVICE_INFO_SET_TARGET_PERSISTENCE      = 5,
      DISPLAYCONFIG_DEVICE_INFO_FORCE_UINT32                = 0xFFFFFFFF
} DISPLAYCONFIG_DEVICE_INFO_TYPE;

typedef struct DISPLAYCONFIG_DEVICE_INFO_HEADER
{
    DISPLAYCONFIG_DEVICE_INFO_TYPE  type;
    UINT32                          size;
    LUID                            adapterId;
    UINT32                          id;
} DISPLAYCONFIG_DEVICE_INFO_HEADER;

typedef struct DISPLAYCONFIG_SOURCE_DEVICE_NAME
{
    DISPLAYCONFIG_DEVICE_INFO_HEADER            header;
    WCHAR                                       viewGdiDeviceName[32];
} DISPLAYCONFIG_SOURCE_DEVICE_NAME;

typedef struct DISPLAYCONFIG_TARGET_DEVICE_NAME_FLAGS
{
    union
    {
        struct
        {
            UINT32  friendlyNameFromEdid : 1;
            UINT32  friendlyNameForced : 1;
            UINT32  edidIdsValid : 1;
            UINT32  reserved : 29;
        };
        UINT32  value;
    };
} DISPLAYCONFIG_TARGET_DEVICE_NAME_FLAGS;

typedef struct DISPLAYCONFIG_TARGET_DEVICE_NAME
{
    DISPLAYCONFIG_DEVICE_INFO_HEADER            header;
    DISPLAYCONFIG_TARGET_DEVICE_NAME_FLAGS      flags;
    DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY       outputTechnology;
    UINT16                                      edidManufactureId;
    UINT16                                      edidProductCodeId;
    UINT32                                      connectorInstance;
    WCHAR                                       monitorFriendlyDeviceName[64];
    WCHAR                                       monitorDevicePath[128];
} DISPLAYCONFIG_TARGET_DEVICE_NAME;

typedef struct DISPLAYCONFIG_TARGET_PREFERRED_MODE
{
    DISPLAYCONFIG_DEVICE_INFO_HEADER    header;
    UINT32                              width;
    UINT32                              height;
    DISPLAYCONFIG_TARGET_MODE           targetMode;
} DISPLAYCONFIG_TARGET_PREFERRED_MODE;

typedef struct DISPLAYCONFIG_ADAPTER_NAME
{
    DISPLAYCONFIG_DEVICE_INFO_HEADER    header;
    WCHAR                               adapterDevicePath[128];
} DISPLAYCONFIG_ADAPTER_NAME;

typedef struct DISPLAYCONFIG_SET_TARGET_PERSISTENCE
{
    DISPLAYCONFIG_DEVICE_INFO_HEADER    header;
    union
    {
        struct
        {
            UINT32 bootPersistenceOn    : 1;
            UINT32 reserved             : 31;
        };
        UINT32 value;
    };
} DISPLAYCONFIG_SET_TARGET_PERSISTENCE;































#line 2801 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"





typedef struct _RGNDATAHEADER {
    DWORD   dwSize;
    DWORD   iType;
    DWORD   nCount;
    DWORD   nRgnSize;
    RECT    rcBound;
} RGNDATAHEADER, *PRGNDATAHEADER;

typedef struct _RGNDATA {
    RGNDATAHEADER   rdh;
    char            Buffer[1];
} RGNDATA, *PRGNDATA,  *NPRGNDATA,  *LPRGNDATA;






typedef struct _ABC {
    int     abcA;
    UINT    abcB;
    int     abcC;
} ABC, *PABC,  *NPABC,  *LPABC;

typedef struct _ABCFLOAT {
    FLOAT   abcfA;
    FLOAT   abcfB;
    FLOAT   abcfC;
} ABCFLOAT, *PABCFLOAT,  *NPABCFLOAT,  *LPABCFLOAT;






typedef struct _OUTLINETEXTMETRICA {
    UINT    otmSize;
    TEXTMETRICA otmTextMetrics;
    BYTE    otmFiller;
    PANOSE  otmPanoseNumber;
    UINT    otmfsSelection;
    UINT    otmfsType;
     int    otmsCharSlopeRise;
     int    otmsCharSlopeRun;
     int    otmItalicAngle;
    UINT    otmEMSquare;
     int    otmAscent;
     int    otmDescent;
    UINT    otmLineGap;
    UINT    otmsCapEmHeight;
    UINT    otmsXHeight;
    RECT    otmrcFontBox;
     int    otmMacAscent;
     int    otmMacDescent;
    UINT    otmMacLineGap;
    UINT    otmusMinimumPPEM;
    POINT   otmptSubscriptSize;
    POINT   otmptSubscriptOffset;
    POINT   otmptSuperscriptSize;
    POINT   otmptSuperscriptOffset;
    UINT    otmsStrikeoutSize;
     int    otmsStrikeoutPosition;
     int    otmsUnderscoreSize;
     int    otmsUnderscorePosition;
    PSTR    otmpFamilyName;
    PSTR    otmpFaceName;
    PSTR    otmpStyleName;
    PSTR    otmpFullName;
} OUTLINETEXTMETRICA, *POUTLINETEXTMETRICA,  *NPOUTLINETEXTMETRICA,  *LPOUTLINETEXTMETRICA;
typedef struct _OUTLINETEXTMETRICW {
    UINT    otmSize;
    TEXTMETRICW otmTextMetrics;
    BYTE    otmFiller;
    PANOSE  otmPanoseNumber;
    UINT    otmfsSelection;
    UINT    otmfsType;
     int    otmsCharSlopeRise;
     int    otmsCharSlopeRun;
     int    otmItalicAngle;
    UINT    otmEMSquare;
     int    otmAscent;
     int    otmDescent;
    UINT    otmLineGap;
    UINT    otmsCapEmHeight;
    UINT    otmsXHeight;
    RECT    otmrcFontBox;
     int    otmMacAscent;
     int    otmMacDescent;
    UINT    otmMacLineGap;
    UINT    otmusMinimumPPEM;
    POINT   otmptSubscriptSize;
    POINT   otmptSubscriptOffset;
    POINT   otmptSuperscriptSize;
    POINT   otmptSuperscriptOffset;
    UINT    otmsStrikeoutSize;
     int    otmsStrikeoutPosition;
     int    otmsUnderscoreSize;
     int    otmsUnderscorePosition;
    PSTR    otmpFamilyName;
    PSTR    otmpFaceName;
    PSTR    otmpStyleName;
    PSTR    otmpFullName;
} OUTLINETEXTMETRICW, *POUTLINETEXTMETRICW,  *NPOUTLINETEXTMETRICW,  *LPOUTLINETEXTMETRICW;






typedef OUTLINETEXTMETRICA OUTLINETEXTMETRIC;
typedef POUTLINETEXTMETRICA POUTLINETEXTMETRIC;
typedef NPOUTLINETEXTMETRICA NPOUTLINETEXTMETRIC;
typedef LPOUTLINETEXTMETRICA LPOUTLINETEXTMETRIC;
#line 2920 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"





#line 2926 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"


typedef struct tagPOLYTEXTA
{
    int       x;
    int       y;
    UINT      n;
    LPCSTR    lpstr;
    UINT      uiFlags;
    RECT      rcl;
    int      *pdx;
} POLYTEXTA, *PPOLYTEXTA,  *NPPOLYTEXTA,  *LPPOLYTEXTA;
typedef struct tagPOLYTEXTW
{
    int       x;
    int       y;
    UINT      n;
    LPCWSTR   lpstr;
    UINT      uiFlags;
    RECT      rcl;
    int      *pdx;
} POLYTEXTW, *PPOLYTEXTW,  *NPPOLYTEXTW,  *LPPOLYTEXTW;






typedef POLYTEXTA POLYTEXT;
typedef PPOLYTEXTA PPOLYTEXT;
typedef NPPOLYTEXTA NPPOLYTEXT;
typedef LPPOLYTEXTA LPPOLYTEXT;
#line 2959 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"

typedef struct _FIXED {

    WORD    fract;
    short   value;



#line 2968 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
} FIXED;


typedef struct _MAT2 {
     FIXED  eM11;
     FIXED  eM12;
     FIXED  eM21;
     FIXED  eM22;
} MAT2,  *LPMAT2;



typedef struct _GLYPHMETRICS {
    UINT    gmBlackBoxX;
    UINT    gmBlackBoxY;
    POINT   gmptGlyphOrigin;
    short   gmCellIncX;
    short   gmCellIncY;
} GLYPHMETRICS,  *LPGLYPHMETRICS;













#line 3001 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"



#line 3005 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"







typedef struct tagPOINTFX
{
    FIXED x;
    FIXED y;
} POINTFX, * LPPOINTFX;

typedef struct tagTTPOLYCURVE
{
    WORD    wType;
    WORD    cpfx;
    POINTFX apfx[1];
} TTPOLYCURVE, * LPTTPOLYCURVE;

typedef struct tagTTPOLYGONHEADER
{
    DWORD   cb;
    DWORD   dwType;
    POINTFX pfxStart;
} TTPOLYGONHEADER, * LPTTPOLYGONHEADER;













































typedef struct tagGCP_RESULTSA
    {
    DWORD   lStructSize;
    LPSTR     lpOutString;
    UINT  *lpOrder;
    int   *lpDx;
    int   *lpCaretPos;
    LPSTR   lpClass;
    LPWSTR  lpGlyphs;
    UINT    nGlyphs;
    int     nMaxFit;
    } GCP_RESULTSA, * LPGCP_RESULTSA;
typedef struct tagGCP_RESULTSW
    {
    DWORD   lStructSize;
    LPWSTR    lpOutString;
    UINT  *lpOrder;
    int   *lpDx;
    int   *lpCaretPos;
    LPSTR   lpClass;
    LPWSTR  lpGlyphs;
    UINT    nGlyphs;
    int     nMaxFit;
    } GCP_RESULTSW, * LPGCP_RESULTSW;




typedef GCP_RESULTSA GCP_RESULTS;
typedef LPGCP_RESULTSA LPGCP_RESULTS;
#line 3107 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
#line 3108 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"

typedef struct _RASTERIZER_STATUS {
    short   nSize;
    short   wFlags;
    short   nLanguageID;
} RASTERIZER_STATUS,  *LPRASTERIZER_STATUS;






typedef struct tagPIXELFORMATDESCRIPTOR
{
    WORD  nSize;
    WORD  nVersion;
    DWORD dwFlags;
    BYTE  iPixelType;
    BYTE  cColorBits;
    BYTE  cRedBits;
    BYTE  cRedShift;
    BYTE  cGreenBits;
    BYTE  cGreenShift;
    BYTE  cBlueBits;
    BYTE  cBlueShift;
    BYTE  cAlphaBits;
    BYTE  cAlphaShift;
    BYTE  cAccumBits;
    BYTE  cAccumRedBits;
    BYTE  cAccumGreenBits;
    BYTE  cAccumBlueBits;
    BYTE  cAccumAlphaBits;
    BYTE  cDepthBits;
    BYTE  cStencilBits;
    BYTE  cAuxBuffers;
    BYTE  iLayerType;
    BYTE  bReserved;
    DWORD dwLayerMask;
    DWORD dwVisibleMask;
    DWORD dwDamageMask;
} PIXELFORMATDESCRIPTOR, *PPIXELFORMATDESCRIPTOR,  *LPPIXELFORMATDESCRIPTOR;



































typedef int (__stdcall* OLDFONTENUMPROCA)(const LOGFONTA *, const TEXTMETRICA *, DWORD, LPARAM);
typedef int (__stdcall* OLDFONTENUMPROCW)(const LOGFONTW *, const TEXTMETRICW *, DWORD, LPARAM);




#line 3191 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"








#line 3200 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"

typedef OLDFONTENUMPROCA    FONTENUMPROCA;
typedef OLDFONTENUMPROCW    FONTENUMPROCW;



typedef FONTENUMPROCA FONTENUMPROC;
#line 3208 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"

typedef int (__stdcall* GOBJENUMPROC)(LPVOID, LPARAM);
typedef void (__stdcall* LINEDDAPROC)(int, int, LPARAM);











#line 3223 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"



__declspec(dllimport) int __stdcall AddFontResourceA( LPCSTR);
__declspec(dllimport) int __stdcall AddFontResourceW( LPCWSTR);




#line 3233 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"

 __declspec(dllimport) BOOL  __stdcall AnimatePalette(  HPALETTE hPal,  UINT iStartIndex,   UINT cEntries,  const PALETTEENTRY * ppe);
 __declspec(dllimport) BOOL  __stdcall Arc(  HDC hdc,  int x1,  int y1,  int x2,  int y2,  int x3,  int y3,  int x4,  int y4);
 __declspec(dllimport) BOOL  __stdcall BitBlt(  HDC hdc,  int x,  int y,  int cx,  int cy,  HDC hdcSrc,  int x1,  int y1,  DWORD rop);
__declspec(dllimport) BOOL  __stdcall CancelDC(  HDC hdc);
 __declspec(dllimport) BOOL  __stdcall Chord(  HDC hdc,  int x1,  int y1,  int x2,  int y2,  int x3,  int y3,  int x4,  int y4);
__declspec(dllimport) int   __stdcall ChoosePixelFormat(  HDC hdc,  const PIXELFORMATDESCRIPTOR *ppfd);
__declspec(dllimport) HMETAFILE  __stdcall CloseMetaFile(  HDC hdc);
__declspec(dllimport) int     __stdcall CombineRgn(  HRGN hrgnDst,  HRGN hrgnSrc1,  HRGN hrgnSrc2,  int iMode);
__declspec(dllimport) HMETAFILE __stdcall CopyMetaFileA(  HMETAFILE,  LPCSTR);
__declspec(dllimport) HMETAFILE __stdcall CopyMetaFileW(  HMETAFILE,  LPCWSTR);




#line 3249 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
 __declspec(dllimport) HBITMAP __stdcall CreateBitmap(  int nWidth,  int nHeight,  UINT nPlanes,  UINT nBitCount,  const void *lpBits);
 __declspec(dllimport) HBITMAP __stdcall CreateBitmapIndirect(  const BITMAP *pbm);
 __declspec(dllimport) HBRUSH  __stdcall CreateBrushIndirect(  const LOGBRUSH *plbrush);
__declspec(dllimport) HBITMAP __stdcall CreateCompatibleBitmap(  HDC hdc,  int cx,  int cy);
__declspec(dllimport) HBITMAP __stdcall CreateDiscardableBitmap(  HDC hdc,  int cx,  int cy);
__declspec(dllimport) HDC     __stdcall CreateCompatibleDC(  HDC hdc);
__declspec(dllimport) HDC     __stdcall CreateDCA(  LPCSTR pwszDriver,  LPCSTR pwszDevice,  LPCSTR pszPort,  const DEVMODEA * pdm);
__declspec(dllimport) HDC     __stdcall CreateDCW(  LPCWSTR pwszDriver,  LPCWSTR pwszDevice,  LPCWSTR pszPort,  const DEVMODEW * pdm);




#line 3262 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
__declspec(dllimport) HBITMAP __stdcall CreateDIBitmap(  HDC hdc,  const BITMAPINFOHEADER *pbmih,  DWORD flInit,  const void *pjBits,  const BITMAPINFO *pbmi,  UINT iUsage);
__declspec(dllimport) HBRUSH  __stdcall CreateDIBPatternBrush(  HGLOBAL h,  UINT iUsage);
 __declspec(dllimport) HBRUSH  __stdcall CreateDIBPatternBrushPt(  const void *lpPackedDIB,  UINT iUsage);
__declspec(dllimport) HRGN    __stdcall CreateEllipticRgn(  int x1,  int y1,  int x2,  int y2);
__declspec(dllimport) HRGN    __stdcall CreateEllipticRgnIndirect(  const RECT *lprect);
 __declspec(dllimport) HFONT   __stdcall CreateFontIndirectA(  const LOGFONTA *lplf);
 __declspec(dllimport) HFONT   __stdcall CreateFontIndirectW(  const LOGFONTW *lplf);




#line 3274 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
__declspec(dllimport) HFONT   __stdcall CreateFontA(  int cHeight,  int cWidth,  int cEscapement,  int cOrientation,  int cWeight,  DWORD bItalic,
                              DWORD bUnderline,  DWORD bStrikeOut,  DWORD iCharSet,  DWORD iOutPrecision,  DWORD iClipPrecision,
                              DWORD iQuality,  DWORD iPitchAndFamily,  LPCSTR pszFaceName);
__declspec(dllimport) HFONT   __stdcall CreateFontW(  int cHeight,  int cWidth,  int cEscapement,  int cOrientation,  int cWeight,  DWORD bItalic,
                              DWORD bUnderline,  DWORD bStrikeOut,  DWORD iCharSet,  DWORD iOutPrecision,  DWORD iClipPrecision,
                              DWORD iQuality,  DWORD iPitchAndFamily,  LPCWSTR pszFaceName);




#line 3285 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"

__declspec(dllimport) HBRUSH  __stdcall CreateHatchBrush(  int iHatch,  COLORREF color);
__declspec(dllimport) HDC     __stdcall CreateICA(  LPCSTR pszDriver,  LPCSTR pszDevice,  LPCSTR pszPort,  const DEVMODEA * pdm);
__declspec(dllimport) HDC     __stdcall CreateICW(  LPCWSTR pszDriver,  LPCWSTR pszDevice,  LPCWSTR pszPort,  const DEVMODEW * pdm);




#line 3294 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
__declspec(dllimport) HDC     __stdcall CreateMetaFileA(  LPCSTR pszFile);
__declspec(dllimport) HDC     __stdcall CreateMetaFileW(  LPCWSTR pszFile);




#line 3301 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
 __declspec(dllimport) HPALETTE __stdcall CreatePalette(  const LOGPALETTE * plpal);
__declspec(dllimport) HPEN    __stdcall CreatePen(  int iStyle,  int cWidth,  COLORREF color);
 __declspec(dllimport) HPEN    __stdcall CreatePenIndirect(  const LOGPEN *plpen);
__declspec(dllimport) HRGN    __stdcall CreatePolyPolygonRgn(   const POINT *pptl,
                                                 const INT  *pc,
                                                 int cPoly,
                                                 int iMode);
 __declspec(dllimport) HBRUSH  __stdcall CreatePatternBrush(  HBITMAP hbm);
__declspec(dllimport) HRGN    __stdcall CreateRectRgn(  int x1,  int y1,  int x2,  int y2);
__declspec(dllimport) HRGN    __stdcall CreateRectRgnIndirect(  const RECT *lprect);
__declspec(dllimport) HRGN    __stdcall CreateRoundRectRgn(  int x1,  int y1,  int x2,  int y2,  int w,  int h);
__declspec(dllimport) BOOL    __stdcall CreateScalableFontResourceA(  DWORD fdwHidden,  LPCSTR lpszFont,  LPCSTR lpszFile,  LPCSTR lpszPath);
__declspec(dllimport) BOOL    __stdcall CreateScalableFontResourceW(  DWORD fdwHidden,  LPCWSTR lpszFont,  LPCWSTR lpszFile,  LPCWSTR lpszPath);




#line 3319 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
__declspec(dllimport) HBRUSH  __stdcall CreateSolidBrush(  COLORREF color);

__declspec(dllimport) BOOL __stdcall DeleteDC(  HDC hdc);
__declspec(dllimport) BOOL __stdcall DeleteMetaFile(  HMETAFILE hmf);
 __declspec(dllimport) BOOL __stdcall DeleteObject(  HGDIOBJ ho);
__declspec(dllimport) int  __stdcall DescribePixelFormat(   HDC hdc,
                                             int iPixelFormat,
                                             UINT nBytes,
                                             LPPIXELFORMATDESCRIPTOR ppfd);





typedef UINT   (__stdcall* LPFNDEVMODE)(HWND, HMODULE, LPDEVMODE, LPSTR, LPSTR, LPDEVMODE, LPSTR, UINT);

typedef DWORD  (__stdcall* LPFNDEVCAPS)(LPSTR, LPSTR, UINT, LPSTR, LPDEVMODE);






































#line 3375 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"


















#line 3394 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
#line 3395 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"

















#line 3413 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"

__declspec(dllimport)
int
__stdcall
DeviceCapabilitiesA(
                    LPCSTR         pDevice,
                LPCSTR         pPort,
                    WORD             fwCapability,
     LPSTR          pOutput,
                const DEVMODEA   *pDevMode
    );
__declspec(dllimport)
int
__stdcall
DeviceCapabilitiesW(
                    LPCWSTR         pDevice,
                LPCWSTR         pPort,
                    WORD             fwCapability,
     LPWSTR          pOutput,
                const DEVMODEW   *pDevMode
    );




#line 3439 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"

__declspec(dllimport) int  __stdcall DrawEscape(    HDC    hdc,
                                     int    iEscape,
                                     int    cjIn,
                                     LPCSTR lpIn);

 __declspec(dllimport) BOOL __stdcall Ellipse(  HDC hdc,  int left,  int top,   int right,  int bottom);


__declspec(dllimport) int  __stdcall EnumFontFamiliesExA(  HDC hdc,  LPLOGFONTA lpLogfont,  FONTENUMPROCA lpProc,  LPARAM lParam,  DWORD dwFlags);
__declspec(dllimport) int  __stdcall EnumFontFamiliesExW(  HDC hdc,  LPLOGFONTW lpLogfont,  FONTENUMPROCW lpProc,  LPARAM lParam,  DWORD dwFlags);




#line 3455 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
#line 3456 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"

__declspec(dllimport) int  __stdcall EnumFontFamiliesA(  HDC hdc,  LPCSTR lpLogfont,  FONTENUMPROCA lpProc,  LPARAM lParam);
__declspec(dllimport) int  __stdcall EnumFontFamiliesW(  HDC hdc,  LPCWSTR lpLogfont,  FONTENUMPROCW lpProc,  LPARAM lParam);




#line 3464 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
__declspec(dllimport) int  __stdcall EnumFontsA(  HDC hdc,  LPCSTR lpLogfont,   FONTENUMPROCA lpProc,  LPARAM lParam);
__declspec(dllimport) int  __stdcall EnumFontsW(  HDC hdc,  LPCWSTR lpLogfont,   FONTENUMPROCW lpProc,  LPARAM lParam);




#line 3471 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"


__declspec(dllimport) int  __stdcall EnumObjects(  HDC hdc,  int nType,  GOBJENUMPROC lpFunc,  LPARAM lParam);


#line 3477 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"


__declspec(dllimport) BOOL __stdcall EqualRgn(  HRGN hrgn1,  HRGN hrgn2);
 __declspec(dllimport) int  __stdcall Escape(    HDC hdc,
                                 int iEscape,
                                 int cjIn,
                                 LPCSTR pvIn,
                                 LPVOID pvOut);
__declspec(dllimport) int  __stdcall ExtEscape(     HDC hdc,
                                     int iEscape,
                                     int cjInput,
                                     LPCSTR lpInData,
                                     int cjOutput,
                                     LPSTR lpOutData);
 __declspec(dllimport) int  __stdcall ExcludeClipRect(  HDC hdc,  int left,  int top,  int right,  int bottom);
 __declspec(dllimport) HRGN __stdcall ExtCreateRegion(  const XFORM * lpx,  DWORD nCount,  const RGNDATA * lpData);
 __declspec(dllimport) BOOL __stdcall ExtFloodFill(  HDC hdc,  int x,  int y,  COLORREF color,  UINT type);
 __declspec(dllimport) BOOL __stdcall FillRgn(  HDC hdc,  HRGN hrgn,  HBRUSH hbr);
 __declspec(dllimport) BOOL __stdcall FloodFill(  HDC hdc,  int x,  int y,  COLORREF color);
 __declspec(dllimport) BOOL __stdcall FrameRgn(  HDC hdc,  HRGN hrgn,  HBRUSH hbr,  int w,  int h);
__declspec(dllimport) int  __stdcall GetROP2(  HDC hdc);
__declspec(dllimport) BOOL __stdcall GetAspectRatioFilterEx(  HDC hdc,  LPSIZE lpsize);
__declspec(dllimport) COLORREF __stdcall GetBkColor(  HDC hdc);


__declspec(dllimport) COLORREF __stdcall GetDCBrushColor(  HDC hdc);
__declspec(dllimport) COLORREF __stdcall GetDCPenColor(  HDC hdc);
#line 3505 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"

__declspec(dllimport)
int
__stdcall
GetBkMode(
     HDC hdc
    );

__declspec(dllimport)
LONG
__stdcall
GetBitmapBits(
     HBITMAP hbit,
     LONG cb,
     LPVOID lpvBits
    );

__declspec(dllimport) BOOL  __stdcall GetBitmapDimensionEx(  HBITMAP hbit,  LPSIZE lpsize);
__declspec(dllimport) UINT  __stdcall GetBoundsRect(  HDC hdc,  LPRECT lprect,  UINT flags);

__declspec(dllimport) BOOL  __stdcall GetBrushOrgEx(  HDC hdc,  LPPOINT lppt);

__declspec(dllimport) BOOL  __stdcall GetCharWidthA(  HDC hdc,  UINT iFirst,  UINT iLast,  LPINT lpBuffer);
__declspec(dllimport) BOOL  __stdcall GetCharWidthW(  HDC hdc,  UINT iFirst,  UINT iLast,  LPINT lpBuffer);




#line 3534 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
__declspec(dllimport) BOOL  __stdcall GetCharWidth32A(  HDC hdc,  UINT iFirst,  UINT iLast,   LPINT lpBuffer);
__declspec(dllimport) BOOL  __stdcall GetCharWidth32W(  HDC hdc,  UINT iFirst,  UINT iLast,   LPINT lpBuffer);




#line 3541 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
__declspec(dllimport) BOOL  __stdcall GetCharWidthFloatA(  HDC hdc,  UINT iFirst,  UINT iLast,  PFLOAT lpBuffer);
__declspec(dllimport) BOOL  __stdcall GetCharWidthFloatW(  HDC hdc,  UINT iFirst,  UINT iLast,  PFLOAT lpBuffer);




#line 3548 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"

__declspec(dllimport) BOOL  __stdcall GetCharABCWidthsA(  HDC hdc,
                                             UINT wFirst,
                                             UINT wLast,
                                             LPABC lpABC);
__declspec(dllimport) BOOL  __stdcall GetCharABCWidthsW(  HDC hdc,
                                             UINT wFirst,
                                             UINT wLast,
                                             LPABC lpABC);




#line 3562 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"

__declspec(dllimport) BOOL  __stdcall GetCharABCWidthsFloatA(  HDC hdc,  UINT iFirst,  UINT iLast,  LPABCFLOAT lpABC);
__declspec(dllimport) BOOL  __stdcall GetCharABCWidthsFloatW(  HDC hdc,  UINT iFirst,  UINT iLast,  LPABCFLOAT lpABC);




#line 3570 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
__declspec(dllimport) int   __stdcall GetClipBox(  HDC hdc,   LPRECT lprect);
__declspec(dllimport) int   __stdcall GetClipRgn(  HDC hdc,  HRGN hrgn);
__declspec(dllimport) int   __stdcall GetMetaRgn(  HDC hdc,  HRGN hrgn);
__declspec(dllimport) HGDIOBJ __stdcall GetCurrentObject(  HDC hdc,  UINT type);
__declspec(dllimport) BOOL  __stdcall GetCurrentPositionEx(  HDC hdc,   LPPOINT lppt);
__declspec(dllimport) int   __stdcall GetDeviceCaps(  HDC hdc,  int index);
__declspec(dllimport) int   __stdcall GetDIBits(  HDC hdc,  HBITMAP hbm,  UINT start,  UINT cLines,   LPVOID lpvBits,  LPBITMAPINFO lpbmi,  UINT usage);  


__declspec(dllimport) DWORD __stdcall GetFontData (     HDC     hdc,
                                         DWORD   dwTable,
                                         DWORD   dwOffset,
                                         PVOID pvBuffer,
                                         DWORD   cjBuffer
                                        );

__declspec(dllimport) DWORD __stdcall GetGlyphOutlineA(     HDC hdc,
                                             UINT uChar,
                                             UINT fuFormat,
                                             LPGLYPHMETRICS lpgm,
                                             DWORD cjBuffer,
                                             LPVOID pvBuffer,
                                             const MAT2 *lpmat2
                                        );
__declspec(dllimport) DWORD __stdcall GetGlyphOutlineW(     HDC hdc,
                                             UINT uChar,
                                             UINT fuFormat,
                                             LPGLYPHMETRICS lpgm,
                                             DWORD cjBuffer,
                                             LPVOID pvBuffer,
                                             const MAT2 *lpmat2
                                        );




#line 3607 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"

__declspec(dllimport) int   __stdcall GetGraphicsMode(  HDC hdc);
__declspec(dllimport) int   __stdcall GetMapMode(  HDC hdc);
__declspec(dllimport) UINT  __stdcall GetMetaFileBitsEx( HMETAFILE hMF,  UINT cbBuffer,  LPVOID lpData);
__declspec(dllimport) HMETAFILE   __stdcall GetMetaFileA(  LPCSTR lpName);
__declspec(dllimport) HMETAFILE   __stdcall GetMetaFileW(  LPCWSTR lpName);




#line 3618 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
__declspec(dllimport) COLORREF __stdcall GetNearestColor(  HDC hdc,  COLORREF color);
__declspec(dllimport) UINT  __stdcall GetNearestPaletteIndex(  HPALETTE h,  COLORREF color);
__declspec(dllimport) DWORD __stdcall GetObjectType(  HGDIOBJ h);



__declspec(dllimport) UINT __stdcall GetOutlineTextMetricsA(  HDC hdc,
                                                 UINT cjCopy,
                                                 LPOUTLINETEXTMETRICA potm);
__declspec(dllimport) UINT __stdcall GetOutlineTextMetricsW(  HDC hdc,
                                                 UINT cjCopy,
                                                 LPOUTLINETEXTMETRICW potm);




#line 3635 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"

#line 3637 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"


__declspec(dllimport) UINT  __stdcall GetPaletteEntries(    HPALETTE hpal,
                                             UINT iStart,
                                             UINT cEntries,
                                             LPPALETTEENTRY pPalEntries);
__declspec(dllimport) COLORREF __stdcall GetPixel(  HDC hdc,  int x,  int y);
__declspec(dllimport) int   __stdcall GetPixelFormat(  HDC hdc);
__declspec(dllimport) int   __stdcall GetPolyFillMode(  HDC hdc);
__declspec(dllimport) BOOL  __stdcall GetRasterizerCaps(    LPRASTERIZER_STATUS lpraststat,
                                             UINT cjBytes);

__declspec(dllimport) int   __stdcall GetRandomRgn ( HDC hdc,  HRGN hrgn,  INT i);
__declspec(dllimport) DWORD __stdcall GetRegionData(    HRGN hrgn,
                                         DWORD nCount,
                                         LPRGNDATA lpRgnData);
__declspec(dllimport) int   __stdcall GetRgnBox(  HRGN hrgn,   LPRECT lprc);
__declspec(dllimport) HGDIOBJ __stdcall GetStockObject(  int i);
__declspec(dllimport) int   __stdcall GetStretchBltMode( HDC hdc);
__declspec(dllimport)
UINT
__stdcall
GetSystemPaletteEntries(
     HDC  hdc,
     UINT iStart,
     UINT cEntries,
     LPPALETTEENTRY pPalEntries
    );

__declspec(dllimport) UINT  __stdcall GetSystemPaletteUse( HDC hdc);
__declspec(dllimport) int   __stdcall GetTextCharacterExtra( HDC hdc);
__declspec(dllimport) UINT  __stdcall GetTextAlign( HDC hdc);
__declspec(dllimport) COLORREF __stdcall GetTextColor( HDC hdc);

__declspec(dllimport)
BOOL
__stdcall
GetTextExtentPointA(
     HDC hdc,
     LPCSTR lpString,
     int c,
     LPSIZE lpsz
    );
__declspec(dllimport)
BOOL
__stdcall
GetTextExtentPointW(
     HDC hdc,
     LPCWSTR lpString,
     int c,
     LPSIZE lpsz
    );




#line 3694 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"

__declspec(dllimport)
BOOL
__stdcall
GetTextExtentPoint32A(
     HDC hdc,
     LPCSTR lpString,
     int c,
     LPSIZE psizl
    );
__declspec(dllimport)
BOOL
__stdcall
GetTextExtentPoint32W(
     HDC hdc,
     LPCWSTR lpString,
     int c,
     LPSIZE psizl
    );




#line 3718 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"

__declspec(dllimport)
BOOL
__stdcall
GetTextExtentExPointA(
     HDC hdc,
     LPCSTR lpszString,
     int cchString,
     int nMaxExtent,
     LPINT lpnFit,
     LPINT lpnDx,
     LPSIZE lpSize
    );
__declspec(dllimport)
BOOL
__stdcall
GetTextExtentExPointW(
     HDC hdc,
     LPCWSTR lpszString,
     int cchString,
     int nMaxExtent,
     LPINT lpnFit,
     LPINT lpnDx,
     LPSIZE lpSize
    );




#line 3748 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"


__declspec(dllimport) int __stdcall GetTextCharset(  HDC hdc);
__declspec(dllimport) int __stdcall GetTextCharsetInfo(  HDC hdc,  LPFONTSIGNATURE lpSig,  DWORD dwFlags);
__declspec(dllimport) BOOL __stdcall TranslateCharsetInfo(  DWORD  *lpSrc,   LPCHARSETINFO lpCs,  DWORD dwFlags);
__declspec(dllimport) DWORD __stdcall GetFontLanguageInfo(  HDC hdc);
__declspec(dllimport) DWORD __stdcall GetCharacterPlacementA(   HDC hdc,  LPCSTR lpString,  int nCount,  int nMexExtent,  LPGCP_RESULTSA lpResults,  DWORD dwFlags);
__declspec(dllimport) DWORD __stdcall GetCharacterPlacementW(   HDC hdc,  LPCWSTR lpString,  int nCount,  int nMexExtent,  LPGCP_RESULTSW lpResults,  DWORD dwFlags);




#line 3761 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
#line 3762 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"



typedef struct tagWCRANGE
{
    WCHAR  wcLow;
    USHORT cGlyphs;
} WCRANGE, *PWCRANGE, *LPWCRANGE;


typedef struct tagGLYPHSET
{
    DWORD    cbThis;
    DWORD    flAccel;
    DWORD    cGlyphsSupported;
    DWORD    cRanges;
    WCRANGE  ranges[1];
} GLYPHSET, *PGLYPHSET,  *LPGLYPHSET;









__declspec(dllimport) DWORD __stdcall GetFontUnicodeRanges(  HDC hdc,  LPGLYPHSET lpgs);
__declspec(dllimport) DWORD __stdcall GetGlyphIndicesA(  HDC hdc,  LPCSTR lpstr,  int c,  LPWORD pgi,  DWORD fl);
__declspec(dllimport) DWORD __stdcall GetGlyphIndicesW(  HDC hdc,  LPCWSTR lpstr,  int c,  LPWORD pgi,  DWORD fl);




#line 3797 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
__declspec(dllimport) BOOL  __stdcall GetTextExtentPointI( HDC hdc,  LPWORD pgiIn,  int cgi,  LPSIZE psize);
__declspec(dllimport) BOOL  __stdcall GetTextExtentExPointI (   HDC hdc,
                                                 LPWORD lpwszString,
                                                 int cwchString,
                                                 int nMaxExtent,
                                                 LPINT lpnFit,
                                                 LPINT lpnDx,
                                                 LPSIZE lpSize
                                                );

__declspec(dllimport) BOOL  __stdcall GetCharWidthI(    HDC hdc,
                                         UINT giFirst,
                                         UINT cgi,
                                         LPWORD pgi,
                                         LPINT piWidths
                                        );

__declspec(dllimport) BOOL  __stdcall GetCharABCWidthsI(    HDC    hdc,
                                             UINT   giFirst,
                                             UINT   cgi,
                                             LPWORD pgi,
                                             LPABC  pabc
                                        );








typedef struct tagDESIGNVECTOR
{
    DWORD  dvReserved;
    DWORD  dvNumAxes;
    LONG   dvValues[16];
} DESIGNVECTOR, *PDESIGNVECTOR,  *LPDESIGNVECTOR;

__declspec(dllimport) int  __stdcall AddFontResourceExA(  LPCSTR name,  DWORD fl,  PVOID res);
__declspec(dllimport) int  __stdcall AddFontResourceExW(  LPCWSTR name,  DWORD fl,  PVOID res);




#line 3842 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
__declspec(dllimport) BOOL __stdcall RemoveFontResourceExA(  LPCSTR name,  DWORD fl,  PVOID pdv);
__declspec(dllimport) BOOL __stdcall RemoveFontResourceExW(  LPCWSTR name,  DWORD fl,  PVOID pdv);




#line 3849 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
__declspec(dllimport) HANDLE __stdcall AddFontMemResourceEx(    PVOID pFileView,
                                                 DWORD cjSize,
                                                 PVOID pvResrved,
                                                 DWORD* pNumFonts);

__declspec(dllimport) BOOL __stdcall RemoveFontMemResourceEx(  HANDLE h);









typedef struct tagAXISINFOA
{
    LONG   axMinValue;
    LONG   axMaxValue;
    BYTE   axAxisName[16];
} AXISINFOA, *PAXISINFOA,  *LPAXISINFOA;
typedef struct tagAXISINFOW
{
    LONG   axMinValue;
    LONG   axMaxValue;
    WCHAR  axAxisName[16];
} AXISINFOW, *PAXISINFOW,  *LPAXISINFOW;





typedef AXISINFOA AXISINFO;
typedef PAXISINFOA PAXISINFO;
typedef LPAXISINFOA LPAXISINFO;
#line 3885 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"

typedef struct tagAXESLISTA
{
    DWORD     axlReserved;
    DWORD     axlNumAxes;
    AXISINFOA axlAxisInfo[16];
} AXESLISTA, *PAXESLISTA,  *LPAXESLISTA;
typedef struct tagAXESLISTW
{
    DWORD     axlReserved;
    DWORD     axlNumAxes;
    AXISINFOW axlAxisInfo[16];
} AXESLISTW, *PAXESLISTW,  *LPAXESLISTW;





typedef AXESLISTA AXESLIST;
typedef PAXESLISTA PAXESLIST;
typedef LPAXESLISTA LPAXESLIST;
#line 3907 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"





typedef struct tagENUMLOGFONTEXDVA
{
    ENUMLOGFONTEXA elfEnumLogfontEx;
    DESIGNVECTOR   elfDesignVector;
} ENUMLOGFONTEXDVA, *PENUMLOGFONTEXDVA,  *LPENUMLOGFONTEXDVA;
typedef struct tagENUMLOGFONTEXDVW
{
    ENUMLOGFONTEXW elfEnumLogfontEx;
    DESIGNVECTOR   elfDesignVector;
} ENUMLOGFONTEXDVW, *PENUMLOGFONTEXDVW,  *LPENUMLOGFONTEXDVW;





typedef ENUMLOGFONTEXDVA ENUMLOGFONTEXDV;
typedef PENUMLOGFONTEXDVA PENUMLOGFONTEXDV;
typedef LPENUMLOGFONTEXDVA LPENUMLOGFONTEXDV;
#line 3931 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"

__declspec(dllimport) HFONT  __stdcall CreateFontIndirectExA(  const ENUMLOGFONTEXDVA *);
__declspec(dllimport) HFONT  __stdcall CreateFontIndirectExW(  const ENUMLOGFONTEXDVW *);




#line 3939 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"


typedef struct tagENUMTEXTMETRICA
{
    NEWTEXTMETRICEXA etmNewTextMetricEx;
    AXESLISTA        etmAxesList;
} ENUMTEXTMETRICA, *PENUMTEXTMETRICA,  *LPENUMTEXTMETRICA;
typedef struct tagENUMTEXTMETRICW
{
    NEWTEXTMETRICEXW etmNewTextMetricEx;
    AXESLISTW        etmAxesList;
} ENUMTEXTMETRICW, *PENUMTEXTMETRICW,  *LPENUMTEXTMETRICW;





typedef ENUMTEXTMETRICA ENUMTEXTMETRIC;
typedef PENUMTEXTMETRICA PENUMTEXTMETRIC;
typedef LPENUMTEXTMETRICA LPENUMTEXTMETRIC;
#line 3960 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
#line 3961 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"

#line 3963 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"

__declspec(dllimport) BOOL  __stdcall GetViewportExtEx(  HDC hdc,  LPSIZE lpsize);
__declspec(dllimport) BOOL  __stdcall GetViewportOrgEx(  HDC hdc,  LPPOINT lppoint);
__declspec(dllimport) BOOL  __stdcall GetWindowExtEx(  HDC hdc,  LPSIZE lpsize);
__declspec(dllimport) BOOL  __stdcall GetWindowOrgEx(  HDC hdc,  LPPOINT lppoint);

 __declspec(dllimport) int  __stdcall IntersectClipRect(  HDC hdc,  int left,  int top,  int right,  int bottom);
 __declspec(dllimport) BOOL __stdcall InvertRgn(  HDC hdc,  HRGN hrgn);
__declspec(dllimport) BOOL __stdcall LineDDA(  int xStart,  int yStart,  int xEnd,  int yEnd,  LINEDDAPROC lpProc,  LPARAM data);
 __declspec(dllimport) BOOL __stdcall LineTo(  HDC hdc,  int x,  int y);
__declspec(dllimport) BOOL __stdcall MaskBlt(  HDC hdcDest,  int xDest,  int yDest,  int width,  int height,
               HDC hdcSrc,  int xSrc,  int ySrc,  HBITMAP hbmMask,  int xMask,  int yMask,  DWORD rop);
__declspec(dllimport) BOOL __stdcall PlgBlt(  HDC hdcDest,  const POINT * lpPoint,  HDC hdcSrc,  int xSrc,  int ySrc,  int width,
                      int height,  HBITMAP hbmMask,  int xMask,  int yMask);

 __declspec(dllimport) int  __stdcall OffsetClipRgn( HDC hdc,  int x,  int y);
__declspec(dllimport) int  __stdcall OffsetRgn( HRGN hrgn,  int x,  int y);
 __declspec(dllimport) BOOL __stdcall PatBlt( HDC hdc,  int x,  int y,  int w,  int h,  DWORD rop);
 __declspec(dllimport) BOOL __stdcall Pie( HDC hdc,  int left,  int top,  int right,  int bottom,  int xr1,  int yr1,  int xr2,  int yr2);
__declspec(dllimport) BOOL __stdcall PlayMetaFile( HDC hdc,  HMETAFILE hmf);
 __declspec(dllimport) BOOL __stdcall PaintRgn( HDC hdc,  HRGN hrgn);
 __declspec(dllimport) BOOL __stdcall PolyPolygon( HDC hdc,   const POINT *apt,   const INT *asz,   int csz);
__declspec(dllimport) BOOL __stdcall PtInRegion( HRGN hrgn,  int x,  int y);
__declspec(dllimport) BOOL __stdcall PtVisible( HDC hdc,  int x,  int y);
__declspec(dllimport) BOOL __stdcall RectInRegion( HRGN hrgn,  const RECT * lprect);
__declspec(dllimport) BOOL __stdcall RectVisible( HDC hdc,  const RECT * lprect);
 __declspec(dllimport) BOOL __stdcall Rectangle( HDC hdc,  int left,  int top,  int right,  int bottom);
 __declspec(dllimport) BOOL __stdcall RestoreDC( HDC hdc,  int nSavedDC);
 __declspec(dllimport) HDC  __stdcall ResetDCA( HDC hdc,  const DEVMODEA * lpdm);
 __declspec(dllimport) HDC  __stdcall ResetDCW( HDC hdc,  const DEVMODEW * lpdm);




#line 3998 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
 __declspec(dllimport) UINT __stdcall RealizePalette( HDC hdc);
__declspec(dllimport) BOOL __stdcall RemoveFontResourceA( LPCSTR lpFileName);
__declspec(dllimport) BOOL __stdcall RemoveFontResourceW( LPCWSTR lpFileName);




#line 4006 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
 __declspec(dllimport) BOOL  __stdcall RoundRect( HDC hdc,  int left,  int top,  int right,  int bottom,  int width,  int height);
 __declspec(dllimport) BOOL __stdcall ResizePalette( HPALETTE hpal,  UINT n);

 __declspec(dllimport) int  __stdcall SaveDC( HDC hdc);
 __declspec(dllimport) int  __stdcall SelectClipRgn( HDC hdc,  HRGN hrgn);
__declspec(dllimport) int  __stdcall ExtSelectClipRgn( HDC hdc,  HRGN hrgn,  int mode);
__declspec(dllimport) int  __stdcall SetMetaRgn( HDC hdc);
 __declspec(dllimport) HGDIOBJ __stdcall SelectObject( HDC hdc,  HGDIOBJ h);
 __declspec(dllimport) HPALETTE __stdcall SelectPalette( HDC hdc,  HPALETTE hPal,  BOOL bForceBkgd);
 __declspec(dllimport) COLORREF __stdcall SetBkColor( HDC hdc,  COLORREF color);


__declspec(dllimport) COLORREF __stdcall SetDCBrushColor( HDC hdc,  COLORREF color);
__declspec(dllimport) COLORREF __stdcall SetDCPenColor( HDC hdc,  COLORREF color);
#line 4021 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"

 __declspec(dllimport) int   __stdcall SetBkMode( HDC hdc,  int mode);

__declspec(dllimport)
LONG __stdcall
SetBitmapBits(
     HBITMAP hbm,
     DWORD cb,
     const void *pvBits);

__declspec(dllimport) UINT  __stdcall SetBoundsRect( HDC hdc,  const RECT * lprect,  UINT flags);
__declspec(dllimport) int   __stdcall SetDIBits( HDC hdc,  HBITMAP hbm,  UINT start,  UINT cLines,  const void *lpBits,  const BITMAPINFO * lpbmi,  UINT ColorUse);
 __declspec(dllimport) int   __stdcall SetDIBitsToDevice( HDC hdc,  int xDest,  int yDest,  DWORD w,  DWORD h,  int xSrc,
         int ySrc,  UINT StartScan,  UINT cLines,  const void * lpvBits,  const BITMAPINFO * lpbmi,  UINT ColorUse);
 __declspec(dllimport) DWORD __stdcall SetMapperFlags( HDC hdc,  DWORD flags);
__declspec(dllimport) int   __stdcall SetGraphicsMode( HDC hdc,  int iMode);
 __declspec(dllimport) int   __stdcall SetMapMode( HDC hdc,  int iMode);


 __declspec(dllimport) DWORD __stdcall SetLayout( HDC hdc,  DWORD l);
__declspec(dllimport) DWORD __stdcall GetLayout( HDC hdc);
#line 4043 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"

__declspec(dllimport) HMETAFILE   __stdcall SetMetaFileBitsEx( UINT cbBuffer,  const BYTE *lpData);
 __declspec(dllimport) UINT  __stdcall SetPaletteEntries(    HPALETTE hpal,
                                             UINT iStart,
                                             UINT cEntries,
                                             const PALETTEENTRY *pPalEntries);
 __declspec(dllimport) COLORREF __stdcall SetPixel( HDC hdc,  int x,  int y,  COLORREF color);
__declspec(dllimport) BOOL   __stdcall SetPixelV( HDC hdc,  int x,  int y,  COLORREF color);
__declspec(dllimport) BOOL  __stdcall SetPixelFormat( HDC hdc,  int format,  const PIXELFORMATDESCRIPTOR * ppfd);
 __declspec(dllimport) int   __stdcall SetPolyFillMode( HDC hdc,  int mode);
 __declspec(dllimport) BOOL  __stdcall StretchBlt( HDC hdcDest,  int xDest,  int yDest,  int wDest,  int hDest,  HDC hdcSrc,  int xSrc,  int ySrc,  int wSrc,  int hSrc,  DWORD rop);
__declspec(dllimport) BOOL   __stdcall SetRectRgn( HRGN hrgn,  int left,  int top,  int right,  int bottom);
 __declspec(dllimport) int   __stdcall StretchDIBits( HDC hdc,  int xDest,  int yDest,  int DestWidth,  int DestHeight,  int xSrc,  int ySrc,  int SrcWidth,  int SrcHeight,
         const void * lpBits,  const BITMAPINFO * lpbmi,  UINT iUsage,  DWORD rop);
 __declspec(dllimport) int   __stdcall SetROP2( HDC hdc,  int rop2);
 __declspec(dllimport) int   __stdcall SetStretchBltMode( HDC hdc,  int mode);
__declspec(dllimport) UINT  __stdcall SetSystemPaletteUse( HDC hdc,  UINT use);
 __declspec(dllimport) int   __stdcall SetTextCharacterExtra( HDC hdc,  int extra);
 __declspec(dllimport) COLORREF __stdcall SetTextColor( HDC hdc,  COLORREF color);
 __declspec(dllimport) UINT  __stdcall SetTextAlign( HDC hdc,  UINT align);
 __declspec(dllimport) BOOL  __stdcall SetTextJustification( HDC hdc,  int extra,  int count);
__declspec(dllimport) BOOL  __stdcall UpdateColors( HDC hdc);





































typedef USHORT COLOR16;

typedef struct _TRIVERTEX
{
    LONG    x;
    LONG    y;
    COLOR16 Red;
    COLOR16 Green;
    COLOR16 Blue;
    COLOR16 Alpha;
}TRIVERTEX,*PTRIVERTEX,*LPTRIVERTEX;

typedef struct _GRADIENT_TRIANGLE
{
    ULONG Vertex1;
    ULONG Vertex2;
    ULONG Vertex3;
} GRADIENT_TRIANGLE,*PGRADIENT_TRIANGLE,*LPGRADIENT_TRIANGLE;

typedef struct _GRADIENT_RECT
{
    ULONG UpperLeft;
    ULONG LowerRight;
}GRADIENT_RECT,*PGRADIENT_RECT,*LPGRADIENT_RECT;

typedef struct _BLENDFUNCTION
{
    BYTE   BlendOp;
    BYTE   BlendFlags;
    BYTE   SourceConstantAlpha;
    BYTE   AlphaFormat;
}BLENDFUNCTION,*PBLENDFUNCTION;














__declspec(dllimport) BOOL __stdcall AlphaBlend(
     HDC hdcDest,
     int xoriginDest,
     int yoriginDest,
     int wDest,
     int hDest,
     HDC hdcSrc,
     int xoriginSrc,
     int yoriginSrc,
     int wSrc,
     int hSrc,
     BLENDFUNCTION ftn);

__declspec(dllimport) BOOL __stdcall TransparentBlt(
     HDC hdcDest,
     int xoriginDest,
     int yoriginDest,
     int wDest,
     int hDest,
     HDC hdcSrc,
     int xoriginSrc,
     int yoriginSrc,
     int wSrc,
     int hSrc,
     UINT crTransparent);











__declspec(dllimport)
BOOL
__stdcall
GradientFill(
     HDC hdc,
     PTRIVERTEX pVertex,
     ULONG nVertex,
     PVOID pMesh,
     ULONG nMesh,
     ULONG ulMode
    );

#line 4197 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"




__declspec(dllimport) BOOL  __stdcall GdiAlphaBlend( HDC hdcDest,  int xoriginDest,  int yoriginDest,  int wDest,  int hDest,  HDC hdcSrc,  int xoriginSrc,  int yoriginSrc,  int wSrc,  int hSrc,  BLENDFUNCTION ftn);

__declspec(dllimport) BOOL  __stdcall GdiTransparentBlt( HDC hdcDest, int xoriginDest,  int yoriginDest,  int wDest,  int hDest,  HDC hdcSrc,
                                            int xoriginSrc,  int yoriginSrc,  int wSrc,  int hSrc,  UINT crTransparent);

__declspec(dllimport) BOOL  __stdcall GdiGradientFill(  HDC hdc,
                                         PTRIVERTEX pVertex,
                                         ULONG nVertex,
                                         PVOID pMesh,
                                         ULONG nCount,
                                         ULONG ulMode);

#line 4214 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"





__declspec(dllimport) BOOL  __stdcall PlayMetaFileRecord(   HDC hdc,
                                             LPHANDLETABLE lpHandleTable,
                                             LPMETARECORD lpMR,
                                             UINT noObjs);

typedef int (__stdcall* MFENUMPROC)(  HDC hdc,  HANDLETABLE * lpht,  METARECORD * lpMR,  int nObj,  LPARAM param);
__declspec(dllimport) BOOL  __stdcall EnumMetaFile(  HDC hdc,  HMETAFILE hmf,  MFENUMPROC proc,  LPARAM param);

typedef int (__stdcall* ENHMFENUMPROC)( HDC hdc,  HANDLETABLE * lpht,  const ENHMETARECORD * lpmr,  int nHandles,  LPARAM data);



__declspec(dllimport) HENHMETAFILE __stdcall CloseEnhMetaFile(  HDC hdc);
__declspec(dllimport) HENHMETAFILE __stdcall CopyEnhMetaFileA(  HENHMETAFILE hEnh,  LPCSTR lpFileName);
__declspec(dllimport) HENHMETAFILE __stdcall CopyEnhMetaFileW(  HENHMETAFILE hEnh,  LPCWSTR lpFileName);




#line 4239 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
__declspec(dllimport) HDC   __stdcall CreateEnhMetaFileA(  HDC hdc,  LPCSTR lpFilename,  const RECT *lprc,  LPCSTR lpDesc);
__declspec(dllimport) HDC   __stdcall CreateEnhMetaFileW(  HDC hdc,  LPCWSTR lpFilename,  const RECT *lprc,  LPCWSTR lpDesc);




#line 4246 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
__declspec(dllimport) BOOL  __stdcall DeleteEnhMetaFile(  HENHMETAFILE hmf);
__declspec(dllimport) BOOL  __stdcall EnumEnhMetaFile(  HDC hdc,  HENHMETAFILE hmf,  ENHMFENUMPROC proc,
                                         LPVOID param,  const RECT * lpRect);
__declspec(dllimport) HENHMETAFILE  __stdcall GetEnhMetaFileA(  LPCSTR lpName);
__declspec(dllimport) HENHMETAFILE  __stdcall GetEnhMetaFileW(  LPCWSTR lpName);




#line 4256 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
__declspec(dllimport) UINT  __stdcall GetEnhMetaFileBits(   HENHMETAFILE hEMF,
                                             UINT nSize,
                                             LPBYTE lpData);
__declspec(dllimport) UINT  __stdcall GetEnhMetaFileDescriptionA(   HENHMETAFILE hemf,
                                                     UINT cchBuffer,
                                                     LPSTR lpDescription);
__declspec(dllimport) UINT  __stdcall GetEnhMetaFileDescriptionW(   HENHMETAFILE hemf,
                                                     UINT cchBuffer,
                                                     LPWSTR lpDescription);




#line 4270 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
__declspec(dllimport) UINT  __stdcall GetEnhMetaFileHeader(     HENHMETAFILE hemf,
                                                 UINT nSize,
                                                 LPENHMETAHEADER lpEnhMetaHeader);
__declspec(dllimport) UINT  __stdcall GetEnhMetaFilePaletteEntries( HENHMETAFILE hemf,
                                                     UINT nNumEntries,
                                                     LPPALETTEENTRY lpPaletteEntries);

__declspec(dllimport) UINT  __stdcall GetEnhMetaFilePixelFormat(    HENHMETAFILE hemf,
                                                     UINT cbBuffer,
                                                     PIXELFORMATDESCRIPTOR *ppfd);
__declspec(dllimport) UINT  __stdcall GetWinMetaFileBits(   HENHMETAFILE hemf,
                                             UINT cbData16,
                                             LPBYTE pData16,
                                             INT iMapMode,
                                             HDC hdcRef);
__declspec(dllimport) BOOL  __stdcall PlayEnhMetaFile(  HDC hdc,  HENHMETAFILE hmf,  const RECT * lprect);
__declspec(dllimport) BOOL  __stdcall PlayEnhMetaFileRecord(    HDC hdc,
                                                 LPHANDLETABLE pht,
                                                 const ENHMETARECORD *pmr,
                                                 UINT cht);

__declspec(dllimport) HENHMETAFILE  __stdcall SetEnhMetaFileBits(   UINT nSize,
                                                     const BYTE * pb);

__declspec(dllimport) HENHMETAFILE  __stdcall SetWinMetaFileBits(   UINT nSize,
                                                     const BYTE *lpMeta16Data,
                                                     HDC hdcRef,
                                                     const METAFILEPICT *lpMFP);
__declspec(dllimport) BOOL  __stdcall GdiComment( HDC hdc,  UINT nSize,  const BYTE *lpData);

#line 4301 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"



__declspec(dllimport) BOOL __stdcall GetTextMetricsA(  HDC hdc,  LPTEXTMETRICA lptm);
__declspec(dllimport) BOOL __stdcall GetTextMetricsW(  HDC hdc,  LPTEXTMETRICW lptm);




#line 4311 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"



















#line 4331 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"

#line 4333 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"



typedef struct tagDIBSECTION {
    BITMAP       dsBm;
    BITMAPINFOHEADER    dsBmih;
    DWORD               dsBitfields[3];
    HANDLE              dshSection;
    DWORD               dsOffset;
} DIBSECTION,  *LPDIBSECTION, *PDIBSECTION;


__declspec(dllimport) BOOL __stdcall AngleArc(  HDC hdc,  int x,  int y,  DWORD r,  FLOAT StartAngle,  FLOAT SweepAngle);
__declspec(dllimport) BOOL __stdcall PolyPolyline( HDC hdc,  const POINT *apt,  const DWORD *asz,  DWORD csz);
__declspec(dllimport) BOOL __stdcall GetWorldTransform(  HDC hdc,  LPXFORM lpxf);
__declspec(dllimport) BOOL __stdcall SetWorldTransform(  HDC hdc,  const XFORM * lpxf);
__declspec(dllimport) BOOL __stdcall ModifyWorldTransform(  HDC hdc,  const XFORM * lpxf,  DWORD mode);
__declspec(dllimport) BOOL __stdcall CombineTransform(  LPXFORM lpxfOut,  const XFORM *lpxf1,  const XFORM *lpxf2);
__declspec(dllimport) HBITMAP __stdcall CreateDIBSection( HDC hdc,  const BITMAPINFO *lpbmi,  UINT usage,  void **ppvBits,  HANDLE hSection,  DWORD offset);

__declspec(dllimport) UINT __stdcall GetDIBColorTable(  HDC  hdc,
                                         UINT iStart,
                                         UINT cEntries,
                                         RGBQUAD *prgbq);
__declspec(dllimport) UINT __stdcall SetDIBColorTable(  HDC  hdc,
                                         UINT iStart,
                                         UINT cEntries,
                                         const RGBQUAD *prgbq);




































typedef struct  tagCOLORADJUSTMENT {
    WORD   caSize;
    WORD   caFlags;
    WORD   caIlluminantIndex;
    WORD   caRedGamma;
    WORD   caGreenGamma;
    WORD   caBlueGamma;
    WORD   caReferenceBlack;
    WORD   caReferenceWhite;
    SHORT  caContrast;
    SHORT  caBrightness;
    SHORT  caColorfulness;
    SHORT  caRedGreenTint;
} COLORADJUSTMENT, *PCOLORADJUSTMENT,  *LPCOLORADJUSTMENT;

__declspec(dllimport) BOOL __stdcall SetColorAdjustment(  HDC hdc,  const COLORADJUSTMENT *lpca);
__declspec(dllimport) BOOL __stdcall GetColorAdjustment(  HDC hdc,  LPCOLORADJUSTMENT lpca);
__declspec(dllimport) HPALETTE __stdcall CreateHalftonePalette(  HDC hdc);


typedef BOOL (__stdcall* ABORTPROC)(  HDC,  int);


#line 4421 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"

typedef struct _DOCINFOA {
    int     cbSize;
    LPCSTR   lpszDocName;
    LPCSTR   lpszOutput;

    LPCSTR   lpszDatatype;
    DWORD    fwType;
#line 4430 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
} DOCINFOA, *LPDOCINFOA;
typedef struct _DOCINFOW {
    int     cbSize;
    LPCWSTR  lpszDocName;
    LPCWSTR  lpszOutput;

    LPCWSTR  lpszDatatype;
    DWORD    fwType;
#line 4439 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
} DOCINFOW, *LPDOCINFOW;




typedef DOCINFOA DOCINFO;
typedef LPDOCINFOA LPDOCINFO;
#line 4447 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"




#line 4452 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"

 __declspec(dllimport) int __stdcall StartDocA( HDC hdc,  const DOCINFOA *lpdi);
 __declspec(dllimport) int __stdcall StartDocW( HDC hdc,  const DOCINFOW *lpdi);




#line 4460 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
 __declspec(dllimport) int __stdcall EndDoc( HDC hdc);
 __declspec(dllimport) int __stdcall StartPage( HDC hdc);
 __declspec(dllimport) int __stdcall EndPage( HDC hdc);
 __declspec(dllimport) int __stdcall AbortDoc( HDC hdc);
__declspec(dllimport) int __stdcall SetAbortProc( HDC hdc,  ABORTPROC proc);

__declspec(dllimport) BOOL __stdcall AbortPath( HDC hdc);
__declspec(dllimport) BOOL __stdcall ArcTo( HDC hdc,  int left,  int top,  int right,  int bottom,  int xr1,  int yr1,  int xr2,  int yr2);
__declspec(dllimport) BOOL __stdcall BeginPath( HDC hdc);
__declspec(dllimport) BOOL __stdcall CloseFigure( HDC hdc);
__declspec(dllimport) BOOL __stdcall EndPath( HDC hdc);
__declspec(dllimport) BOOL __stdcall FillPath( HDC hdc);
__declspec(dllimport) BOOL __stdcall FlattenPath( HDC hdc);
__declspec(dllimport) int  __stdcall GetPath( HDC hdc,  LPPOINT apt,  LPBYTE aj, int cpt);
__declspec(dllimport) HRGN __stdcall PathToRegion( HDC hdc);
__declspec(dllimport) BOOL __stdcall PolyDraw( HDC hdc,  const POINT * apt,  const BYTE * aj,  int cpt);
__declspec(dllimport) BOOL __stdcall SelectClipPath( HDC hdc,  int mode);
__declspec(dllimport) int  __stdcall SetArcDirection( HDC hdc,  int dir);
__declspec(dllimport) BOOL __stdcall SetMiterLimit( HDC hdc,  FLOAT limit,  PFLOAT old);
__declspec(dllimport) BOOL __stdcall StrokeAndFillPath( HDC hdc);
__declspec(dllimport) BOOL __stdcall StrokePath( HDC hdc);
__declspec(dllimport) BOOL __stdcall WidenPath( HDC hdc);
__declspec(dllimport) HPEN __stdcall ExtCreatePen(  DWORD iPenStyle,
                                     DWORD cWidth,
                                     const LOGBRUSH *plbrush,
                                     DWORD cStyle,
                                     const DWORD *pstyle);
__declspec(dllimport) BOOL __stdcall GetMiterLimit( HDC hdc,  PFLOAT plimit);
__declspec(dllimport) int  __stdcall GetArcDirection( HDC hdc);

__declspec(dllimport) int   __stdcall GetObjectA( HANDLE h,  int c,  LPVOID pv);
__declspec(dllimport) int   __stdcall GetObjectW( HANDLE h,  int c,  LPVOID pv);




#line 4497 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"




















#line 4518 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"


 __declspec(dllimport) BOOL  __stdcall MoveToEx(  HDC hdc,  int x,  int y,  LPPOINT lppt);
 __declspec(dllimport) BOOL  __stdcall TextOutA(  HDC hdc,  int x,  int y,  LPCSTR lpString,  int c);
 __declspec(dllimport) BOOL  __stdcall TextOutW(  HDC hdc,  int x,  int y,  LPCWSTR lpString,  int c);




#line 4528 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
 __declspec(dllimport) BOOL  __stdcall ExtTextOutA(  HDC hdc,  int x,  int y,  UINT options,  const RECT * lprect,  LPCSTR lpString,  UINT c,  const INT * lpDx);
 __declspec(dllimport) BOOL  __stdcall ExtTextOutW(  HDC hdc,  int x,  int y,  UINT options,  const RECT * lprect,  LPCWSTR lpString,  UINT c,  const INT * lpDx);




#line 4535 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
__declspec(dllimport) BOOL  __stdcall PolyTextOutA( HDC hdc,  const POLYTEXTA * ppt,  int nstrings);
__declspec(dllimport) BOOL  __stdcall PolyTextOutW( HDC hdc,  const POLYTEXTW * ppt,  int nstrings);




#line 4542 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"

__declspec(dllimport) HRGN  __stdcall CreatePolygonRgn(     const POINT *pptl,
                                             int cPoint,
                                             int iMode);
__declspec(dllimport) BOOL  __stdcall DPtoLP(  HDC hdc,  LPPOINT lppt,  int c);
__declspec(dllimport) BOOL  __stdcall LPtoDP(  HDC hdc,  LPPOINT lppt,  int c);
 __declspec(dllimport) BOOL  __stdcall Polygon( HDC hdc,  const POINT *apt,  int cpt);
 __declspec(dllimport) BOOL  __stdcall Polyline( HDC hdc,  const POINT *apt,  int cpt);

__declspec(dllimport) BOOL  __stdcall PolyBezier( HDC hdc,  const POINT * apt,  DWORD cpt);
__declspec(dllimport) BOOL  __stdcall PolyBezierTo( HDC hdc,  const POINT * apt,  DWORD cpt);
__declspec(dllimport) BOOL  __stdcall PolylineTo( HDC hdc,  const POINT * apt,  DWORD cpt);

 __declspec(dllimport) BOOL  __stdcall SetViewportExtEx(  HDC hdc,  int x,  int y,  LPSIZE lpsz);
 __declspec(dllimport) BOOL  __stdcall SetViewportOrgEx(  HDC hdc,  int x,  int y,  LPPOINT lppt);
 __declspec(dllimport) BOOL  __stdcall SetWindowExtEx(  HDC hdc,  int x,  int y,  LPSIZE lpsz);
 __declspec(dllimport) BOOL  __stdcall SetWindowOrgEx(  HDC hdc,  int x,  int y,  LPPOINT lppt);

 __declspec(dllimport) BOOL  __stdcall OffsetViewportOrgEx(  HDC hdc,  int x,  int y,  LPPOINT lppt);
 __declspec(dllimport) BOOL  __stdcall OffsetWindowOrgEx(  HDC hdc,  int x,  int y,  LPPOINT lppt);
 __declspec(dllimport) BOOL  __stdcall ScaleViewportExtEx(  HDC hdc,  int xn,  int dx,  int yn,  int yd,  LPSIZE lpsz);
 __declspec(dllimport) BOOL  __stdcall ScaleWindowExtEx(  HDC hdc,  int xn,  int xd,  int yn,  int yd,  LPSIZE lpsz);
__declspec(dllimport) BOOL  __stdcall SetBitmapDimensionEx(  HBITMAP hbm,  int w,  int h,  LPSIZE lpsz);
__declspec(dllimport) BOOL  __stdcall SetBrushOrgEx(  HDC hdc,  int x,  int y,  LPPOINT lppt);

__declspec(dllimport) int   __stdcall GetTextFaceA(  HDC hdc,  int c,   LPSTR lpName);
__declspec(dllimport) int   __stdcall GetTextFaceW(  HDC hdc,  int c,   LPWSTR lpName);




#line 4574 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"



typedef struct tagKERNINGPAIR {
   WORD wFirst;
   WORD wSecond;
   int  iKernAmount;
} KERNINGPAIR, *LPKERNINGPAIR;

__declspec(dllimport) DWORD __stdcall GetKerningPairsA(     HDC hdc,
                                             DWORD nPairs,
                                             LPKERNINGPAIR   lpKernPair);
__declspec(dllimport) DWORD __stdcall GetKerningPairsW(     HDC hdc,
                                             DWORD nPairs,
                                             LPKERNINGPAIR   lpKernPair);




#line 4594 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"


__declspec(dllimport) BOOL  __stdcall GetDCOrgEx(  HDC hdc,  LPPOINT lppt);
__declspec(dllimport) BOOL  __stdcall FixBrushOrgEx(  HDC hdc,  int x,  int y,   LPPOINT ptl);
__declspec(dllimport) BOOL  __stdcall UnrealizeObject(  HGDIOBJ h);

__declspec(dllimport) BOOL  __stdcall GdiFlush(void);
__declspec(dllimport) DWORD __stdcall GdiSetBatchLimit(  DWORD dw);
__declspec(dllimport) DWORD __stdcall GdiGetBatchLimit(void);








typedef int (__stdcall* ICMENUMPROCA)(LPSTR, LPARAM);
typedef int (__stdcall* ICMENUMPROCW)(LPWSTR, LPARAM);




#line 4618 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"

__declspec(dllimport) int         __stdcall SetICMMode(  HDC hdc,  int mode);
__declspec(dllimport) BOOL        __stdcall CheckColorsInGamut(     HDC hdc,
                                                     LPRGBTRIPLE lpRGBTriple,
                                                     LPVOID dlpBuffer,
                                                     DWORD nCount);

__declspec(dllimport) HCOLORSPACE __stdcall GetColorSpace(  HDC hdc);
__declspec(dllimport) BOOL        __stdcall GetLogColorSpaceA(  HCOLORSPACE hColorSpace,
                                                 LPLOGCOLORSPACEA lpBuffer,
                                                 DWORD nSize);
__declspec(dllimport) BOOL        __stdcall GetLogColorSpaceW(  HCOLORSPACE hColorSpace,
                                                 LPLOGCOLORSPACEW lpBuffer,
                                                 DWORD nSize);




#line 4637 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"

__declspec(dllimport) HCOLORSPACE __stdcall CreateColorSpaceA(  LPLOGCOLORSPACEA lplcs);
__declspec(dllimport) HCOLORSPACE __stdcall CreateColorSpaceW(  LPLOGCOLORSPACEW lplcs);




#line 4645 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
__declspec(dllimport) HCOLORSPACE __stdcall SetColorSpace(  HDC hdc,  HCOLORSPACE hcs);
__declspec(dllimport) BOOL        __stdcall DeleteColorSpace(  HCOLORSPACE hcs);
__declspec(dllimport) BOOL        __stdcall GetICMProfileA(     HDC hdc,
                                                 LPDWORD pBufSize,
                                                 LPSTR pszFilename);
__declspec(dllimport) BOOL        __stdcall GetICMProfileW(     HDC hdc,
                                                 LPDWORD pBufSize,
                                                 LPWSTR pszFilename);




#line 4658 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"

__declspec(dllimport) BOOL        __stdcall SetICMProfileA(  HDC hdc,  LPSTR lpFileName);
__declspec(dllimport) BOOL        __stdcall SetICMProfileW(  HDC hdc,  LPWSTR lpFileName);




#line 4666 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
__declspec(dllimport) BOOL        __stdcall GetDeviceGammaRamp(  HDC hdc,  LPVOID lpRamp);
__declspec(dllimport) BOOL        __stdcall SetDeviceGammaRamp(  HDC hdc,   LPVOID lpRamp);
__declspec(dllimport) BOOL        __stdcall ColorMatchToTarget(  HDC hdc,  HDC hdcTarget,  DWORD action);
__declspec(dllimport) int         __stdcall EnumICMProfilesA(  HDC hdc,  ICMENUMPROCA proc,  LPARAM param);
__declspec(dllimport) int         __stdcall EnumICMProfilesW(  HDC hdc,  ICMENUMPROCW proc,  LPARAM param);




#line 4676 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"

__declspec(dllimport) BOOL        __stdcall UpdateICMRegKeyA(  DWORD reserved,  LPSTR lpszCMID,  LPSTR lpszFileName,  UINT command);

__declspec(dllimport) BOOL        __stdcall UpdateICMRegKeyW(  DWORD reserved,  LPWSTR lpszCMID,  LPWSTR lpszFileName,  UINT command);




#line 4685 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
#pragma deprecated (UpdateICMRegKeyW)
#pragma deprecated (UpdateICMRegKeyA)

#line 4689 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"


__declspec(dllimport) BOOL        __stdcall ColorCorrectPalette(  HDC hdc,  HPALETTE hPal,  DWORD deFirst,  DWORD num);
#line 4693 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"









#line 4703 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"




















































































































#line 4820 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
















#line 4837 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"





#line 4843 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"









#line 4853 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"



typedef struct tagEMR
{
    DWORD   iType;              
    DWORD   nSize;              
                                
} EMR, *PEMR;



typedef struct tagEMRTEXT
{
    POINTL  ptlReference;
    DWORD   nChars;
    DWORD   offString;          
    DWORD   fOptions;
    RECTL   rcl;
    DWORD   offDx;              
                                
} EMRTEXT, *PEMRTEXT;



typedef struct tagABORTPATH
{
    EMR     emr;
} EMRABORTPATH,      *PEMRABORTPATH,
  EMRBEGINPATH,      *PEMRBEGINPATH,
  EMRENDPATH,        *PEMRENDPATH,
  EMRCLOSEFIGURE,    *PEMRCLOSEFIGURE,
  EMRFLATTENPATH,    *PEMRFLATTENPATH,
  EMRWIDENPATH,      *PEMRWIDENPATH,
  EMRSETMETARGN,     *PEMRSETMETARGN,
  EMRSAVEDC,         *PEMRSAVEDC,
  EMRREALIZEPALETTE, *PEMRREALIZEPALETTE;

typedef struct tagEMRSELECTCLIPPATH
{
    EMR     emr;
    DWORD   iMode;
} EMRSELECTCLIPPATH,    *PEMRSELECTCLIPPATH,
  EMRSETBKMODE,         *PEMRSETBKMODE,
  EMRSETMAPMODE,        *PEMRSETMAPMODE,

  EMRSETLAYOUT,         *PEMRSETLAYOUT,
#line 4901 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
  EMRSETPOLYFILLMODE,   *PEMRSETPOLYFILLMODE,
  EMRSETROP2,           *PEMRSETROP2,
  EMRSETSTRETCHBLTMODE, *PEMRSETSTRETCHBLTMODE,
  EMRSETICMMODE,        *PEMRSETICMMODE,
  EMRSETTEXTALIGN,      *PEMRSETTEXTALIGN;

typedef struct tagEMRSETMITERLIMIT
{
    EMR     emr;
    FLOAT   eMiterLimit;
} EMRSETMITERLIMIT, *PEMRSETMITERLIMIT;

typedef struct tagEMRRESTOREDC
{
    EMR     emr;
    LONG    iRelative;          
} EMRRESTOREDC, *PEMRRESTOREDC;

typedef struct tagEMRSETARCDIRECTION
{
    EMR     emr;
    DWORD   iArcDirection;      
                                
} EMRSETARCDIRECTION, *PEMRSETARCDIRECTION;

typedef struct tagEMRSETMAPPERFLAGS
{
    EMR     emr;
    DWORD   dwFlags;
} EMRSETMAPPERFLAGS, *PEMRSETMAPPERFLAGS;

typedef struct tagEMRSETTEXTCOLOR
{
    EMR     emr;
    COLORREF crColor;
} EMRSETBKCOLOR,   *PEMRSETBKCOLOR,
  EMRSETTEXTCOLOR, *PEMRSETTEXTCOLOR;

typedef struct tagEMRSELECTOBJECT
{
    EMR     emr;
    DWORD   ihObject;           
} EMRSELECTOBJECT, *PEMRSELECTOBJECT,
  EMRDELETEOBJECT, *PEMRDELETEOBJECT;

typedef struct tagEMRSELECTPALETTE
{
    EMR     emr;
    DWORD   ihPal;              
} EMRSELECTPALETTE, *PEMRSELECTPALETTE;

typedef struct tagEMRRESIZEPALETTE
{
    EMR     emr;
    DWORD   ihPal;              
    DWORD   cEntries;
} EMRRESIZEPALETTE, *PEMRRESIZEPALETTE;

typedef struct tagEMRSETPALETTEENTRIES
{
    EMR     emr;
    DWORD   ihPal;              
    DWORD   iStart;
    DWORD   cEntries;
    PALETTEENTRY aPalEntries[1];
} EMRSETPALETTEENTRIES, *PEMRSETPALETTEENTRIES;

typedef struct tagEMRSETCOLORADJUSTMENT
{
    EMR     emr;
    COLORADJUSTMENT ColorAdjustment;
} EMRSETCOLORADJUSTMENT, *PEMRSETCOLORADJUSTMENT;

typedef struct tagEMRGDICOMMENT
{
    EMR     emr;
    DWORD   cbData;             
    BYTE    Data[1];
} EMRGDICOMMENT, *PEMRGDICOMMENT;

typedef struct tagEMREOF
{
    EMR     emr;
    DWORD   nPalEntries;        
    DWORD   offPalEntries;      
    DWORD   nSizeLast;          
                                
                                
} EMREOF, *PEMREOF;

typedef struct tagEMRLINETO
{
    EMR     emr;
    POINTL  ptl;
} EMRLINETO,   *PEMRLINETO,
  EMRMOVETOEX, *PEMRMOVETOEX;

typedef struct tagEMROFFSETCLIPRGN
{
    EMR     emr;
    POINTL  ptlOffset;
} EMROFFSETCLIPRGN, *PEMROFFSETCLIPRGN;

typedef struct tagEMRFILLPATH
{
    EMR     emr;
    RECTL   rclBounds;          
} EMRFILLPATH,          *PEMRFILLPATH,
  EMRSTROKEANDFILLPATH, *PEMRSTROKEANDFILLPATH,
  EMRSTROKEPATH,        *PEMRSTROKEPATH;

typedef struct tagEMREXCLUDECLIPRECT
{
    EMR     emr;
    RECTL   rclClip;
} EMREXCLUDECLIPRECT,   *PEMREXCLUDECLIPRECT,
  EMRINTERSECTCLIPRECT, *PEMRINTERSECTCLIPRECT;

typedef struct tagEMRSETVIEWPORTORGEX
{
    EMR     emr;
    POINTL  ptlOrigin;
} EMRSETVIEWPORTORGEX, *PEMRSETVIEWPORTORGEX,
  EMRSETWINDOWORGEX,   *PEMRSETWINDOWORGEX,
  EMRSETBRUSHORGEX,    *PEMRSETBRUSHORGEX;

typedef struct tagEMRSETVIEWPORTEXTEX
{
    EMR     emr;
    SIZEL   szlExtent;
} EMRSETVIEWPORTEXTEX, *PEMRSETVIEWPORTEXTEX,
  EMRSETWINDOWEXTEX,   *PEMRSETWINDOWEXTEX;

typedef struct tagEMRSCALEVIEWPORTEXTEX
{
    EMR     emr;
    LONG    xNum;
    LONG    xDenom;
    LONG    yNum;
    LONG    yDenom;
} EMRSCALEVIEWPORTEXTEX, *PEMRSCALEVIEWPORTEXTEX,
  EMRSCALEWINDOWEXTEX,   *PEMRSCALEWINDOWEXTEX;

typedef struct tagEMRSETWORLDTRANSFORM
{
    EMR     emr;
    XFORM   xform;
} EMRSETWORLDTRANSFORM, *PEMRSETWORLDTRANSFORM;

typedef struct tagEMRMODIFYWORLDTRANSFORM
{
    EMR     emr;
    XFORM   xform;
    DWORD   iMode;
} EMRMODIFYWORLDTRANSFORM, *PEMRMODIFYWORLDTRANSFORM;

typedef struct tagEMRSETPIXELV
{
    EMR     emr;
    POINTL  ptlPixel;
    COLORREF crColor;
} EMRSETPIXELV, *PEMRSETPIXELV;

typedef struct tagEMREXTFLOODFILL
{
    EMR     emr;
    POINTL  ptlStart;
    COLORREF crColor;
    DWORD   iMode;
} EMREXTFLOODFILL, *PEMREXTFLOODFILL;

typedef struct tagEMRELLIPSE
{
    EMR     emr;
    RECTL   rclBox;             
} EMRELLIPSE,  *PEMRELLIPSE,
  EMRRECTANGLE, *PEMRRECTANGLE;


typedef struct tagEMRROUNDRECT
{
    EMR     emr;
    RECTL   rclBox;             
    SIZEL   szlCorner;
} EMRROUNDRECT, *PEMRROUNDRECT;

typedef struct tagEMRARC
{
    EMR     emr;
    RECTL   rclBox;             
    POINTL  ptlStart;
    POINTL  ptlEnd;
} EMRARC,   *PEMRARC,
  EMRARCTO, *PEMRARCTO,
  EMRCHORD, *PEMRCHORD,
  EMRPIE,   *PEMRPIE;

typedef struct tagEMRANGLEARC
{
    EMR     emr;
    POINTL  ptlCenter;
    DWORD   nRadius;
    FLOAT   eStartAngle;
    FLOAT   eSweepAngle;
} EMRANGLEARC, *PEMRANGLEARC;

typedef struct tagEMRPOLYLINE
{
    EMR     emr;
    RECTL   rclBounds;          
    DWORD   cptl;
    POINTL  aptl[1];
} EMRPOLYLINE,     *PEMRPOLYLINE,
  EMRPOLYBEZIER,   *PEMRPOLYBEZIER,
  EMRPOLYGON,      *PEMRPOLYGON,
  EMRPOLYBEZIERTO, *PEMRPOLYBEZIERTO,
  EMRPOLYLINETO,   *PEMRPOLYLINETO;

typedef struct tagEMRPOLYLINE16
{
    EMR     emr;
    RECTL   rclBounds;          
    DWORD   cpts;
    POINTS  apts[1];
} EMRPOLYLINE16,     *PEMRPOLYLINE16,
  EMRPOLYBEZIER16,   *PEMRPOLYBEZIER16,
  EMRPOLYGON16,      *PEMRPOLYGON16,
  EMRPOLYBEZIERTO16, *PEMRPOLYBEZIERTO16,
  EMRPOLYLINETO16,   *PEMRPOLYLINETO16;

typedef struct tagEMRPOLYDRAW
{
    EMR     emr;
    RECTL   rclBounds;          
    DWORD   cptl;               
    POINTL  aptl[1];            
    BYTE    abTypes[1];         
} EMRPOLYDRAW, *PEMRPOLYDRAW;

typedef struct tagEMRPOLYDRAW16
{
    EMR     emr;
    RECTL   rclBounds;          
    DWORD   cpts;               
    POINTS  apts[1];            
    BYTE    abTypes[1];         
} EMRPOLYDRAW16, *PEMRPOLYDRAW16;

typedef struct tagEMRPOLYPOLYLINE
{
    EMR     emr;
    RECTL   rclBounds;          
    DWORD   nPolys;             
    DWORD   cptl;               
    DWORD   aPolyCounts[1];     
    POINTL  aptl[1];            
} EMRPOLYPOLYLINE, *PEMRPOLYPOLYLINE,
  EMRPOLYPOLYGON,  *PEMRPOLYPOLYGON;

typedef struct tagEMRPOLYPOLYLINE16
{
    EMR     emr;
    RECTL   rclBounds;          
    DWORD   nPolys;             
    DWORD   cpts;               
    DWORD   aPolyCounts[1];     
    POINTS  apts[1];            
} EMRPOLYPOLYLINE16, *PEMRPOLYPOLYLINE16,
  EMRPOLYPOLYGON16,  *PEMRPOLYPOLYGON16;

typedef struct tagEMRINVERTRGN
{
    EMR     emr;
    RECTL   rclBounds;          
    DWORD   cbRgnData;          
    BYTE    RgnData[1];
} EMRINVERTRGN, *PEMRINVERTRGN,
  EMRPAINTRGN,  *PEMRPAINTRGN;

typedef struct tagEMRFILLRGN
{
    EMR     emr;
    RECTL   rclBounds;          
    DWORD   cbRgnData;          
    DWORD   ihBrush;            
    BYTE    RgnData[1];
} EMRFILLRGN, *PEMRFILLRGN;

typedef struct tagEMRFRAMERGN
{
    EMR     emr;
    RECTL   rclBounds;          
    DWORD   cbRgnData;          
    DWORD   ihBrush;            
    SIZEL   szlStroke;
    BYTE    RgnData[1];
} EMRFRAMERGN, *PEMRFRAMERGN;

typedef struct tagEMREXTSELECTCLIPRGN
{
    EMR     emr;
    DWORD   cbRgnData;          
    DWORD   iMode;
    BYTE    RgnData[1];
} EMREXTSELECTCLIPRGN, *PEMREXTSELECTCLIPRGN;

typedef struct tagEMREXTTEXTOUTA
{
    EMR     emr;
    RECTL   rclBounds;          
    DWORD   iGraphicsMode;      
    FLOAT   exScale;            
    FLOAT   eyScale;            
    EMRTEXT emrtext;            
                                
} EMREXTTEXTOUTA, *PEMREXTTEXTOUTA,
  EMREXTTEXTOUTW, *PEMREXTTEXTOUTW;

typedef struct tagEMRPOLYTEXTOUTA
{
    EMR     emr;
    RECTL   rclBounds;          
    DWORD   iGraphicsMode;      
    FLOAT   exScale;            
    FLOAT   eyScale;            
    LONG    cStrings;
    EMRTEXT aemrtext[1];        
                                
} EMRPOLYTEXTOUTA, *PEMRPOLYTEXTOUTA,
  EMRPOLYTEXTOUTW, *PEMRPOLYTEXTOUTW;

typedef struct tagEMRBITBLT
{
    EMR     emr;
    RECTL   rclBounds;          
    LONG    xDest;
    LONG    yDest;
    LONG    cxDest;
    LONG    cyDest;
    DWORD   dwRop;
    LONG    xSrc;
    LONG    ySrc;
    XFORM   xformSrc;           
    COLORREF crBkColorSrc;      
    DWORD   iUsageSrc;          
                                
    DWORD   offBmiSrc;          
    DWORD   cbBmiSrc;           
    DWORD   offBitsSrc;         
    DWORD   cbBitsSrc;          
} EMRBITBLT, *PEMRBITBLT;

typedef struct tagEMRSTRETCHBLT
{
    EMR     emr;
    RECTL   rclBounds;          
    LONG    xDest;
    LONG    yDest;
    LONG    cxDest;
    LONG    cyDest;
    DWORD   dwRop;
    LONG    xSrc;
    LONG    ySrc;
    XFORM   xformSrc;           
    COLORREF crBkColorSrc;      
    DWORD   iUsageSrc;          
                                
    DWORD   offBmiSrc;          
    DWORD   cbBmiSrc;           
    DWORD   offBitsSrc;         
    DWORD   cbBitsSrc;          
    LONG    cxSrc;
    LONG    cySrc;
} EMRSTRETCHBLT, *PEMRSTRETCHBLT;

typedef struct tagEMRMASKBLT
{
    EMR     emr;
    RECTL   rclBounds;          
    LONG    xDest;
    LONG    yDest;
    LONG    cxDest;
    LONG    cyDest;
    DWORD   dwRop;
    LONG    xSrc;
    LONG    ySrc;
    XFORM   xformSrc;           
    COLORREF crBkColorSrc;      
    DWORD   iUsageSrc;          
                                
    DWORD   offBmiSrc;          
    DWORD   cbBmiSrc;           
    DWORD   offBitsSrc;         
    DWORD   cbBitsSrc;          
    LONG    xMask;
    LONG    yMask;
    DWORD   iUsageMask;         
    DWORD   offBmiMask;         
    DWORD   cbBmiMask;          
    DWORD   offBitsMask;        
    DWORD   cbBitsMask;         
} EMRMASKBLT, *PEMRMASKBLT;

typedef struct tagEMRPLGBLT
{
    EMR     emr;
    RECTL   rclBounds;          
    POINTL  aptlDest[3];
    LONG    xSrc;
    LONG    ySrc;
    LONG    cxSrc;
    LONG    cySrc;
    XFORM   xformSrc;           
    COLORREF crBkColorSrc;      
    DWORD   iUsageSrc;          
                                
    DWORD   offBmiSrc;          
    DWORD   cbBmiSrc;           
    DWORD   offBitsSrc;         
    DWORD   cbBitsSrc;          
    LONG    xMask;
    LONG    yMask;
    DWORD   iUsageMask;         
    DWORD   offBmiMask;         
    DWORD   cbBmiMask;          
    DWORD   offBitsMask;        
    DWORD   cbBitsMask;         
} EMRPLGBLT, *PEMRPLGBLT;

typedef struct tagEMRSETDIBITSTODEVICE
{
    EMR     emr;
    RECTL   rclBounds;          
    LONG    xDest;
    LONG    yDest;
    LONG    xSrc;
    LONG    ySrc;
    LONG    cxSrc;
    LONG    cySrc;
    DWORD   offBmiSrc;          
    DWORD   cbBmiSrc;           
    DWORD   offBitsSrc;         
    DWORD   cbBitsSrc;          
    DWORD   iUsageSrc;          
    DWORD   iStartScan;
    DWORD   cScans;
} EMRSETDIBITSTODEVICE, *PEMRSETDIBITSTODEVICE;

typedef struct tagEMRSTRETCHDIBITS
{
    EMR     emr;
    RECTL   rclBounds;          
    LONG    xDest;
    LONG    yDest;
    LONG    xSrc;
    LONG    ySrc;
    LONG    cxSrc;
    LONG    cySrc;
    DWORD   offBmiSrc;          
    DWORD   cbBmiSrc;           
    DWORD   offBitsSrc;         
    DWORD   cbBitsSrc;          
    DWORD   iUsageSrc;          
    DWORD   dwRop;
    LONG    cxDest;
    LONG    cyDest;
} EMRSTRETCHDIBITS, *PEMRSTRETCHDIBITS;

typedef struct tagEMREXTCREATEFONTINDIRECTW
{
    EMR     emr;
    DWORD   ihFont;             
    EXTLOGFONTW elfw;
} EMREXTCREATEFONTINDIRECTW, *PEMREXTCREATEFONTINDIRECTW;

typedef struct tagEMRCREATEPALETTE
{
    EMR     emr;
    DWORD   ihPal;              
    LOGPALETTE lgpl;            
                                
} EMRCREATEPALETTE, *PEMRCREATEPALETTE;

typedef struct tagEMRCREATEPEN
{
    EMR     emr;
    DWORD   ihPen;              
    LOGPEN  lopn;
} EMRCREATEPEN, *PEMRCREATEPEN;

typedef struct tagEMREXTCREATEPEN
{
    EMR     emr;
    DWORD   ihPen;              
    DWORD   offBmi;             
    DWORD   cbBmi;              
                                
                                
    DWORD   offBits;            
    DWORD   cbBits;             
    EXTLOGPEN32 elp;            
} EMREXTCREATEPEN, *PEMREXTCREATEPEN;

typedef struct tagEMRCREATEBRUSHINDIRECT
{
    EMR        emr;
    DWORD      ihBrush;          
    LOGBRUSH32 lb;               
                                 
} EMRCREATEBRUSHINDIRECT, *PEMRCREATEBRUSHINDIRECT;

typedef struct tagEMRCREATEMONOBRUSH
{
    EMR     emr;
    DWORD   ihBrush;            
    DWORD   iUsage;             
    DWORD   offBmi;             
    DWORD   cbBmi;              
    DWORD   offBits;            
    DWORD   cbBits;             
} EMRCREATEMONOBRUSH, *PEMRCREATEMONOBRUSH;

typedef struct tagEMRCREATEDIBPATTERNBRUSHPT
{
    EMR     emr;
    DWORD   ihBrush;            
    DWORD   iUsage;             
    DWORD   offBmi;             
    DWORD   cbBmi;              
                                
                                
    DWORD   offBits;            
    DWORD   cbBits;             
} EMRCREATEDIBPATTERNBRUSHPT, *PEMRCREATEDIBPATTERNBRUSHPT;

typedef struct tagEMRFORMAT
{
    DWORD   dSignature;         
    DWORD   nVersion;           
    DWORD   cbData;             
    DWORD   offData;            
                                
} EMRFORMAT, *PEMRFORMAT;



typedef struct tagEMRGLSRECORD
{
    EMR     emr;
    DWORD   cbData;             
    BYTE    Data[1];
} EMRGLSRECORD, *PEMRGLSRECORD;

typedef struct tagEMRGLSBOUNDEDRECORD
{
    EMR     emr;
    RECTL   rclBounds;          
    DWORD   cbData;             
    BYTE    Data[1];
} EMRGLSBOUNDEDRECORD, *PEMRGLSBOUNDEDRECORD;

typedef struct tagEMRPIXELFORMAT
{
    EMR     emr;
    PIXELFORMATDESCRIPTOR pfd;
} EMRPIXELFORMAT, *PEMRPIXELFORMAT;

typedef struct tagEMRCREATECOLORSPACE
{
    EMR             emr;
    DWORD           ihCS;       
    LOGCOLORSPACEA  lcs;        
} EMRCREATECOLORSPACE, *PEMRCREATECOLORSPACE;

typedef struct tagEMRSETCOLORSPACE
{
    EMR     emr;
    DWORD   ihCS;               
} EMRSETCOLORSPACE,    *PEMRSETCOLORSPACE,
  EMRSELECTCOLORSPACE, *PEMRSELECTCOLORSPACE,
  EMRDELETECOLORSPACE, *PEMRDELETECOLORSPACE;

#line 5484 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"



typedef struct tagEMREXTESCAPE
{
    EMR     emr;
    INT     iEscape;            
    INT     cbEscData;          
    BYTE    EscData[1];         
} EMREXTESCAPE,  *PEMREXTESCAPE,
  EMRDRAWESCAPE, *PEMRDRAWESCAPE;

typedef struct tagEMRNAMEDESCAPE
{
    EMR     emr;
    INT     iEscape;            
    INT     cbDriver;           
    INT     cbEscData;          
    BYTE    EscData[1];         
} EMRNAMEDESCAPE, *PEMRNAMEDESCAPE;



typedef struct tagEMRSETICMPROFILE
{
    EMR     emr;
    DWORD   dwFlags;            
    DWORD   cbName;             
    DWORD   cbData;             
    BYTE    Data[1];            
} EMRSETICMPROFILE,  *PEMRSETICMPROFILE,
  EMRSETICMPROFILEA, *PEMRSETICMPROFILEA,
  EMRSETICMPROFILEW, *PEMRSETICMPROFILEW;



typedef struct tagEMRCREATECOLORSPACEW
{
    EMR             emr;
    DWORD           ihCS;       
    LOGCOLORSPACEW  lcs;        
    DWORD           dwFlags;    
    DWORD           cbData;     
    BYTE            Data[1];    
} EMRCREATECOLORSPACEW, *PEMRCREATECOLORSPACEW;



typedef struct tagCOLORMATCHTOTARGET
{
    EMR     emr;
    DWORD   dwAction;           
    DWORD   dwFlags;            
    DWORD   cbName;             
    DWORD   cbData;             
    BYTE    Data[1];            
} EMRCOLORMATCHTOTARGET, *PEMRCOLORMATCHTOTARGET;

typedef struct tagCOLORCORRECTPALETTE
{
    EMR     emr;
    DWORD   ihPalette;          
    DWORD   nFirstEntry;        
    DWORD   nPalEntries;        
    DWORD   nReserved;          
} EMRCOLORCORRECTPALETTE, *PEMRCOLORCORRECTPALETTE;

typedef struct tagEMRALPHABLEND
{
    EMR     emr;
    RECTL   rclBounds;          
    LONG    xDest;
    LONG    yDest;
    LONG    cxDest;
    LONG    cyDest;
    DWORD   dwRop;
    LONG    xSrc;
    LONG    ySrc;
    XFORM   xformSrc;           
    COLORREF crBkColorSrc;      
    DWORD   iUsageSrc;          
                                
    DWORD   offBmiSrc;          
    DWORD   cbBmiSrc;           
    DWORD   offBitsSrc;         
    DWORD   cbBitsSrc;          
    LONG    cxSrc;
    LONG    cySrc;
} EMRALPHABLEND, *PEMRALPHABLEND;

typedef struct tagEMRGRADIENTFILL
{
    EMR       emr;
    RECTL     rclBounds;          
    DWORD     nVer;
    DWORD     nTri;
    ULONG     ulMode;
    TRIVERTEX Ver[1];
}EMRGRADIENTFILL,*PEMRGRADIENTFILL;

typedef struct tagEMRTRANSPARENTBLT
{
    EMR     emr;
    RECTL   rclBounds;          
    LONG    xDest;
    LONG    yDest;
    LONG    cxDest;
    LONG    cyDest;
    DWORD   dwRop;
    LONG    xSrc;
    LONG    ySrc;
    XFORM   xformSrc;           
    COLORREF crBkColorSrc;      
    DWORD   iUsageSrc;          
                                
    DWORD   offBmiSrc;          
    DWORD   cbBmiSrc;           
    DWORD   offBitsSrc;         
    DWORD   cbBitsSrc;          
    LONG    cxSrc;
    LONG    cySrc;
} EMRTRANSPARENTBLT, *PEMRTRANSPARENTBLT;


#line 5609 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"










#line 5620 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"




__declspec(dllimport) BOOL  __stdcall wglCopyContext(HGLRC, HGLRC, UINT);
__declspec(dllimport) HGLRC __stdcall wglCreateContext(HDC);
__declspec(dllimport) HGLRC __stdcall wglCreateLayerContext(HDC, int);
__declspec(dllimport) BOOL  __stdcall wglDeleteContext(HGLRC);
__declspec(dllimport) HGLRC __stdcall wglGetCurrentContext(void);
__declspec(dllimport) HDC   __stdcall wglGetCurrentDC(void);
__declspec(dllimport) PROC  __stdcall wglGetProcAddress(LPCSTR);
__declspec(dllimport) BOOL  __stdcall wglMakeCurrent(HDC, HGLRC);
__declspec(dllimport) BOOL  __stdcall wglShareLists(HGLRC, HGLRC);
__declspec(dllimport) BOOL  __stdcall wglUseFontBitmapsA(HDC, DWORD, DWORD, DWORD);
__declspec(dllimport) BOOL  __stdcall wglUseFontBitmapsW(HDC, DWORD, DWORD, DWORD);




#line 5640 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"
__declspec(dllimport) BOOL  __stdcall SwapBuffers(HDC);

typedef struct _POINTFLOAT {
    FLOAT   x;
    FLOAT   y;
} POINTFLOAT, *PPOINTFLOAT;

typedef struct _GLYPHMETRICSFLOAT {
    FLOAT       gmfBlackBoxX;
    FLOAT       gmfBlackBoxY;
    POINTFLOAT  gmfptGlyphOrigin;
    FLOAT       gmfCellIncX;
    FLOAT       gmfCellIncY;
} GLYPHMETRICSFLOAT, *PGLYPHMETRICSFLOAT,  *LPGLYPHMETRICSFLOAT;



__declspec(dllimport) BOOL  __stdcall wglUseFontOutlinesA(HDC, DWORD, DWORD, DWORD, FLOAT,
                                           FLOAT, int, LPGLYPHMETRICSFLOAT);
__declspec(dllimport) BOOL  __stdcall wglUseFontOutlinesW(HDC, DWORD, DWORD, DWORD, FLOAT,
                                           FLOAT, int, LPGLYPHMETRICSFLOAT);




#line 5666 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"


typedef struct tagLAYERPLANEDESCRIPTOR { 
    WORD  nSize;
    WORD  nVersion;
    DWORD dwFlags;
    BYTE  iPixelType;
    BYTE  cColorBits;
    BYTE  cRedBits;
    BYTE  cRedShift;
    BYTE  cGreenBits;
    BYTE  cGreenShift;
    BYTE  cBlueBits;
    BYTE  cBlueShift;
    BYTE  cAlphaBits;
    BYTE  cAlphaShift;
    BYTE  cAccumBits;
    BYTE  cAccumRedBits;
    BYTE  cAccumGreenBits;
    BYTE  cAccumBlueBits;
    BYTE  cAccumAlphaBits;
    BYTE  cDepthBits;
    BYTE  cStencilBits;
    BYTE  cAuxBuffers;
    BYTE  iLayerPlane;
    BYTE  bReserved;
    COLORREF crTransparent;
} LAYERPLANEDESCRIPTOR, *PLAYERPLANEDESCRIPTOR,  *LPLAYERPLANEDESCRIPTOR;

















































__declspec(dllimport) BOOL  __stdcall wglDescribeLayerPlane(HDC, int, int, UINT,
                                             LPLAYERPLANEDESCRIPTOR);
__declspec(dllimport) int   __stdcall wglSetLayerPaletteEntries(HDC, int, int, int,
                                                 const COLORREF *);
__declspec(dllimport) int   __stdcall wglGetLayerPaletteEntries(HDC, int, int, int,
                                                 COLORREF *);
__declspec(dllimport) BOOL  __stdcall wglRealizeLayerPalette(HDC, int, BOOL);
__declspec(dllimport) BOOL  __stdcall wglSwapLayerBuffers(HDC, UINT);



typedef struct _WGLSWAP
{
    HDC hdc;
    UINT uiFlags;
} WGLSWAP, *PWGLSWAP,  *LPWGLSWAP;



__declspec(dllimport) DWORD __stdcall wglSwapMultipleBuffers(UINT, const WGLSWAP *);

#line 5765 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"

#line 5767 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"


}
#line 5771 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"



#pragma warning(pop)
#line 5776 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"

#line 5778 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wingdi.h"



#line 158 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windows.h"
#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"















#pragma once











#line 29 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"






extern "C" {
#line 37 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"









typedef HANDLE HDWP;
typedef void MENUTEMPLATEA;
typedef void MENUTEMPLATEW;



typedef MENUTEMPLATEA MENUTEMPLATE;
#line 54 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
typedef PVOID LPMENUTEMPLATEA;
typedef PVOID LPMENUTEMPLATEW;



typedef LPMENUTEMPLATEA LPMENUTEMPLATE;
#line 61 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

typedef LRESULT (__stdcall* WNDPROC)(HWND, UINT, WPARAM, LPARAM);



typedef INT_PTR (__stdcall* DLGPROC)(HWND, UINT, WPARAM, LPARAM);
typedef void (__stdcall* TIMERPROC)(HWND, UINT, UINT_PTR, DWORD);
typedef BOOL (__stdcall* GRAYSTRINGPROC)(HDC, LPARAM, int);
typedef BOOL (__stdcall* WNDENUMPROC)(HWND, LPARAM);
typedef LRESULT (__stdcall* HOOKPROC)(int code, WPARAM wParam, LPARAM lParam);
typedef void (__stdcall* SENDASYNCPROC)(HWND, UINT, ULONG_PTR, LRESULT);

typedef BOOL (__stdcall* PROPENUMPROCA)(HWND, LPCSTR, HANDLE);
typedef BOOL (__stdcall* PROPENUMPROCW)(HWND, LPCWSTR, HANDLE);

typedef BOOL (__stdcall* PROPENUMPROCEXA)(HWND, LPSTR, HANDLE, ULONG_PTR);
typedef BOOL (__stdcall* PROPENUMPROCEXW)(HWND, LPWSTR, HANDLE, ULONG_PTR);

typedef int (__stdcall* EDITWORDBREAKPROCA)(LPSTR lpch, int ichCurrent, int cch, int code);
typedef int (__stdcall* EDITWORDBREAKPROCW)(LPWSTR lpch, int ichCurrent, int cch, int code);


typedef BOOL (__stdcall* DRAWSTATEPROC)(HDC hdc, LPARAM lData, WPARAM wData, int cx, int cy);
#line 85 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

























#line 111 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"






typedef PROPENUMPROCA        PROPENUMPROC;
typedef PROPENUMPROCEXA      PROPENUMPROCEX;
typedef EDITWORDBREAKPROCA   EDITWORDBREAKPROC;
#line 121 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



typedef BOOL (__stdcall* NAMEENUMPROCA)(LPSTR, LPARAM);
typedef BOOL (__stdcall* NAMEENUMPROCW)(LPWSTR, LPARAM);

typedef NAMEENUMPROCA   WINSTAENUMPROCA;
typedef NAMEENUMPROCA   DESKTOPENUMPROCA;
typedef NAMEENUMPROCW   WINSTAENUMPROCW;
typedef NAMEENUMPROCW   DESKTOPENUMPROCW;












#line 144 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"







typedef WINSTAENUMPROCA     WINSTAENUMPROC;
typedef DESKTOPENUMPROCA    DESKTOPENUMPROC;

#line 155 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"








#line 164 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"




























#line 193 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"















#line 209 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


#line 212 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


#pragma warning(push)
#pragma warning(disable:4995)
#line 217 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
int
__stdcall
wvsprintfA(
     LPSTR,
      LPCSTR,
     va_list arglist);
__declspec(dllimport)
int
__stdcall
wvsprintfW(
     LPWSTR,
      LPCWSTR,
     va_list arglist);




#line 237 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
int
__cdecl
wsprintfA(
     LPSTR,
      LPCSTR,
    ...);
__declspec(dllimport)
int
__cdecl
wsprintfW(
     LPWSTR,
      LPCWSTR,
    ...);




#line 257 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


#pragma warning(pop)
#line 261 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"




































#line 298 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"










































#line 341 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"















#line 357 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


























#line 384 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"








































































































































































#line 553 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"









































#line 595 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"






#line 602 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"





































#line 640 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


















#line 659 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"





#line 665 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"




#line 670 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"






#line 677 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


#line 680 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
































typedef struct tagCBT_CREATEWNDA
{
    struct tagCREATESTRUCTA *lpcs;
    HWND           hwndInsertAfter;
} CBT_CREATEWNDA, *LPCBT_CREATEWNDA;



typedef struct tagCBT_CREATEWNDW
{
    struct tagCREATESTRUCTW *lpcs;
    HWND           hwndInsertAfter;
} CBT_CREATEWNDW, *LPCBT_CREATEWNDW;




typedef CBT_CREATEWNDA CBT_CREATEWND;
typedef LPCBT_CREATEWNDA LPCBT_CREATEWND;
#line 732 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"




typedef struct tagCBTACTIVATESTRUCT
{
    BOOL    fMouse;
    HWND    hWndActive;
} CBTACTIVATESTRUCT, *LPCBTACTIVATESTRUCT;





typedef struct tagWTSSESSION_NOTIFICATION
{
    DWORD cbSize;
    DWORD dwSessionId;

} WTSSESSION_NOTIFICATION, *PWTSSESSION_NOTIFICATION;















#line 768 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



























#line 796 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



#line 800 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"




#line 805 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"





























































#line 867 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



#line 871 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"











#line 883 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

typedef struct
{
    HWND    hwnd;
    RECT    rc;
} SHELLHOOKINFO, *LPSHELLHOOKINFO;




typedef struct tagEVENTMSG {
    UINT    message;
    UINT    paramL;
    UINT    paramH;
    DWORD    time;
    HWND     hwnd;
} EVENTMSG, *PEVENTMSGMSG,  *NPEVENTMSGMSG,  *LPEVENTMSGMSG;

typedef struct tagEVENTMSG *PEVENTMSG,  *NPEVENTMSG,  *LPEVENTMSG;




typedef struct tagCWPSTRUCT {
    LPARAM  lParam;
    WPARAM  wParam;
    UINT    message;
    HWND    hwnd;
} CWPSTRUCT, *PCWPSTRUCT,  *NPCWPSTRUCT,  *LPCWPSTRUCT;





typedef struct tagCWPRETSTRUCT {
    LRESULT lResult;
    LPARAM  lParam;
    WPARAM  wParam;
    UINT    message;
    HWND    hwnd;
} CWPRETSTRUCT, *PCWPRETSTRUCT,  *NPCWPRETSTRUCT,  *LPCWPRETSTRUCT;

#line 926 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

















typedef struct tagKBDLLHOOKSTRUCT {
    DWORD   vkCode;
    DWORD   scanCode;
    DWORD   flags;
    DWORD   time;
    ULONG_PTR dwExtraInfo;
} KBDLLHOOKSTRUCT,  *LPKBDLLHOOKSTRUCT, *PKBDLLHOOKSTRUCT;




typedef struct tagMSLLHOOKSTRUCT {
    POINT   pt;
    DWORD   mouseData;
    DWORD   flags;
    DWORD   time;
    ULONG_PTR dwExtraInfo;
} MSLLHOOKSTRUCT,  *LPMSLLHOOKSTRUCT, *PMSLLHOOKSTRUCT;

#line 963 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"




typedef struct tagDEBUGHOOKINFO
{
    DWORD   idThread;
    DWORD   idThreadInstaller;
    LPARAM  lParam;
    WPARAM  wParam;
    int     code;
} DEBUGHOOKINFO, *PDEBUGHOOKINFO,  *NPDEBUGHOOKINFO, * LPDEBUGHOOKINFO;




typedef struct tagMOUSEHOOKSTRUCT {
    POINT   pt;
    HWND    hwnd;
    UINT    wHitTestCode;
    ULONG_PTR dwExtraInfo;
} MOUSEHOOKSTRUCT,  *LPMOUSEHOOKSTRUCT, *PMOUSEHOOKSTRUCT;



typedef struct tagMOUSEHOOKSTRUCTEX : public tagMOUSEHOOKSTRUCT
{
    DWORD   mouseData;
} MOUSEHOOKSTRUCTEX, *LPMOUSEHOOKSTRUCTEX, *PMOUSEHOOKSTRUCTEX;






#line 999 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
#line 1000 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"





typedef struct tagHARDWAREHOOKSTRUCT {
    HWND    hwnd;
    UINT    message;
    WPARAM  wParam;
    LPARAM  lParam;
} HARDWAREHOOKSTRUCT,  *LPHARDWAREHOOKSTRUCT, *PHARDWAREHOOKSTRUCT;
#line 1012 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
#line 1013 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"














#line 1028 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"




#line 1033 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"









#line 1043 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"






__declspec(dllimport)
HKL
__stdcall
LoadKeyboardLayoutA(
     LPCSTR pwszKLID,
     UINT Flags);
__declspec(dllimport)
HKL
__stdcall
LoadKeyboardLayoutW(
     LPCWSTR pwszKLID,
     UINT Flags);




#line 1066 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



__declspec(dllimport)
HKL
__stdcall
ActivateKeyboardLayout(
     HKL hkl,
     UINT Flags);







#line 1083 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


__declspec(dllimport)
int
__stdcall
ToUnicodeEx(
     UINT wVirtKey,
     UINT wScanCode,
     const BYTE *lpKeyState,
     LPWSTR pwszBuff,
     int cchBuff,
     UINT wFlags,
     HKL dwhkl);
#line 1097 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
UnloadKeyboardLayout(
     HKL hkl);

__declspec(dllimport)
BOOL
__stdcall
GetKeyboardLayoutNameA(
     LPSTR pwszKLID);
__declspec(dllimport)
BOOL
__stdcall
GetKeyboardLayoutNameW(
     LPWSTR pwszKLID);




#line 1119 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


__declspec(dllimport)
int
__stdcall
GetKeyboardLayoutList(
     int nBuff,
     HKL  *lpList);

__declspec(dllimport)
HKL
__stdcall
GetKeyboardLayout(
     DWORD idThread);

#line 1135 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"




typedef struct tagMOUSEMOVEPOINT {
    int   x;
    int   y;
    DWORD time;
    ULONG_PTR dwExtraInfo;
} MOUSEMOVEPOINT, *PMOUSEMOVEPOINT, * LPMOUSEMOVEPOINT;







__declspec(dllimport)
int
__stdcall
GetMouseMovePointsEx(
     UINT cbSize,
     LPMOUSEMOVEPOINT lppt,
     LPMOUSEMOVEPOINT lpptBuf,
     int nBufPoints,
     DWORD resolution);

#line 1163 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"























__declspec(dllimport)
HDESK
__stdcall
CreateDesktopA(
     LPCSTR lpszDesktop,
     LPCSTR lpszDevice,
     DEVMODEA* pDevmode,
     DWORD dwFlags,
     ACCESS_MASK dwDesiredAccess,
     LPSECURITY_ATTRIBUTES lpsa);
__declspec(dllimport)
HDESK
__stdcall
CreateDesktopW(
     LPCWSTR lpszDesktop,
     LPCWSTR lpszDevice,
     DEVMODEW* pDevmode,
     DWORD dwFlags,
     ACCESS_MASK dwDesiredAccess,
     LPSECURITY_ATTRIBUTES lpsa);




#line 1211 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
HDESK
__stdcall
CreateDesktopExA(
     LPCSTR lpszDesktop,
     LPCSTR lpszDevice,
     DEVMODEA* pDevmode,
     DWORD dwFlags,
     ACCESS_MASK dwDesiredAccess,
     LPSECURITY_ATTRIBUTES lpsa,
     ULONG ulHeapSize,
     PVOID pvoid);
__declspec(dllimport)
HDESK
__stdcall
CreateDesktopExW(
     LPCWSTR lpszDesktop,
     LPCWSTR lpszDevice,
     DEVMODEW* pDevmode,
     DWORD dwFlags,
     ACCESS_MASK dwDesiredAccess,
     LPSECURITY_ATTRIBUTES lpsa,
     ULONG ulHeapSize,
     PVOID pvoid);




#line 1241 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

#line 1243 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
#line 1244 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
HDESK
__stdcall
OpenDesktopA(
     LPCSTR lpszDesktop,
     DWORD dwFlags,
     BOOL fInherit,
     ACCESS_MASK dwDesiredAccess);
__declspec(dllimport)
HDESK
__stdcall
OpenDesktopW(
     LPCWSTR lpszDesktop,
     DWORD dwFlags,
     BOOL fInherit,
     ACCESS_MASK dwDesiredAccess);




#line 1266 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
HDESK
__stdcall
OpenInputDesktop(
     DWORD dwFlags,
     BOOL fInherit,
     ACCESS_MASK dwDesiredAccess);


__declspec(dllimport)
BOOL
__stdcall
EnumDesktopsA(
     HWINSTA hwinsta,
     DESKTOPENUMPROCA lpEnumFunc,
     LPARAM lParam);
__declspec(dllimport)
BOOL
__stdcall
EnumDesktopsW(
     HWINSTA hwinsta,
     DESKTOPENUMPROCW lpEnumFunc,
     LPARAM lParam);




#line 1295 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
EnumDesktopWindows(
     HDESK hDesktop,
     WNDENUMPROC lpfn,
     LPARAM lParam);

__declspec(dllimport)
BOOL
__stdcall
SwitchDesktop(
     HDESK hDesktop);


__declspec(dllimport)
BOOL
__stdcall
SetThreadDesktop(
      HDESK hDesktop);

__declspec(dllimport)
BOOL
__stdcall
CloseDesktop(
     HDESK hDesktop);

__declspec(dllimport)
HDESK
__stdcall
GetThreadDesktop(
     DWORD dwThreadId);

#line 1330 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"





























__declspec(dllimport)
HWINSTA
__stdcall
CreateWindowStationA(
     LPCSTR lpwinsta,
     DWORD dwFlags,
     ACCESS_MASK dwDesiredAccess,
     LPSECURITY_ATTRIBUTES lpsa);
__declspec(dllimport)
HWINSTA
__stdcall
CreateWindowStationW(
     LPCWSTR lpwinsta,
     DWORD dwFlags,
     ACCESS_MASK dwDesiredAccess,
     LPSECURITY_ATTRIBUTES lpsa);




#line 1380 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
HWINSTA
__stdcall
OpenWindowStationA(
     LPCSTR lpszWinSta,
     BOOL fInherit,
     ACCESS_MASK dwDesiredAccess);
__declspec(dllimport)
HWINSTA
__stdcall
OpenWindowStationW(
     LPCWSTR lpszWinSta,
     BOOL fInherit,
     ACCESS_MASK dwDesiredAccess);




#line 1400 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
EnumWindowStationsA(
     WINSTAENUMPROCA lpEnumFunc,
     LPARAM lParam);
__declspec(dllimport)
BOOL
__stdcall
EnumWindowStationsW(
     WINSTAENUMPROCW lpEnumFunc,
     LPARAM lParam);




#line 1418 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
CloseWindowStation(
     HWINSTA hWinSta);

__declspec(dllimport)
BOOL
__stdcall
SetProcessWindowStation(
     HWINSTA hWinSta);

__declspec(dllimport)
HWINSTA
__stdcall
GetProcessWindowStation(
    void);
#line 1437 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



__declspec(dllimport)
BOOL
__stdcall
SetUserObjectSecurity(
     HANDLE hObj,
     PSECURITY_INFORMATION pSIRequested,
     PSECURITY_DESCRIPTOR pSID);

__declspec(dllimport)
BOOL
__stdcall
GetUserObjectSecurity(
     HANDLE hObj,
     PSECURITY_INFORMATION pSIRequested,
     PSECURITY_DESCRIPTOR pSID,
     DWORD nLength,
     LPDWORD lpnLengthNeeded);








#line 1466 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

typedef struct tagUSEROBJECTFLAGS {
    BOOL fInherit;
    BOOL fReserved;
    DWORD dwFlags;
} USEROBJECTFLAGS, *PUSEROBJECTFLAGS;

__declspec(dllimport)
BOOL
__stdcall
GetUserObjectInformationA(
     HANDLE hObj,
     int nIndex,
     PVOID pvInfo,
     DWORD nLength,
     LPDWORD lpnLengthNeeded);
__declspec(dllimport)
BOOL
__stdcall
GetUserObjectInformationW(
     HANDLE hObj,
     int nIndex,
     PVOID pvInfo,
     DWORD nLength,
     LPDWORD lpnLengthNeeded);




#line 1496 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
SetUserObjectInformationA(
     HANDLE hObj,
     int nIndex,
     PVOID pvInfo,
     DWORD nLength);
__declspec(dllimport)
BOOL
__stdcall
SetUserObjectInformationW(
     HANDLE hObj,
     int nIndex,
     PVOID pvInfo,
     DWORD nLength);




#line 1518 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

#line 1520 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


typedef struct tagWNDCLASSEXA {
    UINT        cbSize;
    
    UINT        style;
    WNDPROC     lpfnWndProc;
    int         cbClsExtra;
    int         cbWndExtra;
    HINSTANCE   hInstance;
    HICON       hIcon;
    HCURSOR     hCursor;
    HBRUSH      hbrBackground;
    LPCSTR      lpszMenuName;
    LPCSTR      lpszClassName;
    
    HICON       hIconSm;
} WNDCLASSEXA, *PWNDCLASSEXA,  *NPWNDCLASSEXA,  *LPWNDCLASSEXA;
typedef struct tagWNDCLASSEXW {
    UINT        cbSize;
    
    UINT        style;
    WNDPROC     lpfnWndProc;
    int         cbClsExtra;
    int         cbWndExtra;
    HINSTANCE   hInstance;
    HICON       hIcon;
    HCURSOR     hCursor;
    HBRUSH      hbrBackground;
    LPCWSTR     lpszMenuName;
    LPCWSTR     lpszClassName;
    
    HICON       hIconSm;
} WNDCLASSEXW, *PWNDCLASSEXW,  *NPWNDCLASSEXW,  *LPWNDCLASSEXW;






typedef WNDCLASSEXA WNDCLASSEX;
typedef PWNDCLASSEXA PWNDCLASSEX;
typedef NPWNDCLASSEXA NPWNDCLASSEX;
typedef LPWNDCLASSEXA LPWNDCLASSEX;
#line 1565 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
#line 1566 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

typedef struct tagWNDCLASSA {
    UINT        style;
    WNDPROC     lpfnWndProc;
    int         cbClsExtra;
    int         cbWndExtra;
    HINSTANCE   hInstance;
    HICON       hIcon;
    HCURSOR     hCursor;
    HBRUSH      hbrBackground;
    LPCSTR      lpszMenuName;
    LPCSTR      lpszClassName;
} WNDCLASSA, *PWNDCLASSA,  *NPWNDCLASSA,  *LPWNDCLASSA;
typedef struct tagWNDCLASSW {
    UINT        style;
    WNDPROC     lpfnWndProc;
    int         cbClsExtra;
    int         cbWndExtra;
    HINSTANCE   hInstance;
    HICON       hIcon;
    HCURSOR     hCursor;
    HBRUSH      hbrBackground;
    LPCWSTR     lpszMenuName;
    LPCWSTR     lpszClassName;
} WNDCLASSW, *PWNDCLASSW,  *NPWNDCLASSW,  *LPWNDCLASSW;






typedef WNDCLASSA WNDCLASS;
typedef PWNDCLASSA PWNDCLASS;
typedef NPWNDCLASSA NPWNDCLASS;
typedef LPWNDCLASSA LPWNDCLASS;
#line 1602 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
IsHungAppWindow(
     HWND hwnd);



__declspec(dllimport)
void
__stdcall
DisableProcessWindowsGhosting(
    void);
#line 1617 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"







typedef struct tagMSG {
    HWND        hwnd;
    UINT        message;
    WPARAM      wParam;
    LPARAM      lParam;
    DWORD       time;
    POINT       pt;



} MSG, *PMSG,  *NPMSG,  *LPMSG;











#line 1647 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"













































#line 1693 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"





















#line 1715 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



































#line 1751 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"







#line 1759 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
















typedef struct tagMINMAXINFO {
    POINT ptReserved;
    POINT ptMaxSize;
    POINT ptMaxPosition;
    POINT ptMinTrackSize;
    POINT ptMaxTrackSize;
} MINMAXINFO, *PMINMAXINFO, *LPMINMAXINFO;



















#line 1802 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
#line 1803 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"






















typedef struct tagCOPYDATASTRUCT {
    ULONG_PTR dwData;
    DWORD cbData;
     PVOID lpData;
} COPYDATASTRUCT, *PCOPYDATASTRUCT;


typedef struct tagMDINEXTMENU
{
    HMENU   hmenuIn;
    HMENU   hmenuNext;
    HWND    hwndNext;
} MDINEXTMENU, * PMDINEXTMENU,  * LPMDINEXTMENU;
#line 1839 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"






















#line 1862 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"










#line 1873 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

















#line 1891 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"




#line 1896 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



#line 1900 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
















#line 1917 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"






#line 1924 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"












#line 1937 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"































#line 1969 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
#line 1970 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
#line 1971 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

#line 1973 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
#line 1974 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"























#line 1998 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"




#line 2003 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


#line 2006 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"









#line 2016 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"









#line 2026 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"










#line 2037 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"










#line 2048 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
































typedef struct {
    GUID PowerSetting;
    DWORD DataLength;
    UCHAR Data[1];
} POWERBROADCAST_SETTING, *PPOWERBROADCAST_SETTING;


#line 2088 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

#line 2090 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
#line 2091 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

#line 2093 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



#line 2097 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"





















#line 2119 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"









#line 2129 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


#line 2132 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



#line 2136 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"




#line 2141 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



#line 2145 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"






#line 2152 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
























#line 2177 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



#line 2181 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



#line 2185 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"




#line 2190 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"






#line 2197 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"




#line 2202 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"




#line 2207 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"








#line 2216 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"







#line 2224 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"




















#line 2245 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"




































#line 2282 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"










#line 2293 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


#line 2296 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

#line 2298 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
















#line 2315 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


__declspec(dllimport)
UINT
__stdcall
RegisterWindowMessageA(
     LPCSTR lpString);
__declspec(dllimport)
UINT
__stdcall
RegisterWindowMessageW(
     LPCWSTR lpString);




#line 2332 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"























typedef struct tagWINDOWPOS {
    HWND    hwnd;
    HWND    hwndInsertAfter;
    int     x;
    int     y;
    int     cx;
    int     cy;
    UINT    flags;
} WINDOWPOS, *LPWINDOWPOS, *PWINDOWPOS;




typedef struct tagNCCALCSIZE_PARAMS {
    RECT       rgrc[3];
    PWINDOWPOS lppos;
} NCCALCSIZE_PARAMS, *LPNCCALCSIZE_PARAMS;




























#line 2401 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

#line 2403 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"









#line 2413 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"





#line 2419 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


typedef struct tagTRACKMOUSEEVENT {
    DWORD cbSize;
    DWORD dwFlags;
    HWND  hwndTrack;
    DWORD dwHoverTime;
} TRACKMOUSEEVENT, *LPTRACKMOUSEEVENT;

__declspec(dllimport)
BOOL
__stdcall
TrackMouseEvent(
     LPTRACKMOUSEEVENT lpEventTrack);
#line 2434 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



#line 2438 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
#line 2439 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


#line 2442 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


































































#line 2509 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

















#line 2527 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"




#line 2532 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"





#line 2538 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



#line 2542 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


#line 2545 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"




















#line 2566 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



#line 2570 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"























































__declspec(dllimport)
BOOL
__stdcall
DrawEdge(
     HDC hdc,
     LPRECT qrc,
     UINT edge,
     UINT grfFlags);









#line 2643 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

































#line 2677 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"





__declspec(dllimport)
BOOL
__stdcall
DrawFrameControl(
     HDC,
     LPRECT,
     UINT,
     UINT);










#line 2701 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


#line 2704 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
DrawCaption(
     HWND hwnd,
     HDC hdc,
     const RECT * lprect,
     UINT flags);





__declspec(dllimport)
BOOL
__stdcall
DrawAnimatedRects(
     HWND hwnd,
     int idAni,
     const RECT *lprcFrom,
     const RECT *lprcTo);

#line 2728 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
























#line 2753 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


#line 2756 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"







#line 2764 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"




















#line 2785 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"










typedef struct tagACCEL {

    BYTE   fVirt;               
    WORD   key;
    WORD   cmd;




#line 2805 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
} ACCEL, *LPACCEL;

typedef struct tagPAINTSTRUCT {
    HDC         hdc;
    BOOL        fErase;
    RECT        rcPaint;
    BOOL        fRestore;
    BOOL        fIncUpdate;
    BYTE        rgbReserved[32];
} PAINTSTRUCT, *PPAINTSTRUCT, *NPPAINTSTRUCT, *LPPAINTSTRUCT;

typedef struct tagCREATESTRUCTA {
    LPVOID      lpCreateParams;
    HINSTANCE   hInstance;
    HMENU       hMenu;
    HWND        hwndParent;
    int         cy;
    int         cx;
    int         y;
    int         x;
    LONG        style;
    LPCSTR      lpszName;
    LPCSTR      lpszClass;
    DWORD       dwExStyle;
} CREATESTRUCTA, *LPCREATESTRUCTA;
typedef struct tagCREATESTRUCTW {
    LPVOID      lpCreateParams;
    HINSTANCE   hInstance;
    HMENU       hMenu;
    HWND        hwndParent;
    int         cy;
    int         cx;
    int         y;
    int         x;
    LONG        style;
    LPCWSTR     lpszName;
    LPCWSTR     lpszClass;
    DWORD       dwExStyle;
} CREATESTRUCTW, *LPCREATESTRUCTW;




typedef CREATESTRUCTA CREATESTRUCT;
typedef LPCREATESTRUCTA LPCREATESTRUCT;
#line 2851 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

typedef struct tagWINDOWPLACEMENT {
    UINT  length;
    UINT  flags;
    UINT  showCmd;
    POINT ptMinPosition;
    POINT ptMaxPosition;
    RECT  rcNormalPosition;



} WINDOWPLACEMENT;
typedef WINDOWPLACEMENT *PWINDOWPLACEMENT, *LPWINDOWPLACEMENT;





#line 2870 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


typedef struct tagNMHDR
{
    HWND      hwndFrom;
    UINT_PTR  idFrom;
    UINT      code;         
}   NMHDR;
typedef NMHDR  * LPNMHDR;

typedef struct tagSTYLESTRUCT
{
    DWORD   styleOld;
    DWORD   styleNew;
} STYLESTRUCT, * LPSTYLESTRUCT;
#line 2886 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"











#line 2898 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



















#line 2918 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"






#line 2925 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
#line 2926 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"




typedef struct tagMEASUREITEMSTRUCT {
    UINT       CtlType;
    UINT       CtlID;
    UINT       itemID;
    UINT       itemWidth;
    UINT       itemHeight;
    ULONG_PTR  itemData;
} MEASUREITEMSTRUCT,  *PMEASUREITEMSTRUCT,  *LPMEASUREITEMSTRUCT;




typedef struct tagDRAWITEMSTRUCT {
    UINT        CtlType;
    UINT        CtlID;
    UINT        itemID;
    UINT        itemAction;
    UINT        itemState;
    HWND        hwndItem;
    HDC         hDC;
    RECT        rcItem;
    ULONG_PTR   itemData;
} DRAWITEMSTRUCT,  *PDRAWITEMSTRUCT,  *LPDRAWITEMSTRUCT;




typedef struct tagDELETEITEMSTRUCT {
    UINT       CtlType;
    UINT       CtlID;
    UINT       itemID;
    HWND       hwndItem;
    ULONG_PTR  itemData;
} DELETEITEMSTRUCT,  *PDELETEITEMSTRUCT,  *LPDELETEITEMSTRUCT;




typedef struct tagCOMPAREITEMSTRUCT {
    UINT        CtlType;
    UINT        CtlID;
    HWND        hwndItem;
    UINT        itemID1;
    ULONG_PTR   itemData1;
    UINT        itemID2;
    ULONG_PTR   itemData2;
    DWORD       dwLocaleId;
} COMPAREITEMSTRUCT,  *PCOMPAREITEMSTRUCT,  *LPCOMPAREITEMSTRUCT;







__declspec(dllimport)
BOOL
__stdcall
GetMessageA(
     LPMSG lpMsg,
     HWND hWnd,
     UINT wMsgFilterMin,
     UINT wMsgFilterMax);
__declspec(dllimport)
BOOL
__stdcall
GetMessageW(
     LPMSG lpMsg,
     HWND hWnd,
     UINT wMsgFilterMin,
     UINT wMsgFilterMax);




#line 3006 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"























#line 3030 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


__declspec(dllimport)
BOOL
__stdcall
TranslateMessage(
     const MSG *lpMsg);

__declspec(dllimport)
LRESULT
__stdcall
DispatchMessageA(
     const MSG *lpMsg);
__declspec(dllimport)
LRESULT
__stdcall
DispatchMessageW(
     const MSG *lpMsg);




#line 3053 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

















#line 3071 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
SetMessageQueue(
     int cMessagesMax);

__declspec(dllimport)
BOOL
__stdcall
PeekMessageA(
     LPMSG lpMsg,
     HWND hWnd,
     UINT wMsgFilterMin,
     UINT wMsgFilterMax,
     UINT wRemoveMsg);
__declspec(dllimport)
BOOL
__stdcall
PeekMessageW(
     LPMSG lpMsg,
     HWND hWnd,
     UINT wMsgFilterMin,
     UINT wMsgFilterMax,
     UINT wRemoveMsg);




#line 3101 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"













#line 3115 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


#line 3118 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
RegisterHotKey(
     HWND hWnd,
     int id,
     UINT fsModifiers,
     UINT vk);

__declspec(dllimport)
BOOL
__stdcall
UnregisterHotKey(
     HWND hWnd,
     int id);







#line 3142 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"





















#line 3164 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"








#line 3173 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



#line 3177 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"




 
#line 3184 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
__declspec(dllimport)
BOOL
__stdcall
ExitWindowsEx(
     UINT uFlags,
     DWORD dwReason);

__declspec(dllimport)
BOOL
__stdcall
SwapMouseButton(
     BOOL fSwap);

__declspec(dllimport)
DWORD
__stdcall
GetMessagePos(
    void);

__declspec(dllimport)
LONG
__stdcall
GetMessageTime(
    void);

__declspec(dllimport)
LPARAM
__stdcall
GetMessageExtraInfo(
    void);


__declspec(dllimport)
BOOL
__stdcall
IsWow64Message(
    void);
#line 3222 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


__declspec(dllimport)
LPARAM
__stdcall
SetMessageExtraInfo(
     LPARAM lParam);
#line 3230 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
LRESULT
__stdcall
SendMessageA(
     HWND hWnd,
     UINT Msg,
     WPARAM wParam,
     LPARAM lParam);
__declspec(dllimport)
LRESULT
__stdcall
SendMessageW(
     HWND hWnd,
     UINT Msg,
     WPARAM wParam,
     LPARAM lParam);




#line 3252 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"























#line 3276 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



__declspec(dllimport)
LRESULT
__stdcall
SendMessageTimeoutA(
     HWND hWnd,
     UINT Msg,
     WPARAM wParam,
     LPARAM lParam,
     UINT fuFlags,
     UINT uTimeout,
     PDWORD_PTR lpdwResult);
__declspec(dllimport)
LRESULT
__stdcall
SendMessageTimeoutW(
     HWND hWnd,
     UINT Msg,
     WPARAM wParam,
     LPARAM lParam,
     UINT fuFlags,
     UINT uTimeout,
     PDWORD_PTR lpdwResult);




#line 3306 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
SendNotifyMessageA(
     HWND hWnd,
     UINT Msg,
     WPARAM wParam,
     LPARAM lParam);
__declspec(dllimport)
BOOL
__stdcall
SendNotifyMessageW(
     HWND hWnd,
     UINT Msg,
     WPARAM wParam,
     LPARAM lParam);




#line 3328 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
SendMessageCallbackA(
     HWND hWnd,
     UINT Msg,
     WPARAM wParam,
     LPARAM lParam,
     SENDASYNCPROC lpResultCallBack,
     ULONG_PTR dwData);
__declspec(dllimport)
BOOL
__stdcall
SendMessageCallbackW(
     HWND hWnd,
     UINT Msg,
     WPARAM wParam,
     LPARAM lParam,
     SENDASYNCPROC lpResultCallBack,
     ULONG_PTR dwData);




#line 3354 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


typedef struct {
    UINT  cbSize;
    HDESK hdesk;
    HWND  hwnd;
    LUID  luid;
} BSMINFO, *PBSMINFO;

__declspec(dllimport)
long
__stdcall
BroadcastSystemMessageExA(
     DWORD flags,
     LPDWORD lpInfo,
     UINT Msg,
     WPARAM wParam,
     LPARAM lParam,
     PBSMINFO pbsmInfo);
__declspec(dllimport)
long
__stdcall
BroadcastSystemMessageExW(
     DWORD flags,
     LPDWORD lpInfo,
     UINT Msg,
     WPARAM wParam,
     LPARAM lParam,
     PBSMINFO pbsmInfo);




#line 3388 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
#line 3389 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"




__declspec(dllimport)
long
__stdcall
BroadcastSystemMessageA(
     DWORD flags,
     LPDWORD lpInfo,
     UINT Msg,
     WPARAM wParam,
     LPARAM lParam);
__declspec(dllimport)
long
__stdcall
BroadcastSystemMessageW(
     DWORD flags,
     LPDWORD lpInfo,
     UINT Msg,
     WPARAM wParam,
     LPARAM lParam);




#line 3416 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"












#line 3429 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"




















#line 3450 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



#line 3454 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


#line 3457 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"




typedef  PVOID           HDEVNOTIFY;
typedef  HDEVNOTIFY     *PHDEVNOTIFY;





#line 3469 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
HDEVNOTIFY
__stdcall
RegisterDeviceNotificationA(
     HANDLE hRecipient,
     LPVOID NotificationFilter,
     DWORD Flags);
__declspec(dllimport)
HDEVNOTIFY
__stdcall
RegisterDeviceNotificationW(
     HANDLE hRecipient,
     LPVOID NotificationFilter,
     DWORD Flags);




#line 3489 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
UnregisterDeviceNotification(
     HDEVNOTIFY Handle
    );







typedef  PVOID           HPOWERNOTIFY;
typedef  HPOWERNOTIFY   *PHPOWERNOTIFY;

#line 3507 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
HPOWERNOTIFY
__stdcall
RegisterPowerSettingNotification(
     HANDLE hRecipient,
     LPCGUID PowerSettingGuid,
     DWORD Flags
    );

__declspec(dllimport)
BOOL
__stdcall
UnregisterPowerSettingNotification(
     HPOWERNOTIFY Handle
    );
#line 3524 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
#line 3525 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


__declspec(dllimport)
BOOL
__stdcall
PostMessageA(
     HWND hWnd,
     UINT Msg,
     WPARAM wParam,
     LPARAM lParam);
__declspec(dllimport)
BOOL
__stdcall
PostMessageW(
     HWND hWnd,
     UINT Msg,
     WPARAM wParam,
     LPARAM lParam);




#line 3548 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
PostThreadMessageA(
     DWORD idThread,
     UINT Msg,
     WPARAM wParam,
     LPARAM lParam);
__declspec(dllimport)
BOOL
__stdcall
PostThreadMessageW(
     DWORD idThread,
     UINT Msg,
     WPARAM wParam,
     LPARAM lParam);




#line 3570 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"









#line 3580 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"








#line 3589 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
AttachThreadInput(
     DWORD idAttach,
     DWORD idAttachTo,
     BOOL fAttach);


__declspec(dllimport)
BOOL
__stdcall
ReplyMessage(
     LRESULT lResult);

__declspec(dllimport)
BOOL
__stdcall
WaitMessage(
    void);


__declspec(dllimport)
DWORD
__stdcall
WaitForInputIdle(
     HANDLE hProcess,
     DWORD dwMilliseconds);

__declspec(dllimport)

LRESULT
__stdcall



#line 3627 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
DefWindowProcA(
     HWND hWnd,
     UINT Msg,
     WPARAM wParam,
     LPARAM lParam);
__declspec(dllimport)

LRESULT
__stdcall



#line 3640 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
DefWindowProcW(
     HWND hWnd,
     UINT Msg,
     WPARAM wParam,
     LPARAM lParam);




#line 3650 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
void
__stdcall
PostQuitMessage(
     int nExitCode);



__declspec(dllimport)
LRESULT
__stdcall
CallWindowProcA(
     WNDPROC lpPrevWndFunc,
     HWND hWnd,
     UINT Msg,
     WPARAM wParam,
     LPARAM lParam);
__declspec(dllimport)
LRESULT
__stdcall
CallWindowProcW(
     WNDPROC lpPrevWndFunc,
     HWND hWnd,
     UINT Msg,
     WPARAM wParam,
     LPARAM lParam);




#line 3682 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



























#line 3710 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
InSendMessage(
    void);


__declspec(dllimport)
DWORD
__stdcall
InSendMessageEx(
     LPVOID lpReserved);









#line 3733 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
UINT
__stdcall
GetDoubleClickTime(
    void);

__declspec(dllimport)
BOOL
__stdcall
SetDoubleClickTime(
     UINT);

__declspec(dllimport)
ATOM
__stdcall
RegisterClassA(
     const WNDCLASSA *lpWndClass);
__declspec(dllimport)
ATOM
__stdcall
RegisterClassW(
     const WNDCLASSW *lpWndClass);




#line 3761 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
UnregisterClassA(
     LPCSTR lpClassName,
     HINSTANCE hInstance);
__declspec(dllimport)
BOOL
__stdcall
UnregisterClassW(
     LPCWSTR lpClassName,
     HINSTANCE hInstance);




#line 3779 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
GetClassInfoA(
     HINSTANCE hInstance,
     LPCSTR lpClassName,
     LPWNDCLASSA lpWndClass);
__declspec(dllimport)
BOOL
__stdcall
GetClassInfoW(
     HINSTANCE hInstance,
     LPCWSTR lpClassName,
     LPWNDCLASSW lpWndClass);




#line 3799 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


__declspec(dllimport)
ATOM
__stdcall
RegisterClassExA(
     const WNDCLASSEXA *);
__declspec(dllimport)
ATOM
__stdcall
RegisterClassExW(
     const WNDCLASSEXW *);




#line 3816 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
GetClassInfoExA(
     HINSTANCE hInstance,
     LPCSTR lpszClass,
     LPWNDCLASSEXA lpwcx);
__declspec(dllimport)
BOOL
__stdcall
GetClassInfoExW(
     HINSTANCE hInstance,
     LPCWSTR lpszClass,
     LPWNDCLASSEXW lpwcx);




#line 3836 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

#line 3838 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"









typedef BOOLEAN (__stdcall * PREGISTERCLASSNAMEW)(LPCWSTR);
#line 3849 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
HWND
__stdcall
CreateWindowExA(
     DWORD dwExStyle,
     LPCSTR lpClassName,
     LPCSTR lpWindowName,
     DWORD dwStyle,
     int X,
     int Y,
     int nWidth,
     int nHeight,
     HWND hWndParent,
     HMENU hMenu,
     HINSTANCE hInstance,
     LPVOID lpParam);
__declspec(dllimport)
HWND
__stdcall
CreateWindowExW(
     DWORD dwExStyle,
     LPCWSTR lpClassName,
     LPCWSTR lpWindowName,
     DWORD dwStyle,
     int X,
     int Y,
     int nWidth,
     int nHeight,
     HWND hWndParent,
     HMENU hMenu,
     HINSTANCE hInstance,
     LPVOID lpParam);




#line 3887 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"













#line 3901 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
IsWindow(
     HWND hWnd);


__declspec(dllimport)
BOOL
__stdcall
IsMenu(
     HMENU hMenu);

__declspec(dllimport)
BOOL
__stdcall
IsChild(
     HWND hWndParent,
     HWND hWnd);

__declspec(dllimport)
BOOL
__stdcall
DestroyWindow(
     HWND hWnd);

__declspec(dllimport)
BOOL
__stdcall
ShowWindow(
     HWND hWnd,
     int nCmdShow);


__declspec(dllimport)
BOOL
__stdcall
AnimateWindow(
     HWND hWnd,
     DWORD dwTime,
     DWORD dwFlags);
#line 3944 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"




__declspec(dllimport)
BOOL
__stdcall
UpdateLayeredWindow(
     HWND hWnd,
     HDC hdcDst,
     POINT* pptDst,
     SIZE* psize,
     HDC hdcSrc,
     POINT* pptSrc,
     COLORREF crKey,
     BLENDFUNCTION* pblend,
     DWORD dwFlags);




typedef struct tagUPDATELAYEREDWINDOWINFO
{
     DWORD cbSize;
     HDC hdcDst;
     const POINT* pptDst;
     const SIZE* psize;
     HDC hdcSrc;
     const POINT* pptSrc;
     COLORREF crKey;
     const BLENDFUNCTION* pblend;
     DWORD dwFlags;
     const RECT* prcDirty;
} UPDATELAYEREDWINDOWINFO, *PUPDATELAYEREDWINDOWINFO;




#line 3983 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
__declspec(dllimport)
BOOL
__stdcall
UpdateLayeredWindowIndirect(
     HWND hWnd,
     const UPDATELAYEREDWINDOWINFO* pULWInfo);

#line 3991 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


__declspec(dllimport)
BOOL
__stdcall
GetLayeredWindowAttributes(
     HWND hwnd,
     COLORREF* pcrKey,
     BYTE* pbAlpha,
     DWORD* pdwFlags);




__declspec(dllimport)
BOOL
__stdcall
PrintWindow(
     HWND hwnd,
     HDC hdcBlt,
     UINT nFlags);

#line 4014 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
SetLayeredWindowAttributes(
     HWND hwnd,
     COLORREF crKey,
     BYTE bAlpha,
     DWORD dwFlags);











#line 4035 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



__declspec(dllimport)
BOOL
__stdcall
ShowWindowAsync(
      HWND hWnd,
      int nCmdShow);
#line 4045 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
FlashWindow(
      HWND hWnd,
      BOOL bInvert);


typedef struct {
    UINT  cbSize;
    HWND  hwnd;
    DWORD dwFlags;
    UINT  uCount;
    DWORD dwTimeout;
} FLASHWINFO, *PFLASHWINFO;

__declspec(dllimport)
BOOL
__stdcall
FlashWindowEx(
     PFLASHWINFO pfwi);








#line 4076 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
ShowOwnedPopups(
      HWND hWnd,
      BOOL fShow);

__declspec(dllimport)
BOOL
__stdcall
OpenIcon(
      HWND hWnd);

__declspec(dllimport)
BOOL
__stdcall
CloseWindow(
      HWND hWnd);

__declspec(dllimport)
BOOL
__stdcall
MoveWindow(
     HWND hWnd,
     int X,
     int Y,
     int nWidth,
     int nHeight,
     BOOL bRepaint);

__declspec(dllimport)
BOOL
__stdcall
SetWindowPos(
     HWND hWnd,
     HWND hWndInsertAfter,
     int X,
     int Y,
     int cx,
     int cy,
     UINT uFlags);

__declspec(dllimport)
BOOL
__stdcall
GetWindowPlacement(
     HWND hWnd,
     WINDOWPLACEMENT *lpwndpl);

__declspec(dllimport)
BOOL
__stdcall
SetWindowPlacement(
     HWND hWnd,
     const WINDOWPLACEMENT *lpwndpl);






__declspec(dllimport)
BOOL
__stdcall
GetWindowDisplayAffinity(
     HWND hWnd,
     DWORD* pdwAffinity);

__declspec(dllimport)
BOOL
__stdcall
SetWindowDisplayAffinity(
     HWND hWnd,
     DWORD dwAffinity);

#line 4153 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



__declspec(dllimport)
HDWP
__stdcall
BeginDeferWindowPos(
     int nNumWindows);

__declspec(dllimport)
HDWP
__stdcall
DeferWindowPos(
     HDWP hWinPosInfo,
     HWND hWnd,
     HWND hWndInsertAfter,
     int x,
     int y,
     int cx,
     int cy,
     UINT uFlags);

__declspec(dllimport)
BOOL
__stdcall
EndDeferWindowPos(
     HDWP hWinPosInfo);

#line 4182 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
IsWindowVisible(
     HWND hWnd);

__declspec(dllimport)
BOOL
__stdcall
IsIconic(
     HWND hWnd);

__declspec(dllimport)
BOOL
__stdcall
AnyPopup(
    void);

__declspec(dllimport)
BOOL
__stdcall
BringWindowToTop(
     HWND hWnd);

__declspec(dllimport)
BOOL
__stdcall
IsZoomed(
     HWND hWnd);






















#line 4235 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"














#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\pshpack2.h"























#pragma warning(disable:4103)

#pragma pack(push,2)


#line 30 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\pshpack2.h"


#line 33 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\pshpack2.h"
#line 34 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\pshpack2.h"

#line 4250 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"




typedef struct {
    DWORD style;
    DWORD dwExtendedStyle;
    WORD cdit;
    short x;
    short y;
    short cx;
    short cy;
} DLGTEMPLATE;
typedef DLGTEMPLATE *LPDLGTEMPLATEA;
typedef DLGTEMPLATE *LPDLGTEMPLATEW;



typedef LPDLGTEMPLATEA LPDLGTEMPLATE;
#line 4270 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
typedef const DLGTEMPLATE *LPCDLGTEMPLATEA;
typedef const DLGTEMPLATE *LPCDLGTEMPLATEW;



typedef LPCDLGTEMPLATEA LPCDLGTEMPLATE;
#line 4277 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"




typedef struct {
    DWORD style;
    DWORD dwExtendedStyle;
    short x;
    short y;
    short cx;
    short cy;
    WORD id;
} DLGITEMTEMPLATE;
typedef DLGITEMTEMPLATE *PDLGITEMTEMPLATEA;
typedef DLGITEMTEMPLATE *PDLGITEMTEMPLATEW;



typedef PDLGITEMTEMPLATEA PDLGITEMTEMPLATE;
#line 4297 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
typedef DLGITEMTEMPLATE *LPDLGITEMTEMPLATEA;
typedef DLGITEMTEMPLATE *LPDLGITEMTEMPLATEW;



typedef LPDLGITEMTEMPLATEA LPDLGITEMTEMPLATE;
#line 4304 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\poppack.h"


























#pragma warning(disable:4103)

#pragma pack(pop)


#line 33 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\poppack.h"


#line 36 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\poppack.h"
#line 37 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\poppack.h"

#line 4307 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
HWND
__stdcall
CreateDialogParamA(
     HINSTANCE hInstance,
     LPCSTR lpTemplateName,
     HWND hWndParent,
     DLGPROC lpDialogFunc,
     LPARAM dwInitParam);
__declspec(dllimport)
HWND
__stdcall
CreateDialogParamW(
     HINSTANCE hInstance,
     LPCWSTR lpTemplateName,
     HWND hWndParent,
     DLGPROC lpDialogFunc,
     LPARAM dwInitParam);




#line 4331 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
HWND
__stdcall
CreateDialogIndirectParamA(
     HINSTANCE hInstance,
     LPCDLGTEMPLATEA lpTemplate,
     HWND hWndParent,
     DLGPROC lpDialogFunc,
     LPARAM dwInitParam);
__declspec(dllimport)
HWND
__stdcall
CreateDialogIndirectParamW(
     HINSTANCE hInstance,
     LPCDLGTEMPLATEW lpTemplate,
     HWND hWndParent,
     DLGPROC lpDialogFunc,
     LPARAM dwInitParam);




#line 4355 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"









#line 4365 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"









#line 4375 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
INT_PTR
__stdcall
DialogBoxParamA(
     HINSTANCE hInstance,
     LPCSTR lpTemplateName,
     HWND hWndParent,
     DLGPROC lpDialogFunc,
     LPARAM dwInitParam);
__declspec(dllimport)
INT_PTR
__stdcall
DialogBoxParamW(
     HINSTANCE hInstance,
     LPCWSTR lpTemplateName,
     HWND hWndParent,
     DLGPROC lpDialogFunc,
     LPARAM dwInitParam);




#line 4399 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
INT_PTR
__stdcall
DialogBoxIndirectParamA(
     HINSTANCE hInstance,
     LPCDLGTEMPLATEA hDialogTemplate,
     HWND hWndParent,
     DLGPROC lpDialogFunc,
     LPARAM dwInitParam);
__declspec(dllimport)
INT_PTR
__stdcall
DialogBoxIndirectParamW(
     HINSTANCE hInstance,
     LPCDLGTEMPLATEW hDialogTemplate,
     HWND hWndParent,
     DLGPROC lpDialogFunc,
     LPARAM dwInitParam);




#line 4423 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"









#line 4433 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"









#line 4443 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
EndDialog(
     HWND hDlg,
     INT_PTR nResult);

__declspec(dllimport)
HWND
__stdcall
GetDlgItem(
     HWND hDlg,
     int nIDDlgItem);

__declspec(dllimport)
BOOL
__stdcall
SetDlgItemInt(
     HWND hDlg,
     int nIDDlgItem,
     UINT uValue,
     BOOL bSigned);

__declspec(dllimport)
UINT
__stdcall
GetDlgItemInt(
     HWND hDlg,
     int nIDDlgItem,
     BOOL *lpTranslated,
     BOOL bSigned);

__declspec(dllimport)
BOOL
__stdcall
SetDlgItemTextA(
     HWND hDlg,
     int nIDDlgItem,
     LPCSTR lpString);
__declspec(dllimport)
BOOL
__stdcall
SetDlgItemTextW(
     HWND hDlg,
     int nIDDlgItem,
     LPCWSTR lpString);




#line 4495 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
UINT
__stdcall
GetDlgItemTextA(
     HWND hDlg,
     int nIDDlgItem,
     LPSTR lpString,
     int cchMax);
__declspec(dllimport)
UINT
__stdcall
GetDlgItemTextW(
     HWND hDlg,
     int nIDDlgItem,
     LPWSTR lpString,
     int cchMax);




#line 4517 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
CheckDlgButton(
     HWND hDlg,
     int nIDButton,
     UINT uCheck);

__declspec(dllimport)
BOOL
__stdcall
CheckRadioButton(
     HWND hDlg,
     int nIDFirstButton,
     int nIDLastButton,
     int nIDCheckButton);

__declspec(dllimport)
UINT
__stdcall
IsDlgButtonChecked(
     HWND hDlg,
     int nIDButton);

__declspec(dllimport)
LRESULT
__stdcall
SendDlgItemMessageA(
     HWND hDlg,
     int nIDDlgItem,
     UINT Msg,
     WPARAM wParam,
     LPARAM lParam);
__declspec(dllimport)
LRESULT
__stdcall
SendDlgItemMessageW(
     HWND hDlg,
     int nIDDlgItem,
     UINT Msg,
     WPARAM wParam,
     LPARAM lParam);




#line 4565 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
HWND
__stdcall
GetNextDlgGroupItem(
     HWND hDlg,
     HWND hCtl,
     BOOL bPrevious);

__declspec(dllimport)
HWND
__stdcall
GetNextDlgTabItem(
     HWND hDlg,
     HWND hCtl,
     BOOL bPrevious);

__declspec(dllimport)
int
__stdcall
GetDlgCtrlID(
     HWND hWnd);

__declspec(dllimport)
long
__stdcall
GetDialogBaseUnits(void);

__declspec(dllimport)

LRESULT
__stdcall



#line 4601 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
DefDlgProcA(
     HWND hDlg,
     UINT Msg,
     WPARAM wParam,
     LPARAM lParam);
__declspec(dllimport)

LRESULT
__stdcall



#line 4614 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
DefDlgProcW(
     HWND hDlg,
     UINT Msg,
     WPARAM wParam,
     LPARAM lParam);




#line 4624 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"








#line 4633 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

#line 4635 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



__declspec(dllimport)
BOOL
__stdcall
CallMsgFilterA(
     LPMSG lpMsg,
     int nCode);
__declspec(dllimport)
BOOL
__stdcall
CallMsgFilterW(
     LPMSG lpMsg,
     int nCode);




#line 4655 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

#line 4657 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"







__declspec(dllimport)
BOOL
__stdcall
OpenClipboard(
     HWND hWndNewOwner);

__declspec(dllimport)
BOOL
__stdcall
CloseClipboard(
    void);




__declspec(dllimport)
DWORD
__stdcall
GetClipboardSequenceNumber(
    void);

#line 4686 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
HWND
__stdcall
GetClipboardOwner(
    void);

__declspec(dllimport)
HWND
__stdcall
SetClipboardViewer(
     HWND hWndNewViewer);

__declspec(dllimport)
HWND
__stdcall
GetClipboardViewer(
    void);

__declspec(dllimport)
BOOL
__stdcall
ChangeClipboardChain(
     HWND hWndRemove,
     HWND hWndNewNext);

__declspec(dllimport)
HANDLE
__stdcall
SetClipboardData(
     UINT uFormat,
     HANDLE hMem);

__declspec(dllimport)
HANDLE
__stdcall
GetClipboardData(
     UINT uFormat);

__declspec(dllimport)
UINT
__stdcall
RegisterClipboardFormatA(
     LPCSTR lpszFormat);
__declspec(dllimport)
UINT
__stdcall
RegisterClipboardFormatW(
     LPCWSTR lpszFormat);




#line 4740 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
int
__stdcall
CountClipboardFormats(
    void);

__declspec(dllimport)
UINT
__stdcall
EnumClipboardFormats(
     UINT format);

__declspec(dllimport)
int
__stdcall
GetClipboardFormatNameA(
     UINT format,
     LPSTR lpszFormatName,
     int cchMaxCount);
__declspec(dllimport)
int
__stdcall
GetClipboardFormatNameW(
     UINT format,
     LPWSTR lpszFormatName,
     int cchMaxCount);




#line 4772 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
EmptyClipboard(
    void);

__declspec(dllimport)
BOOL
__stdcall
IsClipboardFormatAvailable(
     UINT format);

__declspec(dllimport)
int
__stdcall
GetPriorityClipboardFormat(
     UINT *paFormatPriorityList,
     int cFormats);

__declspec(dllimport)
HWND
__stdcall
GetOpenClipboardWindow(
    void);


__declspec(dllimport)
BOOL
__stdcall
AddClipboardFormatListener(
     HWND hwnd);

__declspec(dllimport)
BOOL
__stdcall
RemoveClipboardFormatListener(
     HWND hwnd);

__declspec(dllimport)
BOOL
__stdcall
GetUpdatedClipboardFormats(
      PUINT lpuiFormats,
     UINT cFormats,
      PUINT pcFormatsOut);
#line 4819 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
#line 4820 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"





__declspec(dllimport)
BOOL
__stdcall
CharToOemA(
     LPCSTR pSrc,
     LPSTR pDst);
__declspec(dllimport)
BOOL
__stdcall
CharToOemW(
     LPCWSTR pSrc,
     LPSTR pDst);




#line 4842 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

 
__declspec(dllimport)
BOOL
__stdcall
OemToCharA(
     LPCSTR pSrc,
     LPSTR pDst);
 
__declspec(dllimport)
BOOL
__stdcall
OemToCharW(
     LPCSTR pSrc,
     LPWSTR pDst);




#line 4862 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
CharToOemBuffA(
     LPCSTR lpszSrc,
     LPSTR lpszDst,
     DWORD cchDstLength);
__declspec(dllimport)
BOOL
__stdcall
CharToOemBuffW(
     LPCWSTR lpszSrc,
     LPSTR lpszDst,
     DWORD cchDstLength);




#line 4882 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
OemToCharBuffA(
     LPCSTR lpszSrc,
     LPSTR lpszDst,
     DWORD cchDstLength);
__declspec(dllimport)
BOOL
__stdcall
OemToCharBuffW(
     LPCSTR lpszSrc,
     LPWSTR lpszDst,
     DWORD cchDstLength);




#line 4902 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
LPSTR
__stdcall
CharUpperA(
     LPSTR lpsz);
__declspec(dllimport)
LPWSTR
__stdcall
CharUpperW(
     LPWSTR lpsz);




#line 4918 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
DWORD
__stdcall
CharUpperBuffA(
     LPSTR lpsz,
     DWORD cchLength);
__declspec(dllimport)
DWORD
__stdcall
CharUpperBuffW(
     LPWSTR lpsz,
     DWORD cchLength);




#line 4936 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
LPSTR
__stdcall
CharLowerA(
     LPSTR lpsz);
__declspec(dllimport)
LPWSTR
__stdcall
CharLowerW(
     LPWSTR lpsz);




#line 4952 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
DWORD
__stdcall
CharLowerBuffA(
     LPSTR lpsz,
     DWORD cchLength);
__declspec(dllimport)
DWORD
__stdcall
CharLowerBuffW(
     LPWSTR lpsz,
     DWORD cchLength);




#line 4970 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
LPSTR
__stdcall
CharNextA(
     LPCSTR lpsz);
__declspec(dllimport)
LPWSTR
__stdcall
CharNextW(
     LPCWSTR lpsz);




#line 4986 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
LPSTR
__stdcall
CharPrevA(
     LPCSTR lpszStart,
     LPCSTR lpszCurrent);
__declspec(dllimport)
LPWSTR
__stdcall
CharPrevW(
     LPCWSTR lpszStart,
     LPCWSTR lpszCurrent);




#line 5004 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


__declspec(dllimport)
LPSTR
__stdcall
CharNextExA(
      WORD CodePage,
      LPCSTR lpCurrentChar,
      DWORD dwFlags);

__declspec(dllimport)
LPSTR
__stdcall
CharPrevExA(
      WORD CodePage,
      LPCSTR lpStart,
      LPCSTR lpCurrentChar,
      DWORD dwFlags);
#line 5023 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"




















__declspec(dllimport)
BOOL
__stdcall
IsCharAlphaA(
     CHAR ch);
__declspec(dllimport)
BOOL
__stdcall
IsCharAlphaW(
     WCHAR ch);




#line 5058 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
IsCharAlphaNumericA(
     CHAR ch);
__declspec(dllimport)
BOOL
__stdcall
IsCharAlphaNumericW(
     WCHAR ch);




#line 5074 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
IsCharUpperA(
     CHAR ch);
__declspec(dllimport)
BOOL
__stdcall
IsCharUpperW(
     WCHAR ch);




#line 5090 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
IsCharLowerA(
     CHAR ch);
__declspec(dllimport)
BOOL
__stdcall
IsCharLowerW(
     WCHAR ch);




#line 5106 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

#line 5108 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
HWND
__stdcall
SetFocus(
     HWND hWnd);

__declspec(dllimport)
HWND
__stdcall
GetActiveWindow(
    void);

__declspec(dllimport)
HWND
__stdcall
GetFocus(
    void);

__declspec(dllimport)
UINT
__stdcall
GetKBCodePage(
    void);

__declspec(dllimport)
SHORT
__stdcall
GetKeyState(
     int nVirtKey);

__declspec(dllimport)
SHORT
__stdcall
GetAsyncKeyState(
     int vKey);

__declspec(dllimport)
BOOL
__stdcall
GetKeyboardState(
     PBYTE lpKeyState);

__declspec(dllimport)
BOOL
__stdcall
SetKeyboardState(
     LPBYTE lpKeyState);

__declspec(dllimport)
int
__stdcall
GetKeyNameTextA(
     LONG lParam,
     LPSTR lpString,
     int cchSize);
__declspec(dllimport)
int
__stdcall
GetKeyNameTextW(
     LONG lParam,
     LPWSTR lpString,
     int cchSize);




#line 5176 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
int
__stdcall
GetKeyboardType(
     int nTypeFlag);

__declspec(dllimport)
int
__stdcall
ToAscii(
     UINT uVirtKey,
     UINT uScanCode,
     const BYTE *lpKeyState,
     LPWORD lpChar,
     UINT uFlags);


__declspec(dllimport)
int
__stdcall
ToAsciiEx(
     UINT uVirtKey,
     UINT uScanCode,
     const BYTE *lpKeyState,
     LPWORD lpChar,
     UINT uFlags,
     HKL dwhkl);
#line 5205 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
int
__stdcall
ToUnicode(
     UINT wVirtKey,
     UINT wScanCode,
     const BYTE *lpKeyState,
     LPWSTR pwszBuff,
     int cchBuff,
     UINT wFlags);

__declspec(dllimport)
DWORD
__stdcall
OemKeyScan(
     WORD wOemChar);

__declspec(dllimport)
SHORT
__stdcall
VkKeyScanA(
     CHAR ch);
__declspec(dllimport)
SHORT
__stdcall
VkKeyScanW(
     WCHAR ch);




#line 5238 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


__declspec(dllimport)
SHORT
__stdcall
VkKeyScanExA(
     CHAR ch,
     HKL dwhkl);
__declspec(dllimport)
SHORT
__stdcall
VkKeyScanExW(
     WCHAR ch,
     HKL dwhkl);




#line 5257 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
#line 5258 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"





#line 5264 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
void
__stdcall
keybd_event(
     BYTE bVk,
     BYTE bScan,
     DWORD dwFlags,
     ULONG_PTR dwExtraInfo);













#line 5287 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


#line 5290 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



__declspec(dllimport)
void
__stdcall
mouse_event(
     DWORD dwFlags,
     DWORD dx,
     DWORD dy,
     DWORD dwData,
     ULONG_PTR dwExtraInfo);



typedef struct tagMOUSEINPUT {
    LONG    dx;
    LONG    dy;
    DWORD   mouseData;
    DWORD   dwFlags;
    DWORD   time;
    ULONG_PTR dwExtraInfo;
} MOUSEINPUT, *PMOUSEINPUT, * LPMOUSEINPUT;

typedef struct tagKEYBDINPUT {
    WORD    wVk;
    WORD    wScan;
    DWORD   dwFlags;
    DWORD   time;
    ULONG_PTR dwExtraInfo;
} KEYBDINPUT, *PKEYBDINPUT, * LPKEYBDINPUT;

typedef struct tagHARDWAREINPUT {
    DWORD   uMsg;
    WORD    wParamL;
    WORD    wParamH;
} HARDWAREINPUT, *PHARDWAREINPUT, * LPHARDWAREINPUT;





typedef struct tagINPUT {
    DWORD   type;

    union
    {
        MOUSEINPUT      mi;
        KEYBDINPUT      ki;
        HARDWAREINPUT   hi;
    };
} INPUT, *PINPUT, * LPINPUT;

__declspec(dllimport)
UINT
__stdcall
SendInput(
     UINT cInputs,                     
     LPINPUT pInputs,  
     int cbSize);                      

#line 5352 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"










struct HTOUCHINPUT__{int unused;}; typedef struct HTOUCHINPUT__ *HTOUCHINPUT;

typedef struct tagTOUCHINPUT {
    LONG x;
    LONG y;
    HANDLE hSource;
    DWORD dwID;
    DWORD dwFlags;
    DWORD dwMask;
    DWORD dwTime;
    ULONG_PTR dwExtraInfo;
    DWORD cxContact;
    DWORD cyContact;
} TOUCHINPUT, *PTOUCHINPUT;
typedef TOUCHINPUT const * PCTOUCHINPUT;


























__declspec(dllimport)
BOOL
__stdcall
GetTouchInputInfo(
     HTOUCHINPUT hTouchInput,               
     UINT cInputs,                          
     PTOUCHINPUT pInputs,  
     int cbSize);                           

__declspec(dllimport)
BOOL
__stdcall
CloseTouchInputHandle(
     HTOUCHINPUT hTouchInput);                   








__declspec(dllimport)
BOOL
__stdcall
RegisterTouchWindow(
     HWND hwnd,
     ULONG ulFlags);

__declspec(dllimport)
BOOL
__stdcall
UnregisterTouchWindow(
     HWND hwnd);

__declspec(dllimport)
BOOL
__stdcall
IsTouchWindow(
     HWND hwnd,
     PULONG pulFlags);

#line 5446 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


typedef struct tagLASTINPUTINFO {
    UINT cbSize;
    DWORD dwTime;
} LASTINPUTINFO, * PLASTINPUTINFO;

__declspec(dllimport)
BOOL
__stdcall
GetLastInputInfo(
     PLASTINPUTINFO plii);
#line 5459 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
UINT
__stdcall
MapVirtualKeyA(
     UINT uCode,
     UINT uMapType);
__declspec(dllimport)
UINT
__stdcall
MapVirtualKeyW(
     UINT uCode,
     UINT uMapType);




#line 5477 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


__declspec(dllimport)
UINT
__stdcall
MapVirtualKeyExA(
     UINT uCode,
     UINT uMapType,
     HKL dwhkl);
__declspec(dllimport)
UINT
__stdcall
MapVirtualKeyExW(
     UINT uCode,
     UINT uMapType,
     HKL dwhkl);




#line 5498 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"





#line 5504 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


#line 5507 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
GetInputState(
    void);

__declspec(dllimport)
DWORD
__stdcall
GetQueueStatus(
     UINT flags);


__declspec(dllimport)
HWND
__stdcall
GetCapture(
    void);

__declspec(dllimport)
HWND
__stdcall
SetCapture(
     HWND hWnd);

__declspec(dllimport)
BOOL
__stdcall
ReleaseCapture(
    void);

__declspec(dllimport)
DWORD
__stdcall
MsgWaitForMultipleObjects(
     DWORD nCount,
     const HANDLE *pHandles,
     BOOL fWaitAll,
     DWORD dwMilliseconds,
     DWORD dwWakeMask);

__declspec(dllimport)
DWORD
__stdcall
MsgWaitForMultipleObjectsEx(
     DWORD nCount,
     const HANDLE *pHandles,
     DWORD dwMilliseconds,
     DWORD dwWakeMask,
     DWORD dwFlags);




















#line 5579 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"











#line 5591 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"






















__declspec(dllimport)
UINT_PTR
__stdcall
SetTimer(
     HWND hWnd,
     UINT_PTR nIDEvent,
     UINT uElapse,
     TIMERPROC lpTimerFunc);

__declspec(dllimport)
BOOL
__stdcall
KillTimer(
     HWND hWnd,
     UINT_PTR uIDEvent);

__declspec(dllimport)
BOOL
__stdcall
IsWindowUnicode(
     HWND hWnd);

__declspec(dllimport)
BOOL
__stdcall
EnableWindow(
     HWND hWnd,
     BOOL bEnable);

__declspec(dllimport)
BOOL
__stdcall
IsWindowEnabled(
     HWND hWnd);

__declspec(dllimport)
HACCEL
__stdcall
LoadAcceleratorsA(
     HINSTANCE hInstance,
     LPCSTR lpTableName);
__declspec(dllimport)
HACCEL
__stdcall
LoadAcceleratorsW(
     HINSTANCE hInstance,
     LPCWSTR lpTableName);




#line 5665 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
HACCEL
__stdcall
CreateAcceleratorTableA(
     LPACCEL paccel,
     int cAccel);
__declspec(dllimport)
HACCEL
__stdcall
CreateAcceleratorTableW(
     LPACCEL paccel,
     int cAccel);




#line 5683 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
DestroyAcceleratorTable(
     HACCEL hAccel);

__declspec(dllimport)
int
__stdcall
CopyAcceleratorTableA(
     HACCEL hAccelSrc,
     LPACCEL lpAccelDst,
     int cAccelEntries);
__declspec(dllimport)
int
__stdcall
CopyAcceleratorTableW(
     HACCEL hAccelSrc,
     LPACCEL lpAccelDst,
     int cAccelEntries);




#line 5709 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



__declspec(dllimport)
int
__stdcall
TranslateAcceleratorA(
     HWND hWnd,
     HACCEL hAccTable,
     LPMSG lpMsg);
__declspec(dllimport)
int
__stdcall
TranslateAcceleratorW(
     HWND hWnd,
     HACCEL hAccTable,
     LPMSG lpMsg);




#line 5731 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

#line 5733 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

















































































#line 5815 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"






#line 5822 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



#line 5826 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"







#line 5834 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


#line 5837 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



#line 5841 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"






#line 5848 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"




#line 5853 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"





#line 5859 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



#line 5863 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

#line 5865 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

#line 5867 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

#line 5869 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

#line 5871 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"







#line 5879 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



#line 5883 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



#line 5887 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

#line 5889 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


__declspec(dllimport)
int
__stdcall
GetSystemMetrics(
     int nIndex);


#line 5899 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



__declspec(dllimport)
HMENU
__stdcall
LoadMenuA(
     HINSTANCE hInstance,
     LPCSTR lpMenuName);
__declspec(dllimport)
HMENU
__stdcall
LoadMenuW(
     HINSTANCE hInstance,
     LPCWSTR lpMenuName);




#line 5919 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
HMENU
__stdcall
LoadMenuIndirectA(
     const MENUTEMPLATEA *lpMenuTemplate);
__declspec(dllimport)
HMENU
__stdcall
LoadMenuIndirectW(
     const MENUTEMPLATEW *lpMenuTemplate);




#line 5935 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
HMENU
__stdcall
GetMenu(
     HWND hWnd);

__declspec(dllimport)
BOOL
__stdcall
SetMenu(
     HWND hWnd,
     HMENU hMenu);

__declspec(dllimport)
BOOL
__stdcall
ChangeMenuA(
     HMENU hMenu,
     UINT cmd,
     LPCSTR lpszNewItem,
     UINT cmdInsert,
     UINT flags);
__declspec(dllimport)
BOOL
__stdcall
ChangeMenuW(
     HMENU hMenu,
     UINT cmd,
     LPCWSTR lpszNewItem,
     UINT cmdInsert,
     UINT flags);




#line 5972 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
HiliteMenuItem(
     HWND hWnd,
     HMENU hMenu,
     UINT uIDHiliteItem,
     UINT uHilite);

__declspec(dllimport)
int
__stdcall
GetMenuStringA(
     HMENU hMenu,
     UINT uIDItem,
     LPSTR lpString,
     int cchMax,
     UINT flags);
__declspec(dllimport)
int
__stdcall
GetMenuStringW(
     HMENU hMenu,
     UINT uIDItem,
     LPWSTR lpString,
     int cchMax,
     UINT flags);




#line 6005 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
UINT
__stdcall
GetMenuState(
     HMENU hMenu,
     UINT uId,
     UINT uFlags);

__declspec(dllimport)
BOOL
__stdcall
DrawMenuBar(
     HWND hWnd);




#line 6024 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


__declspec(dllimport)
HMENU
__stdcall
GetSystemMenu(
     HWND hWnd,
     BOOL bRevert);


__declspec(dllimport)
HMENU
__stdcall
CreateMenu(
    void);

__declspec(dllimport)
HMENU
__stdcall
CreatePopupMenu(
    void);

__declspec(dllimport)
BOOL
__stdcall
DestroyMenu(
     HMENU hMenu);

__declspec(dllimport)
DWORD
__stdcall
CheckMenuItem(
     HMENU hMenu,
     UINT uIDCheckItem,
     UINT uCheck);

__declspec(dllimport)
BOOL
__stdcall
EnableMenuItem(
     HMENU hMenu,
     UINT uIDEnableItem,
     UINT uEnable);

__declspec(dllimport)
HMENU
__stdcall
GetSubMenu(
     HMENU hMenu,
     int nPos);

__declspec(dllimport)
UINT
__stdcall
GetMenuItemID(
     HMENU hMenu,
     int nPos);

__declspec(dllimport)
int
__stdcall
GetMenuItemCount(
     HMENU hMenu);

__declspec(dllimport)
BOOL
__stdcall
InsertMenuA(
     HMENU hMenu,
     UINT uPosition,
     UINT uFlags,
     UINT_PTR uIDNewItem,
     LPCSTR lpNewItem);
__declspec(dllimport)
BOOL
__stdcall
InsertMenuW(
     HMENU hMenu,
     UINT uPosition,
     UINT uFlags,
     UINT_PTR uIDNewItem,
     LPCWSTR lpNewItem);




#line 6111 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
AppendMenuA(
     HMENU hMenu,
     UINT uFlags,
     UINT_PTR uIDNewItem,
     LPCSTR lpNewItem);
__declspec(dllimport)
BOOL
__stdcall
AppendMenuW(
     HMENU hMenu,
     UINT uFlags,
     UINT_PTR uIDNewItem,
     LPCWSTR lpNewItem);




#line 6133 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
ModifyMenuA(
     HMENU hMnu,
     UINT uPosition,
     UINT uFlags,
     UINT_PTR uIDNewItem,
     LPCSTR lpNewItem);
__declspec(dllimport)
BOOL
__stdcall
ModifyMenuW(
     HMENU hMnu,
     UINT uPosition,
     UINT uFlags,
     UINT_PTR uIDNewItem,
     LPCWSTR lpNewItem);




#line 6157 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall RemoveMenu(
     HMENU hMenu,
     UINT uPosition,
     UINT uFlags);

__declspec(dllimport)
BOOL
__stdcall
DeleteMenu(
     HMENU hMenu,
     UINT uPosition,
     UINT uFlags);

__declspec(dllimport)
BOOL
__stdcall
SetMenuItemBitmaps(
     HMENU hMenu,
     UINT uPosition,
     UINT uFlags,
     HBITMAP hBitmapUnchecked,
     HBITMAP hBitmapChecked);

__declspec(dllimport)
LONG
__stdcall
GetMenuCheckMarkDimensions(
    void);

__declspec(dllimport)
BOOL
__stdcall
TrackPopupMenu(
     HMENU hMenu,
     UINT uFlags,
     int x,
     int y,
     int nReserved,
     HWND hWnd,
     const RECT *prcRect);








typedef struct tagTPMPARAMS
{
    UINT    cbSize;     
    RECT    rcExclude;  
}   TPMPARAMS;
typedef TPMPARAMS  *LPTPMPARAMS;

__declspec(dllimport)
BOOL
__stdcall
TrackPopupMenuEx(
     HMENU,
     UINT,
     int,
     int,
     HWND,
     LPTPMPARAMS);
#line 6226 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


__declspec(dllimport)
BOOL
__stdcall
CalculatePopupWindowPosition(
     const POINT *anchorPoint,
     const SIZE *windowSize,
     UINT  flags,
     RECT *excludeRect,
     RECT *popupWindowPosition);

#line 6239 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

















typedef struct tagMENUINFO
{
    DWORD   cbSize;
    DWORD   fMask;
    DWORD   dwStyle;
    UINT    cyMax;
    HBRUSH  hbrBack;
    DWORD   dwContextHelpID;
    ULONG_PTR dwMenuData;
}   MENUINFO,  *LPMENUINFO;
typedef MENUINFO const  *LPCMENUINFO;

__declspec(dllimport)
BOOL
__stdcall
GetMenuInfo(
     HMENU,
     LPMENUINFO);

__declspec(dllimport)
BOOL
__stdcall
SetMenuInfo(
     HMENU,
     LPCMENUINFO);

__declspec(dllimport)
BOOL
__stdcall
EndMenu(
        void);







typedef struct tagMENUGETOBJECTINFO
{
    DWORD dwFlags;
    UINT uPos;
    HMENU hmenu;
    PVOID riid;
    PVOID pvObj;
} MENUGETOBJECTINFO, * PMENUGETOBJECTINFO;












#line 6315 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"








#line 6324 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

















#line 6342 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


typedef struct tagMENUITEMINFOA
{
    UINT     cbSize;
    UINT     fMask;
    UINT     fType;         
    UINT     fState;        
    UINT     wID;           
    HMENU    hSubMenu;      
    HBITMAP  hbmpChecked;   
    HBITMAP  hbmpUnchecked; 
    ULONG_PTR dwItemData;   
     LPSTR    dwTypeData;    
    UINT     cch;           

    HBITMAP  hbmpItem;      
#line 6360 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
}   MENUITEMINFOA,  *LPMENUITEMINFOA;
typedef struct tagMENUITEMINFOW
{
    UINT     cbSize;
    UINT     fMask;
    UINT     fType;         
    UINT     fState;        
    UINT     wID;           
    HMENU    hSubMenu;      
    HBITMAP  hbmpChecked;   
    HBITMAP  hbmpUnchecked; 
    ULONG_PTR dwItemData;   
     LPWSTR   dwTypeData;    
    UINT     cch;           

    HBITMAP  hbmpItem;      
#line 6377 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
}   MENUITEMINFOW,  *LPMENUITEMINFOW;




typedef MENUITEMINFOA MENUITEMINFO;
typedef LPMENUITEMINFOA LPMENUITEMINFO;
#line 6385 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
typedef MENUITEMINFOA const  *LPCMENUITEMINFOA;
typedef MENUITEMINFOW const  *LPCMENUITEMINFOW;



typedef LPCMENUITEMINFOA LPCMENUITEMINFO;
#line 6392 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


__declspec(dllimport)
BOOL
__stdcall
InsertMenuItemA(
     HMENU hmenu,
     UINT item,
     BOOL fByPosition,
     LPCMENUITEMINFOA lpmi);
__declspec(dllimport)
BOOL
__stdcall
InsertMenuItemW(
     HMENU hmenu,
     UINT item,
     BOOL fByPosition,
     LPCMENUITEMINFOW lpmi);




#line 6415 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
GetMenuItemInfoA(
     HMENU hmenu,
     UINT item,
     BOOL fByPosition,
     LPMENUITEMINFOA lpmii);
__declspec(dllimport)
BOOL
__stdcall
GetMenuItemInfoW(
     HMENU hmenu,
     UINT item,
     BOOL fByPosition,
     LPMENUITEMINFOW lpmii);




#line 6437 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
SetMenuItemInfoA(
     HMENU hmenu,
     UINT item,
     BOOL fByPositon,
     LPCMENUITEMINFOA lpmii);
__declspec(dllimport)
BOOL
__stdcall
SetMenuItemInfoW(
     HMENU hmenu,
     UINT item,
     BOOL fByPositon,
     LPCMENUITEMINFOW lpmii);




#line 6459 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"





__declspec(dllimport)
UINT
__stdcall
GetMenuDefaultItem(
     HMENU hMenu,
     UINT fByPos,
     UINT gmdiFlags);

__declspec(dllimport)
BOOL
__stdcall
SetMenuDefaultItem(
     HMENU hMenu,
     UINT uItem,
     UINT fByPos);

__declspec(dllimport)
BOOL
__stdcall
GetMenuItemRect(
     HWND hWnd,
     HMENU hMenu,
     UINT uItem,
     LPRECT lprcItem);

__declspec(dllimport)
int
__stdcall
MenuItemFromPoint(
     HWND hWnd,
     HMENU hMenu,
     POINT ptScreen);
#line 6497 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


















#line 6516 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"








#line 6525 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


#line 6528 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
#line 6529 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


#line 6532 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


#line 6535 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"







typedef struct tagDROPSTRUCT
{
    HWND    hwndSource;
    HWND    hwndSink;
    DWORD   wFmt;
    ULONG_PTR dwData;
    POINT   ptDrop;
    DWORD   dwControlData;
} DROPSTRUCT, *PDROPSTRUCT, *LPDROPSTRUCT;











__declspec(dllimport)
DWORD
__stdcall
DragObject(
     HWND hwndParent,
     HWND hwndFrom,
     UINT fmt,
     ULONG_PTR data,
     HCURSOR hcur);

__declspec(dllimport)
BOOL
__stdcall
DragDetect(
     HWND hwnd,
     POINT pt);
#line 6579 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
DrawIcon(
     HDC hDC,
     int X,
     int Y,
     HICON hIcon);


































#line 6623 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
#line 6624 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

typedef struct tagDRAWTEXTPARAMS
{
    UINT    cbSize;
    int     iTabLength;
    int     iLeftMargin;
    int     iRightMargin;
    UINT    uiLengthDrawn;
} DRAWTEXTPARAMS,  *LPDRAWTEXTPARAMS;
#line 6634 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


__declspec(dllimport)
int
__stdcall
DrawTextA(
     HDC hdc,
     LPCSTR lpchText,
     int cchText,
     LPRECT lprc,
     UINT format);
__declspec(dllimport)
int
__stdcall
DrawTextW(
     HDC hdc,
     LPCWSTR lpchText,
     int cchText,
     LPRECT lprc,
     UINT format);




#line 6659 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

























#line 6685 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



__declspec(dllimport)
int
__stdcall
DrawTextExA(
     HDC hdc,
     LPSTR lpchText,
     int cchText,
     LPRECT lprc,
     UINT format,
     LPDRAWTEXTPARAMS lpdtp);
__declspec(dllimport)
int
__stdcall
DrawTextExW(
     HDC hdc,
     LPWSTR lpchText,
     int cchText,
     LPRECT lprc,
     UINT format,
     LPDRAWTEXTPARAMS lpdtp);




#line 6713 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
#line 6714 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

#line 6716 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
GrayStringA(
     HDC hDC,
     HBRUSH hBrush,
     GRAYSTRINGPROC lpOutputFunc,
     LPARAM lpData,
     int nCount,
     int X,
     int Y,
     int nWidth,
     int nHeight);
__declspec(dllimport)
BOOL
__stdcall
GrayStringW(
     HDC hDC,
     HBRUSH hBrush,
     GRAYSTRINGPROC lpOutputFunc,
     LPARAM lpData,
     int nCount,
     int X,
     int Y,
     int nWidth,
     int nHeight);




#line 6748 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


















#line 6767 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


__declspec(dllimport)
BOOL
__stdcall
DrawStateA(
     HDC hdc,
     HBRUSH hbrFore,
     DRAWSTATEPROC qfnCallBack,
     LPARAM lData,
     WPARAM wData,
     int x,
     int y,
     int cx,
     int cy,
     UINT uFlags);
__declspec(dllimport)
BOOL
__stdcall
DrawStateW(
     HDC hdc,
     HBRUSH hbrFore,
     DRAWSTATEPROC qfnCallBack,
     LPARAM lData,
     WPARAM wData,
     int x,
     int y,
     int cx,
     int cy,
     UINT uFlags);




#line 6802 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
#line 6803 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
LONG
__stdcall
TabbedTextOutA(
     HDC hdc,
     int x,
     int y,
     LPCSTR lpString,
     int chCount,
     int nTabPositions,
     const INT *lpnTabStopPositions,
     int nTabOrigin);
__declspec(dllimport)
LONG
__stdcall
TabbedTextOutW(
     HDC hdc,
     int x,
     int y,
     LPCWSTR lpString,
     int chCount,
     int nTabPositions,
     const INT *lpnTabStopPositions,
     int nTabOrigin);




#line 6833 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
DWORD
__stdcall
GetTabbedTextExtentA(
     HDC hdc,
     LPCSTR lpString,
     int chCount,
     int nTabPositions,
     const INT *lpnTabStopPositions);
__declspec(dllimport)
DWORD
__stdcall
GetTabbedTextExtentW(
     HDC hdc,
     LPCWSTR lpString,
     int chCount,
     int nTabPositions,
     const INT *lpnTabStopPositions);




#line 6857 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
UpdateWindow(
     HWND hWnd);

__declspec(dllimport)
HWND
__stdcall
SetActiveWindow(
     HWND hWnd);

__declspec(dllimport)
HWND
__stdcall
GetForegroundWindow(
    void);


__declspec(dllimport)
BOOL
__stdcall
PaintDesktop(
     HDC hdc);

__declspec(dllimport)
void
__stdcall
SwitchToThisWindow(
     HWND hwnd,
     BOOL fUnknown);
#line 6890 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


__declspec(dllimport)
BOOL
__stdcall
SetForegroundWindow(
     HWND hWnd);


__declspec(dllimport)
BOOL
__stdcall
AllowSetForegroundWindow(
     DWORD dwProcessId);



__declspec(dllimport)
BOOL
__stdcall
LockSetForegroundWindow(
     UINT uLockCode);




#line 6917 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
HWND
__stdcall
WindowFromDC(
     HDC hDC);

__declspec(dllimport)
HDC
__stdcall
GetDC(
     HWND hWnd);

__declspec(dllimport)
HDC
__stdcall
GetDCEx(
     HWND hWnd,
     HRGN hrgnClip,
     DWORD flags);


















__declspec(dllimport)
HDC
__stdcall
GetWindowDC(
     HWND hWnd);

__declspec(dllimport)
int
__stdcall
ReleaseDC(
     HWND hWnd,
     HDC hDC);

__declspec(dllimport)
HDC
__stdcall
BeginPaint(
     HWND hWnd,
     LPPAINTSTRUCT lpPaint);

__declspec(dllimport)
BOOL
__stdcall
EndPaint(
     HWND hWnd,
     const PAINTSTRUCT *lpPaint);

__declspec(dllimport)
BOOL
__stdcall
GetUpdateRect(
     HWND hWnd,
     LPRECT lpRect,
     BOOL bErase);

__declspec(dllimport)
int
__stdcall
GetUpdateRgn(
     HWND hWnd,
     HRGN hRgn,
     BOOL bErase);

__declspec(dllimport)
int
__stdcall
SetWindowRgn(
     HWND hWnd,
     HRGN hRgn,
     BOOL bRedraw);


__declspec(dllimport)
int
__stdcall
GetWindowRgn(
     HWND hWnd,
     HRGN hRgn);



__declspec(dllimport)
int
__stdcall
GetWindowRgnBox(
     HWND hWnd,
     LPRECT lprc);

#line 7024 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
int
__stdcall
ExcludeUpdateRgn(
     HDC hDC,
     HWND hWnd);

__declspec(dllimport)
BOOL
__stdcall
InvalidateRect(
     HWND hWnd,
     const RECT *lpRect,
     BOOL bErase);

__declspec(dllimport)
BOOL
__stdcall
ValidateRect(
     HWND hWnd,
     const RECT *lpRect);

__declspec(dllimport)
BOOL
__stdcall
InvalidateRgn(
     HWND hWnd,
     HRGN hRgn,
     BOOL bErase);

__declspec(dllimport)
BOOL
__stdcall
ValidateRgn(
     HWND hWnd,
     HRGN hRgn);


__declspec(dllimport)
BOOL
__stdcall
RedrawWindow(
     HWND hWnd,
     const RECT *lprcUpdate,
     HRGN hrgnUpdate,
     UINT flags);


























__declspec(dllimport)
BOOL
__stdcall
LockWindowUpdate(
     HWND hWndLock);

__declspec(dllimport)
BOOL
__stdcall
ScrollWindow(
     HWND hWnd,
     int XAmount,
     int YAmount,
     const RECT *lpRect,
     const RECT *lpClipRect);

__declspec(dllimport)
BOOL
__stdcall
ScrollDC(
     HDC hDC,
     int dx,
     int dy,
     const RECT *lprcScroll,
     const RECT *lprcClip,
     HRGN hrgnUpdate,
     LPRECT lprcUpdate);

__declspec(dllimport)
int
__stdcall
ScrollWindowEx(
     HWND hWnd,
     int dx,
     int dy,
     const RECT *prcScroll,
     const RECT *prcClip,
     HRGN hrgnUpdate,
     LPRECT prcUpdate,
     UINT flags);






#line 7144 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



__declspec(dllimport)
int
__stdcall
SetScrollPos(
     HWND hWnd,
     int nBar,
     int nPos,
     BOOL bRedraw);

__declspec(dllimport)
int
__stdcall
GetScrollPos(
     HWND hWnd,
     int nBar);

__declspec(dllimport)
BOOL
__stdcall
SetScrollRange(
     HWND hWnd,
     int nBar,
     int nMinPos,
     int nMaxPos,
     BOOL bRedraw);

__declspec(dllimport)
BOOL
__stdcall
GetScrollRange(
     HWND hWnd,
     int nBar,
     LPINT lpMinPos,
     LPINT lpMaxPos);

__declspec(dllimport)
BOOL
__stdcall
ShowScrollBar(
     HWND hWnd,
     int wBar,
     BOOL bShow);

__declspec(dllimport)
BOOL
__stdcall
EnableScrollBar(
     HWND hWnd,
     UINT wSBflags,
     UINT wArrows);


















#line 7216 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
SetPropA(
     HWND hWnd,
     LPCSTR lpString,
     HANDLE hData);
__declspec(dllimport)
BOOL
__stdcall
SetPropW(
     HWND hWnd,
     LPCWSTR lpString,
     HANDLE hData);




#line 7236 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
HANDLE
__stdcall
GetPropA(
     HWND hWnd,
     LPCSTR lpString);
__declspec(dllimport)
HANDLE
__stdcall
GetPropW(
     HWND hWnd,
     LPCWSTR lpString);




#line 7254 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
HANDLE
__stdcall
RemovePropA(
     HWND hWnd,
     LPCSTR lpString);
__declspec(dllimport)
HANDLE
__stdcall
RemovePropW(
     HWND hWnd,
     LPCWSTR lpString);




#line 7272 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
int
__stdcall
EnumPropsExA(
     HWND hWnd,
     PROPENUMPROCEXA lpEnumFunc,
     LPARAM lParam);
__declspec(dllimport)
int
__stdcall
EnumPropsExW(
     HWND hWnd,
     PROPENUMPROCEXW lpEnumFunc,
     LPARAM lParam);




#line 7292 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
int
__stdcall
EnumPropsA(
     HWND hWnd,
     PROPENUMPROCA lpEnumFunc);
__declspec(dllimport)
int
__stdcall
EnumPropsW(
     HWND hWnd,
     PROPENUMPROCW lpEnumFunc);




#line 7310 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
SetWindowTextA(
     HWND hWnd,
     LPCSTR lpString);
__declspec(dllimport)
BOOL
__stdcall
SetWindowTextW(
     HWND hWnd,
     LPCWSTR lpString);




#line 7328 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
int
__stdcall
GetWindowTextA(
     HWND hWnd,
     LPSTR lpString,
     int nMaxCount);
__declspec(dllimport)
int
__stdcall
GetWindowTextW(
     HWND hWnd,
     LPWSTR lpString,
     int nMaxCount);




#line 7348 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
int
__stdcall
GetWindowTextLengthA(
     HWND hWnd);
__declspec(dllimport)
int
__stdcall
GetWindowTextLengthW(
     HWND hWnd);




#line 7364 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
GetClientRect(
     HWND hWnd,
     LPRECT lpRect);

__declspec(dllimport)
BOOL
__stdcall
GetWindowRect(
     HWND hWnd,
     LPRECT lpRect);

__declspec(dllimport)
BOOL
__stdcall
AdjustWindowRect(
     LPRECT lpRect,
     DWORD dwStyle,
     BOOL bMenu);

__declspec(dllimport)
BOOL
__stdcall
AdjustWindowRectEx(
     LPRECT lpRect,
     DWORD dwStyle,
     BOOL bMenu,
     DWORD dwExStyle);





typedef struct tagHELPINFO      
{
    UINT    cbSize;             
    int     iContextType;       
    int     iCtrlId;            
    HANDLE  hItemHandle;        
    DWORD_PTR dwContextId;      
    POINT   MousePos;           
}  HELPINFO,  *LPHELPINFO;

__declspec(dllimport)
BOOL
__stdcall
SetWindowContextHelpId(
     HWND,
     DWORD);

__declspec(dllimport)
DWORD
__stdcall
GetWindowContextHelpId(
     HWND);

__declspec(dllimport)
BOOL
__stdcall
SetMenuContextHelpId(
     HMENU,
     DWORD);

__declspec(dllimport)
DWORD
__stdcall
GetMenuContextHelpId(
     HMENU);

#line 7437 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"















#line 7453 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"











#line 7465 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"









#line 7475 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"






#line 7482 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"










#line 7493 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"






#line 7500 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

#line 7502 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"







__declspec(dllimport)
int
__stdcall
MessageBoxA(
     HWND hWnd,
     LPCSTR lpText,
     LPCSTR lpCaption,
     UINT uType);
__declspec(dllimport)
int
__stdcall
MessageBoxW(
     HWND hWnd,
     LPCWSTR lpText,
     LPCWSTR lpCaption,
     UINT uType);




#line 7530 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"























#line 7554 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
int
__stdcall
MessageBoxExA(
     HWND hWnd,
     LPCSTR lpText,
     LPCSTR lpCaption,
     UINT uType,
     WORD wLanguageId);
__declspec(dllimport)
int
__stdcall
MessageBoxExW(
     HWND hWnd,
     LPCWSTR lpText,
     LPCWSTR lpCaption,
     UINT uType,
     WORD wLanguageId);




#line 7578 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



typedef void (__stdcall *MSGBOXCALLBACK)(LPHELPINFO lpHelpInfo);

typedef struct tagMSGBOXPARAMSA
{
    UINT        cbSize;
    HWND        hwndOwner;
    HINSTANCE   hInstance;
    LPCSTR      lpszText;
    LPCSTR      lpszCaption;
    DWORD       dwStyle;
    LPCSTR      lpszIcon;
    DWORD_PTR   dwContextHelpId;
    MSGBOXCALLBACK      lpfnMsgBoxCallback;
    DWORD       dwLanguageId;
} MSGBOXPARAMSA, *PMSGBOXPARAMSA, *LPMSGBOXPARAMSA;
typedef struct tagMSGBOXPARAMSW
{
    UINT        cbSize;
    HWND        hwndOwner;
    HINSTANCE   hInstance;
    LPCWSTR     lpszText;
    LPCWSTR     lpszCaption;
    DWORD       dwStyle;
    LPCWSTR     lpszIcon;
    DWORD_PTR   dwContextHelpId;
    MSGBOXCALLBACK      lpfnMsgBoxCallback;
    DWORD       dwLanguageId;
} MSGBOXPARAMSW, *PMSGBOXPARAMSW, *LPMSGBOXPARAMSW;





typedef MSGBOXPARAMSA MSGBOXPARAMS;
typedef PMSGBOXPARAMSA PMSGBOXPARAMS;
typedef LPMSGBOXPARAMSA LPMSGBOXPARAMS;
#line 7618 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
int
__stdcall
MessageBoxIndirectA(
     const MSGBOXPARAMSA * lpmbp);
__declspec(dllimport)
int
__stdcall
MessageBoxIndirectW(
     const MSGBOXPARAMSW * lpmbp);




#line 7634 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
#line 7635 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


__declspec(dllimport)
BOOL
__stdcall
MessageBeep(
     UINT uType);

#line 7644 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


__declspec(dllimport)
int
__stdcall
ShowCursor(
     BOOL bShow);

__declspec(dllimport)
BOOL
__stdcall
SetCursorPos(
     int X,
     int Y);


__declspec(dllimport)
BOOL
__stdcall
SetPhysicalCursorPos(
     int X,
     int Y);
#line 7667 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
HCURSOR
__stdcall
SetCursor(
     HCURSOR hCursor);

__declspec(dllimport)
BOOL
__stdcall
GetCursorPos(
     LPPOINT lpPoint);


__declspec(dllimport)
BOOL
__stdcall
GetPhysicalCursorPos(
     LPPOINT lpPoint);
#line 7687 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
ClipCursor(
     const RECT *lpRect);

__declspec(dllimport)
BOOL
__stdcall
GetClipCursor(
     LPRECT lpRect);

__declspec(dllimport)
HCURSOR
__stdcall
GetCursor(
    void);

__declspec(dllimport)
BOOL
__stdcall
CreateCaret(
     HWND hWnd,
     HBITMAP hBitmap,
     int nWidth,
     int nHeight);

__declspec(dllimport)
UINT
__stdcall
GetCaretBlinkTime(
    void);

__declspec(dllimport)
BOOL
__stdcall
SetCaretBlinkTime(
     UINT uMSeconds);

__declspec(dllimport)
BOOL
__stdcall
DestroyCaret(
    void);

__declspec(dllimport)
BOOL
__stdcall
HideCaret(
     HWND hWnd);

__declspec(dllimport)
BOOL
__stdcall
ShowCaret(
     HWND hWnd);

__declspec(dllimport)
BOOL
__stdcall
SetCaretPos(
     int X,
     int Y);

__declspec(dllimport)
BOOL
__stdcall
GetCaretPos(
     LPPOINT lpPoint);

__declspec(dllimport)
BOOL
__stdcall
ClientToScreen(
     HWND hWnd,
     LPPOINT lpPoint);

__declspec(dllimport)
BOOL
__stdcall
ScreenToClient(
     HWND hWnd,
     LPPOINT lpPoint);


__declspec(dllimport)
BOOL
__stdcall
LogicalToPhysicalPoint(
     HWND hWnd,
     LPPOINT lpPoint);

__declspec(dllimport)
BOOL
__stdcall
PhysicalToLogicalPoint(
     HWND hWnd,
     LPPOINT lpPoint);

#line 7788 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
int
__stdcall
MapWindowPoints(
     HWND hWndFrom,
     HWND hWndTo,
     LPPOINT lpPoints,
     UINT cPoints);

__declspec(dllimport)
HWND
__stdcall
WindowFromPoint(
     POINT Point);


__declspec(dllimport)
HWND
__stdcall
WindowFromPhysicalPoint(
     POINT Point);
#line 7811 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
HWND
__stdcall
ChildWindowFromPoint(
     HWND hWndParent,
     POINT Point);







__declspec(dllimport)
HWND
__stdcall
ChildWindowFromPointEx(
     HWND hwnd,
     POINT pt,
     UINT flags);
#line 7833 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"










































#line 7876 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"








#line 7885 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
#line 7886 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"








#line 7895 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


__declspec(dllimport)
DWORD
__stdcall
GetSysColor(
     int nIndex);


__declspec(dllimport)
HBRUSH
__stdcall
GetSysColorBrush(
     int nIndex);


#line 7912 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
SetSysColors(
     int cElements,
     const INT * lpaElements,
     const COLORREF * lpaRgbValues);

#line 7922 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
DrawFocusRect(
     HDC hDC,
     const RECT * lprc);

__declspec(dllimport)
int
__stdcall
FillRect(
     HDC hDC,
     const RECT *lprc,
     HBRUSH hbr);

__declspec(dllimport)
int
__stdcall
FrameRect(
     HDC hDC,
     const RECT *lprc,
     HBRUSH hbr);

__declspec(dllimport)
BOOL
__stdcall
InvertRect(
     HDC hDC,
     const RECT *lprc);

__declspec(dllimport)
BOOL
__stdcall
SetRect(
     LPRECT lprc,
     int xLeft,
     int yTop,
     int xRight,
     int yBottom);

__declspec(dllimport)
BOOL
__stdcall
SetRectEmpty(
     LPRECT lprc);

__declspec(dllimport)
BOOL
__stdcall
CopyRect(
     LPRECT lprcDst,
     const RECT *lprcSrc);

__declspec(dllimport)
BOOL
__stdcall
InflateRect(
     LPRECT lprc,
     int dx,
     int dy);

__declspec(dllimport)
BOOL
__stdcall
IntersectRect(
     LPRECT lprcDst,
     const RECT *lprcSrc1,
     const RECT *lprcSrc2);

__declspec(dllimport)
BOOL
__stdcall
UnionRect(
     LPRECT lprcDst,
     const RECT *lprcSrc1,
     const RECT *lprcSrc2);

__declspec(dllimport)
BOOL
__stdcall
SubtractRect(
     LPRECT lprcDst,
     const RECT *lprcSrc1,
     const RECT *lprcSrc2);

__declspec(dllimport)
BOOL
__stdcall
OffsetRect(
     LPRECT lprc,
     int dx,
     int dy);

__declspec(dllimport)
BOOL
__stdcall
IsRectEmpty(
     const RECT *lprc);

__declspec(dllimport)
BOOL
__stdcall
EqualRect(
     const RECT *lprc1,
     const RECT *lprc2);

__declspec(dllimport)
BOOL
__stdcall
PtInRect(
     const RECT *lprc,
     POINT pt);



__declspec(dllimport)
WORD
__stdcall
GetWindowWord(
     HWND hWnd,
     int nIndex);

__declspec(dllimport)
WORD
__stdcall
SetWindowWord(
     HWND hWnd,
     int nIndex,
     WORD wNewWord);

__declspec(dllimport)
LONG
__stdcall
GetWindowLongA(
     HWND hWnd,
     int nIndex);
__declspec(dllimport)
LONG
__stdcall
GetWindowLongW(
     HWND hWnd,
     int nIndex);




#line 8070 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
LONG
__stdcall
SetWindowLongA(
     HWND hWnd,
     int nIndex,
     LONG dwNewLong);
__declspec(dllimport)
LONG
__stdcall
SetWindowLongW(
     HWND hWnd,
     int nIndex,
     LONG dwNewLong);




#line 8090 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

















































#line 8140 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"







#line 8148 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

#line 8150 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
WORD
__stdcall
GetClassWord(
     HWND hWnd,
     int nIndex);

__declspec(dllimport)
WORD
__stdcall
SetClassWord(
     HWND hWnd,
     int nIndex,
     WORD wNewWord);

__declspec(dllimport)
DWORD
__stdcall
GetClassLongA(
     HWND hWnd,
     int nIndex);
__declspec(dllimport)
DWORD
__stdcall
GetClassLongW(
     HWND hWnd,
     int nIndex);




#line 8183 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
DWORD
__stdcall
SetClassLongA(
     HWND hWnd,
     int nIndex,
     LONG dwNewLong);
__declspec(dllimport)
DWORD
__stdcall
SetClassLongW(
     HWND hWnd,
     int nIndex,
     LONG dwNewLong);




#line 8203 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

















































#line 8253 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"







#line 8261 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

#line 8263 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

#line 8265 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


__declspec(dllimport)
BOOL
__stdcall
GetProcessDefaultLayout(
     DWORD *pdwDefaultLayout);

__declspec(dllimport)
BOOL
__stdcall
SetProcessDefaultLayout(
     DWORD dwDefaultLayout);
#line 8279 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
HWND
__stdcall
GetDesktopWindow(
    void);


__declspec(dllimport)
HWND
__stdcall
GetParent(
     HWND hWnd);

__declspec(dllimport)
HWND
__stdcall
SetParent(
     HWND hWndChild,
     HWND hWndNewParent);

__declspec(dllimport)
BOOL
__stdcall
EnumChildWindows(
     HWND hWndParent,
     WNDENUMPROC lpEnumFunc,
     LPARAM lParam);

__declspec(dllimport)
HWND
__stdcall
FindWindowA(
     LPCSTR lpClassName,
     LPCSTR lpWindowName);
__declspec(dllimport)
HWND
__stdcall
FindWindowW(
     LPCWSTR lpClassName,
     LPCWSTR lpWindowName);




#line 8325 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


__declspec(dllimport)
HWND
__stdcall
FindWindowExA(
     HWND hWndParent,
     HWND hWndChildAfter,
     LPCSTR lpszClass,
     LPCSTR lpszWindow);
__declspec(dllimport)
HWND
__stdcall
FindWindowExW(
     HWND hWndParent,
     HWND hWndChildAfter,
     LPCWSTR lpszClass,
     LPCWSTR lpszWindow);




#line 8348 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
HWND
__stdcall
GetShellWindow(
    void);

#line 8356 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


__declspec(dllimport)
BOOL
__stdcall
RegisterShellHookWindow(
     HWND hwnd);

__declspec(dllimport)
BOOL
__stdcall
DeregisterShellHookWindow(
     HWND hwnd);

__declspec(dllimport)
BOOL
__stdcall
EnumWindows(
     WNDENUMPROC lpEnumFunc,
     LPARAM lParam);

__declspec(dllimport)
BOOL
__stdcall
EnumThreadWindows(
     DWORD dwThreadId,
     WNDENUMPROC lpfn,
     LPARAM lParam);



__declspec(dllimport)
int
__stdcall
GetClassNameA(
     HWND hWnd,
     LPSTR lpClassName,
     int nMaxCount
    );
__declspec(dllimport)
int
__stdcall
GetClassNameW(
     HWND hWnd,
     LPWSTR lpClassName,
     int nMaxCount
    );




#line 8408 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"





















#line 8430 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



__declspec(dllimport)
HWND
__stdcall
GetTopWindow(
     HWND hWnd);





__declspec(dllimport)
DWORD
__stdcall
GetWindowThreadProcessId(
     HWND hWnd,
     LPDWORD lpdwProcessId);


__declspec(dllimport)
BOOL
__stdcall
IsGUIThread(
     BOOL bConvert);

#line 8458 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"





__declspec(dllimport)
HWND
__stdcall
GetLastActivePopup(
     HWND hWnd);












#line 8481 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


#line 8484 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
HWND
__stdcall
GetWindow(
     HWND hWnd,
     UINT uCmd);






__declspec(dllimport)
HHOOK
__stdcall
SetWindowsHookA(
     int nFilterType,
     HOOKPROC pfnFilterProc);
__declspec(dllimport)
HHOOK
__stdcall
SetWindowsHookW(
     int nFilterType,
     HOOKPROC pfnFilterProc);




#line 8514 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"





















#line 8536 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
UnhookWindowsHook(
     int nCode,
     HOOKPROC pfnFilterProc);

__declspec(dllimport)
HHOOK
__stdcall
SetWindowsHookExA(
     int idHook,
     HOOKPROC lpfn,
     HINSTANCE hmod,
     DWORD dwThreadId);
__declspec(dllimport)
HHOOK
__stdcall
SetWindowsHookExW(
     int idHook,
     HOOKPROC lpfn,
     HINSTANCE hmod,
     DWORD dwThreadId);




#line 8565 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
UnhookWindowsHookEx(
     HHOOK hhk);

__declspec(dllimport)
LRESULT
__stdcall
CallNextHookEx(
     HHOOK hhk,
     int nCode,
     WPARAM wParam,
     LPARAM lParam);










#line 8591 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
#line 8592 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"








































#line 8633 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"




#line 8638 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"




#line 8643 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"






















#line 8666 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"




__declspec(dllimport)
BOOL
__stdcall
CheckMenuRadioItem(
     HMENU hmenu,
     UINT first,
     UINT last,
     UINT check,
     UINT flags);
#line 8680 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"




typedef struct {
    WORD versionNumber;
    WORD offset;
} MENUITEMTEMPLATEHEADER, *PMENUITEMTEMPLATEHEADER;

typedef struct {        
    WORD mtOption;
    WORD mtID;
    WCHAR mtString[1];
} MENUITEMTEMPLATE, *PMENUITEMTEMPLATE;


#line 8697 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



























#line 8725 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



#line 8729 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"









#line 8739 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"





__declspec(dllimport)
HBITMAP
__stdcall
LoadBitmapA(
     HINSTANCE hInstance,
     LPCSTR lpBitmapName);
__declspec(dllimport)
HBITMAP
__stdcall
LoadBitmapW(
     HINSTANCE hInstance,
     LPCWSTR lpBitmapName);




#line 8761 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
HCURSOR
__stdcall
LoadCursorA(
     HINSTANCE hInstance,
     LPCSTR lpCursorName);
__declspec(dllimport)
HCURSOR
__stdcall
LoadCursorW(
     HINSTANCE hInstance,
     LPCWSTR lpCursorName);




#line 8779 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
HCURSOR
__stdcall
LoadCursorFromFileA(
     LPCSTR lpFileName);
__declspec(dllimport)
HCURSOR
__stdcall
LoadCursorFromFileW(
     LPCWSTR lpFileName);




#line 8795 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
HCURSOR
__stdcall
CreateCursor(
     HINSTANCE hInst,
     int xHotSpot,
     int yHotSpot,
     int nWidth,
     int nHeight,
     const void *pvANDPlane,
     const void *pvXORPlane);

__declspec(dllimport)
BOOL
__stdcall
DestroyCursor(
     HCURSOR hCursor);









#line 8823 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



















#line 8843 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



#line 8847 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
SetSystemCursor(
     HCURSOR hcur,
     DWORD id);

typedef struct _ICONINFO {
    BOOL    fIcon;
    DWORD   xHotspot;
    DWORD   yHotspot;
    HBITMAP hbmMask;
    HBITMAP hbmColor;
} ICONINFO;
typedef ICONINFO *PICONINFO;

__declspec(dllimport)
HICON
__stdcall
LoadIconA(
     HINSTANCE hInstance,
     LPCSTR lpIconName);
__declspec(dllimport)
HICON
__stdcall
LoadIconW(
     HINSTANCE hInstance,
     LPCWSTR lpIconName);




#line 8881 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


__declspec(dllimport)
UINT
__stdcall
PrivateExtractIconsA(
     LPCSTR szFileName,
     int nIconIndex,
     int cxIcon,
     int cyIcon,
     HICON *phicon,
     UINT *piconid,
     UINT nIcons,
     UINT flags);
__declspec(dllimport)
UINT
__stdcall
PrivateExtractIconsW(
     LPCWSTR szFileName,
     int nIconIndex,
     int cxIcon,
     int cyIcon,
     HICON *phicon,
     UINT *piconid,
     UINT nIcons,
     UINT flags);




#line 8912 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
HICON
__stdcall
CreateIcon(
     HINSTANCE hInstance,
     int nWidth,
     int nHeight,
     BYTE cPlanes,
     BYTE cBitsPixel,
     const BYTE *lpbANDbits,
     const BYTE *lpbXORbits);

__declspec(dllimport)
BOOL
__stdcall
DestroyIcon(
     HICON hIcon);

__declspec(dllimport)
int
__stdcall
LookupIconIdFromDirectory(
     PBYTE presbits,
     BOOL fIcon);


__declspec(dllimport)
int
__stdcall
LookupIconIdFromDirectoryEx(
     PBYTE presbits,
     BOOL fIcon,
     int cxDesired,
     int cyDesired,
     UINT Flags);
#line 8949 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
HICON
__stdcall
CreateIconFromResource(
     PBYTE presbits,
     DWORD dwResSize,
     BOOL fIcon,
     DWORD dwVer);


__declspec(dllimport)
HICON
__stdcall
CreateIconFromResourceEx(
     PBYTE presbits,
     DWORD dwResSize,
     BOOL fIcon,
     DWORD dwVer,
     int cxDesired,
     int cyDesired,
     UINT Flags);


typedef struct tagCURSORSHAPE
{
    int     xHotSpot;
    int     yHotSpot;
    int     cx;
    int     cy;
    int     cbWidth;
    BYTE    Planes;
    BYTE    BitsPixel;
} CURSORSHAPE,  *LPCURSORSHAPE;
#line 8984 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"





















__declspec(dllimport)
HANDLE
__stdcall
LoadImageA(
     HINSTANCE hInst,
     LPCSTR name,
     UINT type,
     int cx,
     int cy,
     UINT fuLoad);
__declspec(dllimport)
HANDLE
__stdcall
LoadImageW(
     HINSTANCE hInst,
     LPCWSTR name,
     UINT type,
     int cx,
     int cy,
     UINT fuLoad);




#line 9030 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
HANDLE
__stdcall
CopyImage(
     HANDLE h,
     UINT type,
     int cx,
     int cy,
     UINT flags);








#line 9049 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport) BOOL __stdcall DrawIconEx(
     HDC hdc,
     int xLeft,
     int yTop,
     HICON hIcon,
     int cxWidth,
     int cyWidth,
     UINT istepIfAniCur,
     HBRUSH hbrFlickerFreeDraw,
     UINT diFlags);

#line 9062 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
HICON
__stdcall
CreateIconIndirect(
     PICONINFO piconinfo);

__declspec(dllimport)
HICON
__stdcall
CopyIcon(
     HICON hIcon);

__declspec(dllimport)
BOOL
__stdcall
GetIconInfo(
     HICON hIcon,
     PICONINFO piconinfo);


typedef struct _ICONINFOEXA {
    DWORD   cbSize;
    BOOL    fIcon;
    DWORD   xHotspot;
    DWORD   yHotspot;
    HBITMAP hbmMask;
    HBITMAP hbmColor;
    WORD    wResID;
    CHAR    szModName[260];
    CHAR    szResName[260];
} ICONINFOEXA, *PICONINFOEXA;
typedef struct _ICONINFOEXW {
    DWORD   cbSize;
    BOOL    fIcon;
    DWORD   xHotspot;
    DWORD   yHotspot;
    HBITMAP hbmMask;
    HBITMAP hbmColor;
    WORD    wResID;
    WCHAR   szModName[260];
    WCHAR   szResName[260];
} ICONINFOEXW, *PICONINFOEXW;




typedef ICONINFOEXA ICONINFOEX;
typedef PICONINFOEXA PICONINFOEX;
#line 9112 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
GetIconInfoExA(
     HICON hicon,
     PICONINFOEXA piconinfo);
__declspec(dllimport)
BOOL
__stdcall
GetIconInfoExW(
     HICON hicon,
     PICONINFOEXW piconinfo);




#line 9130 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
#line 9131 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"




#line 9136 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


















































































































#line 9251 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


#line 9254 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
#line 9255 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"





#line 9261 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


#line 9264 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


__declspec(dllimport)
int
__stdcall
LoadStringA(
     HINSTANCE hInstance,
     UINT uID,
     LPSTR lpBuffer,
     int cchBufferMax);
__declspec(dllimport)
int
__stdcall
LoadStringW(
     HINSTANCE hInstance,
     UINT uID,
     LPWSTR lpBuffer,
     int cchBufferMax);




#line 9287 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"















#line 9303 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"




#line 9308 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"




#line 9313 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
#line 9314 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"





























#line 9344 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


#line 9347 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
















#line 9364 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"






#line 9371 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"









#line 9381 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"













































#line 9427 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"




#line 9432 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


#line 9435 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"









































#line 9477 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
















#line 9494 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"













#line 9508 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


#line 9511 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"







#line 9519 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

























#line 9545 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


#line 9548 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"












#line 9561 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
















#line 9578 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

#line 9580 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"































__declspec(dllimport)
BOOL
__stdcall
IsDialogMessageA(
     HWND hDlg,
     LPMSG lpMsg);
__declspec(dllimport)
BOOL
__stdcall
IsDialogMessageW(
     HWND hDlg,
     LPMSG lpMsg);




#line 9628 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

#line 9630 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
MapDialogRect(
     HWND hDlg,
     LPRECT lpRect);

__declspec(dllimport)
int
__stdcall
DlgDirListA(
     HWND hDlg,
     LPSTR lpPathSpec,
     int nIDListBox,
     int nIDStaticPath,
     UINT uFileType);
__declspec(dllimport)
int
__stdcall
DlgDirListW(
     HWND hDlg,
     LPWSTR lpPathSpec,
     int nIDListBox,
     int nIDStaticPath,
     UINT uFileType);




#line 9661 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"















__declspec(dllimport)
BOOL
__stdcall
DlgDirSelectExA(
     HWND hwndDlg,
     LPSTR lpString,
     int chCount,
     int idListBox);
__declspec(dllimport)
BOOL
__stdcall
DlgDirSelectExW(
     HWND hwndDlg,
     LPWSTR lpString,
     int chCount,
     int idListBox);




#line 9697 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
int
__stdcall
DlgDirListComboBoxA(
     HWND hDlg,
     LPSTR lpPathSpec,
     int nIDComboBox,
     int nIDStaticPath,
     UINT uFiletype);
__declspec(dllimport)
int
__stdcall
DlgDirListComboBoxW(
     HWND hDlg,
     LPWSTR lpPathSpec,
     int nIDComboBox,
     int nIDStaticPath,
     UINT uFiletype);




#line 9721 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
DlgDirSelectComboBoxExA(
     HWND hwndDlg,
     LPSTR lpString,
     int cchOut,
     int idComboBox);
__declspec(dllimport)
BOOL
__stdcall
DlgDirSelectComboBoxExW(
     HWND hwndDlg,
     LPWSTR lpString,
     int cchOut,
     int idComboBox);




#line 9743 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

























#line 9769 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



#line 9773 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"







#line 9781 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


































                                  




























































#line 9877 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


#line 9880 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"




#line 9885 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"









#line 9895 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

#line 9897 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"























#line 9921 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"





#line 9927 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"












































#line 9972 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

#line 9974 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"











































#line 10018 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
#line 10019 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



#line 10023 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"









#line 10033 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
#line 10034 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"




















#line 10055 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


#line 10058 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"














#line 10073 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



#line 10077 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"









typedef struct tagSCROLLINFO
{
    UINT    cbSize;
    UINT    fMask;
    int     nMin;
    int     nMax;
    UINT    nPage;
    int     nPos;
    int     nTrackPos;
}   SCROLLINFO,  *LPSCROLLINFO;
typedef SCROLLINFO const  *LPCSCROLLINFO;

__declspec(dllimport)
int
__stdcall
SetScrollInfo(
     HWND hwnd,
     int nBar,
     LPCSCROLLINFO lpsi,
     BOOL redraw);

__declspec(dllimport)
BOOL
__stdcall
GetScrollInfo(
     HWND hwnd,
     int nBar,
     LPSCROLLINFO lpsi);

#line 10116 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
#line 10117 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
#line 10118 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
















#line 10135 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

typedef struct tagMDICREATESTRUCTA {
    LPCSTR   szClass;
    LPCSTR   szTitle;
    HANDLE hOwner;
    int x;
    int y;
    int cx;
    int cy;
    DWORD style;
    LPARAM lParam;        
} MDICREATESTRUCTA, *LPMDICREATESTRUCTA;
typedef struct tagMDICREATESTRUCTW {
    LPCWSTR  szClass;
    LPCWSTR  szTitle;
    HANDLE hOwner;
    int x;
    int y;
    int cx;
    int cy;
    DWORD style;
    LPARAM lParam;        
} MDICREATESTRUCTW, *LPMDICREATESTRUCTW;




typedef MDICREATESTRUCTA MDICREATESTRUCT;
typedef LPMDICREATESTRUCTA LPMDICREATESTRUCT;
#line 10165 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

typedef struct tagCLIENTCREATESTRUCT {
    HANDLE hWindowMenu;
    UINT idFirstChild;
} CLIENTCREATESTRUCT, *LPCLIENTCREATESTRUCT;

__declspec(dllimport)
LRESULT
__stdcall
DefFrameProcA(
     HWND hWnd,
     HWND hWndMDIClient,
     UINT uMsg,
     WPARAM wParam,
     LPARAM lParam);
__declspec(dllimport)
LRESULT
__stdcall
DefFrameProcW(
     HWND hWnd,
     HWND hWndMDIClient,
     UINT uMsg,
     WPARAM wParam,
     LPARAM lParam);




#line 10194 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)

LRESULT
__stdcall



#line 10203 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
DefMDIChildProcA(
     HWND hWnd,
     UINT uMsg,
     WPARAM wParam,
     LPARAM lParam);
__declspec(dllimport)

LRESULT
__stdcall



#line 10216 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
DefMDIChildProcW(
     HWND hWnd,
     UINT uMsg,
     WPARAM wParam,
     LPARAM lParam);




#line 10226 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



__declspec(dllimport)
BOOL
__stdcall
TranslateMDISysAccel(
     HWND hWndClient,
     LPMSG lpMsg);

#line 10237 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
UINT
__stdcall
ArrangeIconicWindows(
     HWND hWnd);

__declspec(dllimport)
HWND
__stdcall
CreateMDIWindowA(
     LPCSTR lpClassName,
     LPCSTR lpWindowName,
     DWORD dwStyle,
     int X,
     int Y,
     int nWidth,
     int nHeight,
     HWND hWndParent,
     HINSTANCE hInstance,
     LPARAM lParam);
__declspec(dllimport)
HWND
__stdcall
CreateMDIWindowW(
     LPCWSTR lpClassName,
     LPCWSTR lpWindowName,
     DWORD dwStyle,
     int X,
     int Y,
     int nWidth,
     int nHeight,
     HWND hWndParent,
     HINSTANCE hInstance,
     LPARAM lParam);




#line 10277 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


__declspec(dllimport)
WORD
__stdcall
TileWindows(
     HWND hwndParent,
     UINT wHow,
     const RECT * lpRect,
     UINT cKids,
     const HWND  * lpKids);

__declspec(dllimport)
WORD
__stdcall CascadeWindows(
     HWND hwndParent,
     UINT wHow,
     const RECT * lpRect,
     UINT cKids,
     const HWND  * lpKids);

#line 10299 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
#line 10300 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

#line 10302 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"





typedef DWORD HELPPOLY;
typedef struct tagMULTIKEYHELPA {

    DWORD  mkSize;


#line 10314 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
    CHAR   mkKeylist;
    CHAR   szKeyphrase[1];
} MULTIKEYHELPA, *PMULTIKEYHELPA, *LPMULTIKEYHELPA;
typedef struct tagMULTIKEYHELPW {

    DWORD  mkSize;


#line 10323 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
    WCHAR  mkKeylist;
    WCHAR  szKeyphrase[1];
} MULTIKEYHELPW, *PMULTIKEYHELPW, *LPMULTIKEYHELPW;





typedef MULTIKEYHELPA MULTIKEYHELP;
typedef PMULTIKEYHELPA PMULTIKEYHELP;
typedef LPMULTIKEYHELPA LPMULTIKEYHELP;
#line 10335 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

typedef struct tagHELPWININFOA {
    int  wStructSize;
    int  x;
    int  y;
    int  dx;
    int  dy;
    int  wMax;
    CHAR   rgchMember[2];
} HELPWININFOA, *PHELPWININFOA, *LPHELPWININFOA;
typedef struct tagHELPWININFOW {
    int  wStructSize;
    int  x;
    int  y;
    int  dx;
    int  dy;
    int  wMax;
    WCHAR  rgchMember[2];
} HELPWININFOW, *PHELPWININFOW, *LPHELPWININFOW;





typedef HELPWININFOA HELPWININFO;
typedef PHELPWININFOA PHELPWININFO;
typedef LPHELPWININFOA LPHELPWININFO;
#line 10363 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"





































#line 10401 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



__declspec(dllimport)
BOOL
__stdcall
WinHelpA(
     HWND hWndMain,
     LPCSTR lpszHelp,
     UINT uCommand,
     ULONG_PTR dwData);
__declspec(dllimport)
BOOL
__stdcall
WinHelpW(
     HWND hWndMain,
     LPCWSTR lpszHelp,
     UINT uCommand,
     ULONG_PTR dwData);




#line 10425 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

#line 10427 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"





#line 10433 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



#line 10437 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



#line 10441 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


__declspec(dllimport)
DWORD
__stdcall
GetGuiResources(
     HANDLE hProcess,
     DWORD uiFlags);
#line 10450 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"





















































































#line 10536 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"















#line 10552 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"





#line 10558 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"















#line 10574 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



#line 10578 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"







#line 10586 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"







#line 10594 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"




























#line 10623 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"












































#line 10668 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"













#line 10682 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


































#line 10717 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"






#line 10724 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

#line 10726 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"












typedef struct tagNONCLIENTMETRICSA
{
    UINT    cbSize;
    int     iBorderWidth;
    int     iScrollWidth;
    int     iScrollHeight;
    int     iCaptionWidth;
    int     iCaptionHeight;
    LOGFONTA lfCaptionFont;
    int     iSmCaptionWidth;
    int     iSmCaptionHeight;
    LOGFONTA lfSmCaptionFont;
    int     iMenuWidth;
    int     iMenuHeight;
    LOGFONTA lfMenuFont;
    LOGFONTA lfStatusFont;
    LOGFONTA lfMessageFont;

    int     iPaddedBorderWidth;
#line 10758 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
}   NONCLIENTMETRICSA, *PNONCLIENTMETRICSA, * LPNONCLIENTMETRICSA;
typedef struct tagNONCLIENTMETRICSW
{
    UINT    cbSize;
    int     iBorderWidth;
    int     iScrollWidth;
    int     iScrollHeight;
    int     iCaptionWidth;
    int     iCaptionHeight;
    LOGFONTW lfCaptionFont;
    int     iSmCaptionWidth;
    int     iSmCaptionHeight;
    LOGFONTW lfSmCaptionFont;
    int     iMenuWidth;
    int     iMenuHeight;
    LOGFONTW lfMenuFont;
    LOGFONTW lfStatusFont;
    LOGFONTW lfMessageFont;

    int     iPaddedBorderWidth;
#line 10779 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
}   NONCLIENTMETRICSW, *PNONCLIENTMETRICSW, * LPNONCLIENTMETRICSW;





typedef NONCLIENTMETRICSA NONCLIENTMETRICS;
typedef PNONCLIENTMETRICSA PNONCLIENTMETRICS;
typedef LPNONCLIENTMETRICSA LPNONCLIENTMETRICS;
#line 10789 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
#line 10790 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
#line 10791 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"















typedef struct tagMINIMIZEDMETRICS
{
    UINT    cbSize;
    int     iWidth;
    int     iHorzGap;
    int     iVertGap;
    int     iArrange;
}   MINIMIZEDMETRICS, *PMINIMIZEDMETRICS, *LPMINIMIZEDMETRICS;



typedef struct tagICONMETRICSA
{
    UINT    cbSize;
    int     iHorzSpacing;
    int     iVertSpacing;
    int     iTitleWrap;
    LOGFONTA lfFont;
}   ICONMETRICSA, *PICONMETRICSA, *LPICONMETRICSA;
typedef struct tagICONMETRICSW
{
    UINT    cbSize;
    int     iHorzSpacing;
    int     iVertSpacing;
    int     iTitleWrap;
    LOGFONTW lfFont;
}   ICONMETRICSW, *PICONMETRICSW, *LPICONMETRICSW;





typedef ICONMETRICSA ICONMETRICS;
typedef PICONMETRICSA PICONMETRICS;
typedef LPICONMETRICSA LPICONMETRICS;
#line 10842 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
#line 10843 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
#line 10844 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

typedef struct tagANIMATIONINFO
{
    UINT    cbSize;
    int     iMinAnimate;
}   ANIMATIONINFO, *LPANIMATIONINFO;

typedef struct tagSERIALKEYSA
{
    UINT    cbSize;
    DWORD   dwFlags;
    LPSTR     lpszActivePort;
    LPSTR     lpszPort;
    UINT    iBaudRate;
    UINT    iPortState;
    UINT    iActive;
}   SERIALKEYSA, *LPSERIALKEYSA;
typedef struct tagSERIALKEYSW
{
    UINT    cbSize;
    DWORD   dwFlags;
    LPWSTR    lpszActivePort;
    LPWSTR    lpszPort;
    UINT    iBaudRate;
    UINT    iPortState;
    UINT    iActive;
}   SERIALKEYSW, *LPSERIALKEYSW;




typedef SERIALKEYSA SERIALKEYS;
typedef LPSERIALKEYSA LPSERIALKEYS;
#line 10878 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"







typedef struct tagHIGHCONTRASTA
{
    UINT    cbSize;
    DWORD   dwFlags;
    LPSTR   lpszDefaultScheme;
}   HIGHCONTRASTA, *LPHIGHCONTRASTA;
typedef struct tagHIGHCONTRASTW
{
    UINT    cbSize;
    DWORD   dwFlags;
    LPWSTR  lpszDefaultScheme;
}   HIGHCONTRASTW, *LPHIGHCONTRASTW;




typedef HIGHCONTRASTA HIGHCONTRAST;
typedef LPHIGHCONTRASTA LPHIGHCONTRAST;
#line 10904 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"






















#line 10927 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"




#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\tvout.h"









#pragma once
#line 12 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\tvout.h"





typedef struct _VIDEOPARAMETERS {
    GUID  Guid;                         
    ULONG dwOffset;                     
    ULONG dwCommand;                    
    ULONG dwFlags;                      
    ULONG dwMode;                       
    ULONG dwTVStandard;                 
    ULONG dwAvailableModes;             
    ULONG dwAvailableTVStandard;        
    ULONG dwFlickerFilter;              
    ULONG dwOverScanX;                  
    ULONG dwOverScanY;                  
    ULONG dwMaxUnscaledX;               
    ULONG dwMaxUnscaledY;               
    ULONG dwPositionX;                  
    ULONG dwPositionY;                  
    ULONG dwBrightness;                 
    ULONG dwContrast;                   
    ULONG dwCPType;                     
    ULONG dwCPCommand;                  
    ULONG dwCPStandard;                 
    ULONG dwCPKey;
    ULONG bCP_APSTriggerBits;           
    UCHAR bOEMCopyProtection[256];      
} VIDEOPARAMETERS, *PVIDEOPARAMETERS, *LPVIDEOPARAMETERS;


                                        












































#line 90 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\tvout.h"

#line 10932 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"











#line 10944 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"




__declspec(dllimport)
LONG
__stdcall
ChangeDisplaySettingsA(
     DEVMODEA* lpDevMode,
     DWORD dwFlags);
__declspec(dllimport)
LONG
__stdcall
ChangeDisplaySettingsW(
     DEVMODEW* lpDevMode,
     DWORD dwFlags);




#line 10965 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
LONG
__stdcall
ChangeDisplaySettingsExA(
     LPCSTR lpszDeviceName,
     DEVMODEA* lpDevMode,
     HWND hwnd,
     DWORD dwflags,
     LPVOID lParam);
__declspec(dllimport)
LONG
__stdcall
ChangeDisplaySettingsExW(
     LPCWSTR lpszDeviceName,
     DEVMODEW* lpDevMode,
     HWND hwnd,
     DWORD dwflags,
     LPVOID lParam);




#line 10989 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"




__declspec(dllimport)
BOOL
__stdcall
EnumDisplaySettingsA(
     LPCSTR lpszDeviceName,
     DWORD iModeNum,
     DEVMODEA* lpDevMode);
__declspec(dllimport)
BOOL
__stdcall
EnumDisplaySettingsW(
     LPCWSTR lpszDeviceName,
     DWORD iModeNum,
     DEVMODEW* lpDevMode);




#line 11012 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



__declspec(dllimport)
BOOL
__stdcall
EnumDisplaySettingsExA(
     LPCSTR lpszDeviceName,
     DWORD iModeNum,
     DEVMODEA* lpDevMode,
     DWORD dwFlags);
__declspec(dllimport)
BOOL
__stdcall
EnumDisplaySettingsExW(
     LPCWSTR lpszDeviceName,
     DWORD iModeNum,
     DEVMODEW* lpDevMode,
     DWORD dwFlags);




#line 11036 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"





__declspec(dllimport)
BOOL
__stdcall
EnumDisplayDevicesA(
     LPCSTR lpDevice,
     DWORD iDevNum,
     PDISPLAY_DEVICEA lpDisplayDevice,
     DWORD dwFlags);
__declspec(dllimport)
BOOL
__stdcall
EnumDisplayDevicesW(
     LPCWSTR lpDevice,
     DWORD iDevNum,
     PDISPLAY_DEVICEW lpDisplayDevice,
     DWORD dwFlags);




#line 11062 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"




#line 11067 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



__declspec(dllimport)
LONG
__stdcall
GetDisplayConfigBufferSizes(
     UINT32 flags,
     UINT32* numPathArrayElements,
     UINT32* numModeInfoArrayElements);

__declspec(dllimport)
LONG
__stdcall
SetDisplayConfig(
     UINT32 numPathArrayElements,
     DISPLAYCONFIG_PATH_INFO* pathArray,
     UINT32 numModeInfoArrayElements,
     DISPLAYCONFIG_MODE_INFO* modeInfoArray,
     UINT32 flags);

__declspec(dllimport)
LONG
__stdcall
QueryDisplayConfig(
     UINT32 flags,
     UINT32* numPathArrayElements,
     DISPLAYCONFIG_PATH_INFO* pathArray,
     UINT32* numModeInfoArrayElements,
     DISPLAYCONFIG_MODE_INFO* modeInfoArray,
     DISPLAYCONFIG_TOPOLOGY_ID* currentTopologyId);

__declspec(dllimport)
LONG
__stdcall
DisplayConfigGetDeviceInfo(
     DISPLAYCONFIG_DEVICE_INFO_HEADER* requestPacket);

__declspec(dllimport)
LONG
__stdcall
DisplayConfigSetDeviceInfo(
     DISPLAYCONFIG_DEVICE_INFO_HEADER* setPacket);

#line 11112 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

#line 11114 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
#line 11115 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


__declspec(dllimport)
BOOL
__stdcall
SystemParametersInfoA(
     UINT uiAction,
     UINT uiParam,
     PVOID pvParam,
     UINT fWinIni);
__declspec(dllimport)
BOOL
__stdcall
SystemParametersInfoW(
     UINT uiAction,
     UINT uiParam,
     PVOID pvParam,
     UINT fWinIni);




#line 11138 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


#line 11141 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"




typedef struct tagFILTERKEYS
{
    UINT  cbSize;
    DWORD dwFlags;
    DWORD iWaitMSec;            
    DWORD iDelayMSec;           
    DWORD iRepeatMSec;          
    DWORD iBounceMSec;          
} FILTERKEYS, *LPFILTERKEYS;












typedef struct tagSTICKYKEYS
{
    UINT  cbSize;
    DWORD dwFlags;
} STICKYKEYS, *LPSTICKYKEYS;






























#line 11202 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

typedef struct tagMOUSEKEYS
{
    UINT cbSize;
    DWORD dwFlags;
    DWORD iMaxSpeed;
    DWORD iTimeToMaxSpeed;
    DWORD iCtrlSpeed;
    DWORD dwReserved1;
    DWORD dwReserved2;
} MOUSEKEYS, *LPMOUSEKEYS;


















#line 11232 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

typedef struct tagACCESSTIMEOUT
{
    UINT  cbSize;
    DWORD dwFlags;
    DWORD iTimeOutMSec;
} ACCESSTIMEOUT, *LPACCESSTIMEOUT;
























typedef struct tagSOUNDSENTRYA
{
    UINT cbSize;
    DWORD dwFlags;
    DWORD iFSTextEffect;
    DWORD iFSTextEffectMSec;
    DWORD iFSTextEffectColorBits;
    DWORD iFSGrafEffect;
    DWORD iFSGrafEffectMSec;
    DWORD iFSGrafEffectColor;
    DWORD iWindowsEffect;
    DWORD iWindowsEffectMSec;
    LPSTR   lpszWindowsEffectDLL;
    DWORD iWindowsEffectOrdinal;
} SOUNDSENTRYA, *LPSOUNDSENTRYA;
typedef struct tagSOUNDSENTRYW
{
    UINT cbSize;
    DWORD dwFlags;
    DWORD iFSTextEffect;
    DWORD iFSTextEffectMSec;
    DWORD iFSTextEffectColorBits;
    DWORD iFSGrafEffect;
    DWORD iFSGrafEffectMSec;
    DWORD iFSGrafEffectColor;
    DWORD iWindowsEffect;
    DWORD iWindowsEffectMSec;
    LPWSTR  lpszWindowsEffectDLL;
    DWORD iWindowsEffectOrdinal;
} SOUNDSENTRYW, *LPSOUNDSENTRYW;




typedef SOUNDSENTRYA SOUNDSENTRY;
typedef LPSOUNDSENTRYA LPSOUNDSENTRY;
#line 11300 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"









__declspec(dllimport)
BOOL
__stdcall
SoundSentry(void);
#line 11314 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

typedef struct tagTOGGLEKEYS
{
    UINT cbSize;
    DWORD dwFlags;
} TOGGLEKEYS, *LPTOGGLEKEYS;












typedef struct tagAUDIODESCRIPTION {
    UINT cbSize;   
    BOOL Enabled;  
    LCID Locale;   
} AUDIODESCRIPTION, *LPAUDIODESCRIPTION;
#line 11338 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"






__declspec(dllimport)
void
__stdcall
SetDebugErrorLevel(
     DWORD dwLevel);









__declspec(dllimport)
void
__stdcall
SetLastErrorEx(
     DWORD dwErrCode,
     DWORD dwType);

__declspec(dllimport)
int
__stdcall
InternalGetWindowText(
     HWND hWnd,
     LPWSTR pString,
     int cchMaxCount);










#line 11383 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
CancelShutdown(
    void);












__declspec(dllimport)
HMONITOR
__stdcall
MonitorFromPoint(
     POINT pt,
     DWORD dwFlags);

__declspec(dllimport)
HMONITOR
__stdcall
MonitorFromRect(
     LPCRECT lprc,
     DWORD dwFlags);

__declspec(dllimport)
HMONITOR
__stdcall
MonitorFromWindow(
     HWND hwnd,
     DWORD dwFlags);







typedef struct tagMONITORINFO
{
    DWORD   cbSize;
    RECT    rcMonitor;
    RECT    rcWork;
    DWORD   dwFlags;
} MONITORINFO, *LPMONITORINFO;


typedef struct tagMONITORINFOEXA : public tagMONITORINFO
{
    CHAR        szDevice[32];
} MONITORINFOEXA, *LPMONITORINFOEXA;
typedef struct tagMONITORINFOEXW : public tagMONITORINFO
{
    WCHAR       szDevice[32];
} MONITORINFOEXW, *LPMONITORINFOEXW;




typedef MONITORINFOEXA MONITORINFOEX;
typedef LPMONITORINFOEXA LPMONITORINFOEX;
#line 11452 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


















#line 11471 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
GetMonitorInfoA(
     HMONITOR hMonitor,
     LPMONITORINFO lpmi);
__declspec(dllimport)
BOOL
__stdcall
GetMonitorInfoW(
     HMONITOR hMonitor,
     LPMONITORINFO lpmi);




#line 11489 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

typedef BOOL (__stdcall* MONITORENUMPROC)(HMONITOR, HDC, LPRECT, LPARAM);

__declspec(dllimport)
BOOL
__stdcall
EnumDisplayMonitors(
     HDC hdc,
     LPCRECT lprcClip,
     MONITORENUMPROC lpfnEnum,
     LPARAM dwData);








__declspec(dllimport)
void
__stdcall
NotifyWinEvent(
     DWORD event,
     HWND  hwnd,
     LONG  idObject,
     LONG  idChild);

typedef void (__stdcall* WINEVENTPROC)(
    HWINEVENTHOOK hWinEventHook,
    DWORD         event,
    HWND          hwnd,
    LONG          idObject,
    LONG          idChild,
    DWORD         idEventThread,
    DWORD         dwmsEventTime);

__declspec(dllimport)
HWINEVENTHOOK
__stdcall
SetWinEventHook(
     DWORD eventMin,
     DWORD eventMax,
     HMODULE hmodWinEventProc,
     WINEVENTPROC pfnWinEventProc,
     DWORD idProcess,
     DWORD idThread,
     DWORD dwFlags);


__declspec(dllimport)
BOOL
__stdcall
IsWinEventHookInstalled(
     DWORD event);
#line 11545 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"









__declspec(dllimport)
BOOL
__stdcall
UnhookWinEvent(
     HWINEVENTHOOK hWinEventHook);















































































































































































































#line 11767 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"













#line 11781 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"















#line 11797 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

#line 11799 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"






#line 11806 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



#line 11810 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"






































































































































































































#line 12009 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



#line 12013 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"






#line 12020 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"






































typedef struct tagGUITHREADINFO
{
    DWORD   cbSize;
    DWORD   flags;
    HWND    hwndActive;
    HWND    hwndFocus;
    HWND    hwndCapture;
    HWND    hwndMenuOwner;
    HWND    hwndMoveSize;
    HWND    hwndCaret;
    RECT    rcCaret;
} GUITHREADINFO, *PGUITHREADINFO,  * LPGUITHREADINFO;









#line 12080 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

#line 12082 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
#line 12083 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
GetGUIThreadInfo(
     DWORD idThread,
     PGUITHREADINFO pgui);

__declspec(dllimport)
BOOL
__stdcall
BlockInput(
    BOOL fBlockIt);





__declspec(dllimport)
BOOL
__stdcall
SetProcessDPIAware(
    void);

__declspec(dllimport)
BOOL
__stdcall
IsProcessDPIAware(
    void);
#line 12113 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
UINT
__stdcall
GetWindowModuleFileNameA(
     HWND hwnd,
     LPSTR pszFileName,
     UINT cchFileNameMax);
__declspec(dllimport)
UINT
__stdcall
GetWindowModuleFileNameW(
     HWND hwnd,
     LPWSTR pszFileName,
     UINT cchFileNameMax);




#line 12133 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


































#line 12168 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"







typedef struct tagCURSORINFO
{
    DWORD   cbSize;
    DWORD   flags;
    HCURSOR hCursor;
    POINT   ptScreenPos;
} CURSORINFO, *PCURSORINFO, *LPCURSORINFO;



__declspec(dllimport)
BOOL
__stdcall
GetCursorInfo(
     PCURSORINFO pci);




typedef struct tagWINDOWINFO
{
    DWORD cbSize;
    RECT rcWindow;
    RECT rcClient;
    DWORD dwStyle;
    DWORD dwExStyle;
    DWORD dwWindowStatus;
    UINT cxWindowBorders;
    UINT cyWindowBorders;
    ATOM atomWindowType;
    WORD wCreatorVersion;
} WINDOWINFO, *PWINDOWINFO, *LPWINDOWINFO;



__declspec(dllimport)
BOOL
__stdcall
GetWindowInfo(
     HWND hwnd,
     PWINDOWINFO pwi);




typedef struct tagTITLEBARINFO
{
    DWORD cbSize;
    RECT rcTitleBar;
    DWORD rgstate[5 + 1];
} TITLEBARINFO, *PTITLEBARINFO, *LPTITLEBARINFO;

__declspec(dllimport)
BOOL
__stdcall
GetTitleBarInfo(
     HWND hwnd,
     PTITLEBARINFO pti);


typedef struct tagTITLEBARINFOEX
{
    DWORD cbSize;
    RECT rcTitleBar;
    DWORD rgstate[5 + 1];
    RECT rgrect[5 + 1];
} TITLEBARINFOEX, *PTITLEBARINFOEX, *LPTITLEBARINFOEX;
#line 12243 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"




typedef struct tagMENUBARINFO
{
    DWORD cbSize;
    RECT rcBar;          
    HMENU hMenu;         
    HWND hwndMenu;       
    BOOL fBarFocused:1;  
    BOOL fFocused:1;     
} MENUBARINFO, *PMENUBARINFO, *LPMENUBARINFO;

__declspec(dllimport)
BOOL
__stdcall
GetMenuBarInfo(
     HWND hwnd,
     LONG idObject,
     LONG idItem,
     PMENUBARINFO pmbi);




typedef struct tagSCROLLBARINFO
{
    DWORD cbSize;
    RECT rcScrollBar;
    int dxyLineButton;
    int xyThumbTop;
    int xyThumbBottom;
    int reserved;
    DWORD rgstate[5 + 1];
} SCROLLBARINFO, *PSCROLLBARINFO, *LPSCROLLBARINFO;

__declspec(dllimport)
BOOL
__stdcall
GetScrollBarInfo(
     HWND hwnd,
     LONG idObject,
     PSCROLLBARINFO psbi);




typedef struct tagCOMBOBOXINFO
{
    DWORD cbSize;
    RECT rcItem;
    RECT rcButton;
    DWORD stateButton;
    HWND hwndCombo;
    HWND hwndItem;
    HWND hwndList;
} COMBOBOXINFO, *PCOMBOBOXINFO, *LPCOMBOBOXINFO;

__declspec(dllimport)
BOOL
__stdcall
GetComboBoxInfo(
     HWND hwndCombo,
     PCOMBOBOXINFO pcbi);








__declspec(dllimport)
HWND
__stdcall
GetAncestor(
     HWND hwnd,
     UINT gaFlags);








__declspec(dllimport)
HWND
__stdcall
RealChildWindowFromPoint(
     HWND hwndParent,
     POINT ptParentClientCoords);






__declspec(dllimport)
UINT
__stdcall
RealGetWindowClassA(
     HWND hwnd,
     LPSTR ptszClassName,
     UINT cchClassNameMax);




__declspec(dllimport)
UINT
__stdcall
RealGetWindowClassW(
     HWND hwnd,
     LPWSTR ptszClassName,
     UINT cchClassNameMax);




#line 12365 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"




typedef struct tagALTTABINFO
{
    DWORD cbSize;
    int cItems;
    int cColumns;
    int cRows;
    int iColFocus;
    int iRowFocus;
    int cxItem;
    int cyItem;
    POINT ptStart;
} ALTTABINFO, *PALTTABINFO, *LPALTTABINFO;

__declspec(dllimport)
BOOL
__stdcall
GetAltTabInfoA(
     HWND hwnd,
     int iItem,
     PALTTABINFO pati,
     LPSTR pszItemText,
     UINT cchItemText);
__declspec(dllimport)
BOOL
__stdcall
GetAltTabInfoW(
     HWND hwnd,
     int iItem,
     PALTTABINFO pati,
     LPWSTR pszItemText,
     UINT cchItemText);




#line 12405 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"





__declspec(dllimport)
DWORD
__stdcall
GetListBoxInfo(
     HWND hwnd);

#line 12417 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
#line 12418 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



__declspec(dllimport)
BOOL
__stdcall
LockWorkStation(
    void);
#line 12427 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"



__declspec(dllimport)
BOOL
__stdcall
UserHandleGrantAccess(
     HANDLE hUserHandle,
     HANDLE hJob,
     BOOL   bGrant);

#line 12439 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"







struct HRAWINPUT__{int unused;}; typedef struct HRAWINPUT__ *HRAWINPUT;



























typedef struct tagRAWINPUTHEADER {
    DWORD dwType;
    DWORD dwSize;
    HANDLE hDevice;
    WPARAM wParam;
} RAWINPUTHEADER, *PRAWINPUTHEADER, *LPRAWINPUTHEADER;











typedef struct tagRAWMOUSE {
    


    USHORT usFlags;

    


    union {
        ULONG ulButtons;
        struct  {
            USHORT  usButtonFlags;
            USHORT  usButtonData;
        };
    };


    


    ULONG ulRawButtons;

    


    LONG lLastX;

    


    LONG lLastY;

    


    ULONG ulExtraInformation;

} RAWMOUSE, *PRAWMOUSE, *LPRAWMOUSE;







































#line 12570 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"




typedef struct tagRAWKEYBOARD {
    


    USHORT MakeCode;

    



    USHORT Flags;

    USHORT Reserved;

    


    USHORT VKey;
    UINT   Message;

    


    ULONG ExtraInformation;


} RAWKEYBOARD, *PRAWKEYBOARD, *LPRAWKEYBOARD;






















typedef struct tagRAWHID {
    DWORD dwSizeHid;    
    DWORD dwCount;      
    BYTE bRawData[1];
} RAWHID, *PRAWHID, *LPRAWHID;




typedef struct tagRAWINPUT {
    RAWINPUTHEADER header;
    union {
        RAWMOUSE    mouse;
        RAWKEYBOARD keyboard;
        RAWHID      hid;
    } data;
} RAWINPUT, *PRAWINPUT, *LPRAWINPUT;





#line 12646 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"










__declspec(dllimport)
UINT
__stdcall
GetRawInputData(
     HRAWINPUT hRawInput,
     UINT uiCommand,
     LPVOID pData,
     PUINT pcbSize,
     UINT cbSizeHeader);








typedef struct tagRID_DEVICE_INFO_MOUSE {
    DWORD dwId;
    DWORD dwNumberOfButtons;
    DWORD dwSampleRate;
    BOOL  fHasHorizontalWheel;
} RID_DEVICE_INFO_MOUSE, *PRID_DEVICE_INFO_MOUSE;

typedef struct tagRID_DEVICE_INFO_KEYBOARD {
    DWORD dwType;
    DWORD dwSubType;
    DWORD dwKeyboardMode;
    DWORD dwNumberOfFunctionKeys;
    DWORD dwNumberOfIndicators;
    DWORD dwNumberOfKeysTotal;
} RID_DEVICE_INFO_KEYBOARD, *PRID_DEVICE_INFO_KEYBOARD;

typedef struct tagRID_DEVICE_INFO_HID {
    DWORD dwVendorId;
    DWORD dwProductId;
    DWORD dwVersionNumber;

    


    USHORT usUsagePage;
    USHORT usUsage;
} RID_DEVICE_INFO_HID, *PRID_DEVICE_INFO_HID;

typedef struct tagRID_DEVICE_INFO {
    DWORD cbSize;
    DWORD dwType;
    union {
        RID_DEVICE_INFO_MOUSE mouse;
        RID_DEVICE_INFO_KEYBOARD keyboard;
        RID_DEVICE_INFO_HID hid;
    };
} RID_DEVICE_INFO, *PRID_DEVICE_INFO, *LPRID_DEVICE_INFO;

__declspec(dllimport)
UINT
__stdcall
GetRawInputDeviceInfoA(
     HANDLE hDevice,
     UINT uiCommand,
     LPVOID pData,
     PUINT pcbSize);
__declspec(dllimport)
UINT
__stdcall
GetRawInputDeviceInfoW(
     HANDLE hDevice,
     UINT uiCommand,
     LPVOID pData,
     PUINT pcbSize);




#line 12732 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"





__declspec(dllimport)
UINT
__stdcall
GetRawInputBuffer(
     PRAWINPUT pData,
     PUINT pcbSize,
     UINT cbSizeHeader);




typedef struct tagRAWINPUTDEVICE {
    USHORT usUsagePage; 
    USHORT usUsage;     
    DWORD dwFlags;
    HWND hwndTarget;    
} RAWINPUTDEVICE, *PRAWINPUTDEVICE, *LPRAWINPUTDEVICE;

typedef const RAWINPUTDEVICE* PCRAWINPUTDEVICE;












#line 12769 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"










#line 12780 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"





#line 12786 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

__declspec(dllimport)
BOOL
__stdcall
RegisterRawInputDevices(
     PCRAWINPUTDEVICE pRawInputDevices,
     UINT uiNumDevices,
     UINT cbSize);

__declspec(dllimport)
UINT
__stdcall
GetRegisteredRawInputDevices(
     PRAWINPUTDEVICE pRawInputDevices,
     PUINT puiNumDevices,
     UINT cbSize);


typedef struct tagRAWINPUTDEVICELIST {
    HANDLE hDevice;
    DWORD dwType;
} RAWINPUTDEVICELIST, *PRAWINPUTDEVICELIST;

__declspec(dllimport)
UINT
__stdcall
GetRawInputDeviceList(
     PRAWINPUTDEVICELIST pRawInputDeviceList,
     PUINT puiNumDevices,
     UINT cbSize);

__declspec(dllimport)
LRESULT
__stdcall
DefRawInputProc(
     PRAWINPUT* paRawInput,
     INT nInput,
     UINT cbSizeHeader);

#line 12826 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"











__declspec(dllimport)
BOOL
__stdcall
ChangeWindowMessageFilter(
     UINT message,
     DWORD dwFlag);

#line 12845 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"











typedef struct tagCHANGEFILTERSTRUCT {
    DWORD cbSize;
    DWORD ExtStatus;
} CHANGEFILTERSTRUCT, *PCHANGEFILTERSTRUCT;








__declspec(dllimport)
BOOL
__stdcall
ChangeWindowMessageFilterEx(
     HWND hwnd,                                         
     UINT message,                                      
     DWORD action,                                      
     PCHANGEFILTERSTRUCT pChangeFilterStruct);   

#line 12878 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"











struct HGESTUREINFO__{int unused;}; typedef struct HGESTUREINFO__ *HGESTUREINFO;





























typedef struct tagGESTUREINFO {
    UINT cbSize;                    
    DWORD dwFlags;                  
    DWORD dwID;                     
    HWND hwndTarget;                
    POINTS ptsLocation;             
    DWORD dwInstanceID;             
    DWORD dwSequenceID;             
    ULONGLONG ullArguments;         
    UINT cbExtraArgs;               
} GESTUREINFO, *PGESTUREINFO;
typedef GESTUREINFO const * PCGESTUREINFO;









typedef struct tagGESTURENOTIFYSTRUCT {
    UINT cbSize;                    
    DWORD dwFlags;                  
    HWND hwndTarget;                
    POINTS ptsLocation;             
    DWORD dwInstanceID;             
} GESTURENOTIFYSTRUCT, *PGESTURENOTIFYSTRUCT;













__declspec(dllimport)
BOOL
__stdcall
GetGestureInfo(
     HGESTUREINFO hGestureInfo,
     PGESTUREINFO pGestureInfo);







__declspec(dllimport)
BOOL
__stdcall
GetGestureExtraArgs(
     HGESTUREINFO hGestureInfo,
     UINT cbExtraArgs,
     PBYTE pExtraArgs);











__declspec(dllimport)
BOOL
__stdcall
CloseGestureInfoHandle(
     HGESTUREINFO hGestureInfo);









typedef struct tagGESTURECONFIG {
    DWORD dwID;                     
    DWORD dwWant;                   
    DWORD dwBlock;                  
} GESTURECONFIG, *PGESTURECONFIG;









































                                                        

__declspec(dllimport)
BOOL
__stdcall
SetGestureConfig(
     HWND hwnd,                                     
     DWORD dwReserved,                              
     UINT cIDs,                                     
     PGESTURECONFIG pGestureConfig,    
                                                        
     UINT cbSize);                                  



                                                        

__declspec(dllimport)
BOOL
__stdcall
GetGestureConfig(
     HWND hwnd,                                     
     DWORD dwReserved,                              
     DWORD dwFlags,                                 
     PUINT pcIDs,                                   
                                                        
     PGESTURECONFIG pGestureConfig,
                                                        
     UINT cbSize);                                  



#line 13084 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"













#line 13098 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"




__declspec(dllimport)
BOOL
__stdcall
ShutdownBlockReasonCreate(
     HWND hWnd,
     LPCWSTR pwszReason);

__declspec(dllimport)
BOOL
__stdcall
ShutdownBlockReasonQuery(
     HWND hWnd,
     LPWSTR pwszBuff,
     DWORD *pcchBuff);

__declspec(dllimport)
BOOL
__stdcall
ShutdownBlockReasonDestroy(
     HWND hWnd);







#line 13130 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"
#line 13131 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"


}
#line 13135 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"

#line 13137 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winuser.h"





#line 159 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windows.h"

#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"





















extern "C" {
#line 24 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"













#line 38 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"
































































#line 103 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"



#line 107 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"


























































































#line 198 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"








#line 207 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"
















































#line 256 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"



#line 260 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"











































#line 304 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"






































































































































































#line 471 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"




#line 476 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"













#line 490 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"



#line 494 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"













#line 508 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"





















































































































#line 626 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"










#line 637 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"




















#line 658 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"



                                                   
                                                   
                                                   
                                                   









#line 675 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"





















#line 697 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"



#line 701 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"


























#line 728 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"



#line 732 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"
























































#line 789 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"









#line 799 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"




#line 804 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"




























































































#line 897 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"












typedef DWORD LGRPID;





typedef DWORD LCTYPE;





typedef DWORD CALTYPE;





typedef DWORD CALID;






typedef struct _cpinfo {
    UINT    MaxCharSize;                    
    BYTE    DefaultChar[2];   
    BYTE    LeadByte[12];        
} CPINFO, *LPCPINFO;

typedef struct _cpinfoexA {
    UINT    MaxCharSize;                    
    BYTE    DefaultChar[2];   
    BYTE    LeadByte[12];        
    WCHAR   UnicodeDefaultChar;             
    UINT    CodePage;                       
    CHAR    CodePageName[260];         
} CPINFOEXA, *LPCPINFOEXA;
typedef struct _cpinfoexW {
    UINT    MaxCharSize;                    
    BYTE    DefaultChar[2];   
    BYTE    LeadByte[12];        
    WCHAR   UnicodeDefaultChar;             
    UINT    CodePage;                       
    WCHAR   CodePageName[260];         
} CPINFOEXW, *LPCPINFOEXW;




typedef CPINFOEXA CPINFOEX;
typedef LPCPINFOEXA LPCPINFOEX;
#line 963 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"






typedef struct _numberfmtA {
    UINT    NumDigits;                 
    UINT    LeadingZero;               
    UINT    Grouping;                  
    LPSTR   lpDecimalSep;              
    LPSTR   lpThousandSep;             
    UINT    NegativeOrder;             
} NUMBERFMTA, *LPNUMBERFMTA;
typedef struct _numberfmtW {
    UINT    NumDigits;                 
    UINT    LeadingZero;               
    UINT    Grouping;                  
    LPWSTR  lpDecimalSep;              
    LPWSTR  lpThousandSep;             
    UINT    NegativeOrder;             
} NUMBERFMTW, *LPNUMBERFMTW;




typedef NUMBERFMTA NUMBERFMT;
typedef LPNUMBERFMTA LPNUMBERFMT;
#line 992 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"






typedef struct _currencyfmtA {
    UINT    NumDigits;                 
    UINT    LeadingZero;               
    UINT    Grouping;                  
    LPSTR   lpDecimalSep;              
    LPSTR   lpThousandSep;             
    UINT    NegativeOrder;             
    UINT    PositiveOrder;             
    LPSTR   lpCurrencySymbol;          
} CURRENCYFMTA, *LPCURRENCYFMTA;
typedef struct _currencyfmtW {
    UINT    NumDigits;                 
    UINT    LeadingZero;               
    UINT    Grouping;                  
    LPWSTR  lpDecimalSep;              
    LPWSTR  lpThousandSep;             
    UINT    NegativeOrder;             
    UINT    PositiveOrder;             
    LPWSTR  lpCurrencySymbol;          
} CURRENCYFMTW, *LPCURRENCYFMTW;




typedef CURRENCYFMTA CURRENCYFMT;
typedef LPCURRENCYFMTA LPCURRENCYFMT;
#line 1025 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"





enum SYSNLS_FUNCTION{
    COMPARE_STRING    =  0x0001,
};
typedef DWORD NLS_FUNCTION;






typedef struct _nlsversioninfo{
    DWORD dwNLSVersionInfoSize;     
    DWORD dwNLSVersion;
    DWORD dwDefinedVersion;
} NLSVERSIONINFO, *LPNLSVERSIONINFO;




typedef struct _nlsversioninfoex{
    DWORD dwNLSVersionInfoSize;     
    DWORD dwNLSVersion;
    DWORD dwDefinedVersion;
    DWORD dwEffectiveId;            
    GUID  guidCustomVersion;
} NLSVERSIONINFOEX, *LPNLSVERSIONINFOEX;





typedef LONG    GEOID;
typedef DWORD   GEOTYPE;
typedef DWORD   GEOCLASS;







enum SYSGEOTYPE {
    GEO_NATION      =       0x0001,
    GEO_LATITUDE    =       0x0002,
    GEO_LONGITUDE   =       0x0003,
    GEO_ISO2        =       0x0004,
    GEO_ISO3        =       0x0005,
    GEO_RFC1766     =       0x0006,
    GEO_LCID        =       0x0007,
    GEO_FRIENDLYNAME=       0x0008,
    GEO_OFFICIALNAME=       0x0009,
    GEO_TIMEZONES   =       0x000A,
    GEO_OFFICIALLANGUAGES = 0x000B,
};





enum SYSGEOCLASS {
    GEOCLASS_NATION  = 16,
    GEOCLASS_REGION  = 14,
};






typedef enum _NORM_FORM {
    NormalizationOther  = 0,       
    NormalizationC      = 0x1,     
    NormalizationD      = 0x2,     
    NormalizationKC     = 0x5,     
                                   
    NormalizationKD     = 0x6      
                                   
} NORM_FORM;










#line 1119 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"







typedef BOOL (__stdcall* LANGUAGEGROUP_ENUMPROCA)(LGRPID, LPSTR, LPSTR, DWORD, LONG_PTR);
typedef BOOL (__stdcall* LANGGROUPLOCALE_ENUMPROCA)(LGRPID, LCID, LPSTR, LONG_PTR);
typedef BOOL (__stdcall* UILANGUAGE_ENUMPROCA)(LPSTR, LONG_PTR);
typedef BOOL (__stdcall* LOCALE_ENUMPROCA)(LPSTR);
typedef BOOL (__stdcall* CODEPAGE_ENUMPROCA)(LPSTR);
typedef BOOL (__stdcall* DATEFMT_ENUMPROCA)(LPSTR);
typedef BOOL (__stdcall* DATEFMT_ENUMPROCEXA)(LPSTR, CALID);
typedef BOOL (__stdcall* TIMEFMT_ENUMPROCA)(LPSTR);
typedef BOOL (__stdcall* CALINFO_ENUMPROCA)(LPSTR);
typedef BOOL (__stdcall* CALINFO_ENUMPROCEXA)(LPSTR, CALID);

typedef BOOL (__stdcall* LANGUAGEGROUP_ENUMPROCW)(LGRPID, LPWSTR, LPWSTR, DWORD, LONG_PTR);
typedef BOOL (__stdcall* LANGGROUPLOCALE_ENUMPROCW)(LGRPID, LCID, LPWSTR, LONG_PTR);
typedef BOOL (__stdcall* UILANGUAGE_ENUMPROCW)(LPWSTR, LONG_PTR);
typedef BOOL (__stdcall* LOCALE_ENUMPROCW)(LPWSTR);
typedef BOOL (__stdcall* CODEPAGE_ENUMPROCW)(LPWSTR);
typedef BOOL (__stdcall* DATEFMT_ENUMPROCW)(LPWSTR);
typedef BOOL (__stdcall* DATEFMT_ENUMPROCEXW)(LPWSTR, CALID);
typedef BOOL (__stdcall* TIMEFMT_ENUMPROCW)(LPWSTR);
typedef BOOL (__stdcall* CALINFO_ENUMPROCW)(LPWSTR);
typedef BOOL (__stdcall* CALINFO_ENUMPROCEXW)(LPWSTR, CALID);
typedef BOOL (__stdcall* GEO_ENUMPROC)(GEOID);


























#line 1175 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"



























#line 1203 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"






typedef struct _FILEMUIINFO {
    DWORD       dwSize;                 
    DWORD       dwVersion;              
    DWORD       dwFileType;             
    BYTE        pChecksum[16];          
    BYTE        pServiceChecksum[16];   
    DWORD       dwLanguageNameOffset;   
    DWORD       dwTypeIDMainSize;       
    DWORD       dwTypeIDMainOffset;     
    DWORD       dwTypeNameMainOffset;   
    DWORD       dwTypeIDMUISize;        
    DWORD       dwTypeIDMUIOffset;      
    DWORD       dwTypeNameMUIOffset;    
    BYTE        abBuffer[8];             
} FILEMUIINFO, *PFILEMUIINFO;

































































__declspec(dllimport)
BOOL
__stdcall
IsValidCodePage(
     UINT  CodePage);

__declspec(dllimport)
UINT
__stdcall
GetACP(void);

__declspec(dllimport)
UINT
__stdcall
GetOEMCP(void);

__declspec(dllimport)
BOOL
__stdcall
GetCPInfo(
     UINT       CodePage,
     LPCPINFO  lpCPInfo);

__declspec(dllimport)
BOOL
__stdcall
GetCPInfoExA(
     UINT          CodePage,
     DWORD         dwFlags,
     LPCPINFOEXA  lpCPInfoEx);
__declspec(dllimport)
BOOL
__stdcall
GetCPInfoExW(
     UINT          CodePage,
     DWORD         dwFlags,
     LPCPINFOEXW  lpCPInfoEx);




#line 1331 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"

__declspec(dllimport)
BOOL
__stdcall
IsDBCSLeadByte(
     BYTE  TestChar);

__declspec(dllimport)
BOOL
__stdcall
IsDBCSLeadByteEx(
     UINT  CodePage,
     BYTE  TestChar);

__declspec(dllimport)
int
__stdcall
MultiByteToWideChar(
     UINT     CodePage,
     DWORD    dwFlags,
     LPCSTR   lpMultiByteStr,
     int      cbMultiByte,
      LPWSTR  lpWideCharStr,
     int      cchWideChar);

__declspec(dllimport)
int
__stdcall
WideCharToMultiByte(
     UINT     CodePage,
     DWORD    dwFlags,
     LPCWSTR  lpWideCharStr,
     int      cchWideChar,
      LPSTR   lpMultiByteStr,
     int      cbMultiByte,
     LPCSTR   lpDefaultChar,
     LPBOOL  lpUsedDefaultChar);







__declspec(dllimport)
int
__stdcall
CompareStringA(
     LCID     Locale,
     DWORD    dwCmpFlags,
     PCNZCH lpString1,
     int      cchCount1,
     PCNZCH  lpString2,
     int      cchCount2);

__declspec(dllimport)
int
__stdcall
CompareStringW(
     LCID     Locale,
     DWORD    dwCmpFlags,
     PCNZWCH lpString1,
     int      cchCount1,
     PCNZWCH  lpString2,
     int      cchCount2);





#line 1402 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"



























#line 1430 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"




__declspec(dllimport)
int
__stdcall
FindNLSString(
                        LCID Locale,
                        DWORD dwFindNLSStringFlags,
      LPCWSTR lpStringSource,
                        int cchSource,
       LPCWSTR lpStringValue,
                        int cchValue,
                   LPINT pcchFound);

#line 1447 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"



__declspec(dllimport)
int
__stdcall
FindStringOrdinal(
                        DWORD dwFindStringOrdinalFlags,
      LPCWSTR lpStringSource,
                        int cchSource,
       LPCWSTR lpStringValue,
                        int cchValue,
                        BOOL bIgnoreCase);

#line 1462 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"


__declspec(dllimport)
int
__stdcall
LCMapStringA(
     LCID     Locale,
     DWORD    dwMapFlags,
     LPCSTR  lpSrcStr,
     int      cchSrc,
     LPSTR  lpDestStr,
     int      cchDest);

__declspec(dllimport)
int
__stdcall
LCMapStringW(
     LCID     Locale,
     DWORD    dwMapFlags,
     LPCWSTR  lpSrcStr,
     int      cchSrc,
     LPWSTR  lpDestStr,
     int      cchDest);




#line 1490 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"


__declspec(dllimport)
int
__stdcall
GetLocaleInfoA(
     LCID     Locale,
     LCTYPE   LCType,
     LPSTR  lpLCData,
     int      cchData);

__declspec(dllimport)
int
__stdcall
GetLocaleInfoW(
     LCID     Locale,
     LCTYPE   LCType,
     LPWSTR  lpLCData,
     int      cchData);




#line 1514 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"

__declspec(dllimport)
BOOL
__stdcall
SetLocaleInfoA(
     LCID     Locale,
     LCTYPE   LCType,
     LPCSTR  lpLCData);
__declspec(dllimport)
BOOL
__stdcall
SetLocaleInfoW(
     LCID     Locale,
     LCTYPE   LCType,
     LPCWSTR  lpLCData);




#line 1534 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"



__declspec(dllimport)
int
__stdcall
GetCalendarInfoA(
     LCID     Locale,
     CALID    Calendar,
     CALTYPE  CalType,
     LPSTR   lpCalData,
     int      cchData,
     LPDWORD  lpValue);

__declspec(dllimport)
int
__stdcall
GetCalendarInfoW(
     LCID     Locale,
     CALID    Calendar,
     CALTYPE  CalType,
     LPWSTR   lpCalData,
     int      cchData,
     LPDWORD  lpValue);




#line 1563 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"

__declspec(dllimport)
BOOL
__stdcall
SetCalendarInfoA(
     LCID     Locale,
     CALID    Calendar,
     CALTYPE  CalType,
     LPCSTR  lpCalData);
__declspec(dllimport)
BOOL
__stdcall
SetCalendarInfoW(
     LCID     Locale,
     CALID    Calendar,
     CALTYPE  CalType,
     LPCWSTR  lpCalData);




#line 1585 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"
#line 1586 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"


__declspec(dllimport)
int
__stdcall
LCIDToLocaleName(
     LCID     Locale,
     LPWSTR  lpName,
     int      cchName,
     DWORD    dwFlags);

__declspec(dllimport)
LCID
__stdcall
LocaleNameToLCID(
     LPCWSTR lpName,
     DWORD dwFlags);

#line 1605 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"


__declspec(dllimport)
int
__stdcall
GetTimeFormatA(
     LCID             Locale,
     DWORD            dwFlags,
     const SYSTEMTIME *lpTime,
     LPCSTR          lpFormat,
     LPSTR          lpTimeStr,
     int              cchTime);

__declspec(dllimport)
int
__stdcall
GetTimeFormatW(
     LCID             Locale,
     DWORD            dwFlags,
     const SYSTEMTIME *lpTime,
     LPCWSTR          lpFormat,
     LPWSTR          lpTimeStr,
     int              cchTime);




#line 1633 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"




__declspec(dllimport)
int
__stdcall
GetDurationFormat(
     LCID             Locale,
     DWORD            dwFlags,
     const SYSTEMTIME *lpDuration,
     ULONGLONG ullDuration,
     LPCWSTR          lpFormat,
     LPWSTR          lpDurationStr,
     int              cchDuration);
#line 1649 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"


__declspec(dllimport)
int
__stdcall
GetDateFormatA(
     LCID             Locale,
     DWORD            dwFlags,
     const SYSTEMTIME *lpDate,
     LPCSTR          lpFormat,
     LPSTR          lpDateStr,
     int              cchDate);

__declspec(dllimport)
int
__stdcall
GetDateFormatW(
     LCID             Locale,
     DWORD            dwFlags,
     const SYSTEMTIME *lpDate,
     LPCWSTR          lpFormat,
     LPWSTR          lpDateStr,
     int              cchDate);




#line 1677 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"


__declspec(dllimport)
int
__stdcall
GetNumberFormatA(
     LCID             Locale,
     DWORD            dwFlags,
     LPCSTR          lpValue,
     const NUMBERFMTA *lpFormat,
     LPSTR          lpNumberStr,
     int              cchNumber);

__declspec(dllimport)
int
__stdcall
GetNumberFormatW(
     LCID             Locale,
     DWORD            dwFlags,
     LPCWSTR          lpValue,
     const NUMBERFMTW *lpFormat,
     LPWSTR          lpNumberStr,
     int              cchNumber);




#line 1705 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"


__declspec(dllimport)
int
__stdcall
GetCurrencyFormatA(
     LCID               Locale,
     DWORD              dwFlags,
     LPCSTR            lpValue,
     const CURRENCYFMTA *lpFormat,
     LPSTR            lpCurrencyStr,
     int                cchCurrency);

__declspec(dllimport)
int
__stdcall
GetCurrencyFormatW(
     LCID               Locale,
     DWORD              dwFlags,
     LPCWSTR            lpValue,
     const CURRENCYFMTW *lpFormat,
     LPWSTR            lpCurrencyStr,
     int                cchCurrency);




#line 1733 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"


__declspec(dllimport)
BOOL
__stdcall
EnumCalendarInfoA(
     CALINFO_ENUMPROCA lpCalInfoEnumProc,
     LCID              Locale,
     CALID             Calendar,
     CALTYPE           CalType);

__declspec(dllimport)
BOOL
__stdcall
EnumCalendarInfoW(
     CALINFO_ENUMPROCW lpCalInfoEnumProc,
     LCID              Locale,
     CALID             Calendar,
     CALTYPE           CalType);




#line 1757 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"



__declspec(dllimport)
BOOL
__stdcall
EnumCalendarInfoExA(
     CALINFO_ENUMPROCEXA lpCalInfoEnumProcEx,
     LCID                Locale,
     CALID               Calendar,
     CALTYPE             CalType);

__declspec(dllimport)
BOOL
__stdcall
EnumCalendarInfoExW(
     CALINFO_ENUMPROCEXW lpCalInfoEnumProcEx,
     LCID                Locale,
     CALID               Calendar,
     CALTYPE             CalType);




#line 1782 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"
#line 1783 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"


__declspec(dllimport)
BOOL
__stdcall
EnumTimeFormatsA(
     TIMEFMT_ENUMPROCA lpTimeFmtEnumProc,
     LCID              Locale,
     DWORD             dwFlags);

__declspec(dllimport)
BOOL
__stdcall
EnumTimeFormatsW(
     TIMEFMT_ENUMPROCW lpTimeFmtEnumProc,
     LCID              Locale,
     DWORD             dwFlags);




#line 1805 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"


__declspec(dllimport)
BOOL
__stdcall
EnumDateFormatsA(
     DATEFMT_ENUMPROCA lpDateFmtEnumProc,
     LCID              Locale,
     DWORD             dwFlags);

__declspec(dllimport)
BOOL
__stdcall
EnumDateFormatsW(
     DATEFMT_ENUMPROCW lpDateFmtEnumProc,
     LCID              Locale,
     DWORD             dwFlags);




#line 1827 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"



__declspec(dllimport)
BOOL
__stdcall
EnumDateFormatsExA(
     DATEFMT_ENUMPROCEXA lpDateFmtEnumProcEx,
     LCID                Locale,
     DWORD               dwFlags);

__declspec(dllimport)
BOOL
__stdcall
EnumDateFormatsExW(
     DATEFMT_ENUMPROCEXW lpDateFmtEnumProcEx,
     LCID                Locale,
     DWORD               dwFlags);




#line 1850 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"
#line 1851 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"


__declspec(dllimport)
BOOL
__stdcall
IsValidLanguageGroup(
     LGRPID  LanguageGroup,
     DWORD   dwFlags);
#line 1860 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"


__declspec(dllimport)
BOOL
__stdcall
GetNLSVersion(
        NLS_FUNCTION     Function,
        LCID             Locale,
     LPNLSVERSIONINFO lpVersionInformation);

__declspec(dllimport)
BOOL
__stdcall
IsNLSDefinedString(
     NLS_FUNCTION     Function,
     DWORD            dwFlags,
     LPNLSVERSIONINFO lpVersionInformation,
     LPCWSTR          lpString,
     INT              cchStr);


__declspec(dllimport)
BOOL
__stdcall
IsValidLocale(
     LCID   Locale,
     DWORD  dwFlags);

__declspec(dllimport)
int
__stdcall
GetGeoInfoA(
     GEOID       Location,
     GEOTYPE     GeoType,
     LPSTR     lpGeoData,
     int         cchData,
     LANGID      LangId);
__declspec(dllimport)
int
__stdcall
GetGeoInfoW(
     GEOID       Location,
     GEOTYPE     GeoType,
     LPWSTR     lpGeoData,
     int         cchData,
     LANGID      LangId);




#line 1911 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"

__declspec(dllimport)
BOOL
__stdcall
EnumSystemGeoID(
     GEOCLASS        GeoClass,
     GEOID           ParentGeoId,
     GEO_ENUMPROC    lpGeoEnumProc);

__declspec(dllimport)
GEOID
__stdcall
GetUserGeoID(
     GEOCLASS    GeoClass);

__declspec(dllimport)
BOOL
__stdcall
SetUserGeoID(
     GEOID       GeoId);

__declspec(dllimport)
LCID
__stdcall
ConvertDefaultLocale(
     LCID   Locale);

__declspec(dllimport)
LCID
__stdcall
GetThreadLocale(void);

__declspec(dllimport)
BOOL
__stdcall
SetThreadLocale(
     LCID  Locale
    );


__declspec(dllimport)
LANGID
__stdcall
GetSystemDefaultUILanguage(void);

__declspec(dllimport)
LANGID
__stdcall
GetUserDefaultUILanguage(void);
#line 1961 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"

__declspec(dllimport)
LANGID
__stdcall
GetSystemDefaultLangID(void);

__declspec(dllimport)
LANGID
__stdcall
GetUserDefaultLangID(void);

__declspec(dllimport)
LCID
__stdcall
GetSystemDefaultLCID(void);

__declspec(dllimport)
LCID
__stdcall
GetUserDefaultLCID(void);



__declspec(dllimport)
LANGID
__stdcall
SetThreadUILanguage( LANGID LangId);




__declspec(dllimport)
LANGID
__stdcall
GetThreadUILanguage(void);

__declspec(dllimport)
BOOL
__stdcall
GetProcessPreferredUILanguages(
     DWORD dwFlags,
     PULONG pulNumLanguages,
     PZZWSTR pwszLanguagesBuffer,
     PULONG pcchLanguagesBuffer
);


__declspec(dllimport)
BOOL
__stdcall
SetProcessPreferredUILanguages(
            DWORD dwFlags,
        PCZZWSTR pwszLanguagesBuffer,
       PULONG pulNumLanguages
);


__declspec(dllimport)
BOOL
__stdcall
GetUserPreferredUILanguages (
     DWORD dwFlags,
     PULONG pulNumLanguages,
     PZZWSTR pwszLanguagesBuffer,
     PULONG pcchLanguagesBuffer
);


__declspec(dllimport)
BOOL
__stdcall
GetSystemPreferredUILanguages (
     DWORD dwFlags,
     PULONG pulNumLanguages,
     PZZWSTR pwszLanguagesBuffer,
     PULONG pcchLanguagesBuffer
);


__declspec(dllimport)
BOOL
__stdcall
GetThreadPreferredUILanguages(
     DWORD dwFlags,
     PULONG pulNumLanguages,
     PZZWSTR pwszLanguagesBuffer,
     PULONG pcchLanguagesBuffer
);


__declspec(dllimport)
BOOL
__stdcall
SetThreadPreferredUILanguages(
            DWORD dwFlags,
        PCZZWSTR pwszLanguagesBuffer,
       PULONG pulNumLanguages
);

__declspec(dllimport)

BOOL
__stdcall
GetFileMUIInfo(
                        DWORD           dwFlags,
                    PCWSTR          pcwszFilePath,
     PFILEMUIINFO    pFileMUIInfo,
                 DWORD*          pcbFileMUIInfo);

__declspec(dllimport)
BOOL
__stdcall
GetFileMUIPath(
     DWORD      dwFlags,
     PCWSTR     pcwszFilePath ,
       PWSTR pwszLanguage,
     PULONG  pcchLanguage,
     PWSTR pwszFileMUIPath,
             PULONG pcchFileMUIPath,
             PULONGLONG pululEnumerator
);


__declspec(dllimport)
BOOL
__stdcall
GetUILanguageInfo(
     DWORD dwFlags,
     PCZZWSTR pwmszLanguage,
     PZZWSTR pwszFallbackLanguages,
     PDWORD pcchFallbackLanguages,
     PDWORD pAttributes
);


__declspec(dllimport)
BOOL
__stdcall
NotifyUILanguageChange(
            DWORD dwFlags,
            PCWSTR pcwstrNewLanguage,
        PCWSTR pcwstrPreviousLanguage,
            DWORD dwReserved,
       PDWORD pdwStatusRtrn
);

#line 2108 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"





__declspec(dllimport)
BOOL
__stdcall
GetStringTypeExA(
                     LCID       Locale,
                     DWORD      dwInfoType,
      LPCSTR   lpSrcStr,
                     int        cchSrc,
     LPWORD     lpCharType);
__declspec(dllimport)
BOOL
__stdcall
GetStringTypeExW(
                     LCID       Locale,
                     DWORD      dwInfoType,
      LPCWSTR   lpSrcStr,
                     int        cchSrc,
     LPWORD     lpCharType);




#line 2136 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"












__declspec(dllimport)
BOOL
__stdcall
GetStringTypeA(
     LCID     Locale,
     DWORD    dwInfoType,
     LPCSTR   lpSrcStr,
     int      cchSrc,
     LPWORD  lpCharType);

__declspec(dllimport)
BOOL
__stdcall
GetStringTypeW(
     DWORD    dwInfoType,
      LPCWSTR  lpSrcStr,
     int      cchSrc,
     LPWORD  lpCharType);


__declspec(dllimport)
int
__stdcall
FoldStringA(
     DWORD    dwMapFlags,
     LPCSTR  lpSrcStr,
     int      cchSrc,
     LPSTR  lpDestStr,
     int      cchDest);
__declspec(dllimport)
int
__stdcall
FoldStringW(
     DWORD    dwMapFlags,
     LPCWSTR  lpSrcStr,
     int      cchSrc,
     LPWSTR  lpDestStr,
     int      cchDest);




#line 2191 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"


__declspec(dllimport)
BOOL
__stdcall
EnumSystemLanguageGroupsA(
     LANGUAGEGROUP_ENUMPROCA lpLanguageGroupEnumProc,
     DWORD                   dwFlags,
     LONG_PTR                lParam);
__declspec(dllimport)
BOOL
__stdcall
EnumSystemLanguageGroupsW(
     LANGUAGEGROUP_ENUMPROCW lpLanguageGroupEnumProc,
     DWORD                   dwFlags,
     LONG_PTR                lParam);




#line 2212 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"

__declspec(dllimport)
BOOL
__stdcall
EnumLanguageGroupLocalesA(
     LANGGROUPLOCALE_ENUMPROCA lpLangGroupLocaleEnumProc,
     LGRPID                    LanguageGroup,
     DWORD                     dwFlags,
     LONG_PTR                  lParam);
__declspec(dllimport)
BOOL
__stdcall
EnumLanguageGroupLocalesW(
     LANGGROUPLOCALE_ENUMPROCW lpLangGroupLocaleEnumProc,
     LGRPID                    LanguageGroup,
     DWORD                     dwFlags,
     LONG_PTR                  lParam);




#line 2234 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"

__declspec(dllimport)
BOOL
__stdcall
EnumUILanguagesA(
     UILANGUAGE_ENUMPROCA lpUILanguageEnumProc,
     DWORD                dwFlags,
     LONG_PTR             lParam);
__declspec(dllimport)
BOOL
__stdcall
EnumUILanguagesW(
     UILANGUAGE_ENUMPROCW lpUILanguageEnumProc,
     DWORD                dwFlags,
     LONG_PTR             lParam);




#line 2254 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"
#line 2255 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"

__declspec(dllimport)
BOOL
__stdcall
EnumSystemLocalesA(
     LOCALE_ENUMPROCA lpLocaleEnumProc,
     DWORD            dwFlags);
__declspec(dllimport)
BOOL
__stdcall
EnumSystemLocalesW(
     LOCALE_ENUMPROCW lpLocaleEnumProc,
     DWORD            dwFlags);




#line 2273 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"

__declspec(dllimport)
BOOL
__stdcall
EnumSystemCodePagesA(
     CODEPAGE_ENUMPROCA lpCodePageEnumProc,
     DWORD              dwFlags);
__declspec(dllimport)
BOOL
__stdcall
EnumSystemCodePagesW(
     CODEPAGE_ENUMPROCW lpCodePageEnumProc,
     DWORD              dwFlags);




#line 2291 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"







__declspec(dllimport)
int
__stdcall NormalizeString(                           NORM_FORM NormForm,
                              LPCWSTR   lpSrcString,
                                                  int       cwSrcLength,
                         LPWSTR    lpDstString,
                                                  int       cwDstLength );

__declspec(dllimport)
BOOL
__stdcall IsNormalizedString(                    NORM_FORM NormForm,
                             LPCWSTR   lpString,
                                              int       cwLength );




__declspec(dllimport)
int
__stdcall IdnToAscii(                           DWORD    dwFlags,
                   	 LPCWSTR  lpUnicodeCharStr,
                                          	 int      cchUnicodeChar,
                   LPWSTR   lpASCIICharStr,
                                          	 int      cchASCIIChar);

__declspec(dllimport)
int
__stdcall IdnToNameprepUnicode(                            	DWORD   dwFlags,
                                 	LPCWSTR lpUnicodeCharStr,
                                                        	int     cchUnicodeChar,
                               LPWSTR  lpNameprepCharStr,
                                                        	int     cchNameprepChar);

__declspec(dllimport)
int
__stdcall IdnToUnicode(                         	 DWORD   dwFlags,
                        	 LPCWSTR lpASCIICharStr,
                                             	 int     cchASCIIChar,
                     LPWSTR  lpUnicodeCharStr,
                                             	 int     cchUnicodeChar);

__declspec(dllimport)
BOOL
__stdcall VerifyScripts(
        DWORD   dwFlags,            
        LPCWSTR lpLocaleScripts,    
        int     cchLocaleScripts,   
        LPCWSTR lpTestScripts,      
        int     cchTestScripts);    

__declspec(dllimport)
int
__stdcall GetStringScripts(
                                 DWORD   dwFlags,        
                                 LPCWSTR lpString,       
                                 int     cchString,      
         LPWSTR  lpScripts,      
                                 int     cchScripts);    

#line 2358 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"










__declspec(dllimport)
int
__stdcall
GetLocaleInfoEx(
     LPCWSTR lpLocaleName,
     LCTYPE LCType,
     LPWSTR lpLCData,
     int cchData
);

__declspec(dllimport)
int
__stdcall
GetCalendarInfoEx(
     LPCWSTR lpLocaleName,
     CALID Calendar,
     LPCWSTR lpReserved,
     CALTYPE CalType,
     LPWSTR lpCalData,
     int cchData,
     LPDWORD lpValue
);


__declspec(dllimport)
int
__stdcall
GetTimeFormatEx(
     LPCWSTR lpLocaleName,
     DWORD dwFlags,
     const SYSTEMTIME *lpTime,
     LPCWSTR lpFormat,
     LPWSTR lpTimeStr,
     int cchTime
);

__declspec(dllimport)
int
__stdcall
GetDateFormatEx(
     LPCWSTR lpLocaleName,
     DWORD dwFlags,
     const SYSTEMTIME *lpDate,
     LPCWSTR lpFormat,
     LPWSTR lpDateStr,
     int cchDate,
     LPCWSTR lpCalendar
);

__declspec(dllimport)
int
__stdcall
GetDurationFormatEx(
     LPCWSTR lpLocaleName,
     DWORD dwFlags,
     const SYSTEMTIME *lpDuration,
     ULONGLONG ullDuration,
     LPCWSTR lpFormat,
     LPWSTR lpDurationStr,
     int cchDuration
);

__declspec(dllimport)
int
__stdcall
GetNumberFormatEx(
     LPCWSTR lpLocaleName,
     DWORD dwFlags,
     LPCWSTR lpValue,
     const NUMBERFMTW *lpFormat,
     LPWSTR lpNumberStr,
     int cchNumber
);

__declspec(dllimport)
int
__stdcall
GetCurrencyFormatEx(
     LPCWSTR lpLocaleName,
     DWORD dwFlags,
     LPCWSTR lpValue,
     const CURRENCYFMTW *lpFormat,
     LPWSTR lpCurrencyStr,
     int cchCurrency
);

__declspec(dllimport)
int
__stdcall
GetUserDefaultLocaleName(
     LPWSTR lpLocaleName,
     int cchLocaleName
);

__declspec(dllimport)
int
__stdcall
GetSystemDefaultLocaleName(
     LPWSTR lpLocaleName,
     int cchLocaleName
);

__declspec(dllimport)
BOOL
__stdcall
GetNLSVersionEx(
        NLS_FUNCTION function,
        LPCWSTR lpLocaleName,
     LPNLSVERSIONINFOEX lpVersionInformation
);

__declspec(dllimport)
int
__stdcall
CompareStringEx(
     LPCWSTR lpLocaleName,
     DWORD dwCmpFlags,
     LPCWSTR lpString1,
     int cchCount1,
     LPCWSTR lpString2,
     int cchCount2,
     LPNLSVERSIONINFO lpVersionInformation,
     LPVOID lpReserved,
     LPARAM lParam
);

__declspec(dllimport)
int
__stdcall
FindNLSStringEx(
     LPCWSTR lpLocaleName,
     DWORD dwFindNLSStringFlags,
     LPCWSTR lpStringSource,
     int cchSource,
     LPCWSTR lpStringValue,
     int cchValue,
     LPINT pcchFound,
     LPNLSVERSIONINFO lpVersionInformation,
     LPVOID lpReserved,
     LPARAM lParam
);


__declspec(dllimport)
int
__stdcall
LCMapStringEx(
     LPCWSTR lpLocaleName,
     DWORD dwMapFlags,
     LPCWSTR lpSrcStr,
     int cchSrc,
     LPWSTR lpDestStr,
     int cchDest,
     LPNLSVERSIONINFO lpVersionInformation,
     LPVOID lpReserved,
     LPARAM lParam
);

__declspec(dllimport)
int
__stdcall
CompareStringOrdinal(
     LPCWSTR lpString1,
     int     cchCount1,
     LPCWSTR lpString2,
     int     cchCount2,
     BOOL    bIgnoreCase
);

__declspec(dllimport)
BOOL
__stdcall
IsValidLocaleName(
     LPCWSTR lpLocaleName
);

typedef BOOL (__stdcall* CALINFO_ENUMPROCEXEX)(LPWSTR, CALID, LPWSTR, LPARAM);

__declspec(dllimport)
BOOL
__stdcall
EnumCalendarInfoExEx(
     CALINFO_ENUMPROCEXEX pCalInfoEnumProcExEx,
     LPCWSTR lpLocaleName,
     CALID Calendar,
     LPCWSTR lpReserved,
     CALTYPE CalType,
     LPARAM lParam
);

typedef BOOL (__stdcall* DATEFMT_ENUMPROCEXEX)(LPWSTR, CALID, LPARAM);

__declspec(dllimport)
BOOL
__stdcall
EnumDateFormatsExEx(
     DATEFMT_ENUMPROCEXEX lpDateFmtEnumProcExEx,
     LPCWSTR lpLocaleName,
     DWORD dwFlags,
     LPARAM lParam
);

typedef BOOL (__stdcall* TIMEFMT_ENUMPROCEX)(LPWSTR, LPARAM);

__declspec(dllimport)
BOOL
__stdcall
EnumTimeFormatsEx(
     TIMEFMT_ENUMPROCEX lpTimeFmtEnumProcEx,
     LPCWSTR lpLocaleName,
     DWORD dwFlags,
     LPARAM lParam
);

typedef BOOL (__stdcall* LOCALE_ENUMPROCEX)(LPWSTR, DWORD, LPARAM);

__declspec(dllimport)
BOOL
__stdcall
EnumSystemLocalesEx(
     LOCALE_ENUMPROCEX lpLocaleEnumProcEx,
     DWORD dwFlags,
     LPARAM lParam,
     LPVOID lpReserved
);


#line 2596 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"


__declspec(dllimport)
int
__stdcall
ResolveLocaleName(
                            LPCWSTR lpNameToResolve,
     LPWSTR  lpLocaleName,
                                int     cchLocaleName
);
#line 2607 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"


#line 2610 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"



}
#line 2615 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"

#line 2617 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnls.h"


#line 161 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windows.h"
#line 162 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windows.h"

#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wincon.h"
























#pragma once


extern "C" {
#line 30 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wincon.h"



#line 34 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wincon.h"

typedef struct _COORD {
    SHORT X;
    SHORT Y;
} COORD, *PCOORD;

typedef struct _SMALL_RECT {
    SHORT Left;
    SHORT Top;
    SHORT Right;
    SHORT Bottom;
} SMALL_RECT, *PSMALL_RECT;

typedef struct _KEY_EVENT_RECORD {
    BOOL bKeyDown;
    WORD wRepeatCount;
    WORD wVirtualKeyCode;
    WORD wVirtualScanCode;
    union {
        WCHAR UnicodeChar;
        CHAR   AsciiChar;
    } uChar;
    DWORD dwControlKeyState;
} KEY_EVENT_RECORD, *PKEY_EVENT_RECORD;






















typedef struct _MOUSE_EVENT_RECORD {
    COORD dwMousePosition;
    DWORD dwButtonState;
    DWORD dwControlKeyState;
    DWORD dwEventFlags;
} MOUSE_EVENT_RECORD, *PMOUSE_EVENT_RECORD;




















#line 107 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wincon.h"

typedef struct _WINDOW_BUFFER_SIZE_RECORD {
    COORD dwSize;
} WINDOW_BUFFER_SIZE_RECORD, *PWINDOW_BUFFER_SIZE_RECORD;

typedef struct _MENU_EVENT_RECORD {
    UINT dwCommandId;
} MENU_EVENT_RECORD, *PMENU_EVENT_RECORD;

typedef struct _FOCUS_EVENT_RECORD {
    BOOL bSetFocus;
} FOCUS_EVENT_RECORD, *PFOCUS_EVENT_RECORD;

typedef struct _INPUT_RECORD {
    WORD EventType;
    union {
        KEY_EVENT_RECORD KeyEvent;
        MOUSE_EVENT_RECORD MouseEvent;
        WINDOW_BUFFER_SIZE_RECORD WindowBufferSizeEvent;
        MENU_EVENT_RECORD MenuEvent;
        FOCUS_EVENT_RECORD FocusEvent;
    } Event;
} INPUT_RECORD, *PINPUT_RECORD;











typedef struct _CHAR_INFO {
    union {
        WCHAR UnicodeChar;
        CHAR   AsciiChar;
    } Char;
    WORD Attributes;
} CHAR_INFO, *PCHAR_INFO;
























typedef struct _CONSOLE_SCREEN_BUFFER_INFO {
    COORD dwSize;
    COORD dwCursorPosition;
    WORD  wAttributes;
    SMALL_RECT srWindow;
    COORD dwMaximumWindowSize;
} CONSOLE_SCREEN_BUFFER_INFO, *PCONSOLE_SCREEN_BUFFER_INFO;

typedef struct _CONSOLE_SCREEN_BUFFER_INFOEX {
    ULONG cbSize;
    COORD dwSize;
    COORD dwCursorPosition;
    WORD wAttributes;
    SMALL_RECT srWindow;
    COORD dwMaximumWindowSize;
    WORD wPopupAttributes;
    BOOL bFullscreenSupported;
    COLORREF ColorTable[16];
} CONSOLE_SCREEN_BUFFER_INFOEX, *PCONSOLE_SCREEN_BUFFER_INFOEX;

typedef struct _CONSOLE_CURSOR_INFO {
    DWORD  dwSize;
    BOOL   bVisible;
} CONSOLE_CURSOR_INFO, *PCONSOLE_CURSOR_INFO;

typedef struct _CONSOLE_FONT_INFO {
    DWORD  nFont;
    COORD  dwFontSize;
} CONSOLE_FONT_INFO, *PCONSOLE_FONT_INFO;


typedef struct _CONSOLE_FONT_INFOEX {
    ULONG cbSize;
    DWORD nFont;
    COORD dwFontSize;
    UINT FontFamily;
    UINT FontWeight;
    WCHAR FaceName[32];
} CONSOLE_FONT_INFOEX, *PCONSOLE_FONT_INFOEX;
#line 212 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wincon.h"



typedef struct _CONSOLE_HISTORY_INFO {
    UINT cbSize;
    UINT HistoryBufferSize;
    UINT NumberOfHistoryBuffers;
    DWORD dwFlags;
} CONSOLE_HISTORY_INFO, *PCONSOLE_HISTORY_INFO;


typedef struct _CONSOLE_SELECTION_INFO {
    DWORD dwFlags;
    COORD dwSelectionAnchor;
    SMALL_RECT srSelection;
} CONSOLE_SELECTION_INFO, *PCONSOLE_SELECTION_INFO;










#line 239 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wincon.h"





typedef
BOOL
(__stdcall *PHANDLER_ROUTINE)(
     DWORD CtrlType
    );


































__declspec(dllimport)
BOOL
__stdcall
PeekConsoleInputA(
     HANDLE hConsoleInput,
     PINPUT_RECORD lpBuffer,
     DWORD nLength,
     LPDWORD lpNumberOfEventsRead
    );
__declspec(dllimport)
BOOL
__stdcall
PeekConsoleInputW(
     HANDLE hConsoleInput,
     PINPUT_RECORD lpBuffer,
     DWORD nLength,
     LPDWORD lpNumberOfEventsRead
    );




#line 306 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wincon.h"

__declspec(dllimport)
BOOL
__stdcall
ReadConsoleInputA(
     HANDLE hConsoleInput,
     PINPUT_RECORD lpBuffer,
     DWORD nLength,
     LPDWORD lpNumberOfEventsRead
    );
__declspec(dllimport)
BOOL
__stdcall
ReadConsoleInputW(
     HANDLE hConsoleInput,
     PINPUT_RECORD lpBuffer,
     DWORD nLength,
     LPDWORD lpNumberOfEventsRead
    );




#line 330 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wincon.h"

__declspec(dllimport)
BOOL
__stdcall
WriteConsoleInputA(
     HANDLE hConsoleInput,
     const INPUT_RECORD *lpBuffer,
     DWORD nLength,
     LPDWORD lpNumberOfEventsWritten
    );
__declspec(dllimport)
BOOL
__stdcall
WriteConsoleInputW(
     HANDLE hConsoleInput,
     const INPUT_RECORD *lpBuffer,
     DWORD nLength,
     LPDWORD lpNumberOfEventsWritten
    );




#line 354 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wincon.h"

__declspec(dllimport)
BOOL
__stdcall
ReadConsoleOutputA(
     HANDLE hConsoleOutput,
     PCHAR_INFO lpBuffer,
     COORD dwBufferSize,
     COORD dwBufferCoord,
     PSMALL_RECT lpReadRegion
    );
__declspec(dllimport)
BOOL
__stdcall
ReadConsoleOutputW(
     HANDLE hConsoleOutput,
     PCHAR_INFO lpBuffer,
     COORD dwBufferSize,
     COORD dwBufferCoord,
     PSMALL_RECT lpReadRegion
    );




#line 380 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wincon.h"

__declspec(dllimport)
BOOL
__stdcall
WriteConsoleOutputA(
     HANDLE hConsoleOutput,
     const CHAR_INFO *lpBuffer,
     COORD dwBufferSize,
     COORD dwBufferCoord,
     PSMALL_RECT lpWriteRegion
    );
__declspec(dllimport)
BOOL
__stdcall
WriteConsoleOutputW(
     HANDLE hConsoleOutput,
     const CHAR_INFO *lpBuffer,
     COORD dwBufferSize,
     COORD dwBufferCoord,
     PSMALL_RECT lpWriteRegion
    );




#line 406 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wincon.h"

__declspec(dllimport)
BOOL
__stdcall
ReadConsoleOutputCharacterA(
     HANDLE hConsoleOutput,
     LPSTR lpCharacter,
     DWORD nLength,
     COORD dwReadCoord,
     LPDWORD lpNumberOfCharsRead
    );
__declspec(dllimport)
BOOL
__stdcall
ReadConsoleOutputCharacterW(
     HANDLE hConsoleOutput,
     LPWSTR lpCharacter,
     DWORD nLength,
     COORD dwReadCoord,
     LPDWORD lpNumberOfCharsRead
    );




#line 432 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wincon.h"

__declspec(dllimport)
BOOL
__stdcall
ReadConsoleOutputAttribute(
     HANDLE hConsoleOutput,
     LPWORD lpAttribute,
     DWORD nLength,
     COORD dwReadCoord,
     LPDWORD lpNumberOfAttrsRead
    );

__declspec(dllimport)
BOOL
__stdcall
WriteConsoleOutputCharacterA(
     HANDLE hConsoleOutput,
     LPCSTR lpCharacter,
     DWORD nLength,
     COORD dwWriteCoord,
     LPDWORD lpNumberOfCharsWritten
    );
__declspec(dllimport)
BOOL
__stdcall
WriteConsoleOutputCharacterW(
     HANDLE hConsoleOutput,
     LPCWSTR lpCharacter,
     DWORD nLength,
     COORD dwWriteCoord,
     LPDWORD lpNumberOfCharsWritten
    );




#line 469 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wincon.h"

__declspec(dllimport)
BOOL
__stdcall
WriteConsoleOutputAttribute(
     HANDLE hConsoleOutput,
     const WORD *lpAttribute,
     DWORD nLength,
     COORD dwWriteCoord,
     LPDWORD lpNumberOfAttrsWritten
    );

__declspec(dllimport)
BOOL
__stdcall
FillConsoleOutputCharacterA(
     HANDLE hConsoleOutput,
     CHAR  cCharacter,
     DWORD  nLength,
     COORD  dwWriteCoord,
     LPDWORD lpNumberOfCharsWritten
    );
__declspec(dllimport)
BOOL
__stdcall
FillConsoleOutputCharacterW(
     HANDLE hConsoleOutput,
     WCHAR  cCharacter,
     DWORD  nLength,
     COORD  dwWriteCoord,
     LPDWORD lpNumberOfCharsWritten
    );




#line 506 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wincon.h"

__declspec(dllimport)
BOOL
__stdcall
FillConsoleOutputAttribute(
     HANDLE hConsoleOutput,
     WORD   wAttribute,
     DWORD  nLength,
     COORD  dwWriteCoord,
     LPDWORD lpNumberOfAttrsWritten
    );

__declspec(dllimport)
BOOL
__stdcall
GetConsoleMode(
     HANDLE hConsoleHandle,
     LPDWORD lpMode
    );

__declspec(dllimport)
BOOL
__stdcall
GetNumberOfConsoleInputEvents(
     HANDLE hConsoleInput,
     LPDWORD lpNumberOfEvents
    );




__declspec(dllimport)
BOOL
__stdcall
GetConsoleScreenBufferInfo(
     HANDLE hConsoleOutput,
     PCONSOLE_SCREEN_BUFFER_INFO lpConsoleScreenBufferInfo
    );

__declspec(dllimport)
BOOL
__stdcall
GetConsoleScreenBufferInfoEx(
     HANDLE hConsoleOutput,
     PCONSOLE_SCREEN_BUFFER_INFOEX lpConsoleScreenBufferInfoEx);

__declspec(dllimport)
BOOL
__stdcall
SetConsoleScreenBufferInfoEx(
     HANDLE hConsoleOutput,
     PCONSOLE_SCREEN_BUFFER_INFOEX lpConsoleScreenBufferInfoEx);

__declspec(dllimport)
COORD
__stdcall
GetLargestConsoleWindowSize(
     HANDLE hConsoleOutput
    );

__declspec(dllimport)
BOOL
__stdcall
GetConsoleCursorInfo(
     HANDLE hConsoleOutput,
     PCONSOLE_CURSOR_INFO lpConsoleCursorInfo
    );



__declspec(dllimport)
BOOL
__stdcall
GetCurrentConsoleFont(
     HANDLE hConsoleOutput,
     BOOL bMaximumWindow,
     PCONSOLE_FONT_INFO lpConsoleCurrentFont
    );


__declspec(dllimport)
BOOL
__stdcall
GetCurrentConsoleFontEx(
     HANDLE hConsoleOutput,
     BOOL bMaximumWindow,
     PCONSOLE_FONT_INFOEX lpConsoleCurrentFontEx);

__declspec(dllimport)
BOOL
__stdcall
SetCurrentConsoleFontEx(
     HANDLE hConsoleOutput,
     BOOL bMaximumWindow,
     PCONSOLE_FONT_INFOEX lpConsoleCurrentFontEx);
#line 602 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wincon.h"

__declspec(dllimport)
BOOL
__stdcall
GetConsoleHistoryInfo(
     PCONSOLE_HISTORY_INFO lpConsoleHistoryInfo);

__declspec(dllimport)
BOOL
__stdcall
SetConsoleHistoryInfo(
     PCONSOLE_HISTORY_INFO lpConsoleHistoryInfo);

__declspec(dllimport)
COORD
__stdcall
GetConsoleFontSize(
     HANDLE hConsoleOutput,
     DWORD nFont
    );

__declspec(dllimport)
BOOL
__stdcall
GetConsoleSelectionInfo(
     PCONSOLE_SELECTION_INFO lpConsoleSelectionInfo
    );

#line 631 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wincon.h"

__declspec(dllimport)
BOOL
__stdcall
GetNumberOfConsoleMouseButtons(
     LPDWORD lpNumberOfMouseButtons
    );

__declspec(dllimport)
BOOL
__stdcall
SetConsoleMode(
     HANDLE hConsoleHandle,
     DWORD dwMode
    );

__declspec(dllimport)
BOOL
__stdcall
SetConsoleActiveScreenBuffer(
     HANDLE hConsoleOutput
    );

__declspec(dllimport)
BOOL
__stdcall
FlushConsoleInputBuffer(
     HANDLE hConsoleInput
    );

__declspec(dllimport)
BOOL
__stdcall
SetConsoleScreenBufferSize(
     HANDLE hConsoleOutput,
     COORD dwSize
    );

__declspec(dllimport)
BOOL
__stdcall
SetConsoleCursorPosition(
     HANDLE hConsoleOutput,
     COORD dwCursorPosition
    );

__declspec(dllimport)
BOOL
__stdcall
SetConsoleCursorInfo(
     HANDLE hConsoleOutput,
     const CONSOLE_CURSOR_INFO *lpConsoleCursorInfo
    );

__declspec(dllimport)
BOOL
__stdcall
ScrollConsoleScreenBufferA(
     HANDLE hConsoleOutput,
     const SMALL_RECT *lpScrollRectangle,
     const SMALL_RECT *lpClipRectangle,
     COORD dwDestinationOrigin,
     const CHAR_INFO *lpFill
    );
__declspec(dllimport)
BOOL
__stdcall
ScrollConsoleScreenBufferW(
     HANDLE hConsoleOutput,
     const SMALL_RECT *lpScrollRectangle,
     const SMALL_RECT *lpClipRectangle,
     COORD dwDestinationOrigin,
     const CHAR_INFO *lpFill
    );




#line 710 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wincon.h"

__declspec(dllimport)
BOOL
__stdcall
SetConsoleWindowInfo(
     HANDLE hConsoleOutput,
     BOOL bAbsolute,
     const SMALL_RECT *lpConsoleWindow
    );

__declspec(dllimport)
BOOL
__stdcall
SetConsoleTextAttribute(
     HANDLE hConsoleOutput,
     WORD wAttributes
    );

__declspec(dllimport)
BOOL
__stdcall
SetConsoleCtrlHandler(
     PHANDLER_ROUTINE HandlerRoutine,
     BOOL Add);

__declspec(dllimport)
BOOL
__stdcall
GenerateConsoleCtrlEvent(
     DWORD dwCtrlEvent,
     DWORD dwProcessGroupId);

__declspec(dllimport)
BOOL
__stdcall
AllocConsole(
    void);

__declspec(dllimport)
BOOL
__stdcall
FreeConsole(
    void);


__declspec(dllimport)
BOOL
__stdcall
AttachConsole(
     DWORD dwProcessId);



#line 764 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wincon.h"

__declspec(dllimport)
DWORD
__stdcall
GetConsoleTitleA(
     LPSTR lpConsoleTitle,
     DWORD nSize
    );
__declspec(dllimport)
DWORD
__stdcall
GetConsoleTitleW(
     LPWSTR lpConsoleTitle,
     DWORD nSize
    );




#line 784 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wincon.h"


__declspec(dllimport)
DWORD
__stdcall
GetConsoleOriginalTitleA(
     LPSTR lpConsoleTitle,
     DWORD nSize);
__declspec(dllimport)
DWORD
__stdcall
GetConsoleOriginalTitleW(
     LPWSTR lpConsoleTitle,
     DWORD nSize);




#line 803 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wincon.h"
#line 804 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wincon.h"

__declspec(dllimport)
BOOL
__stdcall
SetConsoleTitleA(
     LPCSTR lpConsoleTitle
    );
__declspec(dllimport)
BOOL
__stdcall
SetConsoleTitleW(
     LPCWSTR lpConsoleTitle
    );




#line 822 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wincon.h"

typedef struct _CONSOLE_READCONSOLE_CONTROL {
    ULONG nLength;
    ULONG nInitialChars;
    ULONG dwCtrlWakeupMask;
    ULONG dwControlKeyState;
} CONSOLE_READCONSOLE_CONTROL, *PCONSOLE_READCONSOLE_CONTROL;

__declspec(dllimport)
BOOL
__stdcall
ReadConsoleA(
     HANDLE hConsoleInput,
    
       LPVOID lpBuffer,
     DWORD nNumberOfCharsToRead,
     LPDWORD lpNumberOfCharsRead,
     PCONSOLE_READCONSOLE_CONTROL pInputControl
    );
__declspec(dllimport)
BOOL
__stdcall
ReadConsoleW(
     HANDLE hConsoleInput,
    
       LPVOID lpBuffer,
     DWORD nNumberOfCharsToRead,
     LPDWORD lpNumberOfCharsRead,
     PCONSOLE_READCONSOLE_CONTROL pInputControl
    );




#line 857 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wincon.h"

__declspec(dllimport)
BOOL
__stdcall
WriteConsoleA(
     HANDLE hConsoleOutput,
     const void *lpBuffer,
     DWORD nNumberOfCharsToWrite,
     LPDWORD lpNumberOfCharsWritten,
     LPVOID lpReserved);
__declspec(dllimport)
BOOL
__stdcall
WriteConsoleW(
     HANDLE hConsoleOutput,
     const void *lpBuffer,
     DWORD nNumberOfCharsToWrite,
     LPDWORD lpNumberOfCharsWritten,
     LPVOID lpReserved);




#line 881 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wincon.h"




__declspec(dllimport)
HANDLE
__stdcall
CreateConsoleScreenBuffer(
     DWORD dwDesiredAccess,
     DWORD dwShareMode,
     const SECURITY_ATTRIBUTES *lpSecurityAttributes,
     DWORD dwFlags,
     LPVOID lpScreenBufferData
    );

__declspec(dllimport)
UINT
__stdcall
GetConsoleCP(
    void);

__declspec(dllimport)
BOOL
__stdcall
SetConsoleCP(
     UINT wCodePageID
    );

__declspec(dllimport)
UINT
__stdcall
GetConsoleOutputCP(
    void);

__declspec(dllimport)
BOOL
__stdcall
SetConsoleOutputCP(
     UINT wCodePageID
    );






__declspec(dllimport)
BOOL
__stdcall
GetConsoleDisplayMode(
     LPDWORD lpModeFlags);




BOOL
__stdcall
SetConsoleDisplayMode(
     HANDLE hConsoleOutput,
     DWORD dwFlags,
     PCOORD lpNewScreenBufferDimensions);

__declspec(dllimport)
HWND
__stdcall
GetConsoleWindow(
    void
    );

#line 951 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wincon.h"



__declspec(dllimport)
DWORD
__stdcall
GetConsoleProcessList(
     LPDWORD lpdwProcessList,
     DWORD dwProcessCount);





__declspec(dllimport)
BOOL
__stdcall
AddConsoleAliasA(
     LPSTR Source,
     LPSTR Target,
     LPSTR ExeName);
__declspec(dllimport)
BOOL
__stdcall
AddConsoleAliasW(
     LPWSTR Source,
     LPWSTR Target,
     LPWSTR ExeName);




#line 984 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wincon.h"

__declspec(dllimport)
DWORD
__stdcall
GetConsoleAliasA(
     LPSTR Source,
     LPSTR TargetBuffer,
     DWORD TargetBufferLength,
     LPSTR ExeName);
__declspec(dllimport)
DWORD
__stdcall
GetConsoleAliasW(
     LPWSTR Source,
     LPWSTR TargetBuffer,
     DWORD TargetBufferLength,
     LPWSTR ExeName);




#line 1006 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wincon.h"

__declspec(dllimport)
DWORD
__stdcall
GetConsoleAliasesLengthA(
     LPSTR ExeName);
__declspec(dllimport)
DWORD
__stdcall
GetConsoleAliasesLengthW(
     LPWSTR ExeName);




#line 1022 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wincon.h"

__declspec(dllimport)
DWORD
__stdcall
GetConsoleAliasExesLengthA(
    void);
__declspec(dllimport)
DWORD
__stdcall
GetConsoleAliasExesLengthW(
    void);




#line 1038 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wincon.h"

__declspec(dllimport)
DWORD
__stdcall
GetConsoleAliasesA(
     LPSTR AliasBuffer,
     DWORD AliasBufferLength,
     LPSTR ExeName);
__declspec(dllimport)
DWORD
__stdcall
GetConsoleAliasesW(
     LPWSTR AliasBuffer,
     DWORD AliasBufferLength,
     LPWSTR ExeName);




#line 1058 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wincon.h"

__declspec(dllimport)
DWORD
__stdcall
GetConsoleAliasExesA(
     LPSTR ExeNameBuffer,
     DWORD ExeNameBufferLength);
__declspec(dllimport)
DWORD
__stdcall
GetConsoleAliasExesW(
     LPWSTR ExeNameBuffer,
     DWORD ExeNameBufferLength);




#line 1076 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wincon.h"

#line 1078 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wincon.h"


}
#line 1082 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wincon.h"

#line 1084 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wincon.h"


#line 164 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windows.h"
#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winver.h"

















#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\verrsrc.h"




















#line 22 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\verrsrc.h"




































































































extern "C" {
#line 124 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\verrsrc.h"
    











typedef struct tagVS_FIXEDFILEINFO
{
    DWORD   dwSignature;            
    DWORD   dwStrucVersion;         
    DWORD   dwFileVersionMS;        
    DWORD   dwFileVersionLS;        
    DWORD   dwProductVersionMS;     
    DWORD   dwProductVersionLS;     
    DWORD   dwFileFlagsMask;        
    DWORD   dwFileFlags;            
    DWORD   dwFileOS;               
    DWORD   dwFileType;             
    DWORD   dwFileSubtype;          
    DWORD   dwFileDateMS;           
    DWORD   dwFileDateLS;           
} VS_FIXEDFILEINFO;


}
#line 156 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\verrsrc.h"

#line 158 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\verrsrc.h"

#line 19 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winver.h"



extern "C" {
#line 24 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winver.h"






DWORD
__stdcall
VerFindFileA(
                                 DWORD uFlags,
                                 LPCSTR szFileName,
                             LPCSTR szWinDir,
                                 LPCSTR szAppDir,
          LPSTR szCurDir,
                              PUINT lpuCurDirLen,
         LPSTR szDestDir,
                              PUINT lpuDestDirLen
        );
DWORD
__stdcall
VerFindFileW(
                                 DWORD uFlags,
                                 LPCWSTR szFileName,
                             LPCWSTR szWinDir,
                                 LPCWSTR szAppDir,
          LPWSTR szCurDir,
                              PUINT lpuCurDirLen,
         LPWSTR szDestDir,
                              PUINT lpuDestDirLen
        );




#line 59 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winver.h"

DWORD
__stdcall
VerInstallFileA(
                                 DWORD uFlags,
                                 LPCSTR szSrcFileName,
                                 LPCSTR szDestFileName,
                                 LPCSTR szSrcDir,
                                 LPCSTR szDestDir,
                                 LPCSTR szCurDir,
         LPSTR szTmpFile,
                              PUINT lpuTmpFileLen
        );
DWORD
__stdcall
VerInstallFileW(
                                 DWORD uFlags,
                                 LPCWSTR szSrcFileName,
                                 LPCWSTR szDestFileName,
                                 LPCWSTR szSrcDir,
                                 LPCWSTR szDestDir,
                                 LPCWSTR szCurDir,
         LPWSTR szTmpFile,
                              PUINT lpuTmpFileLen
        );




#line 89 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winver.h"


DWORD
__stdcall
GetFileVersionInfoSizeA(
                LPCSTR lptstrFilename, 
         LPDWORD lpdwHandle       
        );

DWORD
__stdcall
GetFileVersionInfoSizeW(
                LPCWSTR lptstrFilename, 
         LPDWORD lpdwHandle       
        );




#line 109 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winver.h"


BOOL
__stdcall
GetFileVersionInfoA(
                        LPCSTR lptstrFilename, 
                  DWORD dwHandle,          
                        DWORD dwLen,             
         LPVOID lpData            
        );

BOOL
__stdcall
GetFileVersionInfoW(
                        LPCWSTR lptstrFilename, 
                  DWORD dwHandle,          
                        DWORD dwLen,             
         LPVOID lpData            
        );




#line 133 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winver.h"

DWORD __stdcall GetFileVersionInfoSizeExA( DWORD dwFlags,  LPCSTR lpwstrFilename,  LPDWORD lpdwHandle);
DWORD __stdcall GetFileVersionInfoSizeExW( DWORD dwFlags,  LPCWSTR lpwstrFilename,  LPDWORD lpdwHandle);




#line 141 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winver.h"

BOOL __stdcall GetFileVersionInfoExA( DWORD dwFlags,
                                     LPCSTR lpwstrFilename,
                                     DWORD dwHandle,
                                     DWORD dwLen,
                                     LPVOID lpData);
BOOL __stdcall GetFileVersionInfoExW( DWORD dwFlags,
                                     LPCWSTR lpwstrFilename,
                                     DWORD dwHandle,
                                     DWORD dwLen,
                                     LPVOID lpData);




#line 157 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winver.h"


DWORD
__stdcall
VerLanguageNameA(
                          DWORD wLang,
         LPSTR szLang,
                          DWORD cchLang
        );
DWORD
__stdcall
VerLanguageNameW(
                          DWORD wLang,
         LPWSTR szLang,
                          DWORD cchLang
        );




#line 178 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winver.h"

BOOL
__stdcall
VerQueryValueA(
         LPCVOID pBlock,
         LPCSTR lpSubBlock,
         LPVOID * lplpBuffer,
         PUINT puLen
        );
BOOL
__stdcall
VerQueryValueW(
         LPCVOID pBlock,
         LPCWSTR lpSubBlock,
         LPVOID * lplpBuffer,
         PUINT puLen
        );




#line 200 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winver.h"


#line 203 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winver.h"


}
#line 207 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winver.h"


#line 210 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winver.h"


#line 165 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windows.h"
#line 166 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windows.h"

#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"
























extern "C" {
#line 27 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"






































typedef ACCESS_MASK REGSAM;




























struct val_context {
    int valuelen;       
    LPVOID value_context;   
    LPVOID val_buff_ptr;    
};

typedef struct val_context  *PVALCONTEXT;

typedef struct pvalueA {           
    LPSTR   pv_valuename;          
    int pv_valuelen;
    LPVOID pv_value_context;
    DWORD pv_type;
}PVALUEA,  *PPVALUEA;
typedef struct pvalueW {           
    LPWSTR  pv_valuename;          
    int pv_valuelen;
    LPVOID pv_value_context;
    DWORD pv_type;
}PVALUEW,  *PPVALUEW;




typedef PVALUEA PVALUE;
typedef PPVALUEA PPVALUE;
#line 121 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"

typedef
DWORD __cdecl
QUERYHANDLER (LPVOID keycontext, PVALCONTEXT val_list, DWORD num_vals,
          LPVOID outputbuffer, DWORD  *total_outlen, DWORD input_blen);

typedef QUERYHANDLER  *PQUERYHANDLER;

typedef struct provider_info {
    PQUERYHANDLER pi_R0_1val;
    PQUERYHANDLER pi_R0_allvals;
    PQUERYHANDLER pi_R3_1val;
    PQUERYHANDLER pi_R3_allvals;
    DWORD pi_flags;    
    LPVOID pi_key_context;
}REG_PROVIDER;

typedef struct provider_info  *PPROVIDER;

typedef struct value_entA {
    LPSTR   ve_valuename;
    DWORD ve_valuelen;
    DWORD_PTR ve_valueptr;
    DWORD ve_type;
}VALENTA,  *PVALENTA;
typedef struct value_entW {
    LPWSTR  ve_valuename;
    DWORD ve_valuelen;
    DWORD_PTR ve_valueptr;
    DWORD ve_type;
}VALENTW,  *PVALENTW;




typedef VALENTA VALENT;
typedef PVALENTA PVALENT;
#line 159 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"

#line 161 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"


#line 164 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"












typedef  LONG LSTATUS;

__declspec(dllimport)
LSTATUS
__stdcall
RegCloseKey (
     HKEY hKey
    );

__declspec(dllimport)
LSTATUS
__stdcall
RegOverridePredefKey (
     HKEY hKey,
     HKEY hNewHKey
    );

__declspec(dllimport)
LSTATUS
__stdcall
RegOpenUserClassesRoot(
     HANDLE hToken,
     DWORD dwOptions,
     REGSAM samDesired,
     PHKEY  phkResult
    );

__declspec(dllimport)
LSTATUS
__stdcall
RegOpenCurrentUser(
     REGSAM samDesired,
     PHKEY phkResult
    );

__declspec(dllimport)
LSTATUS
__stdcall
RegDisablePredefinedCache(
    void
    );

__declspec(dllimport)
LSTATUS
__stdcall
RegDisablePredefinedCacheEx(
    void
    );

__declspec(dllimport)
LSTATUS
__stdcall
RegConnectRegistryA (
     LPCSTR lpMachineName,
     HKEY hKey,
     PHKEY phkResult
    );
__declspec(dllimport)
LSTATUS
__stdcall
RegConnectRegistryW (
     LPCWSTR lpMachineName,
     HKEY hKey,
     PHKEY phkResult
    );




#line 246 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"

__declspec(dllimport)
LSTATUS
__stdcall
RegConnectRegistryExA (
     LPCSTR lpMachineName,
     HKEY hKey,
     ULONG Flags,
     PHKEY phkResult
    );
__declspec(dllimport)
LSTATUS
__stdcall
RegConnectRegistryExW (
     LPCWSTR lpMachineName,
     HKEY hKey,
     ULONG Flags,
     PHKEY phkResult
    );




#line 270 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"

__declspec(dllimport)
LSTATUS
__stdcall
RegCreateKeyA (
     HKEY hKey,
     LPCSTR lpSubKey,
     PHKEY phkResult
    );
__declspec(dllimport)
LSTATUS
__stdcall
RegCreateKeyW (
     HKEY hKey,
     LPCWSTR lpSubKey,
     PHKEY phkResult
    );




#line 292 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"

__declspec(dllimport)
LSTATUS
__stdcall
RegCreateKeyExA (
     HKEY hKey,
     LPCSTR lpSubKey,
     DWORD Reserved,
     LPSTR lpClass,
     DWORD dwOptions,
     REGSAM samDesired,
     const LPSECURITY_ATTRIBUTES lpSecurityAttributes,
     PHKEY phkResult,
     LPDWORD lpdwDisposition
    );
__declspec(dllimport)
LSTATUS
__stdcall
RegCreateKeyExW (
     HKEY hKey,
     LPCWSTR lpSubKey,
     DWORD Reserved,
     LPWSTR lpClass,
     DWORD dwOptions,
     REGSAM samDesired,
     const LPSECURITY_ATTRIBUTES lpSecurityAttributes,
     PHKEY phkResult,
     LPDWORD lpdwDisposition
    );




#line 326 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"

__declspec(dllimport)
LSTATUS
__stdcall
RegCreateKeyTransactedA (
     HKEY hKey,
     LPCSTR lpSubKey,
     DWORD Reserved,
     LPSTR lpClass,
     DWORD dwOptions,
     REGSAM samDesired,
     const LPSECURITY_ATTRIBUTES lpSecurityAttributes,
     PHKEY phkResult,
     LPDWORD lpdwDisposition,
            HANDLE hTransaction,
     PVOID  pExtendedParemeter
    );
__declspec(dllimport)
LSTATUS
__stdcall
RegCreateKeyTransactedW (
     HKEY hKey,
     LPCWSTR lpSubKey,
     DWORD Reserved,
     LPWSTR lpClass,
     DWORD dwOptions,
     REGSAM samDesired,
     const LPSECURITY_ATTRIBUTES lpSecurityAttributes,
     PHKEY phkResult,
     LPDWORD lpdwDisposition,
            HANDLE hTransaction,
     PVOID  pExtendedParemeter
    );




#line 364 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"

__declspec(dllimport)
LSTATUS
__stdcall
RegDeleteKeyA (
     HKEY hKey,
     LPCSTR lpSubKey
    );
__declspec(dllimport)
LSTATUS
__stdcall
RegDeleteKeyW (
     HKEY hKey,
     LPCWSTR lpSubKey
    );




#line 384 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"

__declspec(dllimport)
LSTATUS
__stdcall
RegDeleteKeyExA (
     HKEY hKey,
     LPCSTR lpSubKey,
     REGSAM samDesired,
     DWORD Reserved
    );
__declspec(dllimport)
LSTATUS
__stdcall
RegDeleteKeyExW (
     HKEY hKey,
     LPCWSTR lpSubKey,
     REGSAM samDesired,
     DWORD Reserved
    );




#line 408 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"

__declspec(dllimport)
LSTATUS
__stdcall
RegDeleteKeyTransactedA (
     HKEY hKey,
     LPCSTR lpSubKey,
     REGSAM samDesired,
     DWORD Reserved,
            HANDLE hTransaction,
     PVOID  pExtendedParameter
    );
__declspec(dllimport)
LSTATUS
__stdcall
RegDeleteKeyTransactedW (
     HKEY hKey,
     LPCWSTR lpSubKey,
     REGSAM samDesired,
     DWORD Reserved,
            HANDLE hTransaction,
     PVOID  pExtendedParameter
    );




#line 436 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"

__declspec(dllimport)
LONG
__stdcall
RegDisableReflectionKey (
     HKEY hBase
    );    

__declspec(dllimport)
LONG
__stdcall
RegEnableReflectionKey (
     HKEY hBase
    );    

__declspec(dllimport)
LONG
__stdcall
RegQueryReflectionKey (
     HKEY hBase,
     BOOL *bIsReflectionDisabled
    );    
    
__declspec(dllimport)
LSTATUS
__stdcall
RegDeleteValueA (
     HKEY hKey,
     LPCSTR lpValueName
    );
__declspec(dllimport)
LSTATUS
__stdcall
RegDeleteValueW (
     HKEY hKey,
     LPCWSTR lpValueName
    );




#line 478 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"

__declspec(dllimport)
LSTATUS
__stdcall
RegEnumKeyA (
     HKEY hKey,
     DWORD dwIndex,
     LPSTR lpName,
     DWORD cchName
    );
__declspec(dllimport)
LSTATUS
__stdcall
RegEnumKeyW (
     HKEY hKey,
     DWORD dwIndex,
     LPWSTR lpName,
     DWORD cchName
    );




#line 502 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"

__declspec(dllimport)
LSTATUS
__stdcall
RegEnumKeyExA (
     HKEY hKey,
     DWORD dwIndex,
     LPSTR lpName,
     LPDWORD lpcchName,
     LPDWORD lpReserved,
     LPSTR lpClass,
     LPDWORD lpcchClass,
     PFILETIME lpftLastWriteTime
    );
__declspec(dllimport)
LSTATUS
__stdcall
RegEnumKeyExW (
     HKEY hKey,
     DWORD dwIndex,
     LPWSTR lpName,
     LPDWORD lpcchName,
     LPDWORD lpReserved,
     LPWSTR lpClass,
     LPDWORD lpcchClass,
     PFILETIME lpftLastWriteTime
    );




#line 534 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"

__declspec(dllimport)
LSTATUS
__stdcall
RegEnumValueA (
     HKEY hKey,
     DWORD dwIndex,
     LPSTR lpValueName,
     LPDWORD lpcchValueName,
     LPDWORD lpReserved,
     LPDWORD lpType,
      LPBYTE lpData,
     LPDWORD lpcbData
    );
__declspec(dllimport)
LSTATUS
__stdcall
RegEnumValueW (
     HKEY hKey,
     DWORD dwIndex,
     LPWSTR lpValueName,
     LPDWORD lpcchValueName,
     LPDWORD lpReserved,
     LPDWORD lpType,
      LPBYTE lpData,
     LPDWORD lpcbData
    );




#line 566 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"

__declspec(dllimport)
LSTATUS
__stdcall
RegFlushKey (
     HKEY hKey
    );

__declspec(dllimport)
LSTATUS
__stdcall
RegGetKeySecurity (
     HKEY hKey,
     SECURITY_INFORMATION SecurityInformation,
     PSECURITY_DESCRIPTOR pSecurityDescriptor,
     LPDWORD lpcbSecurityDescriptor
    );

__declspec(dllimport)
LSTATUS
__stdcall
RegLoadKeyA (
     HKEY    hKey,
     LPCSTR  lpSubKey,
     LPCSTR  lpFile
    );
__declspec(dllimport)
LSTATUS
__stdcall
RegLoadKeyW (
     HKEY    hKey,
     LPCWSTR  lpSubKey,
     LPCWSTR  lpFile
    );




#line 605 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"

__declspec(dllimport)
LSTATUS
__stdcall
RegNotifyChangeKeyValue (
     HKEY hKey,
     BOOL bWatchSubtree,
     DWORD dwNotifyFilter,
     HANDLE hEvent,
     BOOL fAsynchronous
    );

__declspec(dllimport)
LSTATUS
__stdcall
RegOpenKeyA (
     HKEY hKey,
     LPCSTR lpSubKey,
     PHKEY phkResult
    );
__declspec(dllimport)
LSTATUS
__stdcall
RegOpenKeyW (
     HKEY hKey,
     LPCWSTR lpSubKey,
     PHKEY phkResult
    );




#line 638 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"

__declspec(dllimport)
LSTATUS
__stdcall
RegOpenKeyExA (
     HKEY hKey,
     LPCSTR lpSubKey,
     DWORD ulOptions,
     REGSAM samDesired,
     PHKEY phkResult
    );
__declspec(dllimport)
LSTATUS
__stdcall
RegOpenKeyExW (
     HKEY hKey,
     LPCWSTR lpSubKey,
     DWORD ulOptions,
     REGSAM samDesired,
     PHKEY phkResult
    );




#line 664 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"

__declspec(dllimport)
LSTATUS
__stdcall
RegOpenKeyTransactedA (
     HKEY hKey,
     LPCSTR lpSubKey,
     DWORD ulOptions,
     REGSAM samDesired,
     PHKEY phkResult,
            HANDLE hTransaction,
     PVOID  pExtendedParemeter
    );
__declspec(dllimport)
LSTATUS
__stdcall
RegOpenKeyTransactedW (
     HKEY hKey,
     LPCWSTR lpSubKey,
     DWORD ulOptions,
     REGSAM samDesired,
     PHKEY phkResult,
            HANDLE hTransaction,
     PVOID  pExtendedParemeter
    );




#line 694 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"

__declspec(dllimport)
LSTATUS
__stdcall
RegQueryInfoKeyA (
     HKEY hKey,
     LPSTR lpClass,
     LPDWORD lpcchClass,
     LPDWORD lpReserved,
     LPDWORD lpcSubKeys,
     LPDWORD lpcbMaxSubKeyLen,
     LPDWORD lpcbMaxClassLen,
     LPDWORD lpcValues,
     LPDWORD lpcbMaxValueNameLen,
     LPDWORD lpcbMaxValueLen,
     LPDWORD lpcbSecurityDescriptor,
     PFILETIME lpftLastWriteTime
    );
__declspec(dllimport)
LSTATUS
__stdcall
RegQueryInfoKeyW (
     HKEY hKey,
     LPWSTR lpClass,
     LPDWORD lpcchClass,
     LPDWORD lpReserved,
     LPDWORD lpcSubKeys,
     LPDWORD lpcbMaxSubKeyLen,
     LPDWORD lpcbMaxClassLen,
     LPDWORD lpcValues,
     LPDWORD lpcbMaxValueNameLen,
     LPDWORD lpcbMaxValueLen,
     LPDWORD lpcbSecurityDescriptor,
     PFILETIME lpftLastWriteTime
    );




#line 734 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"

__declspec(dllimport)
LSTATUS
__stdcall
RegQueryValueA (
     HKEY hKey,
     LPCSTR lpSubKey,
      LPSTR lpData,
     PLONG lpcbData
    );
__declspec(dllimport)
LSTATUS
__stdcall
RegQueryValueW (
     HKEY hKey,
     LPCWSTR lpSubKey,
      LPWSTR lpData,
     PLONG lpcbData
    );




#line 758 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"



__declspec(dllimport)
LSTATUS
__stdcall
RegQueryMultipleValuesA (
     HKEY hKey,
     PVALENTA val_list,
     DWORD num_vals,
      LPSTR lpValueBuf,
     LPDWORD ldwTotsize
    );
__declspec(dllimport)
LSTATUS
__stdcall
RegQueryMultipleValuesW (
     HKEY hKey,
     PVALENTW val_list,
     DWORD num_vals,
      LPWSTR lpValueBuf,
     LPDWORD ldwTotsize
    );




#line 786 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"
#line 787 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"

__declspec(dllimport)
LSTATUS
__stdcall
RegQueryValueExA (
     HKEY hKey,
     LPCSTR lpValueName,
     LPDWORD lpReserved,
     LPDWORD lpType,
      LPBYTE lpData,
     LPDWORD lpcbData
    );
__declspec(dllimport)
LSTATUS
__stdcall
RegQueryValueExW (
     HKEY hKey,
     LPCWSTR lpValueName,
     LPDWORD lpReserved,
     LPDWORD lpType,
      LPBYTE lpData,
     LPDWORD lpcbData
    );




#line 815 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"

__declspec(dllimport)
LSTATUS
__stdcall
RegReplaceKeyA (
     HKEY hKey,
     LPCSTR lpSubKey,
     LPCSTR lpNewFile,
     LPCSTR lpOldFile
    );
__declspec(dllimport)
LSTATUS
__stdcall
RegReplaceKeyW (
     HKEY hKey,
     LPCWSTR lpSubKey,
     LPCWSTR lpNewFile,
     LPCWSTR lpOldFile
    );




#line 839 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"

__declspec(dllimport)
LSTATUS
__stdcall
RegRestoreKeyA (
     HKEY hKey,
     LPCSTR lpFile,
     DWORD dwFlags
    );
__declspec(dllimport)
LSTATUS
__stdcall
RegRestoreKeyW (
     HKEY hKey,
     LPCWSTR lpFile,
     DWORD dwFlags
    );




#line 861 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"



__declspec(dllimport)
LSTATUS
__stdcall
RegRenameKey(
     HKEY hKey,
     LPCWSTR lpSubKeyName,
     LPCWSTR lpNewKeyName
    );

#line 874 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"

__declspec(dllimport)
LSTATUS
__stdcall
RegSaveKeyA (
     HKEY hKey,
     LPCSTR lpFile,
     const LPSECURITY_ATTRIBUTES lpSecurityAttributes
    );
__declspec(dllimport)
LSTATUS
__stdcall
RegSaveKeyW (
     HKEY hKey,
     LPCWSTR lpFile,
     const LPSECURITY_ATTRIBUTES lpSecurityAttributes
    );




#line 896 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"

__declspec(dllimport)
LSTATUS
__stdcall
RegSetKeySecurity (
     HKEY hKey,
     SECURITY_INFORMATION SecurityInformation,
     PSECURITY_DESCRIPTOR pSecurityDescriptor
    );

__declspec(dllimport)
LSTATUS
__stdcall
RegSetValueA (
     HKEY hKey,
     LPCSTR lpSubKey,
     DWORD dwType,
     LPCSTR lpData,
     DWORD cbData
    );
__declspec(dllimport)
LSTATUS
__stdcall
RegSetValueW (
     HKEY hKey,
     LPCWSTR lpSubKey,
     DWORD dwType,
     LPCWSTR lpData,
     DWORD cbData
    );




#line 931 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"


__declspec(dllimport)
LSTATUS
__stdcall
RegSetValueExA (
     HKEY hKey,
     LPCSTR lpValueName,
     DWORD Reserved,
     DWORD dwType,
     const BYTE* lpData,
     DWORD cbData
    );
__declspec(dllimport)
LSTATUS
__stdcall
RegSetValueExW (
     HKEY hKey,
     LPCWSTR lpValueName,
     DWORD Reserved,
     DWORD dwType,
     const BYTE* lpData,
     DWORD cbData
    );




#line 960 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"

__declspec(dllimport)
LSTATUS
__stdcall
RegUnLoadKeyA (
     HKEY    hKey,
     LPCSTR lpSubKey
    );
__declspec(dllimport)
LSTATUS
__stdcall
RegUnLoadKeyW (
     HKEY    hKey,
     LPCWSTR lpSubKey
    );




#line 980 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"






__declspec(dllimport)
LSTATUS
__stdcall
RegDeleteKeyValueA (
          HKEY     hKey,
      LPCSTR lpSubKey,
      LPCSTR lpValueName
    );
__declspec(dllimport)
LSTATUS
__stdcall
RegDeleteKeyValueW (
          HKEY     hKey,
      LPCWSTR lpSubKey,
      LPCWSTR lpValueName
    );




#line 1007 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"

__declspec(dllimport)
LSTATUS
__stdcall
RegSetKeyValueA (
            HKEY     hKey,
        LPCSTR  lpSubKey,
        LPCSTR  lpValueName,
            DWORD    dwType,
     LPCVOID  lpData,
            DWORD    cbData
    );
__declspec(dllimport)
LSTATUS
__stdcall
RegSetKeyValueW (
            HKEY     hKey,
        LPCWSTR  lpSubKey,
        LPCWSTR  lpValueName,
            DWORD    dwType,
     LPCVOID  lpData,
            DWORD    cbData
    );




#line 1035 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"

__declspec(dllimport)
LSTATUS
__stdcall
RegDeleteTreeA (
            HKEY     hKey,
        LPCSTR  lpSubKey
    );
__declspec(dllimport)
LSTATUS
__stdcall
RegDeleteTreeW (
            HKEY     hKey,
        LPCWSTR  lpSubKey
    );




#line 1055 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"

__declspec(dllimport)
LSTATUS
__stdcall
RegCopyTreeA (
            HKEY     hKeySrc,
        LPCSTR  lpSubKey,
            HKEY     hKeyDest
    );
__declspec(dllimport)
LSTATUS
__stdcall
RegCopyTreeW (
            HKEY     hKeySrc,
        LPCWSTR  lpSubKey,
            HKEY     hKeyDest
    );




#line 1077 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"

__declspec(dllimport)
LSTATUS
__stdcall
RegGetValueA (
     HKEY    hkey,
     LPCSTR  lpSubKey,
     LPCSTR  lpValue,
     DWORD    dwFlags,
     LPDWORD pdwType,
     PVOID   pvData,
     LPDWORD pcbData
    );
__declspec(dllimport)
LSTATUS
__stdcall
RegGetValueW (
     HKEY    hkey,
     LPCWSTR  lpSubKey,
     LPCWSTR  lpValue,
     DWORD    dwFlags,
     LPDWORD pdwType,
     PVOID   pvData,
     LPDWORD pcbData
    );




#line 1107 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"

__declspec(dllimport)
LSTATUS
__stdcall
RegLoadMUIStringA (
                                        HKEY        hKey,
                                    LPCSTR    pszValue,
                      LPSTR     pszOutBuf,
                                        DWORD       cbOutBuf,
                                   LPDWORD     pcbData,
                                        DWORD       Flags,   
                                    LPCSTR    pszDirectory
                    );
__declspec(dllimport)
LSTATUS
__stdcall
RegLoadMUIStringW (
                                        HKEY        hKey,
                                    LPCWSTR    pszValue,
                      LPWSTR     pszOutBuf,
                                        DWORD       cbOutBuf,
                                   LPDWORD     pcbData,
                                        DWORD       Flags,   
                                    LPCWSTR    pszDirectory
                    );




#line 1137 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"


__declspec(dllimport)
LSTATUS
__stdcall
RegLoadAppKeyA (
                LPCSTR    lpFile,
               PHKEY       phkResult,
                REGSAM      samDesired, 
                DWORD       dwOptions,
          DWORD       Reserved
    );
__declspec(dllimport)
LSTATUS
__stdcall
RegLoadAppKeyW (
                LPCWSTR    lpFile,
               PHKEY       phkResult,
                REGSAM      samDesired, 
                DWORD       dwOptions,
          DWORD       Reserved
    );




#line 1164 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"

#line 1166 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"





 
__declspec(dllimport)
BOOL
__stdcall
InitiateSystemShutdownA(
     LPSTR lpMachineName,
     LPSTR lpMessage,
     DWORD dwTimeout,
     BOOL bForceAppsClosed,
     BOOL bRebootAfterShutdown
    );
 
__declspec(dllimport)
BOOL
__stdcall
InitiateSystemShutdownW(
     LPWSTR lpMachineName,
     LPWSTR lpMessage,
     DWORD dwTimeout,
     BOOL bForceAppsClosed,
     BOOL bRebootAfterShutdown
    );




#line 1198 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"


__declspec(dllimport)
BOOL
__stdcall
AbortSystemShutdownA(
     LPSTR lpMachineName
    );
__declspec(dllimport)
BOOL
__stdcall
AbortSystemShutdownW(
     LPWSTR lpMachineName
    );




#line 1217 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"





#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\reason.h"














#pragma once





































































































#line 118 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\reason.h"

#line 1223 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"


















  
 
#line 1244 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"
__declspec(dllimport)
BOOL
__stdcall
InitiateSystemShutdownExA(
     LPSTR lpMachineName,
     LPSTR lpMessage,
     DWORD dwTimeout,
     BOOL bForceAppsClosed,
     BOOL bRebootAfterShutdown,
     DWORD dwReason
    );
  
 
#line 1258 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"
__declspec(dllimport)
BOOL
__stdcall
InitiateSystemShutdownExW(
     LPWSTR lpMachineName,
     LPWSTR lpMessage,
     DWORD dwTimeout,
     BOOL bForceAppsClosed,
     BOOL bRebootAfterShutdown,
     DWORD dwReason
    );




#line 1274 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"
















__declspec(dllimport)
DWORD
__stdcall
InitiateShutdownA(
     LPSTR lpMachineName,
     LPSTR lpMessage,
         DWORD dwGracePeriod,
         DWORD dwShutdownFlags,
         DWORD dwReason
    );
__declspec(dllimport)
DWORD
__stdcall
InitiateShutdownW(
     LPWSTR lpMachineName,
     LPWSTR lpMessage,
         DWORD dwGracePeriod,
         DWORD dwShutdownFlags,
         DWORD dwReason
    );




#line 1315 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"

__declspec(dllimport)
LSTATUS
__stdcall
RegSaveKeyExA (
     HKEY hKey,
     LPCSTR lpFile,
     const LPSECURITY_ATTRIBUTES lpSecurityAttributes,
     DWORD Flags
    );
__declspec(dllimport)
LSTATUS
__stdcall
RegSaveKeyExW (
     HKEY hKey,
     LPCWSTR lpFile,
     const LPSECURITY_ATTRIBUTES lpSecurityAttributes,
     DWORD Flags
    );




#line 1339 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"


}
#line 1343 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"


#line 1346 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winreg.h"



#line 168 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windows.h"
#line 169 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windows.h"

#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnetwk.h"


























#pragma once


extern "C" {
#line 32 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnetwk.h"






#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wnnc.h"









































































































#line 107 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wnnc.h"




#line 39 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnetwk.h"











#line 51 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnetwk.h"






#line 58 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnetwk.h"









#line 68 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnetwk.h"













#line 82 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnetwk.h"



#line 86 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnetwk.h"

typedef struct  _NETRESOURCEA {
    DWORD    dwScope;
    DWORD    dwType;
    DWORD    dwDisplayType;
    DWORD    dwUsage;
    LPSTR    lpLocalName;
    LPSTR    lpRemoteName;
    LPSTR    lpComment ;
    LPSTR    lpProvider;
}NETRESOURCEA, *LPNETRESOURCEA;
typedef struct  _NETRESOURCEW {
    DWORD    dwScope;
    DWORD    dwType;
    DWORD    dwDisplayType;
    DWORD    dwUsage;
    LPWSTR   lpLocalName;
    LPWSTR   lpRemoteName;
    LPWSTR   lpComment ;
    LPWSTR   lpProvider;
}NETRESOURCEW, *LPNETRESOURCEW;




typedef NETRESOURCEA NETRESOURCE;
typedef LPNETRESOURCEA LPNETRESOURCE;
#line 114 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnetwk.h"





















#line 136 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnetwk.h"



#line 140 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnetwk.h"


#line 143 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnetwk.h"


DWORD __stdcall
WNetAddConnectionA(
         LPCSTR   lpRemoteName,
     LPCSTR   lpPassword,
     LPCSTR   lpLocalName
    );

DWORD __stdcall
WNetAddConnectionW(
         LPCWSTR   lpRemoteName,
     LPCWSTR   lpPassword,
     LPCWSTR   lpLocalName
    );




#line 163 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnetwk.h"


DWORD __stdcall
WNetAddConnection2A(
         LPNETRESOURCEA lpNetResource,
     LPCSTR       lpPassword,
     LPCSTR       lpUserName,
         DWORD          dwFlags
    );

DWORD __stdcall
WNetAddConnection2W(
         LPNETRESOURCEW lpNetResource,
     LPCWSTR       lpPassword,
     LPCWSTR       lpUserName,
         DWORD          dwFlags
    );




#line 185 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnetwk.h"


DWORD __stdcall
WNetAddConnection3A(
     HWND           hwndOwner,
         LPNETRESOURCEA lpNetResource,
     LPCSTR       lpPassword,
     LPCSTR       lpUserName,
         DWORD          dwFlags
    );

DWORD __stdcall
WNetAddConnection3W(
     HWND           hwndOwner,
         LPNETRESOURCEW lpNetResource,
     LPCWSTR       lpPassword,
     LPCWSTR       lpUserName,
         DWORD          dwFlags
    );




#line 209 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnetwk.h"


DWORD __stdcall
WNetCancelConnectionA(
     LPCSTR lpName,
     BOOL     fForce
    );

DWORD __stdcall
WNetCancelConnectionW(
     LPCWSTR lpName,
     BOOL     fForce
    );




#line 227 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnetwk.h"


DWORD __stdcall
WNetCancelConnection2A(
     LPCSTR lpName,
     DWORD    dwFlags,
     BOOL     fForce
    );

DWORD __stdcall
WNetCancelConnection2W(
     LPCWSTR lpName,
     DWORD    dwFlags,
     BOOL     fForce
    );




#line 247 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnetwk.h"


DWORD __stdcall
WNetGetConnectionA(
     LPCSTR lpLocalName,
     LPSTR  lpRemoteName,
     LPDWORD lpnLength
    );

DWORD __stdcall
WNetGetConnectionW(
     LPCWSTR lpLocalName,
     LPWSTR  lpRemoteName,
     LPDWORD lpnLength
    );




#line 267 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnetwk.h"




DWORD __stdcall
WNetRestoreSingleConnectionW(
     HWND    hwndParent,
         LPCWSTR lpDevice,
         BOOL    fUseUI
    );









#line 287 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnetwk.h"




DWORD __stdcall
WNetUseConnectionA(
     HWND            hwndOwner,
         LPNETRESOURCEA  lpNetResource,
     LPCSTR        lpPassword,
     LPCSTR        lpUserId,
         DWORD           dwFlags,
     LPSTR lpAccessName,
     LPDWORD lpBufferSize,
     LPDWORD   lpResult
    );

DWORD __stdcall
WNetUseConnectionW(
     HWND            hwndOwner,
         LPNETRESOURCEW  lpNetResource,
     LPCWSTR        lpPassword,
     LPCWSTR        lpUserId,
         DWORD           dwFlags,
     LPWSTR lpAccessName,
     LPDWORD lpBufferSize,
     LPDWORD   lpResult
    );




#line 319 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnetwk.h"
#line 320 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnetwk.h"






DWORD __stdcall
WNetConnectionDialog(
     HWND  hwnd,
     DWORD dwType
    );


DWORD __stdcall
WNetDisconnectDialog(
     HWND hwnd,
     DWORD dwType
    );


typedef struct _CONNECTDLGSTRUCTA{
    DWORD cbStructure;       
    HWND hwndOwner;          
    LPNETRESOURCEA lpConnRes;
    DWORD dwFlags;           
    DWORD dwDevNum;          
} CONNECTDLGSTRUCTA,  *LPCONNECTDLGSTRUCTA;
typedef struct _CONNECTDLGSTRUCTW{
    DWORD cbStructure;       
    HWND hwndOwner;          
    LPNETRESOURCEW lpConnRes;
    DWORD dwFlags;           
    DWORD dwDevNum;          
} CONNECTDLGSTRUCTW,  *LPCONNECTDLGSTRUCTW;




typedef CONNECTDLGSTRUCTA CONNECTDLGSTRUCT;
typedef LPCONNECTDLGSTRUCTA LPCONNECTDLGSTRUCT;
#line 361 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnetwk.h"















DWORD __stdcall
WNetConnectionDialog1A(
     LPCONNECTDLGSTRUCTA lpConnDlgStruct
    );

DWORD __stdcall
WNetConnectionDialog1W(
     LPCONNECTDLGSTRUCTW lpConnDlgStruct
    );




#line 390 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnetwk.h"

typedef struct _DISCDLGSTRUCTA{
    DWORD           cbStructure;      
    HWND            hwndOwner;        
    LPSTR           lpLocalName;      
    LPSTR           lpRemoteName;     
    DWORD           dwFlags;          
} DISCDLGSTRUCTA,  *LPDISCDLGSTRUCTA;
typedef struct _DISCDLGSTRUCTW{
    DWORD           cbStructure;      
    HWND            hwndOwner;        
    LPWSTR          lpLocalName;      
    LPWSTR          lpRemoteName;     
    DWORD           dwFlags;          
} DISCDLGSTRUCTW,  *LPDISCDLGSTRUCTW;




typedef DISCDLGSTRUCTA DISCDLGSTRUCT;
typedef LPDISCDLGSTRUCTA LPDISCDLGSTRUCT;
#line 412 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnetwk.h"





DWORD __stdcall
WNetDisconnectDialog1A(
     LPDISCDLGSTRUCTA lpConnDlgStruct
    );

DWORD __stdcall
WNetDisconnectDialog1W(
     LPDISCDLGSTRUCTW lpConnDlgStruct
    );




#line 431 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnetwk.h"
#line 432 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnetwk.h"






DWORD __stdcall
WNetOpenEnumA(
      DWORD          dwScope,
      DWORD          dwType,
      DWORD          dwUsage,
     LPNETRESOURCEA lpNetResource,
     LPHANDLE       lphEnum
    );

DWORD __stdcall
WNetOpenEnumW(
      DWORD          dwScope,
      DWORD          dwType,
      DWORD          dwUsage,
     LPNETRESOURCEW lpNetResource,
     LPHANDLE       lphEnum
    );




#line 460 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnetwk.h"


DWORD __stdcall
WNetEnumResourceA(
        HANDLE  hEnum,
     LPDWORD lpcCount,
     LPVOID  lpBuffer,
     LPDWORD lpBufferSize
    );

DWORD __stdcall
WNetEnumResourceW(
        HANDLE  hEnum,
     LPDWORD lpcCount,
     LPVOID  lpBuffer,
     LPDWORD lpBufferSize
    );




#line 482 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnetwk.h"


DWORD __stdcall
WNetCloseEnum(
     HANDLE   hEnum
    );



DWORD __stdcall
WNetGetResourceParentA(
     LPNETRESOURCEA lpNetResource,
     LPVOID lpBuffer,
     LPDWORD lpcbBuffer
    );

DWORD __stdcall
WNetGetResourceParentW(
     LPNETRESOURCEW lpNetResource,
     LPVOID lpBuffer,
     LPDWORD lpcbBuffer
    );




#line 509 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnetwk.h"


DWORD __stdcall
WNetGetResourceInformationA(
     LPNETRESOURCEA  lpNetResource,
     LPVOID lpBuffer,
     LPDWORD lpcbBuffer,
     LPSTR *lplpSystem
    );

DWORD __stdcall
WNetGetResourceInformationW(
     LPNETRESOURCEW  lpNetResource,
     LPVOID lpBuffer,
     LPDWORD lpcbBuffer,
     LPWSTR *lplpSystem
    );




#line 531 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnetwk.h"
#line 532 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnetwk.h"








typedef struct  _UNIVERSAL_NAME_INFOA {
    LPSTR    lpUniversalName;
}UNIVERSAL_NAME_INFOA, *LPUNIVERSAL_NAME_INFOA;
typedef struct  _UNIVERSAL_NAME_INFOW {
    LPWSTR   lpUniversalName;
}UNIVERSAL_NAME_INFOW, *LPUNIVERSAL_NAME_INFOW;




typedef UNIVERSAL_NAME_INFOA UNIVERSAL_NAME_INFO;
typedef LPUNIVERSAL_NAME_INFOA LPUNIVERSAL_NAME_INFO;
#line 553 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnetwk.h"

typedef struct  _REMOTE_NAME_INFOA {
    LPSTR    lpUniversalName;
    LPSTR    lpConnectionName;
    LPSTR    lpRemainingPath;
}REMOTE_NAME_INFOA, *LPREMOTE_NAME_INFOA;
typedef struct  _REMOTE_NAME_INFOW {
    LPWSTR   lpUniversalName;
    LPWSTR   lpConnectionName;
    LPWSTR   lpRemainingPath;
}REMOTE_NAME_INFOW, *LPREMOTE_NAME_INFOW;




typedef REMOTE_NAME_INFOA REMOTE_NAME_INFO;
typedef LPREMOTE_NAME_INFOA LPREMOTE_NAME_INFO;
#line 571 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnetwk.h"


DWORD __stdcall
WNetGetUniversalNameA(
     LPCSTR lpLocalPath,
     DWORD    dwInfoLevel,
     LPVOID lpBuffer,
     LPDWORD lpBufferSize
    );

DWORD __stdcall
WNetGetUniversalNameW(
     LPCWSTR lpLocalPath,
     DWORD    dwInfoLevel,
     LPVOID lpBuffer,
     LPDWORD lpBufferSize
    );




#line 593 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnetwk.h"





DWORD __stdcall
WNetGetUserA(
     LPCSTR  lpName,
     LPSTR lpUserName,
      LPDWORD lpnLength
    );




DWORD __stdcall
WNetGetUserW(
     LPCWSTR  lpName,
     LPWSTR lpUserName,
      LPDWORD lpnLength
    );




#line 619 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnetwk.h"












#line 632 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnetwk.h"




DWORD __stdcall
WNetGetProviderNameA(
        DWORD   dwNetType,
     LPSTR lpProviderName,
     LPDWORD lpBufferSize
    );

DWORD __stdcall
WNetGetProviderNameW(
        DWORD   dwNetType,
     LPWSTR lpProviderName,
     LPDWORD lpBufferSize
    );




#line 654 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnetwk.h"

typedef struct _NETINFOSTRUCT{
    DWORD cbStructure;
    DWORD dwProviderVersion;
    DWORD dwStatus;
    DWORD dwCharacteristics;
    ULONG_PTR dwHandle;
    WORD  wNetType;
    DWORD dwPrinters;
    DWORD dwDrives;
} NETINFOSTRUCT,  *LPNETINFOSTRUCT;






DWORD __stdcall
WNetGetNetworkInformationA(
      LPCSTR        lpProvider,
     LPNETINFOSTRUCT lpNetInfoStruct
    );

DWORD __stdcall
WNetGetNetworkInformationW(
      LPCWSTR        lpProvider,
     LPNETINFOSTRUCT lpNetInfoStruct
    );




#line 687 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnetwk.h"

#line 689 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnetwk.h"






DWORD __stdcall
WNetGetLastErrorA(
     LPDWORD    lpError,
     LPSTR lpErrorBuf,
     DWORD      nErrorBufSize,
     LPSTR  lpNameBuf,
     DWORD      nNameBufSize
    );

DWORD __stdcall
WNetGetLastErrorW(
     LPDWORD    lpError,
     LPWSTR lpErrorBuf,
     DWORD      nErrorBufSize,
     LPWSTR  lpNameBuf,
     DWORD      nNameBufSize
    );




#line 717 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnetwk.h"





























#line 747 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnetwk.h"




















#line 768 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnetwk.h"












#line 781 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnetwk.h"






typedef struct _NETCONNECTINFOSTRUCT{
    DWORD cbStructure;
    DWORD dwFlags;
    DWORD dwSpeed;
    DWORD dwDelay;
    DWORD dwOptDataSize;
} NETCONNECTINFOSTRUCT,  *LPNETCONNECTINFOSTRUCT;







DWORD __stdcall
MultinetGetConnectionPerformanceA(
      LPNETRESOURCEA lpNetResource,
     LPNETCONNECTINFOSTRUCT lpNetConnectInfoStruct
    );

DWORD __stdcall
MultinetGetConnectionPerformanceW(
      LPNETRESOURCEW lpNetResource,
     LPNETCONNECTINFOSTRUCT lpNetConnectInfoStruct
    );




#line 817 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnetwk.h"
#line 818 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnetwk.h"



}
#line 823 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnetwk.h"

#line 825 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winnetwk.h"



#line 171 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windows.h"
#line 172 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windows.h"




































#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\stralign.h"


















































#line 52 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\stralign.h"
#line 53 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\stralign.h"




#line 58 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\stralign.h"

#line 60 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\stralign.h"
#line 61 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\stralign.h"


extern "C" {
#line 65 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\stralign.h"











#line 77 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\stralign.h"



















#line 97 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\stralign.h"

__inline
PUWSTR
static
__declspec(deprecated)
ua_wcscpy(
     PUWSTR  Destination,
     PCUWSTR Source
    )
{
#pragma warning(push)
#pragma warning(disable:4995)
#pragma warning(disable:4996)



    return wcscpy(Destination, Source);
#pragma warning(pop)
}











































































































































































































































































































































































#line 480 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\stralign.h"






































































#line 551 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\stralign.h"




































#line 588 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\stralign.h"











































#line 632 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\stralign.h"



#line 636 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\stralign.h"














#line 651 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\stralign.h"










#line 662 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\stralign.h"

#line 664 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\stralign.h"



#line 668 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\stralign.h"


}
#line 672 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\stralign.h"

#line 674 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\stralign.h"









#line 209 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windows.h"












#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winsvc.h"






























#line 32 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winsvc.h"


extern "C" {
#line 36 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winsvc.h"




































#line 73 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winsvc.h"















































































































































































































































extern "C" const GUID  NETWORK_MANAGER_FIRST_IP_ADDRESS_ARRIVAL_GUID;
#line 319 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winsvc.h"

extern "C" const GUID  NETWORK_MANAGER_LAST_IP_ADDRESS_REMOVAL_GUID;
#line 327 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winsvc.h"




extern "C" const GUID  DOMAIN_JOIN_GUID;
#line 338 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winsvc.h"

extern "C" const GUID  DOMAIN_LEAVE_GUID;
#line 346 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winsvc.h"





extern "C" const GUID  FIREWALL_PORT_OPEN_GUID;
#line 358 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winsvc.h"

extern "C" const GUID  FIREWALL_PORT_CLOSE_GUID;
#line 366 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winsvc.h"





extern "C" const GUID  MACHINE_POLICY_PRESENT_GUID;
#line 378 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winsvc.h"

extern "C" const GUID  USER_POLICY_PRESENT_GUID;
#line 386 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winsvc.h"















typedef struct _SERVICE_DESCRIPTIONA {
    LPSTR       lpDescription;
} SERVICE_DESCRIPTIONA, *LPSERVICE_DESCRIPTIONA;



typedef struct _SERVICE_DESCRIPTIONW {
    LPWSTR      lpDescription;
} SERVICE_DESCRIPTIONW, *LPSERVICE_DESCRIPTIONW;




typedef SERVICE_DESCRIPTIONA SERVICE_DESCRIPTION;
typedef LPSERVICE_DESCRIPTIONA LPSERVICE_DESCRIPTION;
#line 417 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winsvc.h"




typedef enum _SC_ACTION_TYPE {
        SC_ACTION_NONE          = 0,
        SC_ACTION_RESTART       = 1,
        SC_ACTION_REBOOT        = 2,
        SC_ACTION_RUN_COMMAND   = 3
} SC_ACTION_TYPE;

typedef struct _SC_ACTION {
    SC_ACTION_TYPE  Type;
    DWORD           Delay;
} SC_ACTION, *LPSC_ACTION;

typedef struct _SERVICE_FAILURE_ACTIONSA {
    DWORD       dwResetPeriod;
    LPSTR       lpRebootMsg;
    LPSTR       lpCommand;



    DWORD       cActions;



    SC_ACTION * lpsaActions;
} SERVICE_FAILURE_ACTIONSA, *LPSERVICE_FAILURE_ACTIONSA;
typedef struct _SERVICE_FAILURE_ACTIONSW {
    DWORD       dwResetPeriod;
    LPWSTR      lpRebootMsg;
    LPWSTR      lpCommand;



    DWORD       cActions;



    SC_ACTION * lpsaActions;
} SERVICE_FAILURE_ACTIONSW, *LPSERVICE_FAILURE_ACTIONSW;




typedef SERVICE_FAILURE_ACTIONSA SERVICE_FAILURE_ACTIONS;
typedef LPSERVICE_FAILURE_ACTIONSA LPSERVICE_FAILURE_ACTIONS;
#line 466 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winsvc.h"




typedef struct _SERVICE_DELAYED_AUTO_START_INFO {
    BOOL       fDelayedAutostart;      
} SERVICE_DELAYED_AUTO_START_INFO, *LPSERVICE_DELAYED_AUTO_START_INFO;




typedef struct _SERVICE_FAILURE_ACTIONS_FLAG {
    BOOL       fFailureActionsOnNonCrashFailures;       
} SERVICE_FAILURE_ACTIONS_FLAG, *LPSERVICE_FAILURE_ACTIONS_FLAG;




typedef struct _SERVICE_SID_INFO {
    DWORD       dwServiceSidType;     
} SERVICE_SID_INFO, *LPSERVICE_SID_INFO;




typedef struct _SERVICE_REQUIRED_PRIVILEGES_INFOA {
    LPSTR       pmszRequiredPrivileges;             
} SERVICE_REQUIRED_PRIVILEGES_INFOA, *LPSERVICE_REQUIRED_PRIVILEGES_INFOA;



typedef struct _SERVICE_REQUIRED_PRIVILEGES_INFOW {
    LPWSTR      pmszRequiredPrivileges;             
} SERVICE_REQUIRED_PRIVILEGES_INFOW, *LPSERVICE_REQUIRED_PRIVILEGES_INFOW;




typedef SERVICE_REQUIRED_PRIVILEGES_INFOA SERVICE_REQUIRED_PRIVILEGES_INFO;
typedef LPSERVICE_REQUIRED_PRIVILEGES_INFOA LPSERVICE_REQUIRED_PRIVILEGES_INFO;
#line 507 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winsvc.h"




typedef struct _SERVICE_PRESHUTDOWN_INFO {
    DWORD       dwPreshutdownTimeout;   
} SERVICE_PRESHUTDOWN_INFO, *LPSERVICE_PRESHUTDOWN_INFO;




typedef struct _SERVICE_TRIGGER_SPECIFIC_DATA_ITEM
{
    DWORD   dwDataType; 



    DWORD   cbData;     



    PBYTE   pData;      
} SERVICE_TRIGGER_SPECIFIC_DATA_ITEM, *PSERVICE_TRIGGER_SPECIFIC_DATA_ITEM;




typedef struct _SERVICE_TRIGGER
{
    DWORD                       dwTriggerType;              
    DWORD                       dwAction;                   
    GUID    *                   pTriggerSubtype;            
                                                            
                                                            



    DWORD                       cDataItems;                 



    PSERVICE_TRIGGER_SPECIFIC_DATA_ITEM  pDataItems;       
} SERVICE_TRIGGER, *PSERVICE_TRIGGER;




typedef struct _SERVICE_TRIGGER_INFO {



    DWORD                   cTriggers;  



    PSERVICE_TRIGGER        pTriggers;  
    PBYTE                   pReserved;  
} SERVICE_TRIGGER_INFO, *PSERVICE_TRIGGER_INFO;




typedef struct _SERVICE_PREFERRED_NODE_INFO {
    USHORT                  usPreferredNode;    
    BOOLEAN                 fDelete;            
} SERVICE_PREFERRED_NODE_INFO, *LPSERVICE_PREFERRED_NODE_INFO;




typedef struct _SERVICE_TIMECHANGE_INFO {
    LARGE_INTEGER   liNewTime;      
    LARGE_INTEGER   liOldTime;      
} SERVICE_TIMECHANGE_INFO, *PSERVICE_TIMECHANGE_INFO;





struct SC_HANDLE__{int unused;}; typedef struct SC_HANDLE__ *SC_HANDLE;
typedef SC_HANDLE   *LPSC_HANDLE;

struct SERVICE_STATUS_HANDLE__{int unused;}; typedef struct SERVICE_STATUS_HANDLE__ *SERVICE_STATUS_HANDLE;





typedef enum _SC_STATUS_TYPE {
    SC_STATUS_PROCESS_INFO      = 0
} SC_STATUS_TYPE;




typedef enum _SC_ENUM_TYPE {
    SC_ENUM_PROCESS_INFO        = 0
} SC_ENUM_TYPE;






typedef struct _SERVICE_STATUS {
    DWORD   dwServiceType;
    DWORD   dwCurrentState;
    DWORD   dwControlsAccepted;
    DWORD   dwWin32ExitCode;
    DWORD   dwServiceSpecificExitCode;
    DWORD   dwCheckPoint;
    DWORD   dwWaitHint;
} SERVICE_STATUS, *LPSERVICE_STATUS;

typedef struct _SERVICE_STATUS_PROCESS {
    DWORD   dwServiceType;
    DWORD   dwCurrentState;
    DWORD   dwControlsAccepted;
    DWORD   dwWin32ExitCode;
    DWORD   dwServiceSpecificExitCode;
    DWORD   dwCheckPoint;
    DWORD   dwWaitHint;
    DWORD   dwProcessId;
    DWORD   dwServiceFlags;
} SERVICE_STATUS_PROCESS, *LPSERVICE_STATUS_PROCESS;






typedef struct _ENUM_SERVICE_STATUSA {
    LPSTR             lpServiceName;
    LPSTR             lpDisplayName;
    SERVICE_STATUS    ServiceStatus;
} ENUM_SERVICE_STATUSA, *LPENUM_SERVICE_STATUSA;
typedef struct _ENUM_SERVICE_STATUSW {
    LPWSTR            lpServiceName;
    LPWSTR            lpDisplayName;
    SERVICE_STATUS    ServiceStatus;
} ENUM_SERVICE_STATUSW, *LPENUM_SERVICE_STATUSW;




typedef ENUM_SERVICE_STATUSA ENUM_SERVICE_STATUS;
typedef LPENUM_SERVICE_STATUSA LPENUM_SERVICE_STATUS;
#line 655 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winsvc.h"

typedef struct _ENUM_SERVICE_STATUS_PROCESSA {
    LPSTR                     lpServiceName;
    LPSTR                     lpDisplayName;
    SERVICE_STATUS_PROCESS    ServiceStatusProcess;
} ENUM_SERVICE_STATUS_PROCESSA, *LPENUM_SERVICE_STATUS_PROCESSA;
typedef struct _ENUM_SERVICE_STATUS_PROCESSW {
    LPWSTR                    lpServiceName;
    LPWSTR                    lpDisplayName;
    SERVICE_STATUS_PROCESS    ServiceStatusProcess;
} ENUM_SERVICE_STATUS_PROCESSW, *LPENUM_SERVICE_STATUS_PROCESSW;




typedef ENUM_SERVICE_STATUS_PROCESSA ENUM_SERVICE_STATUS_PROCESS;
typedef LPENUM_SERVICE_STATUS_PROCESSA LPENUM_SERVICE_STATUS_PROCESS;
#line 673 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winsvc.h"





typedef LPVOID  SC_LOCK;

typedef struct _QUERY_SERVICE_LOCK_STATUSA {
    DWORD   fIsLocked;
    LPSTR   lpLockOwner;
    DWORD   dwLockDuration;
} QUERY_SERVICE_LOCK_STATUSA, *LPQUERY_SERVICE_LOCK_STATUSA;
typedef struct _QUERY_SERVICE_LOCK_STATUSW {
    DWORD   fIsLocked;
    LPWSTR  lpLockOwner;
    DWORD   dwLockDuration;
} QUERY_SERVICE_LOCK_STATUSW, *LPQUERY_SERVICE_LOCK_STATUSW;




typedef QUERY_SERVICE_LOCK_STATUSA QUERY_SERVICE_LOCK_STATUS;
typedef LPQUERY_SERVICE_LOCK_STATUSA LPQUERY_SERVICE_LOCK_STATUS;
#line 697 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winsvc.h"







typedef struct _QUERY_SERVICE_CONFIGA {
    DWORD   dwServiceType;
    DWORD   dwStartType;
    DWORD   dwErrorControl;
    LPSTR   lpBinaryPathName;
    LPSTR   lpLoadOrderGroup;
    DWORD   dwTagId;
    LPSTR   lpDependencies;
    LPSTR   lpServiceStartName;
    LPSTR   lpDisplayName;
} QUERY_SERVICE_CONFIGA, *LPQUERY_SERVICE_CONFIGA;
typedef struct _QUERY_SERVICE_CONFIGW {
    DWORD   dwServiceType;
    DWORD   dwStartType;
    DWORD   dwErrorControl;
    LPWSTR  lpBinaryPathName;
    LPWSTR  lpLoadOrderGroup;
    DWORD   dwTagId;
    LPWSTR  lpDependencies;
    LPWSTR  lpServiceStartName;
    LPWSTR  lpDisplayName;
} QUERY_SERVICE_CONFIGW, *LPQUERY_SERVICE_CONFIGW;




typedef QUERY_SERVICE_CONFIGA QUERY_SERVICE_CONFIG;
typedef LPQUERY_SERVICE_CONFIGA LPQUERY_SERVICE_CONFIG;
#line 733 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winsvc.h"







typedef void (__stdcall *LPSERVICE_MAIN_FUNCTIONW)(
    DWORD   dwNumServicesArgs,
    LPWSTR  *lpServiceArgVectors
    );

typedef void (__stdcall *LPSERVICE_MAIN_FUNCTIONA)(
    DWORD   dwNumServicesArgs,
    LPSTR   *lpServiceArgVectors
    );





#line 755 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winsvc.h"






typedef struct _SERVICE_TABLE_ENTRYA {
    LPSTR                       lpServiceName;
    LPSERVICE_MAIN_FUNCTIONA    lpServiceProc;
}SERVICE_TABLE_ENTRYA, *LPSERVICE_TABLE_ENTRYA;
typedef struct _SERVICE_TABLE_ENTRYW {
    LPWSTR                      lpServiceName;
    LPSERVICE_MAIN_FUNCTIONW    lpServiceProc;
}SERVICE_TABLE_ENTRYW, *LPSERVICE_TABLE_ENTRYW;




typedef SERVICE_TABLE_ENTRYA SERVICE_TABLE_ENTRY;
typedef LPSERVICE_TABLE_ENTRYA LPSERVICE_TABLE_ENTRY;
#line 776 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winsvc.h"





typedef void (__stdcall *LPHANDLER_FUNCTION)(
    DWORD    dwControl
    );

typedef DWORD (__stdcall *LPHANDLER_FUNCTION_EX)(
    DWORD    dwControl,
    DWORD    dwEventType,
    LPVOID   lpEventData,
    LPVOID   lpContext
    );




typedef
void
( __stdcall * PFN_SC_NOTIFY_CALLBACK ) (
     PVOID pParameter
    );




typedef struct _SERVICE_NOTIFY_1 {
    DWORD                   dwVersion;
    PFN_SC_NOTIFY_CALLBACK  pfnNotifyCallback;
    PVOID                   pContext;
    DWORD                   dwNotificationStatus;
    SERVICE_STATUS_PROCESS  ServiceStatus;
} SERVICE_NOTIFY_1, *PSERVICE_NOTIFY_1;

typedef struct _SERVICE_NOTIFY_2A {
    DWORD                   dwVersion;
    PFN_SC_NOTIFY_CALLBACK  pfnNotifyCallback;
    PVOID                   pContext;
    DWORD                   dwNotificationStatus;
    SERVICE_STATUS_PROCESS  ServiceStatus;
    DWORD                   dwNotificationTriggered;
    LPSTR                   pszServiceNames;
} SERVICE_NOTIFY_2A, *PSERVICE_NOTIFY_2A;
typedef struct _SERVICE_NOTIFY_2W {
    DWORD                   dwVersion;
    PFN_SC_NOTIFY_CALLBACK  pfnNotifyCallback;
    PVOID                   pContext;
    DWORD                   dwNotificationStatus;
    SERVICE_STATUS_PROCESS  ServiceStatus;
    DWORD                   dwNotificationTriggered;
    LPWSTR                  pszServiceNames;
} SERVICE_NOTIFY_2W, *PSERVICE_NOTIFY_2W;




typedef SERVICE_NOTIFY_2A SERVICE_NOTIFY_2;
typedef PSERVICE_NOTIFY_2A PSERVICE_NOTIFY_2;
#line 837 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winsvc.h"

typedef SERVICE_NOTIFY_2A SERVICE_NOTIFYA, *PSERVICE_NOTIFYA;
typedef SERVICE_NOTIFY_2W SERVICE_NOTIFYW, *PSERVICE_NOTIFYW;




typedef SERVICE_NOTIFYA SERVICE_NOTIFY;
typedef PSERVICE_NOTIFYA PSERVICE_NOTIFY;
#line 847 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winsvc.h"




typedef struct _SERVICE_CONTROL_STATUS_REASON_PARAMSA {
    DWORD                   dwReason;
    LPSTR                   pszComment;
    SERVICE_STATUS_PROCESS  ServiceStatus;
} SERVICE_CONTROL_STATUS_REASON_PARAMSA, *PSERVICE_CONTROL_STATUS_REASON_PARAMSA;



typedef struct _SERVICE_CONTROL_STATUS_REASON_PARAMSW {
    DWORD                   dwReason;
    LPWSTR                  pszComment;
    SERVICE_STATUS_PROCESS  ServiceStatus;
} SERVICE_CONTROL_STATUS_REASON_PARAMSW, *PSERVICE_CONTROL_STATUS_REASON_PARAMSW;




typedef SERVICE_CONTROL_STATUS_REASON_PARAMSA SERVICE_CONTROL_STATUS_REASON_PARAMS;
typedef PSERVICE_CONTROL_STATUS_REASON_PARAMSA PSERVICE_CONTROL_STATUS_REASON_PARAMS;
#line 871 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winsvc.h"





__declspec(dllimport)
BOOL
__stdcall
ChangeServiceConfigA(
            SC_HANDLE    hService,
            DWORD        dwServiceType,
            DWORD        dwStartType,
            DWORD        dwErrorControl,
        LPCSTR     lpBinaryPathName,
        LPCSTR     lpLoadOrderGroup,
       LPDWORD      lpdwTagId,
        LPCSTR     lpDependencies,
        LPCSTR     lpServiceStartName,
        LPCSTR     lpPassword,
        LPCSTR     lpDisplayName
    );
__declspec(dllimport)
BOOL
__stdcall
ChangeServiceConfigW(
            SC_HANDLE    hService,
            DWORD        dwServiceType,
            DWORD        dwStartType,
            DWORD        dwErrorControl,
        LPCWSTR     lpBinaryPathName,
        LPCWSTR     lpLoadOrderGroup,
       LPDWORD      lpdwTagId,
        LPCWSTR     lpDependencies,
        LPCWSTR     lpServiceStartName,
        LPCWSTR     lpPassword,
        LPCWSTR     lpDisplayName
    );




#line 913 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winsvc.h"

__declspec(dllimport)
BOOL
__stdcall
ChangeServiceConfig2A(
            SC_HANDLE    hService,
            DWORD        dwInfoLevel,
        LPVOID       lpInfo
    );
__declspec(dllimport)
BOOL
__stdcall
ChangeServiceConfig2W(
            SC_HANDLE    hService,
            DWORD        dwInfoLevel,
        LPVOID       lpInfo
    );




#line 935 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winsvc.h"

__declspec(dllimport)
BOOL
__stdcall
CloseServiceHandle(
            SC_HANDLE   hSCObject
    );

__declspec(dllimport)
BOOL
__stdcall
ControlService(
            SC_HANDLE           hService,
            DWORD               dwControl,
           LPSERVICE_STATUS    lpServiceStatus
    );


__declspec(dllimport)
SC_HANDLE
__stdcall
CreateServiceA(
            SC_HANDLE    hSCManager,
            LPCSTR     lpServiceName,
        LPCSTR     lpDisplayName,
            DWORD        dwDesiredAccess,
            DWORD        dwServiceType,
            DWORD        dwStartType,
            DWORD        dwErrorControl,
        LPCSTR     lpBinaryPathName,
        LPCSTR     lpLoadOrderGroup,
       LPDWORD      lpdwTagId,
        LPCSTR     lpDependencies,
        LPCSTR     lpServiceStartName,
        LPCSTR     lpPassword
    );

__declspec(dllimport)
SC_HANDLE
__stdcall
CreateServiceW(
            SC_HANDLE    hSCManager,
            LPCWSTR     lpServiceName,
        LPCWSTR     lpDisplayName,
            DWORD        dwDesiredAccess,
            DWORD        dwServiceType,
            DWORD        dwStartType,
            DWORD        dwErrorControl,
        LPCWSTR     lpBinaryPathName,
        LPCWSTR     lpLoadOrderGroup,
       LPDWORD      lpdwTagId,
        LPCWSTR     lpDependencies,
        LPCWSTR     lpServiceStartName,
        LPCWSTR     lpPassword
    );




#line 995 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winsvc.h"

__declspec(dllimport)
BOOL
__stdcall
DeleteService(
            SC_HANDLE   hService
    );


__declspec(dllimport)
BOOL
__stdcall
EnumDependentServicesA(
                SC_HANDLE               hService,
                DWORD                   dwServiceState,
    
                    LPENUM_SERVICE_STATUSA  lpServices,
                DWORD                   cbBufSize,
               LPDWORD                 pcbBytesNeeded,
               LPDWORD                 lpServicesReturned
    );

__declspec(dllimport)
BOOL
__stdcall
EnumDependentServicesW(
                SC_HANDLE               hService,
                DWORD                   dwServiceState,
    
                    LPENUM_SERVICE_STATUSW  lpServices,
                DWORD                   cbBufSize,
               LPDWORD                 pcbBytesNeeded,
               LPDWORD                 lpServicesReturned
    );




#line 1034 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winsvc.h"


__declspec(dllimport)
BOOL
__stdcall
EnumServicesStatusA(
                SC_HANDLE               hSCManager,
                DWORD                   dwServiceType,
                DWORD                   dwServiceState,
    
                    LPENUM_SERVICE_STATUSA  lpServices,
                DWORD                   cbBufSize,
               LPDWORD                 pcbBytesNeeded,
               LPDWORD                 lpServicesReturned,
         LPDWORD                 lpResumeHandle
    );

__declspec(dllimport)
BOOL
__stdcall
EnumServicesStatusW(
                SC_HANDLE               hSCManager,
                DWORD                   dwServiceType,
                DWORD                   dwServiceState,
    
                    LPENUM_SERVICE_STATUSW  lpServices,
                DWORD                   cbBufSize,
               LPDWORD                 pcbBytesNeeded,
               LPDWORD                 lpServicesReturned,
         LPDWORD                 lpResumeHandle
    );




#line 1070 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winsvc.h"


__declspec(dllimport)
BOOL
__stdcall
EnumServicesStatusExA(
                SC_HANDLE               hSCManager,
                SC_ENUM_TYPE            InfoLevel,
                DWORD                   dwServiceType,
                DWORD                   dwServiceState,
    
                    LPBYTE                  lpServices,
                DWORD                   cbBufSize,
               LPDWORD                 pcbBytesNeeded,
               LPDWORD                 lpServicesReturned,
         LPDWORD                 lpResumeHandle,
            LPCSTR                pszGroupName
    );

__declspec(dllimport)
BOOL
__stdcall
EnumServicesStatusExW(
                SC_HANDLE               hSCManager,
                SC_ENUM_TYPE            InfoLevel,
                DWORD                   dwServiceType,
                DWORD                   dwServiceState,
    
                    LPBYTE                  lpServices,
                DWORD                   cbBufSize,
               LPDWORD                 pcbBytesNeeded,
               LPDWORD                 lpServicesReturned,
         LPDWORD                 lpResumeHandle,
            LPCWSTR                pszGroupName
    );




#line 1110 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winsvc.h"


__declspec(dllimport)
BOOL
__stdcall
GetServiceKeyNameA(
                SC_HANDLE               hSCManager,
                LPCSTR                lpDisplayName,
    
                    LPSTR                 lpServiceName,
             LPDWORD                 lpcchBuffer
    );

__declspec(dllimport)
BOOL
__stdcall
GetServiceKeyNameW(
                SC_HANDLE               hSCManager,
                LPCWSTR                lpDisplayName,
    
                    LPWSTR                 lpServiceName,
             LPDWORD                 lpcchBuffer
    );




#line 1138 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winsvc.h"


__declspec(dllimport)
BOOL
__stdcall
GetServiceDisplayNameA(
                SC_HANDLE               hSCManager,
                LPCSTR                lpServiceName,
    
                    LPSTR                 lpDisplayName,
             LPDWORD                 lpcchBuffer
    );

__declspec(dllimport)
BOOL
__stdcall
GetServiceDisplayNameW(
                SC_HANDLE               hSCManager,
                LPCWSTR                lpServiceName,
    
                    LPWSTR                 lpDisplayName,
             LPDWORD                 lpcchBuffer
    );




#line 1166 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winsvc.h"

__declspec(dllimport)
SC_LOCK
__stdcall
LockServiceDatabase(
                SC_HANDLE               hSCManager
    );

__declspec(dllimport)
BOOL
__stdcall
NotifyBootConfigStatus(
                BOOL                    BootAcceptable
    );


__declspec(dllimport)
SC_HANDLE
__stdcall
OpenSCManagerA(
            LPCSTR                lpMachineName,
            LPCSTR                lpDatabaseName,
                DWORD                   dwDesiredAccess
    );

__declspec(dllimport)
SC_HANDLE
__stdcall
OpenSCManagerW(
            LPCWSTR                lpMachineName,
            LPCWSTR                lpDatabaseName,
                DWORD                   dwDesiredAccess
    );




#line 1204 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winsvc.h"


__declspec(dllimport)
SC_HANDLE
__stdcall
OpenServiceA(
                SC_HANDLE               hSCManager,
                LPCSTR                lpServiceName,
                DWORD                   dwDesiredAccess
    );

__declspec(dllimport)
SC_HANDLE
__stdcall
OpenServiceW(
                SC_HANDLE               hSCManager,
                LPCWSTR                lpServiceName,
                DWORD                   dwDesiredAccess
    );




#line 1228 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winsvc.h"


__declspec(dllimport)
BOOL
__stdcall
QueryServiceConfigA(
                SC_HANDLE               hService,
    
                    LPQUERY_SERVICE_CONFIGA lpServiceConfig,
                DWORD                   cbBufSize,
               LPDWORD                 pcbBytesNeeded
    );

__declspec(dllimport)
BOOL
__stdcall
QueryServiceConfigW(
                SC_HANDLE               hService,
    
                    LPQUERY_SERVICE_CONFIGW lpServiceConfig,
                DWORD                   cbBufSize,
               LPDWORD                 pcbBytesNeeded
    );




#line 1256 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winsvc.h"


__declspec(dllimport)
BOOL
__stdcall
QueryServiceConfig2A(
                SC_HANDLE               hService,
                DWORD                   dwInfoLevel,
    
                    LPBYTE                  lpBuffer,
                DWORD                   cbBufSize,
               LPDWORD                 pcbBytesNeeded
    );

__declspec(dllimport)
BOOL
__stdcall
QueryServiceConfig2W(
                SC_HANDLE               hService,
                DWORD                   dwInfoLevel,
    
                    LPBYTE                  lpBuffer,
                DWORD                   cbBufSize,
               LPDWORD                 pcbBytesNeeded
    );




#line 1286 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winsvc.h"


__declspec(dllimport)
BOOL
__stdcall
QueryServiceLockStatusA(
                SC_HANDLE                       hSCManager,
    
                    LPQUERY_SERVICE_LOCK_STATUSA    lpLockStatus,
                DWORD                           cbBufSize,
               LPDWORD                         pcbBytesNeeded
    );

__declspec(dllimport)
BOOL
__stdcall
QueryServiceLockStatusW(
                SC_HANDLE                       hSCManager,
    
                    LPQUERY_SERVICE_LOCK_STATUSW    lpLockStatus,
                DWORD                           cbBufSize,
               LPDWORD                         pcbBytesNeeded
    );




#line 1314 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winsvc.h"


__declspec(dllimport)
BOOL
__stdcall
QueryServiceObjectSecurity(
                SC_HANDLE               hService,
                SECURITY_INFORMATION    dwSecurityInformation,
    
                    PSECURITY_DESCRIPTOR    lpSecurityDescriptor,
                DWORD                   cbBufSize,
               LPDWORD                 pcbBytesNeeded
    );


__declspec(dllimport)
BOOL
__stdcall
QueryServiceStatus(
                SC_HANDLE           hService,
               LPSERVICE_STATUS    lpServiceStatus
    );


__declspec(dllimport)
BOOL
__stdcall
QueryServiceStatusEx(
                SC_HANDLE           hService,
                SC_STATUS_TYPE      InfoLevel,
    
                    LPBYTE              lpBuffer,
                DWORD               cbBufSize,
               LPDWORD             pcbBytesNeeded
    );


__declspec(dllimport)
SERVICE_STATUS_HANDLE
__stdcall
RegisterServiceCtrlHandlerA(
        LPCSTR                    lpServiceName,
        
            LPHANDLER_FUNCTION          lpHandlerProc
    );

__declspec(dllimport)
SERVICE_STATUS_HANDLE
__stdcall
RegisterServiceCtrlHandlerW(
        LPCWSTR                    lpServiceName,
        
            LPHANDLER_FUNCTION          lpHandlerProc
    );




#line 1373 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winsvc.h"


__declspec(dllimport)
SERVICE_STATUS_HANDLE
__stdcall
RegisterServiceCtrlHandlerExA(
        LPCSTR                    lpServiceName,
        
            LPHANDLER_FUNCTION_EX       lpHandlerProc,
     LPVOID                     lpContext
    );

__declspec(dllimport)
SERVICE_STATUS_HANDLE
__stdcall
RegisterServiceCtrlHandlerExW(
        LPCWSTR                    lpServiceName,
        
            LPHANDLER_FUNCTION_EX       lpHandlerProc,
     LPVOID                     lpContext
    );




#line 1399 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winsvc.h"

__declspec(dllimport)
BOOL
__stdcall
SetServiceObjectSecurity(
            SC_HANDLE               hService,
            SECURITY_INFORMATION    dwSecurityInformation,
            PSECURITY_DESCRIPTOR    lpSecurityDescriptor
    );

__declspec(dllimport)
BOOL
__stdcall
SetServiceStatus(
            SERVICE_STATUS_HANDLE   hServiceStatus,
            LPSERVICE_STATUS        lpServiceStatus
    );

__declspec(dllimport)
BOOL
__stdcall
StartServiceCtrlDispatcherA(
     const  SERVICE_TABLE_ENTRYA    *lpServiceStartTable
    );
__declspec(dllimport)
BOOL
__stdcall
StartServiceCtrlDispatcherW(
     const  SERVICE_TABLE_ENTRYW    *lpServiceStartTable
    );




#line 1434 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winsvc.h"


__declspec(dllimport)
BOOL
__stdcall
StartServiceA(
                SC_HANDLE            hService,
                DWORD                dwNumServiceArgs,
    
                    LPCSTR             *lpServiceArgVectors
    );
__declspec(dllimport)
BOOL
__stdcall
StartServiceW(
                SC_HANDLE            hService,
                DWORD                dwNumServiceArgs,
    
                    LPCWSTR             *lpServiceArgVectors
    );




#line 1459 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winsvc.h"

__declspec(dllimport)
BOOL
__stdcall
UnlockServiceDatabase(
                SC_LOCK             ScLock
    );



__declspec(dllimport)
DWORD
__stdcall
NotifyServiceStatusChangeA (
            SC_HANDLE               hService,
            DWORD                   dwNotifyMask,
            PSERVICE_NOTIFYA        pNotifyBuffer
    );
__declspec(dllimport)
DWORD
__stdcall
NotifyServiceStatusChangeW (
            SC_HANDLE               hService,
            DWORD                   dwNotifyMask,
            PSERVICE_NOTIFYW        pNotifyBuffer
    );




#line 1490 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winsvc.h"

__declspec(dllimport)
BOOL
__stdcall
ControlServiceExA(
            SC_HANDLE               hService,
            DWORD                   dwControl,
            DWORD                   dwInfoLevel,
         PVOID                   pControlParams
    );
__declspec(dllimport)
BOOL
__stdcall
ControlServiceExW(
            SC_HANDLE               hService,
            DWORD                   dwControl,
            DWORD                   dwInfoLevel,
         PVOID                   pControlParams
    );




#line 1514 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winsvc.h"

#line 1516 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winsvc.h"
    

}
#line 1520 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winsvc.h"

#line 1522 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\winsvc.h"


#line 222 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windows.h"
#line 223 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windows.h"



#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\mcx.h"












#pragma once
#line 15 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\mcx.h"

typedef struct _MODEMDEVCAPS {
    DWORD   dwActualSize;
    DWORD   dwRequiredSize;
    DWORD   dwDevSpecificOffset;
    DWORD   dwDevSpecificSize;

    
    DWORD   dwModemProviderVersion;
    DWORD   dwModemManufacturerOffset;
    DWORD   dwModemManufacturerSize;
    DWORD   dwModemModelOffset;
    DWORD   dwModemModelSize;
    DWORD   dwModemVersionOffset;
    DWORD   dwModemVersionSize;

    
    DWORD   dwDialOptions;          
    DWORD   dwCallSetupFailTimer;   
    DWORD   dwInactivityTimeout;    
    DWORD   dwSpeakerVolume;        
    DWORD   dwSpeakerMode;          
    DWORD   dwModemOptions;         
    DWORD   dwMaxDTERate;           
    DWORD   dwMaxDCERate;           

    
    BYTE    abVariablePortion [1];
} MODEMDEVCAPS, *PMODEMDEVCAPS, *LPMODEMDEVCAPS;

typedef struct _MODEMSETTINGS {
    DWORD   dwActualSize;
    DWORD   dwRequiredSize;
    DWORD   dwDevSpecificOffset;
    DWORD   dwDevSpecificSize;

    
    DWORD   dwCallSetupFailTimer;       
    DWORD   dwInactivityTimeout;        
    DWORD   dwSpeakerVolume;            
    DWORD   dwSpeakerMode;              
    DWORD   dwPreferredModemOptions;    

    
    DWORD   dwNegotiatedModemOptions;   
    DWORD   dwNegotiatedDCERate;        

    
    BYTE    abVariablePortion [1];
} MODEMSETTINGS, *PMODEMSETTINGS, *LPMODEMSETTINGS;

















































































































































































































































































































































































































































































































































































































































































#line 723 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\mcx.h"

#line 227 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windows.h"
#line 228 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windows.h"


#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\imm.h"











extern "C" {
#line 14 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\imm.h"






struct HIMC__{int unused;}; typedef struct HIMC__ *HIMC;
struct HIMCC__{int unused;}; typedef struct HIMCC__ *HIMCC;



#line 26 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\imm.h"

typedef HKL   *LPHKL;
typedef UINT  *LPUINT;

typedef struct tagCOMPOSITIONFORM {
    DWORD dwStyle;
    POINT ptCurrentPos;
    RECT  rcArea;
} COMPOSITIONFORM, *PCOMPOSITIONFORM,  *NPCOMPOSITIONFORM,  *LPCOMPOSITIONFORM;


typedef struct tagCANDIDATEFORM {
    DWORD dwIndex;
    DWORD dwStyle;
    POINT ptCurrentPos;
    RECT  rcArea;
} CANDIDATEFORM, *PCANDIDATEFORM,  *NPCANDIDATEFORM,  *LPCANDIDATEFORM;


typedef struct tagCANDIDATELIST {
    DWORD dwSize;
    DWORD dwStyle;
    DWORD dwCount;
    DWORD dwSelection;
    DWORD dwPageStart;
    DWORD dwPageSize;
    DWORD dwOffset[1];
} CANDIDATELIST, *PCANDIDATELIST,  *NPCANDIDATELIST,  *LPCANDIDATELIST;

typedef struct tagREGISTERWORDA {
    LPSTR   lpReading;
    LPSTR   lpWord;
} REGISTERWORDA, *PREGISTERWORDA,  *NPREGISTERWORDA,  *LPREGISTERWORDA;
typedef struct tagREGISTERWORDW {
    LPWSTR  lpReading;
    LPWSTR  lpWord;
} REGISTERWORDW, *PREGISTERWORDW,  *NPREGISTERWORDW,  *LPREGISTERWORDW;






typedef REGISTERWORDA REGISTERWORD;
typedef PREGISTERWORDA PREGISTERWORD;
typedef NPREGISTERWORDA NPREGISTERWORD;
typedef LPREGISTERWORDA LPREGISTERWORD;
#line 74 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\imm.h"



typedef struct tagRECONVERTSTRING {
    DWORD dwSize;
    DWORD dwVersion;
    DWORD dwStrLen;
    DWORD dwStrOffset;
    DWORD dwCompStrLen;
    DWORD dwCompStrOffset;
    DWORD dwTargetStrLen;
    DWORD dwTargetStrOffset;
} RECONVERTSTRING, *PRECONVERTSTRING,  *NPRECONVERTSTRING,  *LPRECONVERTSTRING;

#line 89 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\imm.h"



typedef struct tagSTYLEBUFA {
    DWORD       dwStyle;
    CHAR        szDescription[32];
} STYLEBUFA, *PSTYLEBUFA,  *NPSTYLEBUFA,  *LPSTYLEBUFA;
typedef struct tagSTYLEBUFW {
    DWORD       dwStyle;
    WCHAR       szDescription[32];
} STYLEBUFW, *PSTYLEBUFW,  *NPSTYLEBUFW,  *LPSTYLEBUFW;






typedef STYLEBUFA STYLEBUF;
typedef PSTYLEBUFA PSTYLEBUF;
typedef NPSTYLEBUFA NPSTYLEBUF;
typedef LPSTYLEBUFA LPSTYLEBUF;
#line 111 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\imm.h"






typedef struct tagIMEMENUITEMINFOA {
    UINT        cbSize;
    UINT        fType;
    UINT        fState;
    UINT        wID;
    HBITMAP     hbmpChecked;
    HBITMAP     hbmpUnchecked;
    DWORD       dwItemData;
    CHAR        szString[80];
    HBITMAP     hbmpItem;
} IMEMENUITEMINFOA, *PIMEMENUITEMINFOA,  *NPIMEMENUITEMINFOA,  *LPIMEMENUITEMINFOA;
typedef struct tagIMEMENUITEMINFOW {
    UINT        cbSize;
    UINT        fType;
    UINT        fState;
    UINT        wID;
    HBITMAP     hbmpChecked;
    HBITMAP     hbmpUnchecked;
    DWORD       dwItemData;
    WCHAR       szString[80];
    HBITMAP     hbmpItem;
} IMEMENUITEMINFOW, *PIMEMENUITEMINFOW,  *NPIMEMENUITEMINFOW,  *LPIMEMENUITEMINFOW;






typedef IMEMENUITEMINFOA IMEMENUITEMINFO;
typedef PIMEMENUITEMINFOA PIMEMENUITEMINFO;
typedef NPIMEMENUITEMINFOA NPIMEMENUITEMINFO;
typedef LPIMEMENUITEMINFOA LPIMEMENUITEMINFO;
#line 150 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\imm.h"

typedef struct tagIMECHARPOSITION {
    DWORD       dwSize;
    DWORD       dwCharPos;
    POINT       pt;
    UINT        cLineHeight;
    RECT        rcDocument;
} IMECHARPOSITION, *PIMECHARPOSITION,  *NPIMECHARPOSITION,  *LPIMECHARPOSITION;

typedef BOOL    (__stdcall* IMCENUMPROC)(HIMC, LPARAM);

#line 162 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\imm.h"





HKL  __stdcall ImmInstallIMEA( LPCSTR lpszIMEFileName,  LPCSTR lpszLayoutText);
HKL  __stdcall ImmInstallIMEW( LPCWSTR lpszIMEFileName,  LPCWSTR lpszLayoutText);




#line 174 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\imm.h"

HWND __stdcall ImmGetDefaultIMEWnd( HWND);

UINT __stdcall ImmGetDescriptionA( HKL,  LPSTR lpszDescription,  UINT uBufLen);
UINT __stdcall ImmGetDescriptionW( HKL,  LPWSTR lpszDescription,  UINT uBufLen);




#line 184 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\imm.h"

UINT __stdcall ImmGetIMEFileNameA( HKL,  LPSTR lpszFileName,  UINT uBufLen);
UINT __stdcall ImmGetIMEFileNameW( HKL,  LPWSTR lpszFileName,  UINT uBufLen);




#line 192 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\imm.h"

DWORD __stdcall ImmGetProperty( HKL,  DWORD);

BOOL __stdcall ImmIsIME( HKL);

BOOL __stdcall ImmSimulateHotKey( HWND,  DWORD);

HIMC __stdcall ImmCreateContext(void);
BOOL __stdcall ImmDestroyContext( HIMC);
HIMC __stdcall ImmGetContext( HWND);
BOOL __stdcall ImmReleaseContext( HWND,  HIMC);
HIMC __stdcall ImmAssociateContext( HWND,  HIMC);

BOOL __stdcall ImmAssociateContextEx( HWND,  HIMC,  DWORD);
#line 207 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\imm.h"

LONG  __stdcall ImmGetCompositionStringA( HIMC,  DWORD,  LPVOID lpBuf,  DWORD dwBufLen);
LONG  __stdcall ImmGetCompositionStringW( HIMC,  DWORD,  LPVOID lpBuf,  DWORD dwBufLen);




#line 215 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\imm.h"

BOOL  __stdcall ImmSetCompositionStringA( HIMC,  DWORD dwIndex,  LPVOID lpComp,  DWORD dwCompLen,  LPVOID lpRead,  DWORD dwReadLen);
BOOL  __stdcall ImmSetCompositionStringW( HIMC,  DWORD dwIndex,  LPVOID lpComp,  DWORD dwCompLen,  LPVOID lpRead,  DWORD dwReadLen);




#line 223 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\imm.h"

DWORD __stdcall ImmGetCandidateListCountA( HIMC,  LPDWORD lpdwListCount);
DWORD __stdcall ImmGetCandidateListCountW( HIMC,  LPDWORD lpdwListCount);




#line 231 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\imm.h"

DWORD __stdcall ImmGetCandidateListA( HIMC,  DWORD deIndex,  LPCANDIDATELIST lpCandList,  DWORD dwBufLen);
DWORD __stdcall ImmGetCandidateListW( HIMC,  DWORD deIndex,  LPCANDIDATELIST lpCandList,  DWORD dwBufLen);




#line 239 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\imm.h"

DWORD __stdcall ImmGetGuideLineA( HIMC,  DWORD dwIndex,  LPSTR lpBuf,  DWORD dwBufLen);
DWORD __stdcall ImmGetGuideLineW( HIMC,  DWORD dwIndex,  LPWSTR lpBuf,  DWORD dwBufLen);




#line 247 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\imm.h"

BOOL __stdcall ImmGetConversionStatus( HIMC,  LPDWORD lpfdwConversion,  LPDWORD lpfdwSentence);
BOOL __stdcall ImmSetConversionStatus( HIMC,  DWORD,  DWORD);
BOOL __stdcall ImmGetOpenStatus( HIMC);
BOOL __stdcall ImmSetOpenStatus( HIMC,  BOOL);


BOOL __stdcall ImmGetCompositionFontA( HIMC,  LPLOGFONTA lplf);
BOOL __stdcall ImmGetCompositionFontW( HIMC,  LPLOGFONTW lplf);




#line 261 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\imm.h"

BOOL __stdcall ImmSetCompositionFontA( HIMC,  LPLOGFONTA lplf);
BOOL __stdcall ImmSetCompositionFontW( HIMC,  LPLOGFONTW lplf);




#line 269 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\imm.h"
#line 270 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\imm.h"

BOOL    __stdcall ImmConfigureIMEA( HKL,  HWND,  DWORD,  LPVOID);
BOOL    __stdcall ImmConfigureIMEW( HKL,  HWND,  DWORD,  LPVOID);




#line 278 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\imm.h"

LRESULT __stdcall ImmEscapeA( HKL,  HIMC,  UINT,  LPVOID);
LRESULT __stdcall ImmEscapeW( HKL,  HIMC,  UINT,  LPVOID);




#line 286 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\imm.h"

DWORD   __stdcall ImmGetConversionListA( HKL,  HIMC,  LPCSTR lpSrc,  LPCANDIDATELIST lpDst,  DWORD dwBufLen,  UINT uFlag);
DWORD   __stdcall ImmGetConversionListW( HKL,  HIMC,  LPCWSTR lpSrc,  LPCANDIDATELIST lpDst,  DWORD dwBufLen,  UINT uFlag);




#line 294 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\imm.h"

BOOL    __stdcall ImmNotifyIME( HIMC,  DWORD dwAction,  DWORD dwIndex,  DWORD dwValue);

BOOL __stdcall ImmGetStatusWindowPos( HIMC,  LPPOINT lpptPos);
BOOL __stdcall ImmSetStatusWindowPos( HIMC,  LPPOINT lpptPos);
BOOL __stdcall ImmGetCompositionWindow( HIMC,  LPCOMPOSITIONFORM lpCompForm);
BOOL __stdcall ImmSetCompositionWindow( HIMC,  LPCOMPOSITIONFORM lpCompForm);
BOOL __stdcall ImmGetCandidateWindow( HIMC,  DWORD,  LPCANDIDATEFORM lpCandidate);
BOOL __stdcall ImmSetCandidateWindow( HIMC,  LPCANDIDATEFORM lpCandidate);

BOOL __stdcall ImmIsUIMessageA( HWND,  UINT,  WPARAM,  LPARAM);
BOOL __stdcall ImmIsUIMessageW( HWND,  UINT,  WPARAM,  LPARAM);




#line 311 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\imm.h"


UINT __stdcall ImmGetVirtualKey( HWND);

typedef int (__stdcall *REGISTERWORDENUMPROCA)( LPCSTR lpszReading, DWORD,  LPCSTR lpszString, LPVOID);
typedef int (__stdcall *REGISTERWORDENUMPROCW)( LPCWSTR lpszReading, DWORD,  LPCWSTR lpszString, LPVOID);




#line 322 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\imm.h"

BOOL __stdcall ImmRegisterWordA( HKL,  LPCSTR lpszReading,  DWORD,  LPCSTR lpszRegister);
BOOL __stdcall ImmRegisterWordW( HKL,  LPCWSTR lpszReading,  DWORD,  LPCWSTR lpszRegister);




#line 330 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\imm.h"

BOOL __stdcall ImmUnregisterWordA( HKL,  LPCSTR lpszReading,  DWORD,  LPCSTR lpszUnregister);
BOOL __stdcall ImmUnregisterWordW( HKL,  LPCWSTR lpszReading,  DWORD,  LPCWSTR lpszUnregister);




#line 338 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\imm.h"

UINT __stdcall ImmGetRegisterWordStyleA( HKL,  UINT nItem,  LPSTYLEBUFA lpStyleBuf);
UINT __stdcall ImmGetRegisterWordStyleW( HKL,  UINT nItem,  LPSTYLEBUFW lpStyleBuf);




#line 346 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\imm.h"

UINT __stdcall ImmEnumRegisterWordA( HKL,  REGISTERWORDENUMPROCA,  LPCSTR lpszReading,  DWORD,  LPCSTR lpszRegister,  LPVOID);
UINT __stdcall ImmEnumRegisterWordW( HKL,  REGISTERWORDENUMPROCW,  LPCWSTR lpszReading,  DWORD,  LPCWSTR lpszRegister,  LPVOID);




#line 354 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\imm.h"


BOOL __stdcall ImmDisableIME( DWORD);
BOOL __stdcall ImmEnumInputContext(DWORD idThread, IMCENUMPROC lpfn, LPARAM lParam);
DWORD __stdcall ImmGetImeMenuItemsA( HIMC,  DWORD,  DWORD,  LPIMEMENUITEMINFOA lpImeParentMenu,  LPIMEMENUITEMINFOA lpImeMenu,  DWORD dwSize);
DWORD __stdcall ImmGetImeMenuItemsW( HIMC,  DWORD,  DWORD,  LPIMEMENUITEMINFOW lpImeParentMenu,  LPIMEMENUITEMINFOW lpImeMenu,  DWORD dwSize);




#line 365 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\imm.h"

BOOL __stdcall ImmDisableTextFrameService(DWORD idThread);
#line 368 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\imm.h"









































































































































































































#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\ime_cmodes.h"
#pragma once

















#line 20 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\ime_cmodes.h"


#line 570 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\imm.h"






















































#line 625 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\imm.h"






































































#line 696 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\imm.h"








#line 705 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\imm.h"


}
#line 709 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\imm.h"

#line 711 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\imm.h"

#line 231 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windows.h"
#line 232 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windows.h"
#line 233 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windows.h"
#line 234 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windows.h"




#pragma warning(pop)





#line 245 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windows.h"
#line 246 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windows.h"
#line 247 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windows.h"

#line 249 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windows.h"

#line 251 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windows.h"
#line 252 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\windows.h"


#line 10 "c:\\users\\bob\\documents\\visual studio 2010\\projects\\c++\\ic\\d3d9_application_framework\\d3d9_application_framework\\frameworkbase\\source\\stdafx.h"


#line 1 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"















#pragma once




#line 1 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"














 








































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 22 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"
#line 1 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\limits.h"














#pragma once

#line 1 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"














 








































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 18 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\limits.h"
















#line 35 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\limits.h"









































#line 77 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\limits.h"






#line 84 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\limits.h"
#line 85 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\limits.h"







#line 93 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\limits.h"
#line 94 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\limits.h"
































#line 127 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\limits.h"
#line 23 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"





#pragma pack(push,8)


extern "C" {
#line 33 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"



















typedef int (__cdecl * _onexit_t)(void);



#line 57 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"



#line 61 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"




#line 66 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"


#line 69 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"






typedef struct _div_t {
        int quot;
        int rem;
} div_t;

typedef struct _ldiv_t {
        long quot;
        long rem;
} ldiv_t;

typedef struct _lldiv_t {
        long long quot;
        long long rem;
} lldiv_t;


#line 92 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"










#pragma pack(4)
typedef struct {
    unsigned char ld[10];
} _LDOUBLE;
#pragma pack()













#line 121 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"

typedef struct {
        double x;
} _CRT_DOUBLE;

typedef struct {
    float f;
} _CRT_FLOAT;





typedef struct {
        


        long double x;
} _LONGDOUBLE;



#pragma pack(4)
typedef struct {
    unsigned char ld12[12];
} _LDBL12;
#pragma pack()


#line 151 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"

























































typedef void (__cdecl *_purecall_handler)(void); 


 _purecall_handler __cdecl _set_purecall_handler(   _purecall_handler _Handler);
 _purecall_handler __cdecl _get_purecall_handler(void);
#line 214 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"


extern "C++"
{




#line 223 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"
}
#line 225 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"



typedef void (__cdecl *_invalid_parameter_handler)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t); 


 _invalid_parameter_handler __cdecl _set_invalid_parameter_handler(   _invalid_parameter_handler _Handler);
 _invalid_parameter_handler __cdecl _get_invalid_parameter_handler(void);
#line 234 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"


extern "C++"
{




#line 243 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"
}
#line 245 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"




 extern int * __cdecl _errno(void);


errno_t __cdecl _set_errno(  int _Value);
errno_t __cdecl _get_errno(  int * _Value);
#line 255 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"

 unsigned long * __cdecl __doserrno(void);


errno_t __cdecl _set_doserrno(  unsigned long _Value);
errno_t __cdecl _get_doserrno(  unsigned long * _Value);


 __declspec(deprecated("This function or variable may be unsafe. Consider using " "strerror" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.")) char ** __cdecl __sys_errlist(void);


 __declspec(deprecated("This function or variable may be unsafe. Consider using " "strerror" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.")) int * __cdecl __sys_nerr(void);













#line 281 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"


 extern int __argc;          
 extern char ** __argv;      
 extern wchar_t ** __wargv;  







#line 294 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"





 extern char ** _environ;    
 extern wchar_t ** _wenviron;    
#line 302 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"

__declspec(deprecated("This function or variable may be unsafe. Consider using " "_get_pgmptr" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))  extern char * _pgmptr;      
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_get_wpgmptr" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))  extern wchar_t * _wpgmptr;  














#line 320 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"

errno_t __cdecl _get_pgmptr(     char ** _Value);
errno_t __cdecl _get_wpgmptr(     wchar_t ** _Value);



__declspec(deprecated("This function or variable may be unsafe. Consider using " "_get_fmode" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))  extern int _fmode;          



#line 331 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"

 errno_t __cdecl _set_fmode(  int _Mode);
 errno_t __cdecl _get_fmode(  int * _PMode);





#line 340 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"
extern "C++"
{
template <typename _CountofType, size_t _SizeOfArray>
char (*__countof_helper( _CountofType (&_Array)[_SizeOfArray]))[_SizeOfArray];

}
#line 347 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"
#line 348 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"





 __declspec(noreturn) void __cdecl exit(  int _Code);
 __declspec(noreturn) void __cdecl _exit(  int _Code);
 void __cdecl abort(void);
#line 357 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"

 unsigned int __cdecl _set_abort_behavior(  unsigned int _Flags,   unsigned int _Mask);



        int       __cdecl abs(  int _X);
        long      __cdecl labs(  long _X);
        long long __cdecl llabs(  long long _X);
#line 366 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"

        __int64    __cdecl _abs64(__int64);















#line 384 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"













#line 398 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"
        int    __cdecl atexit(void (__cdecl *)(void));
#line 400 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"


  double  __cdecl atof(   const char *_String);
  double  __cdecl _atof_l(   const char *_String,    _locale_t _Locale);
#line 405 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"
   int    __cdecl atoi(   const char *_Str);
  int    __cdecl _atoi_l(   const char *_Str,    _locale_t _Locale);
  long   __cdecl atol(   const char *_Str);
  long   __cdecl _atol_l(   const char *_Str,    _locale_t _Locale);



  void * __cdecl bsearch_s(  const void * _Key,    const void * _Base, 
          rsize_t _NumOfElements,   rsize_t _SizeOfElements,
          int (__cdecl * _PtFuncCompare)(void *, const void *, const void *), void * _Context);
#line 416 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"
  void * __cdecl bsearch(  const void * _Key,    const void * _Base, 
          size_t _NumOfElements,   size_t _SizeOfElements,
          int (__cdecl * _PtFuncCompare)(const void *, const void *));


 void __cdecl qsort_s(   void * _Base, 
          rsize_t _NumOfElements,   rsize_t _SizeOfElements,
          int (__cdecl * _PtFuncCompare)(void *, const void *, const void *), void *_Context);
#line 425 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"
 void __cdecl qsort(   void * _Base, 
	  size_t _NumOfElements,   size_t _SizeOfElements, 
          int (__cdecl * _PtFuncCompare)(const void *, const void *));
#line 429 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"
         unsigned short __cdecl _byteswap_ushort(  unsigned short _Short);
         unsigned long  __cdecl _byteswap_ulong (  unsigned long _Long);
         unsigned __int64 __cdecl _byteswap_uint64(  unsigned __int64 _Int64);
  div_t  __cdecl div(  int _Numerator,   int _Denominator);
  __declspec(deprecated("This function or variable may be unsafe. Consider using " "_dupenv_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.")) char * __cdecl getenv(   const char * _VarName);

  errno_t __cdecl getenv_s(  size_t * _ReturnSize,     char * _DstBuf,   rsize_t _DstSize,    const char * _VarName);
#line 437 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"
extern "C++" { template <size_t _Size> inline errno_t __cdecl getenv_s(  size_t * _ReturnSize, char (&_Dest)[_Size],    const char * _VarName) throw() { return getenv_s(_ReturnSize, _Dest, _Size, _VarName); } }



#line 442 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"

  errno_t __cdecl _dupenv_s(    char **_PBuffer,   size_t * _PBufferSizeInBytes,    const char * _VarName);



#line 448 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"

  errno_t __cdecl _itoa_s(  int _Value,     char * _DstBuf,   size_t _Size,   int _Radix);
extern "C++" { template <size_t _Size> inline errno_t __cdecl _itoa_s(  int _Value, char (&_Dest)[_Size],   int _Radix) throw() { return _itoa_s(_Value, _Dest, _Size, _Radix); } }
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_itoa_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))  char * __cdecl _itoa( int _Value,   char *_Dest,  int _Radix);
  errno_t __cdecl _i64toa_s(  __int64 _Val,     char * _DstBuf,   size_t _Size,   int _Radix);
 __declspec(deprecated("This function or variable may be unsafe. Consider using " "_i64toa_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.")) char * __cdecl _i64toa(  __int64 _Val,    char * _DstBuf,   int _Radix);
  errno_t __cdecl _ui64toa_s(  unsigned __int64 _Val,     char * _DstBuf,   size_t _Size,   int _Radix);
 __declspec(deprecated("This function or variable may be unsafe. Consider using " "_ui64toa_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.")) char * __cdecl _ui64toa(  unsigned __int64 _Val,    char * _DstBuf,   int _Radix);
  __int64 __cdecl _atoi64(   const char * _String);
  __int64 __cdecl _atoi64_l(   const char * _String,    _locale_t _Locale);
  __int64 __cdecl _strtoi64(   const char * _String,     char ** _EndPtr,   int _Radix);
  __int64 __cdecl _strtoi64_l(   const char * _String,     char ** _EndPtr,   int _Radix,    _locale_t _Locale);
  unsigned __int64 __cdecl _strtoui64(   const char * _String,     char ** _EndPtr,   int _Radix);
  unsigned __int64 __cdecl _strtoui64_l(   const char * _String,     char ** _EndPtr,   int  _Radix,    _locale_t _Locale);
  ldiv_t __cdecl ldiv(  long _Numerator,   long _Denominator);
  lldiv_t __cdecl lldiv(  long long _Numerator,   long long _Denominator);

extern "C++"
{
    inline long abs(long _X)
    {
        return labs(_X);
    }
    inline long long abs(long long _X)
    {
        return llabs(_X);
    }
    inline ldiv_t div(long _A1, long _A2)
    {
        return ldiv(_A1, _A2);
    }
    inline lldiv_t div(long long _A1, long long _A2)
    {
        return lldiv(_A1, _A2);
    }
}
#line 485 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"
  errno_t __cdecl _ltoa_s(  long _Val,     char * _DstBuf,   size_t _Size,   int _Radix);
extern "C++" { template <size_t _Size> inline errno_t __cdecl _ltoa_s(  long _Value, char (&_Dest)[_Size],   int _Radix) throw() { return _ltoa_s(_Value, _Dest, _Size, _Radix); } }
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_ltoa_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))  char * __cdecl _ltoa( long _Value,   char *_Dest,  int _Radix);
  int    __cdecl mblen(     const char * _Ch,   size_t _MaxCount);
  int    __cdecl _mblen_l(     const char * _Ch,   size_t _MaxCount,    _locale_t _Locale);
  size_t __cdecl _mbstrlen(   const char * _Str);
  size_t __cdecl _mbstrlen_l(   const char *_Str,    _locale_t _Locale);
  size_t __cdecl _mbstrnlen(   const char *_Str,   size_t _MaxCount);
  size_t __cdecl _mbstrnlen_l(   const char *_Str,   size_t _MaxCount,    _locale_t _Locale);
 int    __cdecl mbtowc(   wchar_t * _DstCh,      const char * _SrcCh,   size_t _SrcSizeInBytes);
 int    __cdecl _mbtowc_l(   wchar_t * _DstCh,      const char * _SrcCh,   size_t _SrcSizeInBytes,    _locale_t _Locale);
  errno_t __cdecl mbstowcs_s(  size_t * _PtNumOfCharConverted,     wchar_t * _DstBuf,   size_t _SizeInWords,      const char * _SrcBuf,   size_t _MaxCount );
extern "C++" { template <size_t _Size> inline errno_t __cdecl mbstowcs_s(  size_t * _PtNumOfCharConverted,   wchar_t (&_Dest)[_Size],    const char * _Source,   size_t _MaxCount) throw() { return mbstowcs_s(_PtNumOfCharConverted, _Dest, _Size, _Source, _MaxCount); } }
__declspec(deprecated("This function or variable may be unsafe. Consider using " "mbstowcs_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))  size_t __cdecl mbstowcs(  wchar_t *_Dest,  const char * _Source,  size_t _MaxCount);

  errno_t __cdecl _mbstowcs_s_l(  size_t * _PtNumOfCharConverted,     wchar_t * _DstBuf,   size_t _SizeInWords,      const char * _SrcBuf,   size_t _MaxCount,    _locale_t _Locale);
extern "C++" { template <size_t _Size> inline errno_t __cdecl _mbstowcs_s_l(  size_t * _PtNumOfCharConverted, wchar_t (&_Dest)[_Size],    const char * _Source,   size_t _MaxCount,    _locale_t _Locale) throw() { return _mbstowcs_s_l(_PtNumOfCharConverted, _Dest, _Size, _Source, _MaxCount, _Locale); } }
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_mbstowcs_s_l" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))  size_t __cdecl _mbstowcs_l(    wchar_t *_Dest,    const char * _Source,   size_t _MaxCount,    _locale_t _Locale);

  int    __cdecl rand(void);


#line 508 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"

  int    __cdecl _set_error_mode(  int _Mode);

 void   __cdecl srand(  unsigned int _Seed);
  double __cdecl strtod(   const char * _Str,     char ** _EndPtr);
  double __cdecl _strtod_l(   const char * _Str,     char ** _EndPtr,    _locale_t _Locale);
  long   __cdecl strtol(   const char * _Str,     char ** _EndPtr,   int _Radix );
  long   __cdecl _strtol_l(   const char *_Str,     char **_EndPtr,   int _Radix,    _locale_t _Locale);
  unsigned long __cdecl strtoul(   const char * _Str,     char ** _EndPtr,   int _Radix);
  unsigned long __cdecl _strtoul_l(const char * _Str,     char **_EndPtr,   int _Radix,    _locale_t _Locale);


 int __cdecl system(   const char * _Command);
#line 522 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"
  errno_t __cdecl _ultoa_s(  unsigned long _Val,     char * _DstBuf,   size_t _Size,   int _Radix);
extern "C++" { template <size_t _Size> inline errno_t __cdecl _ultoa_s(  unsigned long _Value, char (&_Dest)[_Size],   int _Radix) throw() { return _ultoa_s(_Value, _Dest, _Size, _Radix); } }
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_ultoa_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))  char * __cdecl _ultoa( unsigned long _Value,   char *_Dest,  int _Radix);
 __declspec(deprecated("This function or variable may be unsafe. Consider using " "wctomb_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.")) int    __cdecl wctomb(    char * _MbCh,   wchar_t _WCh);
 __declspec(deprecated("This function or variable may be unsafe. Consider using " "_wctomb_s_l" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.")) int    __cdecl _wctomb_l(   char * _MbCh,   wchar_t _WCh,    _locale_t _Locale);

  errno_t __cdecl wctomb_s(  int * _SizeConverted,     char * _MbCh,   rsize_t _SizeInBytes,   wchar_t _WCh);
#line 530 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"
  errno_t __cdecl _wctomb_s_l(  int * _SizeConverted,     char * _MbCh,   size_t _SizeInBytes,   wchar_t _WCh,    _locale_t _Locale);
  errno_t __cdecl wcstombs_s(  size_t * _PtNumOfCharConverted,     char * _Dst,   size_t _DstSizeInBytes,    const wchar_t * _Src,   size_t _MaxCountInBytes);
extern "C++" { template <size_t _Size> inline errno_t __cdecl wcstombs_s(  size_t * _PtNumOfCharConverted,   char (&_Dest)[_Size],    const wchar_t * _Source,   size_t _MaxCount) throw() { return wcstombs_s(_PtNumOfCharConverted, _Dest, _Size, _Source, _MaxCount); } }
__declspec(deprecated("This function or variable may be unsafe. Consider using " "wcstombs_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))  size_t __cdecl wcstombs(  char *_Dest,  const wchar_t * _Source,  size_t _MaxCount);
  errno_t __cdecl _wcstombs_s_l(  size_t * _PtNumOfCharConverted,     char * _Dst,   size_t _DstSizeInBytes,    const wchar_t * _Src,   size_t _MaxCountInBytes,    _locale_t _Locale);
extern "C++" { template <size_t _Size> inline errno_t __cdecl _wcstombs_s_l(  size_t * _PtNumOfCharConverted,   char (&_Dest)[_Size],    const wchar_t * _Source,   size_t _MaxCount,    _locale_t _Locale) throw() { return _wcstombs_s_l(_PtNumOfCharConverted, _Dest, _Size, _Source, _MaxCount, _Locale); } }
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_wcstombs_s_l" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))  size_t __cdecl _wcstombs_l(    char *_Dest,    const wchar_t * _Source,   size_t _MaxCount,    _locale_t _Locale);

























#line 563 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"


































#line 598 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"
    __declspec(noalias) __declspec(restrict)    void * __cdecl calloc(  size_t _Count,   size_t _Size);
                     __declspec(noalias)                                                                             void   __cdecl free( void * _Memory);
    __declspec(noalias) __declspec(restrict)                              void * __cdecl malloc(  size_t _Size);

   __declspec(noalias) __declspec(restrict)                           void * __cdecl realloc( void * _Memory,   size_t _NewSize);

   __declspec(noalias) __declspec(restrict)                       void * __cdecl _recalloc( void * _Memory,   size_t _Count,   size_t _Size);
                     __declspec(noalias)                                                                             void   __cdecl _aligned_free( void * _Memory);
   __declspec(noalias) __declspec(restrict)                              void * __cdecl _aligned_malloc(  size_t _Size,   size_t _Alignment);
   __declspec(noalias) __declspec(restrict)                              void * __cdecl _aligned_offset_malloc(  size_t _Size,   size_t _Alignment,   size_t _Offset);

   __declspec(noalias) __declspec(restrict)                              void * __cdecl _aligned_realloc( void * _Memory,   size_t _NewSize,   size_t _Alignment);

   __declspec(noalias) __declspec(restrict)                       void * __cdecl _aligned_recalloc( void * _Memory,   size_t _Count,   size_t _Size,   size_t _Alignment);

   __declspec(noalias) __declspec(restrict)                              void * __cdecl _aligned_offset_realloc( void * _Memory,   size_t _NewSize,   size_t _Alignment,   size_t _Offset);

   __declspec(noalias) __declspec(restrict)                       void * __cdecl _aligned_offset_recalloc( void * _Memory,   size_t _Count,   size_t _Size,   size_t _Alignment,   size_t _Offset);
                                                   size_t __cdecl _aligned_msize( void * _Memory,   size_t _Alignment,   size_t _Offset);


















#line 636 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"

#line 638 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"





  errno_t __cdecl _itow_s (  int _Val,     wchar_t * _DstBuf,   size_t _SizeInWords,   int _Radix);
extern "C++" { template <size_t _Size> inline errno_t __cdecl _itow_s(  int _Value, wchar_t (&_Dest)[_Size],   int _Radix) throw() { return _itow_s(_Value, _Dest, _Size, _Radix); } }
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_itow_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))  wchar_t * __cdecl _itow( int _Value,   wchar_t *_Dest,  int _Radix);
  errno_t __cdecl _ltow_s (  long _Val,     wchar_t * _DstBuf,   size_t _SizeInWords,   int _Radix);
extern "C++" { template <size_t _Size> inline errno_t __cdecl _ltow_s(  long _Value, wchar_t (&_Dest)[_Size],   int _Radix) throw() { return _ltow_s(_Value, _Dest, _Size, _Radix); } }
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_ltow_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))  wchar_t * __cdecl _ltow( long _Value,   wchar_t *_Dest,  int _Radix);
  errno_t __cdecl _ultow_s (  unsigned long _Val,     wchar_t * _DstBuf,   size_t _SizeInWords,   int _Radix);
extern "C++" { template <size_t _Size> inline errno_t __cdecl _ultow_s(  unsigned long _Value, wchar_t (&_Dest)[_Size],   int _Radix) throw() { return _ultow_s(_Value, _Dest, _Size, _Radix); } }
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_ultow_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))  wchar_t * __cdecl _ultow( unsigned long _Value,   wchar_t *_Dest,  int _Radix);
  double __cdecl wcstod(   const wchar_t * _Str,     wchar_t ** _EndPtr);
  double __cdecl _wcstod_l(   const wchar_t *_Str,     wchar_t ** _EndPtr,    _locale_t _Locale);
  long   __cdecl wcstol(   const wchar_t *_Str,     wchar_t ** _EndPtr, int _Radix);
  long   __cdecl _wcstol_l(   const wchar_t *_Str,     wchar_t **_EndPtr, int _Radix,    _locale_t _Locale);
  unsigned long __cdecl wcstoul(   const wchar_t *_Str,     wchar_t ** _EndPtr, int _Radix);
  unsigned long __cdecl _wcstoul_l(   const wchar_t *_Str,     wchar_t **_EndPtr, int _Radix,    _locale_t _Locale);
  __declspec(deprecated("This function or variable may be unsafe. Consider using " "_wdupenv_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.")) wchar_t * __cdecl _wgetenv(   const wchar_t * _VarName);
  errno_t __cdecl _wgetenv_s(  size_t * _ReturnSize,     wchar_t * _DstBuf,   size_t _DstSizeInWords,    const wchar_t * _VarName);
extern "C++" { template <size_t _Size> inline errno_t __cdecl _wgetenv_s(  size_t * _ReturnSize, wchar_t (&_Dest)[_Size],    const wchar_t * _VarName) throw() { return _wgetenv_s(_ReturnSize, _Dest, _Size, _VarName); } }




#line 666 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"

  errno_t __cdecl _wdupenv_s(    wchar_t **_Buffer,   size_t *_BufferSizeInWords,    const wchar_t *_VarName);



#line 672 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"



 int __cdecl _wsystem(   const wchar_t * _Command);
#line 677 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"
  double __cdecl _wtof(   const wchar_t *_Str);
  double __cdecl _wtof_l(   const wchar_t *_Str,    _locale_t _Locale);
  int __cdecl _wtoi(   const wchar_t *_Str);
  int __cdecl _wtoi_l(   const wchar_t *_Str,    _locale_t _Locale);
  long __cdecl _wtol(   const wchar_t *_Str);
  long __cdecl _wtol_l(   const wchar_t *_Str,    _locale_t _Locale);

  errno_t __cdecl _i64tow_s(  __int64 _Val,     wchar_t * _DstBuf,   size_t _SizeInWords,   int _Radix);
 __declspec(deprecated("This function or variable may be unsafe. Consider using " "_i64tow_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.")) wchar_t * __cdecl _i64tow(  __int64 _Val,    wchar_t * _DstBuf,   int _Radix);
  errno_t __cdecl _ui64tow_s(  unsigned __int64 _Val,     wchar_t * _DstBuf,   size_t _SizeInWords,   int _Radix);
 __declspec(deprecated("This function or variable may be unsafe. Consider using " "_ui64tow_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.")) wchar_t * __cdecl _ui64tow(  unsigned __int64 _Val,    wchar_t * _DstBuf,   int _Radix);
  __int64   __cdecl _wtoi64(   const wchar_t *_Str);
  __int64   __cdecl _wtoi64_l(   const wchar_t *_Str,    _locale_t _Locale);
  __int64   __cdecl _wcstoi64(   const wchar_t * _Str,     wchar_t ** _EndPtr,   int _Radix);
  __int64   __cdecl _wcstoi64_l(   const wchar_t * _Str,     wchar_t ** _EndPtr,   int _Radix,    _locale_t _Locale);
  unsigned __int64  __cdecl _wcstoui64(   const wchar_t * _Str,     wchar_t ** _EndPtr,   int _Radix);
  unsigned __int64  __cdecl _wcstoui64_l(   const wchar_t *_Str ,     wchar_t ** _EndPtr,   int _Radix,    _locale_t _Locale);


#line 697 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"














#line 712 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"

  char * __cdecl _fullpath(    char * _FullPath,    const char * _Path,   size_t _SizeInBytes);





#line 720 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"

  errno_t __cdecl _ecvt_s(    char * _DstBuf,   size_t _Size,   double _Val,   int _NumOfDights,   int * _PtDec,   int * _PtSign);
extern "C++" { template <size_t _Size> inline errno_t __cdecl _ecvt_s(char (&_Dest)[_Size],   double _Value,   int _NumOfDigits,   int * _PtDec,   int * _PtSign) throw() { return _ecvt_s(_Dest, _Size, _Value, _NumOfDigits, _PtDec, _PtSign); } }
  __declspec(deprecated("This function or variable may be unsafe. Consider using " "_ecvt_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.")) char * __cdecl _ecvt(  double _Val,   int _NumOfDigits,   int * _PtDec,   int * _PtSign);
  errno_t __cdecl _fcvt_s(    char * _DstBuf,   size_t _Size,   double _Val,   int _NumOfDec,   int * _PtDec,   int * _PtSign);
extern "C++" { template <size_t _Size> inline errno_t __cdecl _fcvt_s(char (&_Dest)[_Size],   double _Value,   int _NumOfDigits,   int * _PtDec,   int * _PtSign) throw() { return _fcvt_s(_Dest, _Size, _Value, _NumOfDigits, _PtDec, _PtSign); } }
  __declspec(deprecated("This function or variable may be unsafe. Consider using " "_fcvt_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.")) char * __cdecl _fcvt(  double _Val,   int _NumOfDec,   int * _PtDec,   int * _PtSign);
 errno_t __cdecl _gcvt_s(    char * _DstBuf,   size_t _Size,   double _Val,   int _NumOfDigits);
extern "C++" { template <size_t _Size> inline errno_t __cdecl _gcvt_s(char (&_Dest)[_Size],   double _Value,   int _NumOfDigits) throw() { return _gcvt_s(_Dest, _Size, _Value, _NumOfDigits); } }
 __declspec(deprecated("This function or variable may be unsafe. Consider using " "_gcvt_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.")) char * __cdecl _gcvt(  double _Val,   int _NumOfDigits,    char * _DstBuf);

  int __cdecl _atodbl(  _CRT_DOUBLE * _Result,    char * _Str);
  int __cdecl _atoldbl(  _LDOUBLE * _Result,    char * _Str);
  int __cdecl _atoflt(  _CRT_FLOAT * _Result,    char * _Str);
  int __cdecl _atodbl_l(  _CRT_DOUBLE * _Result,    char * _Str,    _locale_t _Locale);
  int __cdecl _atoldbl_l(  _LDOUBLE * _Result,    char * _Str,    _locale_t _Locale);
  int __cdecl _atoflt_l(  _CRT_FLOAT * _Result,    char * _Str,    _locale_t _Locale);
         unsigned long __cdecl _lrotl(  unsigned long _Val,   int _Shift);
         unsigned long __cdecl _lrotr(  unsigned long _Val,   int _Shift);
  errno_t   __cdecl _makepath_s(    char * _PathResult,   size_t _SizeInWords,    const char * _Drive,    const char * _Dir,    const char * _Filename,
           const char * _Ext);
extern "C++" { template <size_t _Size> inline errno_t __cdecl _makepath_s(char (&_Path)[_Size],    const char * _Drive,    const char * _Dir,    const char * _Filename,    const char * _Ext) throw() { return _makepath_s(_Path, _Size, _Drive, _Dir, _Filename, _Ext); } }
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_makepath_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))  void __cdecl _makepath(  char *_Path,  const char * _Drive,  const char * _Dir,  const char * _Filename,  const char * _Ext);












#line 756 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"












#line 769 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"
        _onexit_t __cdecl _onexit(   _onexit_t _Func);
#line 771 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"
        


 void __cdecl perror(   const char * _ErrMsg);
#line 776 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"

#pragma warning (push)
#pragma warning (disable:6540) 
  int    __cdecl _putenv(   const char * _EnvString);
  errno_t __cdecl _putenv_s(   const char * _Name,    const char * _Value);
         unsigned int __cdecl _rotl(  unsigned int _Val,   int _Shift);
         unsigned __int64 __cdecl _rotl64(  unsigned __int64 _Val,   int _Shift);
         unsigned int __cdecl _rotr(  unsigned int _Val,   int _Shift);
         unsigned __int64 __cdecl _rotr64(  unsigned __int64 _Val,   int _Shift);
#pragma warning (pop)

 errno_t __cdecl _searchenv_s(   const char * _Filename,    const char * _EnvVar,     char * _ResultPath,   size_t _SizeInBytes);
extern "C++" { template <size_t _Size> inline errno_t __cdecl _searchenv_s(   const char * _Filename,    const char * _EnvVar, char (&_ResultPath)[_Size]) throw() { return _searchenv_s(_Filename, _EnvVar, _ResultPath, _Size); } }
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_searchenv_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))  void __cdecl _searchenv( const char * _Filename,  const char * _EnvVar,   char *_ResultPath);

__declspec(deprecated("This function or variable may be unsafe. Consider using " "_splitpath_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))  void   __cdecl _splitpath(   const char * _FullPath,    char * _Drive,    char * _Dir,    char * _Filename,    char * _Ext);
  errno_t  __cdecl _splitpath_s(   const char * _FullPath, 
		    char * _Drive,   size_t _DriveSize, 
		    char * _Dir,   size_t _DirSize, 
		    char * _Filename,   size_t _FilenameSize, 
		    char * _Ext,   size_t _ExtSize);
extern "C++" { template <size_t _DriveSize, size_t _DirSize, size_t _NameSize, size_t _ExtSize> inline errno_t __cdecl _splitpath_s(  const char *_Dest, char (&_Drive)[_DriveSize], char (&_Dir)[_DirSize], char (&_Name)[_NameSize], char (&_Ext)[_ExtSize]) throw() { return _splitpath_s(_Dest, _Drive, _DriveSize, _Dir, _DirSize, _Name, _NameSize, _Ext, _ExtSize); } }

 void   __cdecl _swab(     char * _Buf1,      char * _Buf2, int _SizeInBytes);








#line 809 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"

  wchar_t * __cdecl _wfullpath(    wchar_t * _FullPath,    const wchar_t * _Path,   size_t _SizeInWords);



#line 815 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"

  errno_t __cdecl _wmakepath_s(    wchar_t * _PathResult,   size_t _SIZE,    const wchar_t * _Drive,    const wchar_t * _Dir,    const wchar_t * _Filename,
           const wchar_t * _Ext);        
extern "C++" { template <size_t _Size> inline errno_t __cdecl _wmakepath_s(wchar_t (&_ResultPath)[_Size],    const wchar_t * _Drive,    const wchar_t * _Dir,    const wchar_t * _Filename,    const wchar_t * _Ext) throw() { return _wmakepath_s(_ResultPath, _Size, _Drive, _Dir, _Filename, _Ext); } }
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_wmakepath_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))  void __cdecl _wmakepath(  wchar_t *_ResultPath,  const wchar_t * _Drive,  const wchar_t * _Dir,  const wchar_t * _Filename,  const wchar_t * _Ext);


 void __cdecl _wperror(   const wchar_t * _ErrMsg);
#line 824 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"
  int    __cdecl _wputenv(   const wchar_t * _EnvString);
  errno_t __cdecl _wputenv_s(   const wchar_t * _Name,    const wchar_t * _Value);
 errno_t __cdecl _wsearchenv_s(   const wchar_t * _Filename,    const wchar_t * _EnvVar,     wchar_t * _ResultPath,   size_t _SizeInWords);
extern "C++" { template <size_t _Size> inline errno_t __cdecl _wsearchenv_s(   const wchar_t * _Filename,    const wchar_t * _EnvVar, wchar_t (&_ResultPath)[_Size]) throw() { return _wsearchenv_s(_Filename, _EnvVar, _ResultPath, _Size); } }
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_wsearchenv_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))  void __cdecl _wsearchenv( const wchar_t * _Filename,  const wchar_t * _EnvVar,   wchar_t *_ResultPath);
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_wsplitpath_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))  void   __cdecl _wsplitpath(   const wchar_t * _FullPath,    wchar_t * _Drive,    wchar_t * _Dir,    wchar_t * _Filename,    wchar_t * _Ext);
 errno_t __cdecl _wsplitpath_s(   const wchar_t * _FullPath, 
		    wchar_t * _Drive,   size_t _DriveSize, 
		    wchar_t * _Dir,   size_t _DirSize, 
		    wchar_t * _Filename,   size_t _FilenameSize, 
		    wchar_t * _Ext,   size_t _ExtSize);
extern "C++" { template <size_t _DriveSize, size_t _DirSize, size_t _NameSize, size_t _ExtSize> inline errno_t __cdecl _wsplitpath_s(  const wchar_t *_Path, wchar_t (&_Drive)[_DriveSize], wchar_t (&_Dir)[_DirSize], wchar_t (&_Name)[_NameSize], wchar_t (&_Ext)[_ExtSize]) throw() { return _wsplitpath_s(_Path, _Drive, _DriveSize, _Dir, _DirSize, _Name, _NameSize, _Ext, _ExtSize); } }


#line 839 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"


__declspec(deprecated("This function or variable has been superceded by newer library or operating system functionality. Consider using " "SetErrorMode" " instead. See online help for details."))  void __cdecl _seterrormode(  int _Mode);
__declspec(deprecated("This function or variable has been superceded by newer library or operating system functionality. Consider using " "Beep" " instead. See online help for details."))  void __cdecl _beep(  unsigned _Frequency,   unsigned _Duration);
__declspec(deprecated("This function or variable has been superceded by newer library or operating system functionality. Consider using " "Sleep" " instead. See online help for details."))  void __cdecl _sleep(  unsigned long _Duration);

#line 846 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"
















#pragma warning(push)
#pragma warning(disable: 4141)  
 __declspec(deprecated("The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: " "_ecvt" ". See online help for details.")) __declspec(deprecated("This function or variable may be unsafe. Consider using " "_ecvt_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))  char * __cdecl ecvt(  double _Val,   int _NumOfDigits,   int * _PtDec,   int * _PtSign);
 __declspec(deprecated("The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: " "_fcvt" ". See online help for details.")) __declspec(deprecated("This function or variable may be unsafe. Consider using " "_fcvt_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))  char * __cdecl fcvt(  double _Val,   int _NumOfDec,   int * _PtDec,   int * _PtSign);
__declspec(deprecated("The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: " "_gcvt" ". See online help for details.")) __declspec(deprecated("This function or variable may be unsafe. Consider using " "_fcvt_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))		 char * __cdecl gcvt(  double _Val,   int _NumOfDigits,    char * _DstBuf);
__declspec(deprecated("The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: " "_itoa" ". See online help for details.")) __declspec(deprecated("This function or variable may be unsafe. Consider using " "_itoa_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))		 char * __cdecl itoa(  int _Val,    char * _DstBuf,   int _Radix);
__declspec(deprecated("The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: " "_ltoa" ". See online help for details.")) __declspec(deprecated("This function or variable may be unsafe. Consider using " "_ltoa_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))		 char * __cdecl ltoa(  long _Val,    char * _DstBuf,   int _Radix);
 __declspec(deprecated("The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: " "_putenv" ". See online help for details."))  int    __cdecl putenv(   const char * _EnvString);
__declspec(deprecated("The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: " "_swab" ". See online help for details."))										 void   __cdecl swab(    char * _Buf1,    char * _Buf2,   int _SizeInBytes);
__declspec(deprecated("The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: " "_ultoa" ". See online help for details.")) __declspec(deprecated("This function or variable may be unsafe. Consider using " "_ultoa_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))	 char * __cdecl ultoa(  unsigned long _Val,    char * _Dstbuf,   int _Radix);
#pragma warning(pop)
_onexit_t __cdecl onexit(   _onexit_t _Func);

#line 876 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"

#line 878 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"


}

#line 883 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"

#pragma pack(pop)

#line 887 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\stdlib.h"

#line 13 "c:\\users\\bob\\documents\\visual studio 2010\\projects\\c++\\ic\\d3d9_application_framework\\d3d9_application_framework\\frameworkbase\\source\\stdafx.h"
#line 1 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\malloc.h"














#pragma once




#line 1 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"














 








































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 21 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\malloc.h"





#pragma pack(push,8)


extern "C" {
#line 31 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\malloc.h"







#line 39 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\malloc.h"





#line 45 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\malloc.h"













typedef struct _heapinfo {
        int * _pentry;
        size_t _size;
        int _useflag;
        } _HEAPINFO;

#line 65 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\malloc.h"



































#line 101 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\malloc.h"







































#line 141 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\malloc.h"

 int     __cdecl _resetstkoflw (void);



 unsigned long __cdecl _set_malloc_crt_max_wait(  unsigned long _NewValue);








#line 156 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\malloc.h"

   void *  __cdecl _expand( void * _Memory,   size_t _NewSize);
  size_t  __cdecl _msize( void * _Memory);




#line 164 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\malloc.h"

 void *          __cdecl _alloca(  size_t _Size);
  int     __cdecl _heapadd(  void * _Memory,   size_t _Size);
  int     __cdecl _heapchk(void);
  int     __cdecl _heapmin(void);
 int     __cdecl _heapset(  unsigned int _Fill);
  int     __cdecl _heapwalk(   _HEAPINFO * _EntryInfo);
 size_t  __cdecl _heapused(size_t * _Used, size_t * _Commit);

 intptr_t __cdecl _get_heap_handle(void);











#line 186 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\malloc.h"

typedef char __static_assert_t[ (sizeof(unsigned int) <= 8) ];


#pragma warning(push)
#pragma warning(disable:6540)
__inline void *_MarkAllocaS(   void *_Ptr, unsigned int _Marker)
{
    if (_Ptr)
    {
        *((unsigned int*)_Ptr) = _Marker;
        _Ptr = (char*)_Ptr + 8;
    }
    return _Ptr;
}
#pragma warning(pop)
#line 203 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\malloc.h"








#line 212 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\malloc.h"






#line 219 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\malloc.h"








__declspec(noalias) __inline void __cdecl _freea( void * _Memory)
{
    unsigned int _Marker;
    if (_Memory)
    {
        _Memory = (char*)_Memory - 8;
        _Marker = *(unsigned int *)_Memory;
        if (_Marker == 0xDDDD)
        {
            free(_Memory);
        }





#line 244 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\malloc.h"
    }
}
#line 247 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\malloc.h"
#line 248 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\malloc.h"




#line 253 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\malloc.h"

#line 255 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\malloc.h"






















}
#line 279 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\malloc.h"

#pragma pack(pop)

#line 283 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\malloc.h"
#line 14 "c:\\users\\bob\\documents\\visual studio 2010\\projects\\c++\\ic\\d3d9_application_framework\\d3d9_application_framework\\frameworkbase\\source\\stdafx.h"
#line 1 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\memory.h"














#pragma once




#line 1 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"














 








































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 21 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\memory.h"


extern "C" {
#line 25 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\memory.h"










































































#line 100 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\memory.h"


}
#line 104 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\memory.h"

#line 106 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\memory.h"
#line 15 "c:\\users\\bob\\documents\\visual studio 2010\\projects\\c++\\ic\\d3d9_application_framework\\d3d9_application_framework\\frameworkbase\\source\\stdafx.h"
#line 1 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\tchar.h"















#pragma once

#line 1 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"














 








































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 19 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\tchar.h"








#pragma warning(disable:4514)       
 


















extern "C" {
#line 49 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\tchar.h"







#pragma deprecated("_ftcscat")
#pragma deprecated("_ftcschr")
#pragma deprecated("_ftcscpy")
#pragma deprecated("_ftcscspn")
#pragma deprecated("_ftcslen")
#pragma deprecated("_ftcsncat")
#pragma deprecated("_ftcsncpy")
#pragma deprecated("_ftcspbrk")
#pragma deprecated("_ftcsrchr")
#pragma deprecated("_ftcsspn")
#pragma deprecated("_ftcsstr")
#pragma deprecated("_ftcstok")
#pragma deprecated("_ftcsdup")
#pragma deprecated("_ftcsnset")
#pragma deprecated("_ftcsrev")
#pragma deprecated("_ftcsset")
#pragma deprecated("_ftcscmp")
#pragma deprecated("_ftcsicmp")
#pragma deprecated("_ftcsnccmp")
#pragma deprecated("_ftcsncmp")
#pragma deprecated("_ftcsncicmp")
#pragma deprecated("_ftcsnicmp")
#pragma deprecated("_ftcscoll")
#pragma deprecated("_ftcsicoll")
#pragma deprecated("_ftcsnccoll")
#pragma deprecated("_ftcsncoll")
#pragma deprecated("_ftcsncicoll")
#pragma deprecated("_ftcsnicoll")
#pragma deprecated("_ftcsclen")
#pragma deprecated("_ftcsnccat")
#pragma deprecated("_ftcsnccpy")
#pragma deprecated("_ftcsncset")
#pragma deprecated("_ftcsdec")
#pragma deprecated("_ftcsinc")
#pragma deprecated("_ftcsnbcnt")
#pragma deprecated("_ftcsnccnt")
#pragma deprecated("_ftcsnextc")
#pragma deprecated("_ftcsninc")
#pragma deprecated("_ftcsspnp")
#pragma deprecated("_ftcslwr")
#pragma deprecated("_ftcsupr")
#pragma deprecated("_ftclen")
#pragma deprecated("_ftccpy")
#pragma deprecated("_ftccmp")
#line 101 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\tchar.h"






































































































































































































































































































































































































































































































































































































































































































































































}   
#line 845 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\tchar.h"




extern "C" {
#line 851 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\tchar.h"















#line 867 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\tchar.h"


















































































































































































































































































#line 1142 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\tchar.h"










































#line 1185 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\tchar.h"






































































































































































































































































































































































































































































































































































































































































































































































































































































































typedef char            _TCHAR;
typedef signed char     _TSCHAR;
typedef unsigned char   _TUCHAR;
typedef char            _TXCHAR;
typedef int             _TINT;

#line 2062 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\tchar.h"
















































































































#line 2175 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\tchar.h"
 __inline size_t __cdecl _tclen(   const char *_cpc)
{ 
    
    (void *)_cpc;
    return 1;
}
__inline void __cdecl _tccpy(  char *_pc1,    const char *_cpc2) { *_pc1 = *_cpc2; }
__inline void __cdecl _tccpy_l(  char *_Pc1,    const char *_Cpc2,    _locale_t _Locale)
{
    (void)_Locale;
    _tccpy(_Pc1, _Cpc2);
}
 __inline int __cdecl _tccmp(   const char *_cpc1,    const char *_cpc2) { return (int) (((unsigned char)*_cpc1)-((unsigned char)*_cpc2)); }
#line 2189 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\tchar.h"




































































#line 2258 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\tchar.h"
 __inline char * __cdecl _strdec(     const char * _Cpc1,    const char * _Cpc2) { return (char *)((_Cpc1)>=(_Cpc2) ? 0 : (_Cpc2-1)); }
 __inline char * __cdecl _strinc(   const char * _Pc) { return (char *)(_Pc+1); }
 __inline unsigned int __cdecl _strnextc(   const char * _Cpc) { return (unsigned int)*(const unsigned char *)_Cpc; }
 __inline char * __cdecl _strninc(     const char * _Pc,   size_t _Sz) { return (char *)(_Pc+_Sz); }
 __inline size_t __cdecl _strncnt(      const char * _String,   size_t _Cnt) 
{ 
        size_t n = _Cnt; 
        char *cp = (char *)_String; 
        while (n-- && *cp) 
                cp++; 
        return _Cnt - n - 1; 
}
 __inline char * __cdecl _strspnp
( 
       const char * _Cpc1, 
       const char * _Cpc2
) 
{ 
    return _Cpc1==0 ? 0 : ((*(_Cpc1 += strspn(_Cpc1,_Cpc2))!='\0') ? (char*)_Cpc1 : 0); 
}


 __inline errno_t __cdecl _strncpy_s_l(    char *_Destination,   size_t _Destination_size_chars,    const char *_Source,   size_t _Count,    _locale_t _Locale)
{
    (void)_Locale;
    return strncpy_s(_Destination, _Destination_size_chars, _Source, _Count);
}
#line 2286 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\tchar.h"

extern "C++" { template <size_t _Size> inline errno_t __cdecl _strncpy_s_l(  char (&_Dest)[_Size],    const char * _Source,   size_t _Count,    _locale_t _Locale) throw() { return _strncpy_s_l(_Dest, _Size, _Source, _Count, _Locale); } }

__declspec(deprecated("This function or variable may be unsafe. Consider using " "_strncpy_s_l" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.")) __inline char * __cdecl _strncpy_l(  char *_Dst,    const char * _Source,   size_t _Count,    _locale_t _Locale)
{
    (void)_Locale;
#pragma warning( push )
#pragma warning( disable : 4996 )
    return strncpy(_Dst, _Source, _Count);
#pragma warning( pop )
}




 __inline errno_t __cdecl _strncat_s_l(    char *_Destination,   size_t _Destination_size_chars,    const char *_Source,   size_t _Count,    _locale_t _Locale)
{
    (void)_Locale;
    return strncat_s(_Destination, _Destination_size_chars, _Source, _Count);
}
#line 2307 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\tchar.h"

extern "C++" { template <size_t _Size> inline errno_t __cdecl _strncat_s_l(    char (&_Dest)[_Size],    const char * _Source,   size_t _Count,    _locale_t _Locale) throw() { return _strncat_s_l(_Dest, _Size, _Source, _Count, _Locale); } }

__declspec(deprecated("This function or variable may be unsafe. Consider using " "_strncat_s_l" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.")) __inline char * __cdecl _strncat_l(    char *_Dst,    const char * _Source,   size_t _Count,    _locale_t _Locale)
{
    (void)_Locale;
#pragma warning( push )
#pragma warning( disable : 4996 6054 )
    return strncat(_Dst, _Source, _Count);
#pragma warning( pop )
}



 __declspec(deprecated("This function or variable may be unsafe. Consider using " "_strtok_s_l" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.")) __inline char *  _strtok_l(    char * _String,    const char * _Delimiters,    _locale_t _Locale) 
{
    (void)_Locale;
#pragma warning(push)
#pragma warning(disable:4996)
    return strtok(_String,_Delimiters);
#pragma warning(pop)
}


 __inline char *  _strtok_s_l(    char * _String,    const char * _Delimiters,        char **_Current_position,    _locale_t _Locale) 
{
    (void)_Locale;
    return strtok_s(_String, _Delimiters, _Current_position);
}
#line 2337 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\tchar.h"

__inline errno_t __cdecl _strnset_s_l(    char *_Destination,   size_t _Destination_size_chars,   int _Value,   size_t _Count,    _locale_t _Locale)
{
    (void)_Locale;
    return _strnset_s(_Destination, _Destination_size_chars, _Value, _Count);
}

extern "C++" { template <size_t _Size> inline errno_t __cdecl _strnset_s_l(    char (&_Dest)[_Size],   int _Value,   size_t _Count,    _locale_t _Locale) throw() { return _strnset_s_l(_Dest, _Size, _Value, _Count, _Locale); } }

__declspec(deprecated("This function or variable may be unsafe. Consider using " "_strnset_s_l" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.")) __inline char * __cdecl _strnset_l(    char *_Dst,   int _Value,   size_t _MaxCount,    _locale_t _Locale)
{
    (void)_Locale;
#pragma warning( push )
#pragma warning( disable : 4996 6054 )
    return _strnset(_Dst, _Value, _MaxCount);
#pragma warning( pop )
}



__inline errno_t __cdecl _strset_s_l(    char *_Destination,   size_t _Destination_size_chars,   int _Value,    _locale_t _Locale)
{
    (void)_Locale;
    return _strset_s(_Destination, _Destination_size_chars, _Value);
}

extern "C++" { template <size_t _Size> inline errno_t __cdecl _strset_s_l(    char (&_Dest)[_Size],   int _Value,    _locale_t _Locale) throw() { return _strset_s_l(_Dest, _Size, _Value, _Locale); } }

__declspec(deprecated("This function or variable may be unsafe. Consider using " "_strset_s_l" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.")) __inline char * __cdecl _strset_l(    char *_Dst,   int _Value,    _locale_t _Locale)
{
    (void)_Locale;
#pragma warning( push )
#pragma warning( disable : 4996 )
    return _strset(_Dst, _Value);
#pragma warning( pop )
}



#line 2377 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\tchar.h"


#line 2380 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\tchar.h"


#line 2383 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\tchar.h"










}   
#line 2395 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\tchar.h"

#line 2397 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\tchar.h"


#line 16 "c:\\users\\bob\\documents\\visual studio 2010\\projects\\c++\\ic\\d3d9_application_framework\\d3d9_application_framework\\frameworkbase\\source\\stdafx.h"
#line 1 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\cmath"

#pragma once


#line 1 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"

#pragma once



#line 1 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"














 








































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 7 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"

#pragma pack(push,8)









 
#line 20 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"









































#line 62 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"

#line 64 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"
#line 65 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"

		





#line 73 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"
#line 74 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"

		


		




		

 
  

 

#line 91 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"

 
  
 #line 95 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"


 
#line 99 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"

 
  
 #line 103 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"













































	
	






		


			
		#line 161 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"
	#line 162 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"

	
	




		

#line 172 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"
			
		#line 174 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"
	#line 175 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"

	
	

#line 180 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"

#line 182 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"
		
	#line 184 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"

#line 186 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"




#line 191 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"


	
		#pragma detect_mismatch("_MSC_VER", "1600")
	#line 196 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"

	
		
		     #pragma detect_mismatch("_ITERATOR_DEBUG_LEVEL", "0")
		





#line 207 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"
	#line 208 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"
#line 209 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"





#line 215 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"




#line 220 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"

#line 222 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"
#line 223 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"



#line 227 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"









#line 237 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"

#line 239 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"



 
#line 244 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"


 












#line 260 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"

 
 

 #line 265 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"

 









 









 









 
































#line 330 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"
 




#line 336 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"
 
 
#line 339 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"

 
 

 #line 344 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"











#line 356 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"

#line 1 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\use_ansi.h"













#pragma once

















#line 33 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\use_ansi.h"










#pragma comment(lib,"libcpmt")


#line 47 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\use_ansi.h"
#line 48 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\use_ansi.h"
#line 49 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\use_ansi.h"

#line 51 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\use_ansi.h"

#line 53 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\use_ansi.h"

#line 55 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\use_ansi.h"
#line 358 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"







#line 366 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"







#line 374 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"


 











 
  

#line 392 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"
   
  #line 394 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"
 #line 395 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"






 










 
  

#line 416 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"
   
  #line 418 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"
 #line 419 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"

 
  

#line 424 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"
   
  #line 426 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"
 #line 427 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"


 

   


#line 435 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"
    
   #line 437 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"

 #line 439 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"


 
  

#line 445 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"
   
  #line 447 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"
 #line 448 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"


 
  

#line 454 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"
   
  #line 456 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"
 #line 457 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"


 
  

#line 463 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"
   
  #line 465 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"
 #line 466 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"

 

#line 470 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"

 
   


     
   #line 477 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"
 #line 478 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"


    
#line 482 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"



		

 
  
  
  




  
  
  

  







   
   
   
  #line 511 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"

  
  
  
  

 












#line 531 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"

 

 
namespace std {
typedef bool _Bool;
}
 #line 539 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"

		





		






typedef __int64 _Longlong;
typedef unsigned __int64 _ULonglong;

		


 
  
 #line 562 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"






 
#line 570 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"

		
 
#line 574 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"
 
  
typedef unsigned short char16_t;
typedef unsigned int char32_t;
 #line 579 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"

 #line 581 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"

		
		






 
namespace std {
enum _Uninitialized
	{	
	_Noinit
	};

		

#pragma warning(push)
#pragma warning(disable:4412)
class  _Lockit
	{	
public:
 

  
















#line 624 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"
	__thiscall _Lockit();	
	explicit __thiscall _Lockit(int);	
	__thiscall ~_Lockit();	
  #line 628 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"

    static  void __cdecl _Lockit_ctor(int);
    static  void __cdecl _Lockit_dtor(int);

private:
    static  void __cdecl _Lockit_ctor(_Lockit *);
    static  void __cdecl _Lockit_ctor(_Lockit *, int);
    static  void __cdecl _Lockit_dtor(_Lockit *);

	 _Lockit(const _Lockit&);				
	_Lockit&  operator=(const _Lockit&);	

	int _Locktype;

  











#line 655 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"
	};

 



































































  



  


  



  


  
 #line 741 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"

class  _Mutex
	{	
public:

 
  
























#line 773 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"
    __thiscall _Mutex(_Uninitialized)
		{	
		}

    __thiscall _Mutex();
	__thiscall ~_Mutex();
	void __thiscall _Lock();
	void __thiscall _Unlock();
  #line 782 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"

private:
    static  void __cdecl _Mutex_ctor(_Mutex *);
    static  void __cdecl _Mutex_dtor(_Mutex *);
    static  void __cdecl _Mutex_Lock(_Mutex *);
    static  void __cdecl _Mutex_Unlock(_Mutex *);

	 _Mutex(const _Mutex&);				
	_Mutex&  operator=(const _Mutex&);	
	void *_Mtx;

  







#line 802 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"
	};

class  _Init_locks
	{	
public:
 
      










#line 820 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"
    __thiscall _Init_locks();
	__thiscall ~_Init_locks();
  #line 823 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"

private:
    static  void __cdecl _Init_locks_ctor(_Init_locks *);
    static  void __cdecl _Init_locks_dtor(_Init_locks *);

 







#line 837 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"
	};

#pragma warning(pop)
}
 #line 842 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"





		

 void __cdecl _Atexit(void (__cdecl *)(void));

typedef int _Mbstatet;
typedef unsigned long _Uint32t;





 

 #pragma pack(pop)

#line 863 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\yvals.h"






#line 6 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\cmath"







 #line 1 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\math.h"

















#line 1 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"














 








































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 19 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\math.h"





#pragma pack(push,8)


extern "C" {
#line 29 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\math.h"








struct _exception {
        int type;       
        char *name;     
        double arg1;    
        double arg2;    
        double retval;  
        } ;


#line 47 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\math.h"







struct _complex {
        double x,y; 
        } ;




#line 62 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\math.h"


#line 65 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\math.h"
#line 66 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\math.h"






















 extern double _HUGE;


#line 92 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\math.h"
#line 93 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\math.h"













        double  __cdecl acos(  double _X);
        double  __cdecl asin(  double _X);
        double  __cdecl atan(  double _X);
        double  __cdecl atan2(  double _Y,   double _X);

  double __cdecl _copysign (  double _Number,   double _Sign);
  double __cdecl _chgsign (  double _X);

#line 115 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\math.h"
        double  __cdecl cos(  double _X);
        double  __cdecl cosh(  double _X);
        double  __cdecl exp(  double _X);
 double  __cdecl fabs(  double _X);
        double  __cdecl fmod(  double _X,   double _Y);
        double  __cdecl log(  double _X);
        double  __cdecl log10(  double _X);
        double  __cdecl pow(  double _X,   double _Y);
        double  __cdecl sin(  double _X);
        double  __cdecl sinh(  double _X);
        double  __cdecl tan(  double _X);
        double  __cdecl tanh(  double _X);
        double  __cdecl sqrt(  double _X);






 double  __cdecl _cabs(  struct _complex _Complex_value);
 double  __cdecl ceil(  double _X);
 double  __cdecl floor(  double _X);
 double  __cdecl frexp(  double _X,   int * _Y);
 double  __cdecl _hypot(  double _X,   double _Y);
 float   __cdecl _hypotf(  float _X,   float _Y);
 double  __cdecl _j0(  double _X );
 double  __cdecl _j1(  double _X );
 double  __cdecl _jn(int _X,   double _Y);
 double  __cdecl ldexp(  double _X,   int _Y);




#line 149 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\math.h"
        int     __cdecl _matherr(   struct _exception * _Except);
#line 151 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\math.h"
#line 152 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\math.h"
 double  __cdecl modf(  double _X,   double * _Y);

 double  __cdecl _y0(  double _X);
 double  __cdecl _y1(  double _X);
 double  __cdecl _yn(  int _X,   double _Y);




static __inline double __cdecl hypot(  double _X,   double _Y)
{
    return _hypot(_X, _Y);
}

static __inline float __cdecl hypotf(  float _X,   float _Y)
{
    return _hypotf(_X, _Y);
}

#line 172 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\math.h"



 int     __cdecl _set_SSE2_enable(  int _Flag);

#line 178 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\math.h"






































#line 217 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\math.h"











































#line 261 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\math.h"



































































inline long double acosl(  long double _X)
        {return (acos((double)_X)); }
inline long double asinl(  long double _X)
        {return (asin((double)_X)); }
inline long double atanl(  long double _X)
        {return (atan((double)_X)); }
inline long double atan2l(  long double _Y,   long double _X)
        {return (atan2((double)_Y, (double)_X)); }
inline long double ceill(  long double _X)
        {return (ceil((double)_X)); }
inline long double cosl(  long double _X)
        {return (cos((double)_X)); }
inline long double coshl(  long double _X)
        {return (cosh((double)_X)); }
inline long double expl(  long double _X)
        {return (exp((double)_X)); }
inline long double fabsl(  long double _X)
        {return (fabs((double)_X)); }
inline long double floorl(  long double _X)
        {return (floor((double)_X)); }
inline long double fmodl(  long double _X,   long double _Y)
        {return (fmod((double)_X, (double)_Y)); }
inline long double frexpl(  long double _X,   int *_Y)
        {return (frexp((double)_X, _Y)); }
inline long double ldexpl(  long double _X,   int _Y)
        {return (ldexp((double)_X, _Y)); }
inline long double logl(  long double _X)
        {return (log((double)_X)); }
inline long double log10l(  long double _X)
        {return (log10((double)_X)); }
inline long double modfl(  long double _X,   long double *_Y)
        {double _Di, _Df = modf((double)_X, &_Di);
        *_Y = (long double)_Di;
        return (_Df); }
inline long double powl(  long double _X,   long double _Y)
        {return (pow((double)_X, (double)_Y)); }
inline long double sinl(  long double _X)
        {return (sin((double)_X)); }
inline long double sinhl(  long double _X)
        {return (sinh((double)_X)); }
inline long double sqrtl(  long double _X)
        {return (sqrt((double)_X)); }

inline long double tanl(  long double _X)
        {return (tan((double)_X)); }


#line 376 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\math.h"

inline long double tanhl(  long double _X)
        {return (tanh((double)_X)); }

inline long double _chgsignl(  long double _Number)
{
    return _chgsign(static_cast<double>(_Number)); 
}

inline long double _copysignl(  long double _Number,   long double _Sign)
{
    return _copysign(static_cast<double>(_Number), static_cast<double>(_Sign)); 
}

inline float frexpf(  float _X,   int *_Y)
        {return ((float)frexp((double)_X, _Y)); }


inline float fabsf(  float _X)
        {return ((float)fabs((double)_X)); }
inline float ldexpf(  float _X,   int _Y)
        {return ((float)ldexp((double)_X, _Y)); }

inline float acosf(  float _X)
        {return ((float)acos((double)_X)); }
inline float asinf(  float _X)
        {return ((float)asin((double)_X)); }
inline float atanf(  float _X)
        {return ((float)atan((double)_X)); }
inline float atan2f(  float _Y,   float _X)
        {return ((float)atan2((double)_Y, (double)_X)); }
inline float ceilf(  float _X)
        {return ((float)ceil((double)_X)); }
inline float cosf(  float _X)
        {return ((float)cos((double)_X)); }
inline float coshf(  float _X)
        {return ((float)cosh((double)_X)); }
inline float expf(  float _X)
        {return ((float)exp((double)_X)); }
inline float floorf(  float _X)
        {return ((float)floor((double)_X)); }
inline float fmodf(  float _X,   float _Y)
        {return ((float)fmod((double)_X, (double)_Y)); }
inline float logf(  float _X)
        {return ((float)log((double)_X)); }
inline float log10f(  float _X)
        {return ((float)log10((double)_X)); }
inline float modff(  float _X,   float *_Y)
        { double _Di, _Df = modf((double)_X, &_Di);
        *_Y = (float)_Di;
        return ((float)_Df); }
inline float powf(  float _X,   float _Y)
        {return ((float)pow((double)_X, (double)_Y)); }
inline float sinf(  float _X)
        {return ((float)sin((double)_X)); }
inline float sinhf(  float _X)
        {return ((float)sinh((double)_X)); }
inline float sqrtf(  float _X)
        {return ((float)sqrt((double)_X)); }
inline float tanf(  float _X)
        {return ((float)tan((double)_X)); }
inline float tanhf(  float _X)
        {return ((float)tanh((double)_X)); }
#line 440 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\math.h"
#line 441 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\math.h"
#line 442 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\math.h"
#line 443 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\math.h"

















 extern double HUGE;


#line 464 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\math.h"

__declspec(deprecated("The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: " "_cabs" ". See online help for details."))  double  __cdecl cabs(  struct _complex _X);
__declspec(deprecated("The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: " "_j0" ". See online help for details."))  double  __cdecl j0(  double _X);
__declspec(deprecated("The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: " "_j1" ". See online help for details."))  double  __cdecl j1(  double _X);
__declspec(deprecated("The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: " "_jn" ". See online help for details."))  double  __cdecl jn(  int _X,   double _Y);
__declspec(deprecated("The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: " "_y0" ". See online help for details."))  double  __cdecl y0(  double _X);
__declspec(deprecated("The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: " "_y1" ". See online help for details."))  double  __cdecl y1(  double _X);
__declspec(deprecated("The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: " "_yn" ". See online help for details."))  double  __cdecl yn(  int _X,   double _Y);

#line 474 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\math.h"

#line 476 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\math.h"


}

extern "C++" {

template<class _Ty> inline
        _Ty _Pow_int(_Ty _X, int _Y)
        {unsigned int _N;
        if (_Y >= 0)
                _N = (unsigned int)_Y;
        else
                _N = (unsigned int)(-_Y);
        for (_Ty _Z = _Ty(1); ; _X *= _X)
                {if ((_N & 1) != 0)
                        _Z *= _X;
                if ((_N >>= 1) == 0)
                        return (_Y < 0 ? _Ty(1) / _Z : _Z); }}

inline double __cdecl abs(  double _X)
        {return (fabs(_X)); }
inline double __cdecl pow(  double _X,   int _Y)
        {return (_Pow_int(_X, _Y)); }
inline float __cdecl abs(  float _X)
        {return (fabsf(_X)); }
inline float __cdecl acos(  float _X)
        {return (acosf(_X)); }
inline float __cdecl asin(  float _X)
        {return (asinf(_X)); }
inline float __cdecl atan(  float _X)
        {return (atanf(_X)); }
inline float __cdecl atan2(  float _Y,   float _X)
        {return (atan2f(_Y, _X)); }
inline float __cdecl ceil(  float _X)
        {return (ceilf(_X)); }
inline float __cdecl cos(  float _X)
        {return (cosf(_X)); }
inline float __cdecl cosh(  float _X)
        {return (coshf(_X)); }
inline float __cdecl exp(  float _X)
        {return (expf(_X)); }
inline float __cdecl fabs(  float _X)
        {return (fabsf(_X)); }
inline float __cdecl floor(  float _X)
        {return (floorf(_X)); }
inline float __cdecl fmod(  float _X,   float _Y)
        {return (fmodf(_X, _Y)); }
inline float __cdecl frexp(  float _X,   int * _Y)
        {return (frexpf(_X, _Y)); }
inline float __cdecl ldexp(  float _X,   int _Y)
        {return (ldexpf(_X, _Y)); }
inline float __cdecl log(  float _X)
        {return (logf(_X)); }
inline float __cdecl log10(  float _X)
        {return (log10f(_X)); }
inline float __cdecl modf(  float _X,   float * _Y)
        {return (modff(_X, _Y)); }
inline float __cdecl pow(  float _X,   float _Y)
        {return (powf(_X, _Y)); }
inline float __cdecl pow(  float _X,   int _Y)
        {return (_Pow_int(_X, _Y)); }
inline float __cdecl sin(  float _X)
        {return (sinf(_X)); }
inline float __cdecl sinh(  float _X)
        {return (sinhf(_X)); }
inline float __cdecl sqrt(  float _X)
        {return (sqrtf(_X)); }
inline float __cdecl tan(  float _X)
        {return (tanf(_X)); }
inline float __cdecl tanh(  float _X)
        {return (tanhf(_X)); }
inline long double __cdecl abs(  long double _X)
        {return (fabsl(_X)); }
inline long double __cdecl acos(  long double _X)
        {return (acosl(_X)); }
inline long double __cdecl asin(  long double _X)
        {return (asinl(_X)); }
inline long double __cdecl atan(  long double _X)
        {return (atanl(_X)); }
inline long double __cdecl atan2(  long double _Y,   long double _X)
        {return (atan2l(_Y, _X)); }
inline long double __cdecl ceil(  long double _X)
        {return (ceill(_X)); }
inline long double __cdecl cos(  long double _X)
        {return (cosl(_X)); }
inline long double __cdecl cosh(  long double _X)
        {return (coshl(_X)); }
inline long double __cdecl exp(  long double _X)
        {return (expl(_X)); }
inline long double __cdecl fabs(  long double _X)
        {return (fabsl(_X)); }
inline long double __cdecl floor(  long double _X)
        {return (floorl(_X)); }
inline long double __cdecl fmod(  long double _X,   long double _Y)
        {return (fmodl(_X, _Y)); }
inline long double __cdecl frexp(  long double _X,   int * _Y)
        {return (frexpl(_X, _Y)); }
inline long double __cdecl ldexp(  long double _X,   int _Y)
        {return (ldexpl(_X, _Y)); }
inline long double __cdecl log(  long double _X)
        {return (logl(_X)); }
inline long double __cdecl log10(  long double _X)
        {return (log10l(_X)); }
inline long double __cdecl modf(  long double _X,   long double * _Y)
        {return (modfl(_X, _Y)); }
inline long double __cdecl pow(  long double _X,   long double _Y)
        {return (powl(_X, _Y)); }
inline long double __cdecl pow(  long double _X,   int _Y)
        {return (_Pow_int(_X, _Y)); }
inline long double __cdecl sin(  long double _X)
        {return (sinl(_X)); }
inline long double __cdecl sinh(  long double _X)
        {return (sinhl(_X)); }
inline long double __cdecl sqrt(  long double _X)
        {return (sqrtl(_X)); }
inline long double __cdecl tan(  long double _X)
        {return (tanl(_X)); }
inline long double __cdecl tanh(  long double _X)
        {return (tanhl(_X)); }

}
#line 598 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\math.h"

#pragma pack(pop)

#line 602 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\math.h"







































#line 642 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\math.h"

#line 14 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\cmath"
#line 15 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\cmath"

 

namespace std {
using :: acosf; using :: asinf;
using :: atanf; using :: atan2f; using :: ceilf;
using :: cosf; using :: coshf; using :: expf;
using :: fabsf; using :: floorf; using :: fmodf;
using :: frexpf; using :: ldexpf; using :: logf;
using :: log10f; using :: modff; using :: powf;
using :: sinf; using :: sinhf; using :: sqrtf;
using :: tanf; using :: tanhf;

using :: acosl; using :: asinl;
using :: atanl; using :: atan2l; using :: ceill;
using :: cosl; using :: coshl; using :: expl;
using :: fabsl; using :: floorl; using :: fmodl;
using :: frexpl; using :: ldexpl; using :: logl;
using :: log10l; using :: modfl; using :: powl;
using :: sinl; using :: sinhl; using :: sqrtl;
using :: tanl; using :: tanhl;

using :: abs;

using :: acos; using :: asin;
using :: atan; using :: atan2; using :: ceil;
using :: cos; using :: cosh; using :: exp;
using :: fabs; using :: floor; using :: fmod;
using :: frexp; using :: ldexp; using :: log;
using :: log10; using :: modf; using :: pow;
using :: sin; using :: sinh; using :: sqrt;
using :: tan; using :: tanh;
}
 #line 49 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\cmath"

#line 51 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\cmath"





#line 17 "c:\\users\\bob\\documents\\visual studio 2010\\projects\\c++\\ic\\d3d9_application_framework\\d3d9_application_framework\\frameworkbase\\source\\stdafx.h"


#pragma comment(lib, "d3d9.lib")
#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"














#line 16 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"


















#line 35 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"





#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"












#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpc.h"





















#line 23 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpc.h"





#pragma once
#line 30 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpc.h"


extern "C" {
#line 34 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpc.h"














#line 49 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpc.h"





#line 55 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpc.h"

#line 57 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpc.h"

#line 59 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpc.h"



#line 63 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpc.h"





#line 69 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpc.h"

typedef void * I_RPC_HANDLE;



typedef long RPC_STATUS;



#line 79 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpc.h"











#line 91 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpc.h"










#line 102 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpc.h"





#line 108 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpc.h"





#line 114 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpc.h"


































#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"


















#pragma once
#line 21 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"


extern "C" {
#line 25 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"



























typedef  unsigned char  * RPC_CSTR;




#line 58 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"
typedef  unsigned short  * RPC_WSTR;
typedef  const unsigned short * RPC_CWSTR;
#line 61 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"

typedef I_RPC_HANDLE RPC_BINDING_HANDLE;
typedef RPC_BINDING_HANDLE handle_t;








typedef GUID UUID;


#line 76 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"
#line 77 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"

typedef struct _RPC_BINDING_VECTOR
{
    unsigned long Count;
    RPC_BINDING_HANDLE BindingH[1];
} RPC_BINDING_VECTOR;


#line 86 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"

typedef struct _UUID_VECTOR
{
  unsigned long Count;
  UUID *Uuid[1];
} UUID_VECTOR;


#line 95 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"

typedef void  * RPC_IF_HANDLE;



typedef struct _RPC_IF_ID
{
    UUID Uuid;
    unsigned short VersMajor;
    unsigned short VersMinor;
} RPC_IF_ID;
#line 107 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"














































#line 154 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"








#line 163 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"




#line 168 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"








#line 177 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"








typedef struct _RPC_PROTSEQ_VECTORA
{
    unsigned int Count;
    unsigned char  * Protseq[1];
} RPC_PROTSEQ_VECTORA;

typedef struct _RPC_PROTSEQ_VECTORW
{
    unsigned int Count;
    unsigned short  * Protseq[1];
} RPC_PROTSEQ_VECTORW;





#line 202 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"









#line 212 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"
typedef struct _RPC_POLICY {
    unsigned int Length ;
    unsigned long EndpointFlags ;
    unsigned long NICFlags ;
    } RPC_POLICY,   *PRPC_POLICY ;

typedef void __stdcall
RPC_OBJECT_INQ_FN (
     UUID  * ObjectUuid,
     UUID  * TypeUuid,
     RPC_STATUS  * Status
    );

 
typedef RPC_STATUS __stdcall
RPC_IF_CALLBACK_FN (
     RPC_IF_HANDLE  InterfaceUuid,
     void *Context
    ) ;

typedef void __stdcall
RPC_SECURITY_CALLBACK_FN (
     void *Context
    ) ;



typedef struct
{
    unsigned int Count;
    unsigned long Stats[1];
} RPC_STATS_VECTOR;






typedef struct
{
  unsigned long Count;
  RPC_IF_ID  * IfId[1];
} RPC_IF_ID_VECTOR;


__declspec(dllimport)
RPC_STATUS
__stdcall
RpcBindingCopy (
     RPC_BINDING_HANDLE SourceBinding,
     RPC_BINDING_HANDLE  * DestinationBinding
    );


__declspec(dllimport)
RPC_STATUS
__stdcall
RpcBindingFree (
     RPC_BINDING_HANDLE  * Binding
    );


__declspec(dllimport)
RPC_STATUS
__stdcall
RpcBindingSetOption ( 
     RPC_BINDING_HANDLE hBinding,
     unsigned long      option,
     ULONG_PTR          optionValue 
    );


__declspec(dllimport)
RPC_STATUS
__stdcall
RpcBindingInqOption (
      RPC_BINDING_HANDLE hBinding,
      unsigned long      option,
     ULONG_PTR         *pOptionValue 
    );







__declspec(dllimport)
RPC_STATUS
__stdcall
RpcBindingFromStringBindingA (    
     RPC_CSTR StringBinding,
     RPC_BINDING_HANDLE  * Binding
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcBindingFromStringBindingW (
     RPC_WSTR StringBinding,        
     RPC_BINDING_HANDLE  * Binding
    );





#line 320 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"











#line 332 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"

#line 334 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"


__declspec(dllimport)
RPC_STATUS
__stdcall
RpcSsGetContextBinding (
     void *ContextHandle,
     RPC_BINDING_HANDLE  * Binding
    );


__declspec(dllimport)
RPC_STATUS
__stdcall
RpcBindingInqObject (
     RPC_BINDING_HANDLE Binding,
     UUID  * ObjectUuid
    );


__declspec(dllimport)
RPC_STATUS
__stdcall
RpcBindingReset (
     RPC_BINDING_HANDLE Binding
    );





__declspec(dllimport)
RPC_STATUS
__stdcall
RpcBindingSetObject (
     RPC_BINDING_HANDLE Binding,
     UUID  * ObjectUuid
    );


__declspec(dllimport)
RPC_STATUS
__stdcall
RpcMgmtInqDefaultProtectLevel (
      unsigned long AuthnSvc,
     unsigned long  *AuthnLevel
    );





__declspec(dllimport)
RPC_STATUS
__stdcall
RpcBindingToStringBindingA (
     RPC_BINDING_HANDLE Binding,
     RPC_CSTR  * StringBinding
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcBindingToStringBindingW (
     RPC_BINDING_HANDLE Binding,
     RPC_WSTR  * StringBinding
    );





#line 407 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"











#line 419 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"


__declspec(dllimport)
RPC_STATUS
__stdcall
RpcBindingVectorFree (
     RPC_BINDING_VECTOR  *  * BindingVector
    );







__declspec(dllimport)
RPC_STATUS
__stdcall
RpcStringBindingComposeA (
     RPC_CSTR ObjUuid,
     RPC_CSTR ProtSeq,    
     RPC_CSTR NetworkAddr,
     RPC_CSTR Endpoint,
     RPC_CSTR Options,
     RPC_CSTR  * StringBinding
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcStringBindingComposeW (
     RPC_WSTR ObjUuid,
     RPC_WSTR ProtSeq,    
     RPC_WSTR NetworkAddr,
     RPC_WSTR Endpoint,
     RPC_WSTR Options,
     RPC_WSTR  * StringBinding
    );





#line 463 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"















#line 479 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"





__declspec(dllimport)
RPC_STATUS
__stdcall
RpcStringBindingParseA (
     RPC_CSTR StringBinding,    
     RPC_CSTR  * ObjUuid,
     RPC_CSTR  * Protseq,
     RPC_CSTR  * NetworkAddr,
     RPC_CSTR  * Endpoint,
     RPC_CSTR  * NetworkOptions
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcStringBindingParseW (
     RPC_WSTR StringBinding,    
     RPC_WSTR  * ObjUuid,
     RPC_WSTR  * Protseq,
     RPC_WSTR  * NetworkAddr,
     RPC_WSTR  * Endpoint,
     RPC_WSTR  * NetworkOptions
    );





#line 513 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"















#line 529 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"

#line 531 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"





__declspec(dllimport)
RPC_STATUS
__stdcall
RpcStringFreeA (
     RPC_CSTR  * String    
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcStringFreeW (
     RPC_WSTR  * String
    );





#line 555 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"










#line 566 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"


__declspec(dllimport)
RPC_STATUS
__stdcall
RpcIfInqId (
     RPC_IF_HANDLE RpcIfHandle,
     RPC_IF_ID  * RpcIfId
    );





__declspec(dllimport)
RPC_STATUS
__stdcall
RpcNetworkIsProtseqValidA (
     RPC_CSTR Protseq     
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcNetworkIsProtseqValidW (
     RPC_WSTR Protseq
    );





#line 599 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"










#line 610 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"


__declspec(dllimport)
RPC_STATUS
__stdcall
RpcMgmtInqComTimeout (
     RPC_BINDING_HANDLE Binding,
     unsigned int  * Timeout
    );


__declspec(dllimport)
RPC_STATUS
__stdcall
RpcMgmtSetComTimeout (
     RPC_BINDING_HANDLE Binding,
     unsigned int Timeout
    );


__declspec(dllimport)
RPC_STATUS
__stdcall
RpcMgmtSetCancelTimeout(
     long Timeout
    );






__declspec(dllimport)
RPC_STATUS
__stdcall
RpcNetworkInqProtseqsA (
     RPC_PROTSEQ_VECTORA  *  * ProtseqVector    
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcNetworkInqProtseqsW (
     RPC_PROTSEQ_VECTORW  *  * ProtseqVector    
    );





#line 661 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"










#line 672 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"


__declspec(dllimport)
RPC_STATUS
__stdcall
RpcObjectInqType (
     UUID  * ObjUuid,
      UUID  * TypeUuid
    );


__declspec(dllimport)
RPC_STATUS
__stdcall
RpcObjectSetInqFn (
     RPC_OBJECT_INQ_FN  * InquiryFn
    );


__declspec(dllimport)
RPC_STATUS
__stdcall
RpcObjectSetType (
     UUID  * ObjUuid,
      UUID  * TypeUuid
    );





__declspec(dllimport)
RPC_STATUS
__stdcall
RpcProtseqVectorFreeA (
     RPC_PROTSEQ_VECTORA  *  * ProtseqVector
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcProtseqVectorFreeW (
     RPC_PROTSEQ_VECTORW  *  * ProtseqVector
    );





#line 722 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"










#line 733 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"


__declspec(dllimport)
RPC_STATUS
__stdcall
RpcServerInqBindings (
     RPC_BINDING_VECTOR  *  * BindingVector
    );


__declspec(dllimport)
RPC_STATUS
__stdcall
RpcServerInqIf (
     RPC_IF_HANDLE IfSpec,
     UUID  * MgrTypeUuid,
     void  *  * MgrEpv
    );


__declspec(dllimport)
RPC_STATUS
__stdcall
RpcServerListen (
     unsigned int MinimumCallThreads,
     unsigned int MaxCalls,
     unsigned int DontWait
    );


__declspec(dllimport)
RPC_STATUS
__stdcall
RpcServerRegisterIf (
     RPC_IF_HANDLE IfSpec,
     UUID  * MgrTypeUuid,
     void  * MgrEpv
    );


__declspec(dllimport)
RPC_STATUS
__stdcall
RpcServerRegisterIfEx (
     RPC_IF_HANDLE IfSpec,
     UUID  * MgrTypeUuid,
     void  * MgrEpv,
     unsigned int Flags,
     unsigned int MaxCalls,
     RPC_IF_CALLBACK_FN  *IfCallback
    );


__declspec(dllimport)
RPC_STATUS
__stdcall
RpcServerRegisterIf2 (
     RPC_IF_HANDLE IfSpec,
     UUID * MgrTypeUuid,
     void * MgrEpv,
     unsigned int Flags,
     unsigned int MaxCalls,
     unsigned int MaxRpcSize,
     RPC_IF_CALLBACK_FN *IfCallbackFn
    );



__declspec(dllimport)
RPC_STATUS
__stdcall
RpcServerUnregisterIf (
     RPC_IF_HANDLE IfSpec,
     UUID  * MgrTypeUuid,
     unsigned int WaitForCallsToComplete
    );



__declspec(dllimport)
RPC_STATUS
__stdcall
RpcServerUnregisterIfEx (
     RPC_IF_HANDLE IfSpec,
     UUID  * MgrTypeUuid,
     int RundownContextHandles
    );
#line 821 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"


__declspec(dllimport)
RPC_STATUS
__stdcall
RpcServerUseAllProtseqs (
     unsigned int MaxCalls,
     void  * SecurityDescriptor
    );


__declspec(dllimport)
RPC_STATUS
__stdcall
RpcServerUseAllProtseqsEx (
     unsigned int MaxCalls,
     void  * SecurityDescriptor,
     PRPC_POLICY Policy
    );


__declspec(dllimport)
RPC_STATUS
__stdcall
RpcServerUseAllProtseqsIf (
     unsigned int MaxCalls,
     RPC_IF_HANDLE IfSpec,
     void  * SecurityDescriptor
    );


__declspec(dllimport)
RPC_STATUS
__stdcall
RpcServerUseAllProtseqsIfEx (
     unsigned int MaxCalls,
     RPC_IF_HANDLE IfSpec,
     void  * SecurityDescriptor,
     PRPC_POLICY Policy
    );






__declspec(dllimport)
RPC_STATUS
__stdcall
RpcServerUseProtseqA (
     RPC_CSTR Protseq,
     unsigned int MaxCalls,
     void  * SecurityDescriptor
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcServerUseProtseqExA (
     RPC_CSTR Protseq,
     unsigned int MaxCalls,
     void  * SecurityDescriptor,
     PRPC_POLICY Policy
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcServerUseProtseqW (
     RPC_WSTR Protseq,
     unsigned int MaxCalls,
     void  * SecurityDescriptor
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcServerUseProtseqExW (
     RPC_WSTR Protseq,
     unsigned int MaxCalls,
     void  * SecurityDescriptor,
     PRPC_POLICY Policy
    );







#line 912 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"






















#line 935 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"





__declspec(dllimport)
RPC_STATUS
__stdcall
RpcServerUseProtseqEpA (
     RPC_CSTR Protseq,
     unsigned int MaxCalls,
     RPC_CSTR Endpoint,
     void  * SecurityDescriptor
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcServerUseProtseqEpExA (
     RPC_CSTR Protseq,
     unsigned int MaxCalls,
     RPC_CSTR Endpoint,
     void  * SecurityDescriptor,
     PRPC_POLICY Policy
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcServerUseProtseqEpW (
     RPC_WSTR Protseq,
     unsigned int MaxCalls,
     RPC_WSTR Endpoint,
     void  * SecurityDescriptor
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcServerUseProtseqEpExW (
     RPC_WSTR Protseq,
     unsigned int MaxCalls,
     RPC_WSTR Endpoint,
     void  * SecurityDescriptor,
     PRPC_POLICY Policy
    );







#line 989 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"
























#line 1014 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"





__declspec(dllimport)
RPC_STATUS
__stdcall
RpcServerUseProtseqIfA (
     RPC_CSTR Protseq,
     unsigned int MaxCalls,
     RPC_IF_HANDLE IfSpec,
     void  * SecurityDescriptor
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcServerUseProtseqIfExA (
     RPC_CSTR Protseq,
     unsigned int MaxCalls,
     RPC_IF_HANDLE IfSpec,
     void  * SecurityDescriptor,
     PRPC_POLICY Policy
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcServerUseProtseqIfW (
     RPC_WSTR Protseq,
     unsigned int MaxCalls,
     RPC_IF_HANDLE IfSpec,
     void  * SecurityDescriptor
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcServerUseProtseqIfExW (
     RPC_WSTR Protseq,
     unsigned int MaxCalls,
     RPC_IF_HANDLE IfSpec,
     void  * SecurityDescriptor,
     PRPC_POLICY Policy
    );







#line 1068 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"
























#line 1093 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"

__declspec(dllimport)
void
__stdcall
RpcServerYield (
    void
    );


__declspec(dllimport)
RPC_STATUS
__stdcall
RpcMgmtStatsVectorFree (
     RPC_STATS_VECTOR ** StatsVector
    );


__declspec(dllimport)
RPC_STATUS
__stdcall
RpcMgmtInqStats (
     RPC_BINDING_HANDLE Binding,
     RPC_STATS_VECTOR ** Statistics
    );


__declspec(dllimport)
RPC_STATUS
__stdcall
RpcMgmtIsServerListening (
     RPC_BINDING_HANDLE Binding
    );


__declspec(dllimport)
RPC_STATUS
__stdcall
RpcMgmtStopServerListening (
     RPC_BINDING_HANDLE Binding
    );


__declspec(dllimport)
RPC_STATUS
__stdcall
RpcMgmtWaitServerListen (
    void
    );


__declspec(dllimport)
RPC_STATUS
__stdcall
RpcMgmtSetServerStackSize (
     unsigned long ThreadStackSize
    );


__declspec(dllimport)
void
__stdcall
RpcSsDontSerializeContext (
    void
    );


__declspec(dllimport)
RPC_STATUS
__stdcall
RpcMgmtEnableIdleCleanup (
    void
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcMgmtInqIfIds (
     RPC_BINDING_HANDLE Binding,
     RPC_IF_ID_VECTOR  *  * IfIdVector
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcIfIdVectorFree (
     RPC_IF_ID_VECTOR  *  * IfIdVector
    );



__declspec(dllimport)
RPC_STATUS
__stdcall
RpcMgmtInqServerPrincNameA (
     RPC_BINDING_HANDLE Binding,
     unsigned long AuthnSvc,
     RPC_CSTR  * ServerPrincName
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcMgmtInqServerPrincNameW (
     RPC_BINDING_HANDLE Binding,
     unsigned long AuthnSvc,
     RPC_WSTR  * ServerPrincName
    );





#line 1206 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"












#line 1219 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"



__declspec(dllimport)
RPC_STATUS
__stdcall
RpcServerInqDefaultPrincNameA (
     unsigned long AuthnSvc,
     RPC_CSTR  * PrincName
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcServerInqDefaultPrincNameW (
     unsigned long AuthnSvc,
     RPC_WSTR  * PrincName
    );





#line 1243 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"











#line 1255 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"


__declspec(dllimport)
RPC_STATUS
__stdcall
RpcEpResolveBinding (
     RPC_BINDING_HANDLE Binding,
     RPC_IF_HANDLE IfSpec
    );





__declspec(dllimport)
RPC_STATUS
__stdcall
RpcNsBindingInqEntryNameA (
     RPC_BINDING_HANDLE Binding,
     unsigned long EntryNameSyntax,
     RPC_CSTR  * EntryName
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcNsBindingInqEntryNameW (
     RPC_BINDING_HANDLE Binding,
     unsigned long EntryNameSyntax,
     RPC_WSTR  * EntryName
    );





#line 1292 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"












#line 1305 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"

typedef void  * RPC_AUTH_IDENTITY_HANDLE;
typedef void  * RPC_AUTHZ_HANDLE;


























#line 1335 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"



#line 1339 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"





















#line 1361 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"


#line 1364 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"












typedef struct _RPC_SECURITY_QOS {
  unsigned long Version;
  unsigned long Capabilities;
  unsigned long IdentityTracking;
  unsigned long ImpersonationType;
} RPC_SECURITY_QOS, *PRPC_SECURITY_QOS;







typedef struct _SEC_WINNT_AUTH_IDENTITY_W {
   unsigned short  *User;
  unsigned long UserLength;
   unsigned short  *Domain;
  unsigned long DomainLength;
   unsigned short  *Password;
  unsigned long PasswordLength;
  unsigned long Flags;
} SEC_WINNT_AUTH_IDENTITY_W, *PSEC_WINNT_AUTH_IDENTITY_W;



#line 1402 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"

typedef struct _SEC_WINNT_AUTH_IDENTITY_A {
   unsigned char  *User;
  unsigned long UserLength;
   unsigned char  *Domain;
  unsigned long DomainLength;
   unsigned char  *Password;
  unsigned long PasswordLength;
  unsigned long Flags;
} SEC_WINNT_AUTH_IDENTITY_A, *PSEC_WINNT_AUTH_IDENTITY_A;









#line 1422 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"










#line 1433 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"









#line 1443 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"





#line 1449 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"


#line 1452 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"


typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_W
{
    SEC_WINNT_AUTH_IDENTITY_W *TransportCredentials;
    unsigned long Flags;
    unsigned long AuthenticationTarget;
    unsigned long NumberOfAuthnSchemes;
    unsigned long *AuthnSchemes;
    unsigned short  *ServerCertificateSubject;
} RPC_HTTP_TRANSPORT_CREDENTIALS_W, *PRPC_HTTP_TRANSPORT_CREDENTIALS_W;

typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_A
{
    SEC_WINNT_AUTH_IDENTITY_A *TransportCredentials;
    unsigned long Flags;
    unsigned long AuthenticationTarget;
    unsigned long NumberOfAuthnSchemes;
    unsigned long *AuthnSchemes;
    unsigned char  *ServerCertificateSubject;
} RPC_HTTP_TRANSPORT_CREDENTIALS_A, *PRPC_HTTP_TRANSPORT_CREDENTIALS_A;



typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W
{
    SEC_WINNT_AUTH_IDENTITY_W *TransportCredentials;
    unsigned long Flags;
    unsigned long AuthenticationTarget;
    unsigned long NumberOfAuthnSchemes;
     unsigned long *AuthnSchemes;
    unsigned short  *ServerCertificateSubject;
    SEC_WINNT_AUTH_IDENTITY_W *ProxyCredentials;
    unsigned long NumberOfProxyAuthnSchemes;
     unsigned long *ProxyAuthnSchemes;
} RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W, *PRPC_HTTP_TRANSPORT_CREDENTIALS_V2_W;

typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A
{
    SEC_WINNT_AUTH_IDENTITY_A *TransportCredentials;
    unsigned long Flags;
    unsigned long AuthenticationTarget;
    unsigned long NumberOfAuthnSchemes;
    unsigned long *AuthnSchemes;
    unsigned char  *ServerCertificateSubject;
    SEC_WINNT_AUTH_IDENTITY_A *ProxyCredentials;
    unsigned long NumberOfProxyAuthnSchemes;
    unsigned long *ProxyAuthnSchemes;
} RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A, *PRPC_HTTP_TRANSPORT_CREDENTIALS_V2_A;

#line 1503 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"



typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W
{
    RPC_AUTH_IDENTITY_HANDLE TransportCredentials;
    unsigned long Flags;
    unsigned long AuthenticationTarget;
    unsigned long NumberOfAuthnSchemes;
     unsigned long *AuthnSchemes;
    unsigned short  *ServerCertificateSubject;
    RPC_AUTH_IDENTITY_HANDLE ProxyCredentials;
    unsigned long NumberOfProxyAuthnSchemes;
     unsigned long *ProxyAuthnSchemes;
} RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W, *PRPC_HTTP_TRANSPORT_CREDENTIALS_V3_W;

typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A
{
    RPC_AUTH_IDENTITY_HANDLE TransportCredentials;
    unsigned long Flags;
    unsigned long AuthenticationTarget;
    unsigned long NumberOfAuthnSchemes;
     unsigned long *AuthnSchemes;
    unsigned char  *ServerCertificateSubject;
    RPC_AUTH_IDENTITY_HANDLE ProxyCredentials;
    unsigned long NumberOfProxyAuthnSchemes;
     unsigned long *ProxyAuthnSchemes;
} RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A, *PRPC_HTTP_TRANSPORT_CREDENTIALS_V3_A;

#line 1533 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"

typedef struct _RPC_SECURITY_QOS_V2_W {
  unsigned long Version;
  unsigned long Capabilities;
  unsigned long IdentityTracking;
  unsigned long ImpersonationType;
  unsigned long AdditionalSecurityInfoType;
  union 
      {
      RPC_HTTP_TRANSPORT_CREDENTIALS_W *HttpCredentials;
      } u;
} RPC_SECURITY_QOS_V2_W, *PRPC_SECURITY_QOS_V2_W;

typedef struct _RPC_SECURITY_QOS_V2_A {
  unsigned long Version;
  unsigned long Capabilities;
  unsigned long IdentityTracking;
  unsigned long ImpersonationType;
  unsigned long AdditionalSecurityInfoType;
  union 
      {
      RPC_HTTP_TRANSPORT_CREDENTIALS_A *HttpCredentials;
      } u;
} RPC_SECURITY_QOS_V2_A, *PRPC_SECURITY_QOS_V2_A;




typedef struct _RPC_SECURITY_QOS_V3_W {
  unsigned long Version;
  unsigned long Capabilities;
  unsigned long IdentityTracking;
  unsigned long ImpersonationType;
  unsigned long AdditionalSecurityInfoType;
  union 
      {
      RPC_HTTP_TRANSPORT_CREDENTIALS_W *HttpCredentials;
      } u;
  void *Sid;
} RPC_SECURITY_QOS_V3_W, *PRPC_SECURITY_QOS_V3_W;

typedef struct _RPC_SECURITY_QOS_V3_A {
  unsigned long Version;
  unsigned long Capabilities;
  unsigned long IdentityTracking;
  unsigned long ImpersonationType;
  unsigned long AdditionalSecurityInfoType;
  union 
      {
      RPC_HTTP_TRANSPORT_CREDENTIALS_A *HttpCredentials;
      } u;
  void *Sid;
} RPC_SECURITY_QOS_V3_A, *PRPC_SECURITY_QOS_V3_A;
#line 1587 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"





typedef struct _RPC_SECURITY_QOS_V4_W {
  unsigned long Version;
  unsigned long Capabilities;
  unsigned long IdentityTracking;
  unsigned long ImpersonationType;
  unsigned long AdditionalSecurityInfoType;
  union 
      {
      RPC_HTTP_TRANSPORT_CREDENTIALS_W *HttpCredentials;
      } u;
  void *Sid;
  unsigned int EffectiveOnly;
} RPC_SECURITY_QOS_V4_W, *PRPC_SECURITY_QOS_V4_W;

typedef struct _RPC_SECURITY_QOS_V4_A {
  unsigned long Version;
  unsigned long Capabilities;
  unsigned long IdentityTracking;
  unsigned long ImpersonationType;
  unsigned long AdditionalSecurityInfoType;
  union 
      {
      RPC_HTTP_TRANSPORT_CREDENTIALS_A *HttpCredentials;
      } u;
  void *Sid;
  unsigned int EffectiveOnly;
} RPC_SECURITY_QOS_V4_A, *PRPC_SECURITY_QOS_V4_A;

#line 1621 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"
#line 1622 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"
#line 1623 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"



















































#line 1675 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"





#line 1681 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"





#line 1687 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"





#line 1693 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"

#line 1695 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"














typedef struct _RPC_BINDING_HANDLE_TEMPLATE_V1_W {
    unsigned long Version;
    unsigned long Flags;
    unsigned long ProtocolSequence;
    unsigned short *NetworkAddress;
    unsigned short *StringEndpoint;
    union
    {
        unsigned short *Reserved;
    } u1;
    UUID ObjectUuid;
} RPC_BINDING_HANDLE_TEMPLATE_V1_W, *PRPC_BINDING_HANDLE_TEMPLATE_V1_W;

typedef struct _RPC_BINDING_HANDLE_TEMPLATE_V1_A {
    unsigned long Version;
    unsigned long Flags;
    unsigned long ProtocolSequence;
    unsigned char *NetworkAddress;
    unsigned char *StringEndpoint;
    union
    {
        unsigned char *Reserved;
    } u1;
    UUID ObjectUuid;
} RPC_BINDING_HANDLE_TEMPLATE_V1_A, *PRPC_BINDING_HANDLE_TEMPLATE_V1_A;

typedef struct _RPC_BINDING_HANDLE_SECURITY_V1_W {
    unsigned long Version;
    unsigned short *ServerPrincName;
    unsigned long AuthnLevel;
    unsigned long AuthnSvc;
    SEC_WINNT_AUTH_IDENTITY_W *AuthIdentity;
    RPC_SECURITY_QOS *SecurityQos;
} RPC_BINDING_HANDLE_SECURITY_V1_W, *PRPC_BINDING_HANDLE_SECURITY_V1_W;



typedef struct _RPC_BINDING_HANDLE_SECURITY_V1_A {
    unsigned long Version;
    unsigned char *ServerPrincName;
    unsigned long AuthnLevel;
    unsigned long AuthnSvc;
    SEC_WINNT_AUTH_IDENTITY_A *AuthIdentity;
    RPC_SECURITY_QOS *SecurityQos;
} RPC_BINDING_HANDLE_SECURITY_V1_A, *PRPC_BINDING_HANDLE_SECURITY_V1_A;

#line 1756 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"

typedef struct _RPC_BINDING_HANDLE_OPTIONS_V1 {
    unsigned long Version;
    unsigned long Flags;
    unsigned long ComTimeout;
    unsigned long CallTimeout;
} RPC_BINDING_HANDLE_OPTIONS_V1, *PRPC_BINDING_HANDLE_OPTIONS_V1;





















#line 1785 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"



__declspec(dllimport)
RPC_STATUS
__stdcall
RpcBindingCreateA (
     RPC_BINDING_HANDLE_TEMPLATE_V1_A * Template,
     RPC_BINDING_HANDLE_SECURITY_V1_A * Security,
     RPC_BINDING_HANDLE_OPTIONS_V1 * Options,
     RPC_BINDING_HANDLE * Binding
    );

#line 1799 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcBindingCreateW (
     RPC_BINDING_HANDLE_TEMPLATE_V1_W * Template,
     RPC_BINDING_HANDLE_SECURITY_V1_W * Security,
     RPC_BINDING_HANDLE_OPTIONS_V1 * Options,
     RPC_BINDING_HANDLE * Binding
    );





#line 1815 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"

__declspec(dllimport)
RPC_STATUS 
__stdcall 
RpcBindingGetTrainingContextHandle (
     RPC_BINDING_HANDLE Binding,
     void ** ContextHandle
    );

__declspec(dllimport)
RPC_STATUS 
__stdcall 
RpcServerInqBindingHandle (
     RPC_BINDING_HANDLE * Binding
    );
#line 1831 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"


typedef enum _RPC_HTTP_REDIRECTOR_STAGE
{
    RPCHTTP_RS_REDIRECT = 1,
    RPCHTTP_RS_ACCESS_1,
    RPCHTTP_RS_SESSION,
    RPCHTTP_RS_ACCESS_2,
    RPCHTTP_RS_INTERFACE
} RPC_HTTP_REDIRECTOR_STAGE;
#line 1842 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"


typedef RPC_STATUS
(__stdcall * RPC_NEW_HTTP_PROXY_CHANNEL) (
     RPC_HTTP_REDIRECTOR_STAGE RedirectorStage,
     RPC_WSTR ServerName,
     RPC_WSTR ServerPort,
     RPC_WSTR RemoteUser,
     RPC_WSTR AuthType,
     void  * ResourceUuid,
     void  * SessionId,
     void  * Interface,
     void  * Reserved,
     unsigned long Flags,
     RPC_WSTR  * NewServerName,
     RPC_WSTR  * NewServerPort
    );
    









#line 1870 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"

typedef void
(__stdcall * RPC_HTTP_PROXY_FREE_STRING) (
     RPC_WSTR String
    );
#line 1876 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"






__declspec(dllimport)
RPC_STATUS
__stdcall
RpcImpersonateClient (
     RPC_BINDING_HANDLE BindingHandle
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcRevertToSelfEx (
     RPC_BINDING_HANDLE BindingHandle
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcRevertToSelf (
    void
    );



__declspec(dllimport)
RPC_STATUS
__stdcall
RpcBindingInqAuthClientA (
     RPC_BINDING_HANDLE ClientBinding,
     RPC_AUTHZ_HANDLE  * Privs,
     RPC_CSTR  * ServerPrincName,
     unsigned long  * AuthnLevel,
     unsigned long  * AuthnSvc,
     unsigned long  * AuthzSvc
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcBindingInqAuthClientW (
     RPC_BINDING_HANDLE ClientBinding,
     RPC_AUTHZ_HANDLE  * Privs,
     RPC_WSTR  * ServerPrincName,
     unsigned long  * AuthnLevel,
     unsigned long  * AuthnSvc,
     unsigned long  * AuthzSvc
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcBindingInqAuthClientExA (
     RPC_BINDING_HANDLE ClientBinding,
     RPC_AUTHZ_HANDLE  * Privs,
     RPC_CSTR  * ServerPrincName,
     unsigned long  * AuthnLevel,
     unsigned long  * AuthnSvc,
     unsigned long  * AuthzSvc,
      unsigned long             Flags
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcBindingInqAuthClientExW (
     RPC_BINDING_HANDLE ClientBinding,
     RPC_AUTHZ_HANDLE  * Privs,
     RPC_WSTR  * ServerPrincName,
     unsigned long  * AuthnLevel,
     unsigned long  * AuthnSvc,
     unsigned long  * AuthzSvc,
      unsigned long             Flags
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcBindingInqAuthInfoA (
     RPC_BINDING_HANDLE Binding,
     RPC_CSTR  * ServerPrincName,
     unsigned long  * AuthnLevel,
     unsigned long  * AuthnSvc,
     RPC_AUTH_IDENTITY_HANDLE  * AuthIdentity,
     unsigned long  * AuthzSvc
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcBindingInqAuthInfoW (
     RPC_BINDING_HANDLE Binding,
     RPC_WSTR  * ServerPrincName,
     unsigned long  * AuthnLevel,
     unsigned long  * AuthnSvc,
     RPC_AUTH_IDENTITY_HANDLE  * AuthIdentity,
     unsigned long  * AuthzSvc
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcBindingSetAuthInfoA (
     RPC_BINDING_HANDLE Binding,
     RPC_CSTR ServerPrincName,
     unsigned long AuthnLevel,
     unsigned long AuthnSvc,
     RPC_AUTH_IDENTITY_HANDLE AuthIdentity,
     unsigned long AuthzSvc
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcBindingSetAuthInfoExA (
     RPC_BINDING_HANDLE Binding,
     RPC_CSTR ServerPrincName,
     unsigned long AuthnLevel,
     unsigned long AuthnSvc,
     RPC_AUTH_IDENTITY_HANDLE AuthIdentity,
     unsigned long AuthzSvc,
     RPC_SECURITY_QOS * SecurityQos
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcBindingSetAuthInfoW (
     RPC_BINDING_HANDLE Binding,
     RPC_WSTR ServerPrincName,
     unsigned long AuthnLevel,
     unsigned long AuthnSvc,
     RPC_AUTH_IDENTITY_HANDLE AuthIdentity,
     unsigned long AuthzSvc
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcBindingSetAuthInfoExW (
     RPC_BINDING_HANDLE Binding,
     RPC_WSTR ServerPrincName,
     unsigned long AuthnLevel,
     unsigned long AuthnSvc,
     RPC_AUTH_IDENTITY_HANDLE AuthIdentity,
     unsigned long AuthzSvc,
     RPC_SECURITY_QOS * SecurityQOS
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcBindingInqAuthInfoExA (
     RPC_BINDING_HANDLE Binding,
     RPC_CSTR  * ServerPrincName,
     unsigned long  * AuthnLevel,
     unsigned long  * AuthnSvc,
     RPC_AUTH_IDENTITY_HANDLE  * AuthIdentity,
     unsigned long  * AuthzSvc,
      unsigned long RpcQosVersion,
     RPC_SECURITY_QOS *SecurityQOS
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcBindingInqAuthInfoExW (
     RPC_BINDING_HANDLE Binding,
     RPC_WSTR  * ServerPrincName,
     unsigned long  * AuthnLevel,
     unsigned long  * AuthnSvc,
     RPC_AUTH_IDENTITY_HANDLE  * AuthIdentity,
     unsigned long  * AuthzSvc,
      unsigned long RpcQosVersion,
     RPC_SECURITY_QOS * SecurityQOS
    );

typedef void
(__stdcall * RPC_AUTH_KEY_RETRIEVAL_FN) (
     void  * Arg,
     RPC_WSTR ServerPrincName,
     unsigned long KeyVer,
     void  *  * Key,
     RPC_STATUS  * Status
    );

__declspec(dllimport)
RPC_STATUS
__stdcall 
RpcServerCompleteSecurityCallback(
     RPC_BINDING_HANDLE BindingHandle,
     RPC_STATUS Status
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcServerRegisterAuthInfoA (
     RPC_CSTR ServerPrincName,
     unsigned long AuthnSvc,
     RPC_AUTH_KEY_RETRIEVAL_FN GetKeyFn,
     void  * Arg
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcServerRegisterAuthInfoW (
     RPC_WSTR ServerPrincName,
     unsigned long AuthnSvc,
     RPC_AUTH_KEY_RETRIEVAL_FN GetKeyFn,
     void  * Arg
    );

















#line 2111 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"







































































#line 2183 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"



typedef struct {
    unsigned char  * UserName;
    unsigned char  * ComputerName;
    unsigned short Privilege;
    unsigned long AuthFlags;
} RPC_CLIENT_INFORMATION1,  * PRPC_CLIENT_INFORMATION1;
#line 2193 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"
#line 2194 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcBindingServerFromClient (
     RPC_BINDING_HANDLE ClientBinding,
     RPC_BINDING_HANDLE  * ServerBinding
    );

__declspec(dllimport)
__declspec(noreturn)
void
__stdcall
RpcRaiseException (
     RPC_STATUS exception
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcTestCancel(
    void
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcServerTestCancel (
     RPC_BINDING_HANDLE BindingHandle
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcCancelThread(
     void * Thread
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcCancelThreadEx(
     void * Thread,
     long Timeout
    );


__declspec(dllimport)
RPC_STATUS
__stdcall
UuidCreate (
     UUID  * Uuid
    );


__declspec(dllimport)
RPC_STATUS
__stdcall
UuidCreateSequential (
     UUID  * Uuid
    );




__declspec(dllimport)
RPC_STATUS
__stdcall
UuidToStringA (
     const UUID  * Uuid,
     RPC_CSTR  * StringUuid
    );


__declspec(dllimport)
RPC_STATUS
__stdcall
UuidFromStringA (
     RPC_CSTR StringUuid,
     UUID  * Uuid
    );


__declspec(dllimport)
RPC_STATUS
__stdcall
UuidToStringW (
     const UUID  * Uuid,
     RPC_WSTR  * StringUuid
    );


__declspec(dllimport)
RPC_STATUS
__stdcall
UuidFromStringW (
     RPC_WSTR StringUuid,
     UUID  * Uuid
    );







#line 2301 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"





















#line 2323 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"

__declspec(dllimport)
signed int
__stdcall
UuidCompare (
     UUID  * Uuid1,
     UUID  * Uuid2,
     RPC_STATUS  * Status
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
UuidCreateNil (
     UUID  * NilUuid
    );

__declspec(dllimport)
int
__stdcall
UuidEqual (
     UUID  * Uuid1,
     UUID  * Uuid2,
     RPC_STATUS  * Status
    );

__declspec(dllimport)
unsigned short
__stdcall
UuidHash (
     UUID  * Uuid,
     RPC_STATUS  * Status
    );

__declspec(dllimport)
int
__stdcall
UuidIsNil (
     UUID  * Uuid,
     RPC_STATUS  * Status
    );



__declspec(dllimport)
RPC_STATUS
__stdcall
RpcEpRegisterNoReplaceA (
     RPC_IF_HANDLE IfSpec,
     RPC_BINDING_VECTOR * BindingVector,
     UUID_VECTOR * UuidVector,
     RPC_CSTR Annotation
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcEpRegisterNoReplaceW (
     RPC_IF_HANDLE IfSpec,
     RPC_BINDING_VECTOR * BindingVector,
     UUID_VECTOR * UuidVector,
     RPC_WSTR Annotation
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcEpRegisterA (
     RPC_IF_HANDLE IfSpec,
     RPC_BINDING_VECTOR * BindingVector,
     UUID_VECTOR * UuidVector,
     RPC_CSTR Annotation
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcEpRegisterW (
     RPC_IF_HANDLE IfSpec,
     RPC_BINDING_VECTOR * BindingVector,
     UUID_VECTOR * UuidVector,
     RPC_WSTR Annotation
    );







#line 2414 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"























#line 2438 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"


__declspec(dllimport)
RPC_STATUS
__stdcall
RpcEpUnregister(
     RPC_IF_HANDLE IfSpec,
     RPC_BINDING_VECTOR * BindingVector,
     UUID_VECTOR * UuidVector
    );





__declspec(dllimport)
RPC_STATUS
__stdcall
DceErrorInqTextA (
     RPC_STATUS RpcStatus,
     RPC_CSTR ErrorText
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
DceErrorInqTextW (
     RPC_STATUS RpcStatus,
     RPC_WSTR ErrorText
    );





#line 2474 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"











#line 2486 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"

typedef I_RPC_HANDLE * RPC_EP_INQ_HANDLE;












__declspec(dllimport)
RPC_STATUS
__stdcall
RpcMgmtEpEltInqBegin (
      RPC_BINDING_HANDLE EpBinding,
     unsigned long InquiryType,
     RPC_IF_ID  * IfId,
     unsigned long VersOption,
     UUID  * ObjectUuid,
     RPC_EP_INQ_HANDLE  * InquiryContext
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcMgmtEpEltInqDone (
     RPC_EP_INQ_HANDLE  * InquiryContext
    );



__declspec(dllimport)
RPC_STATUS
__stdcall
RpcMgmtEpEltInqNextA (
     RPC_EP_INQ_HANDLE InquiryContext,
     RPC_IF_ID  * IfId,
     RPC_BINDING_HANDLE  * Binding,
     UUID  * ObjectUuid,
     RPC_CSTR  * Annotation
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcMgmtEpEltInqNextW (
     RPC_EP_INQ_HANDLE InquiryContext,
     RPC_IF_ID  * IfId,
     RPC_BINDING_HANDLE  * Binding,
     UUID  * ObjectUuid,
     RPC_WSTR  * Annotation
    );





#line 2548 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"













#line 2562 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcMgmtEpUnregister (
     RPC_BINDING_HANDLE EpBinding,
     RPC_IF_ID  * IfId,
     RPC_BINDING_HANDLE Binding,
     UUID  * ObjectUuid
    );

typedef int
(__stdcall * RPC_MGMT_AUTHORIZATION_FN) (
     RPC_BINDING_HANDLE ClientBinding,
     unsigned long RequestedMgmtOperation,
     RPC_STATUS  * Status
    );







__declspec(dllimport)
RPC_STATUS
__stdcall
RpcMgmtSetAuthorizationFn (
     RPC_MGMT_AUTHORIZATION_FN AuthorizationFn
    );


__declspec(dllimport)
int
__stdcall
RpcExceptionFilter (
     unsigned long ExceptionCode
    );
#line 2601 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"














#line 2616 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"



#line 2620 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"

#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdcep.h"




















#pragma once
#line 23 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdcep.h"


extern "C" {
#line 27 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdcep.h"

typedef struct _RPC_VERSION {
    unsigned short MajorVersion;
    unsigned short MinorVersion;
} RPC_VERSION;

typedef struct _RPC_SYNTAX_IDENTIFIER {
    GUID SyntaxGUID;
    RPC_VERSION SyntaxVersion;
} RPC_SYNTAX_IDENTIFIER,  * PRPC_SYNTAX_IDENTIFIER;

typedef struct _RPC_MESSAGE
{
    RPC_BINDING_HANDLE Handle;
    unsigned long DataRepresentation;
    void  * Buffer;
    unsigned int BufferLength;
    unsigned int ProcNum;
    PRPC_SYNTAX_IDENTIFIER TransferSyntax;
    void  * RpcInterfaceInformation;
    void  * ReservedForRuntime;
    void  * ManagerEpv;
    void  * ImportContext;
    unsigned long RpcFlags;
} RPC_MESSAGE,  * PRPC_MESSAGE;


typedef RPC_STATUS
__stdcall RPC_FORWARD_FUNCTION(
                        UUID              * InterfaceId,
                        RPC_VERSION       * InterfaceVersion,
                        UUID              * ObjectId,
                        unsigned char          * Rpcpro,
                        void  *  * ppDestEndpoint);

enum RPC_ADDRESS_CHANGE_TYPE
{
    PROTOCOL_NOT_LOADED = 1,
    PROTOCOL_LOADED,
    PROTOCOL_ADDRESS_CHANGE
};

typedef void
__stdcall RPC_ADDRESS_CHANGE_FN(
                         void * arg
                        );












#line 86 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdcep.h"












#line 99 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdcep.h"


















#line 118 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdcep.h"











#line 130 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdcep.h"



typedef
void
(__stdcall  * RPC_DISPATCH_FUNCTION) (
      PRPC_MESSAGE Message
    );

typedef struct {
    unsigned int DispatchTableCount;
    RPC_DISPATCH_FUNCTION  * DispatchTable;
    LONG_PTR                          Reserved;
} RPC_DISPATCH_TABLE,  * PRPC_DISPATCH_TABLE;

typedef struct _RPC_PROTSEQ_ENDPOINT
{
    unsigned char  * RpcProtocolSequence;
    unsigned char  * Endpoint;
} RPC_PROTSEQ_ENDPOINT,  * PRPC_PROTSEQ_ENDPOINT;








typedef struct _RPC_SERVER_INTERFACE
{
    unsigned int Length;
    RPC_SYNTAX_IDENTIFIER InterfaceId;
    RPC_SYNTAX_IDENTIFIER TransferSyntax;
    PRPC_DISPATCH_TABLE DispatchTable;
    unsigned int RpcProtseqEndpointCount;
    PRPC_PROTSEQ_ENDPOINT RpcProtseqEndpoint;
    void  *DefaultManagerEpv;
    void const  *InterpreterInfo;
    unsigned int Flags ;
} RPC_SERVER_INTERFACE,  * PRPC_SERVER_INTERFACE;

typedef struct _RPC_CLIENT_INTERFACE
{
    unsigned int Length;
    RPC_SYNTAX_IDENTIFIER   InterfaceId;
    RPC_SYNTAX_IDENTIFIER   TransferSyntax;
    PRPC_DISPATCH_TABLE     DispatchTable;
    unsigned int            RpcProtseqEndpointCount;
    PRPC_PROTSEQ_ENDPOINT   RpcProtseqEndpoint;
    ULONG_PTR               Reserved;
    void const  *  InterpreterInfo;
    unsigned int Flags ;
} RPC_CLIENT_INTERFACE,  * PRPC_CLIENT_INTERFACE;


__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcNegotiateTransferSyntax (
      RPC_MESSAGE  * Message
    );
#line 192 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdcep.h"

__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcGetBuffer (
      RPC_MESSAGE  * Message
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcGetBufferWithObject (
      RPC_MESSAGE  * Message,
     UUID * ObjectUuid
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcSendReceive (
      RPC_MESSAGE  * Message
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcFreeBuffer (
      RPC_MESSAGE  * Message
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcSend (
      PRPC_MESSAGE Message
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcReceive (
      PRPC_MESSAGE Message,
     unsigned int Size
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcFreePipeBuffer (
      RPC_MESSAGE  * Message
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcReallocPipeBuffer (
     PRPC_MESSAGE Message,
     unsigned int NewSize
    );

typedef void * I_RPC_MUTEX;

__declspec(dllimport)
void
__stdcall
I_RpcRequestMutex (
      I_RPC_MUTEX * Mutex
    );

__declspec(dllimport)
void
__stdcall
I_RpcClearMutex (
     I_RPC_MUTEX Mutex
    );

__declspec(dllimport)
void
__stdcall
I_RpcDeleteMutex (
     I_RPC_MUTEX Mutex
    );

__declspec(dllimport)
void  *
__stdcall
I_RpcAllocate (
     unsigned int Size
    );

__declspec(dllimport)
void
__stdcall
I_RpcFree (
     void  * Object
    );

__declspec(dllimport)
void
__stdcall
I_RpcPauseExecution (
     unsigned long Milliseconds
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcGetExtendedError (
    void
    );

typedef
void
(__stdcall  * PRPC_RUNDOWN) (
    void  * AssociationContext
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcMonitorAssociation (
     RPC_BINDING_HANDLE Handle,
     PRPC_RUNDOWN RundownRoutine,
     void * Context
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcStopMonitorAssociation (
     RPC_BINDING_HANDLE Handle
    );

__declspec(dllimport)
RPC_BINDING_HANDLE
__stdcall
I_RpcGetCurrentCallHandle(
    void
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcGetAssociationContext (
     RPC_BINDING_HANDLE BindingHandle,
     void  *  * AssociationContext
    );

__declspec(dllimport)
void *
__stdcall
I_RpcGetServerContextList (
     RPC_BINDING_HANDLE BindingHandle
    );

__declspec(dllimport)
void
__stdcall
I_RpcSetServerContextList (
     RPC_BINDING_HANDLE BindingHandle,
     void * ServerContextList
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcNsInterfaceExported (
     unsigned long EntryNameSyntax,
     unsigned short *EntryName,
     RPC_SERVER_INTERFACE * RpcInterfaceInformation
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcNsInterfaceUnexported (
     unsigned long EntryNameSyntax,
     unsigned short *EntryName,
     RPC_SERVER_INTERFACE * RpcInterfaceInformation
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcBindingToStaticStringBindingW (
     RPC_BINDING_HANDLE Binding,
     unsigned short **StringBinding
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcBindingInqSecurityContext (
     RPC_BINDING_HANDLE Binding,
     void **SecurityContextHandle
    );


__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcBindingInqSecurityContextKeyInfo (
     RPC_BINDING_HANDLE Binding,
     void *KeyInfo
    );
#line 398 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdcep.h"

__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcBindingInqWireIdForSnego (
     RPC_BINDING_HANDLE Binding,
     RPC_CSTR WireId
    );


__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcBindingInqMarshalledTargetInfo (
     RPC_BINDING_HANDLE Binding,
     unsigned long * MarshalledTargetInfoSize,
     RPC_CSTR * MarshalledTargetInfo
    );
#line 417 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdcep.h"


__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcBindingInqLocalClientPID (
     RPC_BINDING_HANDLE Binding,
     unsigned long *Pid
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcBindingHandleToAsyncHandle (
     RPC_BINDING_HANDLE Binding,
     void **AsyncHandle
    );
#line 435 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdcep.h"



__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcNsBindingSetEntryNameW (
     RPC_BINDING_HANDLE Binding,
     unsigned long EntryNameSyntax,
     RPC_WSTR EntryName
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcNsBindingSetEntryNameA (
     RPC_BINDING_HANDLE Binding,
     unsigned long EntryNameSyntax,
     RPC_CSTR EntryName
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcServerUseProtseqEp2A (
     RPC_CSTR NetworkAddress,
     RPC_CSTR Protseq,
     unsigned int MaxCalls,
     RPC_CSTR Endpoint,
     void  * SecurityDescriptor,
     void * Policy
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcServerUseProtseqEp2W (
     RPC_WSTR NetworkAddress,
     RPC_WSTR Protseq,
     unsigned int MaxCalls,
     RPC_WSTR Endpoint,
     void  * SecurityDescriptor,
     void * Policy
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcServerUseProtseq2W (
     RPC_WSTR NetworkAddress,
     RPC_WSTR Protseq,
     unsigned int MaxCalls,
     void  * SecurityDescriptor,
     void * Policy
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcServerUseProtseq2A (
     RPC_CSTR NetworkAddress,
     RPC_CSTR Protseq,
     unsigned int MaxCalls,
     void  * SecurityDescriptor,
     void * Policy
    );










#line 512 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdcep.h"


































#line 547 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdcep.h"

__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcServerStartService (
     RPC_WSTR Protseq,
     RPC_WSTR Endpoint,
     RPC_IF_HANDLE IfSpec
    );



__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcBindingInqDynamicEndpointW (
     RPC_BINDING_HANDLE Binding,
     RPC_WSTR  *DynamicEndpoint
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcBindingInqDynamicEndpointA (
     RPC_BINDING_HANDLE Binding,
     RPC_CSTR  *DynamicEndpoint
    );





#line 580 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdcep.h"











#line 592 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdcep.h"


__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcServerCheckClientRestriction (
     RPC_BINDING_HANDLE Context
    );
#line 601 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdcep.h"






__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcBindingInqTransportType (
     RPC_BINDING_HANDLE Binding,
     unsigned int  * Type
    );

typedef struct _RPC_TRANSFER_SYNTAX
{
    UUID Uuid;
    unsigned short VersMajor;
    unsigned short VersMinor;
} RPC_TRANSFER_SYNTAX;

__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcIfInqTransferSyntaxes (
     RPC_IF_HANDLE RpcIfHandle,
     RPC_TRANSFER_SYNTAX  * TransferSyntaxes,
     unsigned int TransferSyntaxSize,
     unsigned int  * TransferSyntaxCount
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
I_UuidCreate (
     UUID  * Uuid
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcBindingCopy (
     RPC_BINDING_HANDLE SourceBinding,
     RPC_BINDING_HANDLE  * DestinationBinding
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcBindingIsClientLocal (
      RPC_BINDING_HANDLE BindingHandle,
     unsigned int  * ClientLocalFlag
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcBindingInqConnId (
     RPC_BINDING_HANDLE Binding,
     void **ConnId,
     int *pfFirstCall
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcBindingCreateNP (
     RPC_WSTR ServerName,
     RPC_WSTR ServiceName,
     RPC_WSTR NetworkOptions,
     RPC_BINDING_HANDLE *Binding
    );

__declspec(dllimport)
void
__stdcall
I_RpcSsDontSerializeContext (
    void
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcLaunchDatagramReceiveThread(
    void  * pAddress
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcServerRegisterForwardFunction (
     RPC_FORWARD_FUNCTION  * pForwardFunction
    );

RPC_ADDRESS_CHANGE_FN * __stdcall
I_RpcServerInqAddressChangeFn(
    void
    );

RPC_STATUS __stdcall
I_RpcServerSetAddressChangeFn(
     RPC_ADDRESS_CHANGE_FN * pAddressChangeFn
    );








__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcServerInqLocalConnAddress (
     RPC_BINDING_HANDLE Binding,
      void *Buffer,
      unsigned long *BufferSize,
     unsigned long *AddressFormat
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcServerInqRemoteConnAddress (
     RPC_BINDING_HANDLE Binding,
      void *Buffer,
      unsigned long *BufferSize,
     unsigned long *AddressFormat
    );

__declspec(dllimport)
void
__stdcall
I_RpcSessionStrictContextHandle (
    void
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcTurnOnEEInfoPropagation (
    void
    );
#line 746 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdcep.h"

__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcConnectionInqSockBuffSize(
   unsigned long  * RecvBuffSize,
   unsigned long  * SendBuffSize
  );

__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcConnectionSetSockBuffSize(
    unsigned long RecvBuffSize,
    unsigned long SendBuffSize
   );

typedef
void
(*RPCLT_PDU_FILTER_FUNC) (
     void *Buffer,
     unsigned int BufferLength,
     int fDatagram
    );

typedef
void
(__cdecl *RPC_SETFILTER_FUNC) (
     RPCLT_PDU_FILTER_FUNC pfnFilter
    );


__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcServerStartListening(
    void * hWnd
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcServerStopListening(
    void
    );

typedef RPC_STATUS (*RPC_BLOCKING_FN) (
     void * hWnd,
     void * Context,
      void * hSyncEvent
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcBindingSetAsync(
     RPC_BINDING_HANDLE Binding,
     RPC_BLOCKING_FN BlockingFn,
     unsigned long ServerTid
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcSetThreadParams(
     int fClientFree,
      void *Context,
      void * hWndClient
    );

__declspec(dllimport)
unsigned int
__stdcall
I_RpcWindowProc(
     void * hWnd,
     unsigned int Message,
     unsigned int wParam,
     unsigned long lParam
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcServerUnregisterEndpointA (
     RPC_CSTR Protseq,
     RPC_CSTR Endpoint
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcServerUnregisterEndpointW (
     RPC_WSTR Protseq,
     RPC_WSTR Endpoint
    );





#line 847 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdcep.h"
#line 848 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdcep.h"

__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcServerInqTransportType(
     unsigned int  * Type
    );

__declspec(dllimport)
long
__stdcall
I_RpcMapWin32Status (
     RPC_STATUS Status
    );







typedef struct _RPC_C_OPT_COOKIE_AUTH_DESCRIPTOR
{
    unsigned long BufferSize;   
     char *Buffer;               
} RPC_C_OPT_COOKIE_AUTH_DESCRIPTOR;

typedef struct _RDR_CALLOUT_STATE
{
    
    RPC_STATUS LastError;
    void *LastEEInfo;

    RPC_HTTP_REDIRECTOR_STAGE LastCalledStage;

    
    unsigned short *ServerName;   
    unsigned short *ServerPort;   
    unsigned short *RemoteUser;   
    unsigned short *AuthType;     
    unsigned char ResourceTypePresent;
    unsigned char SessionIdPresent;
    unsigned char InterfacePresent;
    UUID ResourceType;
    UUID SessionId;
    RPC_SYNTAX_IDENTIFIER Interface;
    void *CertContext;            
                                  
                                  
} RDR_CALLOUT_STATE;
#line 899 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdcep.h"


typedef RPC_STATUS
(__stdcall *I_RpcProxyIsValidMachineFn)
        (
         RPC_WSTR Machine,
         RPC_WSTR DotMachine,
         unsigned long PortNumber        
        );

typedef RPC_STATUS
(__stdcall *I_RpcProxyGetClientAddressFn)
        (
         void *Context,
         char *Buffer,
         unsigned long *BufferLength
        );

typedef RPC_STATUS
(__stdcall *I_RpcProxyGetConnectionTimeoutFn)
        (
         unsigned long *ConnectionTimeout
        );


typedef RPC_STATUS
(__stdcall *I_RpcPerformCalloutFn) 
    (
     void *Context,
     RDR_CALLOUT_STATE *CallOutState,
     RPC_HTTP_REDIRECTOR_STAGE Stage
    );

typedef void
(__stdcall *I_RpcFreeCalloutStateFn)
    (
     RDR_CALLOUT_STATE *CallOutState
    );

typedef RPC_STATUS
(__stdcall *I_RpcProxyGetClientSessionAndResourceUUID)
        (
         void *Context,
         int *SessionIdPresent,
         UUID *SessionId,
         int *ResourceIdPresent,
         UUID *ResourceId
        );

#line 949 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdcep.h"


typedef RPC_STATUS
(__stdcall *I_RpcProxyFilterIfFn) 
    (
     void *Context,
     UUID *IfUuid,
     unsigned short IfMajorVersion,
     int *fAllow
    );

typedef enum RpcProxyPerfCounters
{
    RpcCurrentUniqueUser = 1,    
    RpcBackEndConnectionAttempts, 
    RpcBackEndConnectionFailed, 
    RpcRequestsPerSecond, 
    RpcIncomingConnections, 
    RpcIncomingBandwidth, 
    RpcOutgoingBandwidth, 
    RpcAttemptedLbsDecisions, 
    RpcFailedLbsDecisions, 
    RpcAttemptedLbsMessages, 
    RpcFailedLbsMessages, 
    RpcLastCounter 
} RpcPerfCounters;

typedef void
(__stdcall *I_RpcProxyUpdatePerfCounterFn)
    (
     RpcPerfCounters Counter,
     int ModifyTrend,
     unsigned long Size
    );

 typedef void
(__stdcall *I_RpcProxyUpdatePerfCounterBackendServerFn)
    (
     unsigned short* MachineName,
     int IsConnectEvent
    );

#line 992 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdcep.h"





typedef struct tagI_RpcProxyCallbackInterface
{
    I_RpcProxyIsValidMachineFn IsValidMachineFn;
    I_RpcProxyGetClientAddressFn GetClientAddressFn;
    I_RpcProxyGetConnectionTimeoutFn GetConnectionTimeoutFn;
    I_RpcPerformCalloutFn PerformCalloutFn;
    I_RpcFreeCalloutStateFn FreeCalloutStateFn;
    I_RpcProxyGetClientSessionAndResourceUUID GetClientSessionAndResourceUUIDFn;

    I_RpcProxyFilterIfFn ProxyFilterIfFn;
    I_RpcProxyUpdatePerfCounterFn RpcProxyUpdatePerfCounterFn;
    I_RpcProxyUpdatePerfCounterBackendServerFn RpcProxyUpdatePerfCounterBackendServerFn;
#line 1010 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdcep.h"
} I_RpcProxyCallbackInterface;

__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcProxyNewConnection (
     unsigned long ConnectionType,
     unsigned short *ServerAddress,
     unsigned short *ServerPort,
     unsigned short *MinConnTimeout,
     void *ConnectionParameter,
      RDR_CALLOUT_STATE *CallOutState, 
     I_RpcProxyCallbackInterface *ProxyCallbackInterface
    );
    



















#line 1045 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdcep.h"
        
#line 1047 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdcep.h"


__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcReplyToClientWithStatus (
     void *ConnectionParameter,
     RPC_STATUS RpcStatus
    );

__declspec(dllimport)
void
__stdcall
I_RpcRecordCalloutFailure (
     RPC_STATUS RpcStatus,
     RDR_CALLOUT_STATE *CallOutState,
     unsigned short *DllName
    );
#line 1066 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdcep.h"


__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcMgmtEnableDedicatedThreadPool (
    );
#line 1074 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdcep.h"


}
#line 1078 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdcep.h"

#line 1080 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdcep.h"

#line 2622 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"


}
#line 2626 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"

#line 2628 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcdce.h"


#line 149 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpc.h"

#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcnsi.h"



















#pragma once
#line 22 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcnsi.h"

typedef void  * RPC_NS_HANDLE;















__declspec(dllimport) RPC_STATUS __stdcall
RpcNsBindingExportA(
     unsigned long EntryNameSyntax,
     RPC_CSTR EntryName,
     RPC_IF_HANDLE IfSpec,
     RPC_BINDING_VECTOR  *BindingVec,
     UUID_VECTOR  *ObjectUuidVec
    );


__declspec(dllimport) RPC_STATUS __stdcall
RpcNsBindingUnexportA(
     unsigned long EntryNameSyntax,
     RPC_CSTR EntryName,
     RPC_IF_HANDLE IfSpec,
     UUID_VECTOR  *ObjectUuidVec
    );



__declspec(dllimport) RPC_STATUS __stdcall
RpcNsBindingExportW(
     unsigned long EntryNameSyntax,
     RPC_WSTR EntryName,
     RPC_IF_HANDLE IfSpec,
     RPC_BINDING_VECTOR  *BindingVec,
     UUID_VECTOR  *ObjectUuidVec
    );

__declspec(dllimport) RPC_STATUS __stdcall
RpcNsBindingUnexportW(
     unsigned long EntryNameSyntax,
     RPC_WSTR EntryName,
     RPC_IF_HANDLE IfSpec,
     UUID_VECTOR  *ObjectUuidVec
    );

#line 77 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcnsi.h"



RPC_STATUS __stdcall
RpcNsBindingExportPnPA(
     unsigned long EntryNameSyntax,
     RPC_CSTR EntryName,
     RPC_IF_HANDLE IfSpec,
     UUID_VECTOR *ObjectVector
    );

RPC_STATUS __stdcall
RpcNsBindingUnexportPnPA(
     unsigned long EntryNameSyntax,
     RPC_CSTR EntryName,
     RPC_IF_HANDLE IfSpec,
     UUID_VECTOR *ObjectVector
    );



RPC_STATUS __stdcall
RpcNsBindingExportPnPW(
     unsigned long EntryNameSyntax,
     RPC_WSTR EntryName,
     RPC_IF_HANDLE IfSpec,
     UUID_VECTOR *ObjectVector
    );

RPC_STATUS __stdcall
RpcNsBindingUnexportPnPW(
     unsigned long EntryNameSyntax,
     RPC_WSTR EntryName,
     RPC_IF_HANDLE IfSpec,
     UUID_VECTOR *ObjectVector
    );

#line 115 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcnsi.h"



__declspec(dllimport) RPC_STATUS __stdcall
RpcNsBindingLookupBeginA(
     unsigned long EntryNameSyntax,
     RPC_CSTR EntryName,
     RPC_IF_HANDLE IfSpec,
     UUID  *ObjUuid,
     unsigned long BindingMaxCount,
     RPC_NS_HANDLE  *LookupContext
    );



__declspec(dllimport) RPC_STATUS __stdcall
RpcNsBindingLookupBeginW(
     unsigned long EntryNameSyntax,
     RPC_WSTR EntryName,
     RPC_IF_HANDLE IfSpec,
     UUID  *ObjUuid,
     unsigned long BindingMaxCount,
     RPC_NS_HANDLE  *LookupContext
    );
#line 140 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcnsi.h"

__declspec(dllimport) RPC_STATUS __stdcall
RpcNsBindingLookupNext(
      RPC_NS_HANDLE LookupContext,
     RPC_BINDING_VECTOR  *  * BindingVec
    );

__declspec(dllimport) RPC_STATUS __stdcall
RpcNsBindingLookupDone(
      RPC_NS_HANDLE  * LookupContext
    );



__declspec(dllimport) RPC_STATUS __stdcall
RpcNsGroupDeleteA(
     unsigned long GroupNameSyntax,
     RPC_CSTR GroupName
    );

__declspec(dllimport) RPC_STATUS __stdcall
RpcNsGroupMbrAddA(
     unsigned long GroupNameSyntax,
     RPC_CSTR GroupName,
     unsigned long MemberNameSyntax,
     RPC_CSTR MemberName
    );

__declspec(dllimport) RPC_STATUS __stdcall
RpcNsGroupMbrRemoveA(
     unsigned long GroupNameSyntax,
     RPC_CSTR GroupName,
     unsigned long MemberNameSyntax,
     RPC_CSTR MemberName
    );

__declspec(dllimport) RPC_STATUS __stdcall
RpcNsGroupMbrInqBeginA(
     unsigned long GroupNameSyntax,
     RPC_CSTR GroupName,
     unsigned long MemberNameSyntax,
     RPC_NS_HANDLE  *InquiryContext
    );

__declspec(dllimport) RPC_STATUS __stdcall
RpcNsGroupMbrInqNextA(
     RPC_NS_HANDLE InquiryContext,
     RPC_CSTR  *MemberName
    );



__declspec(dllimport) RPC_STATUS __stdcall
RpcNsGroupDeleteW(
     unsigned long GroupNameSyntax,
     RPC_WSTR GroupName
    );

__declspec(dllimport) RPC_STATUS __stdcall
RpcNsGroupMbrAddW(
     unsigned long GroupNameSyntax,
     RPC_WSTR GroupName,
     unsigned long MemberNameSyntax,
     RPC_WSTR MemberName
    );

__declspec(dllimport) RPC_STATUS __stdcall
RpcNsGroupMbrRemoveW(
     unsigned long GroupNameSyntax,
     RPC_WSTR GroupName,
     unsigned long MemberNameSyntax,
     RPC_WSTR MemberName
    );

__declspec(dllimport) RPC_STATUS __stdcall
RpcNsGroupMbrInqBeginW(
     unsigned long GroupNameSyntax,
     RPC_WSTR GroupName,
     unsigned long MemberNameSyntax,
     RPC_NS_HANDLE  *InquiryContext
    );

__declspec(dllimport) RPC_STATUS __stdcall
RpcNsGroupMbrInqNextW(
     RPC_NS_HANDLE InquiryContext,
     RPC_WSTR  *MemberName
    );

#line 229 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcnsi.h"

__declspec(dllimport) RPC_STATUS __stdcall
RpcNsGroupMbrInqDone(
      RPC_NS_HANDLE  * InquiryContext
    );



__declspec(dllimport) RPC_STATUS __stdcall
RpcNsProfileDeleteA(
     unsigned long ProfileNameSyntax,
     RPC_CSTR ProfileName
    );

__declspec(dllimport) RPC_STATUS __stdcall
RpcNsProfileEltAddA(
     unsigned long ProfileNameSyntax,
     RPC_CSTR ProfileName,
     RPC_IF_ID  *IfId,
     unsigned long MemberNameSyntax,
     RPC_CSTR MemberName,
     unsigned long Priority,
     RPC_CSTR Annotation
    );

__declspec(dllimport) RPC_STATUS __stdcall
RpcNsProfileEltRemoveA(
     unsigned long ProfileNameSyntax,
     RPC_CSTR ProfileName,
     RPC_IF_ID  *IfId,
     unsigned long MemberNameSyntax,
     RPC_CSTR MemberName
    );

__declspec(dllimport) RPC_STATUS __stdcall
RpcNsProfileEltInqBeginA(
     unsigned long ProfileNameSyntax,
     RPC_CSTR ProfileName,
     unsigned long InquiryType,
     RPC_IF_ID  *IfId,
     unsigned long VersOption,
     unsigned long MemberNameSyntax,
     RPC_CSTR MemberName,
     RPC_NS_HANDLE  *InquiryContext
    );

__declspec(dllimport) RPC_STATUS __stdcall
RpcNsProfileEltInqNextA(
     RPC_NS_HANDLE InquiryContext,
     RPC_IF_ID  *IfId,
     RPC_CSTR  *MemberName,
     unsigned long  *Priority,
     RPC_CSTR  *Annotation
    );



__declspec(dllimport) RPC_STATUS __stdcall
RpcNsProfileDeleteW(
     unsigned long ProfileNameSyntax,
     RPC_WSTR ProfileName
    );

__declspec(dllimport) RPC_STATUS __stdcall
RpcNsProfileEltAddW(
     unsigned long ProfileNameSyntax,
     RPC_WSTR ProfileName,
     RPC_IF_ID  *IfId,
     unsigned long MemberNameSyntax,
     RPC_WSTR MemberName,
     unsigned long Priority,
     RPC_WSTR Annotation
    );

__declspec(dllimport) RPC_STATUS __stdcall
RpcNsProfileEltRemoveW(
     unsigned long ProfileNameSyntax,
     RPC_WSTR ProfileName,
     RPC_IF_ID  *IfId,
     unsigned long MemberNameSyntax,
     RPC_WSTR MemberName
    );

__declspec(dllimport) RPC_STATUS __stdcall
RpcNsProfileEltInqBeginW(
     unsigned long ProfileNameSyntax,
     RPC_WSTR ProfileName,
     unsigned long InquiryType,
     RPC_IF_ID  *IfId,
     unsigned long VersOption,
     unsigned long MemberNameSyntax,
     RPC_WSTR MemberName,
     RPC_NS_HANDLE  *InquiryContext
    );

__declspec(dllimport) RPC_STATUS __stdcall
RpcNsProfileEltInqNextW(
     RPC_NS_HANDLE InquiryContext,
     RPC_IF_ID  *IfId,
     RPC_WSTR  *MemberName,
     unsigned long  *Priority,
     RPC_WSTR  *Annotation
    );

#line 334 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcnsi.h"

__declspec(dllimport) RPC_STATUS __stdcall
RpcNsProfileEltInqDone(
      RPC_NS_HANDLE  * InquiryContext
    );



__declspec(dllimport) RPC_STATUS __stdcall
RpcNsEntryObjectInqBeginA(
     unsigned long EntryNameSyntax,
     RPC_CSTR EntryName,
     RPC_NS_HANDLE  *InquiryContext
    );



__declspec(dllimport) RPC_STATUS __stdcall
RpcNsEntryObjectInqBeginW(
     unsigned long EntryNameSyntax,
     RPC_WSTR EntryName,
     RPC_NS_HANDLE  *InquiryContext
    );

#line 359 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcnsi.h"

__declspec(dllimport) RPC_STATUS __stdcall
RpcNsEntryObjectInqNext(
      RPC_NS_HANDLE InquiryContext,
     UUID  * ObjUuid
    );

__declspec(dllimport) RPC_STATUS __stdcall
RpcNsEntryObjectInqDone(
      RPC_NS_HANDLE  * InquiryContext
    );



__declspec(dllimport) RPC_STATUS __stdcall
RpcNsEntryExpandNameA(
     unsigned long EntryNameSyntax,
     RPC_CSTR EntryName,
     RPC_CSTR  *ExpandedName
    );

__declspec(dllimport) RPC_STATUS __stdcall
RpcNsMgmtBindingUnexportA(
     unsigned long EntryNameSyntax,
     RPC_CSTR EntryName,
     RPC_IF_ID  *IfId,
     unsigned long VersOption,
     UUID_VECTOR  *ObjectUuidVec
    );

__declspec(dllimport) RPC_STATUS __stdcall
RpcNsMgmtEntryCreateA(
     unsigned long EntryNameSyntax,
     RPC_CSTR EntryName
    );

__declspec(dllimport) RPC_STATUS __stdcall
RpcNsMgmtEntryDeleteA(
     unsigned long EntryNameSyntax,
     RPC_CSTR EntryName
    );

__declspec(dllimport) RPC_STATUS __stdcall
RpcNsMgmtEntryInqIfIdsA(
     unsigned long EntryNameSyntax,
     RPC_CSTR EntryName,
     RPC_IF_ID_VECTOR  *  *IfIdVec
    );

__declspec(dllimport) RPC_STATUS __stdcall
RpcNsMgmtHandleSetExpAge(
     RPC_NS_HANDLE NsHandle,
     unsigned long ExpirationAge
    );

__declspec(dllimport) RPC_STATUS __stdcall
RpcNsMgmtInqExpAge(
     unsigned long  * ExpirationAge
    );

__declspec(dllimport) RPC_STATUS __stdcall
RpcNsMgmtSetExpAge(
     unsigned long ExpirationAge
    );



__declspec(dllimport) RPC_STATUS __stdcall
RpcNsEntryExpandNameW(
     unsigned long EntryNameSyntax,
     RPC_WSTR EntryName,
     RPC_WSTR  *ExpandedName
    );

__declspec(dllimport) RPC_STATUS __stdcall
RpcNsMgmtBindingUnexportW(
     unsigned long EntryNameSyntax,
     RPC_WSTR EntryName,
     RPC_IF_ID  *IfId,
     unsigned long VersOption,
     UUID_VECTOR  *ObjectUuidVec
    );

__declspec(dllimport) RPC_STATUS __stdcall
RpcNsMgmtEntryCreateW(
     unsigned long EntryNameSyntax,
     RPC_WSTR EntryName
    );

__declspec(dllimport) RPC_STATUS __stdcall
RpcNsMgmtEntryDeleteW(
     unsigned long EntryNameSyntax,
     RPC_WSTR EntryName
    );

__declspec(dllimport) RPC_STATUS __stdcall
RpcNsMgmtEntryInqIfIdsW(
     unsigned long EntryNameSyntax,
     RPC_WSTR EntryName,
     RPC_IF_ID_VECTOR  *  *IfIdVec
    );

#line 462 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcnsi.h"



__declspec(dllimport) RPC_STATUS __stdcall
RpcNsBindingImportBeginA(
     unsigned long EntryNameSyntax,
     RPC_CSTR EntryName,
     RPC_IF_HANDLE IfSpec,
     UUID  *ObjUuid,
     RPC_NS_HANDLE  *ImportContext
    );



__declspec(dllimport) RPC_STATUS __stdcall
RpcNsBindingImportBeginW(
     unsigned long EntryNameSyntax,
     RPC_WSTR EntryName,
     RPC_IF_HANDLE IfSpec,
     UUID  *ObjUuid,
     RPC_NS_HANDLE  *ImportContext
    );

#line 486 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcnsi.h"

__declspec(dllimport) RPC_STATUS __stdcall
RpcNsBindingImportNext(
     RPC_NS_HANDLE ImportContext,
     RPC_BINDING_HANDLE   * Binding
    );

__declspec(dllimport) RPC_STATUS __stdcall
RpcNsBindingImportDone(
      RPC_NS_HANDLE  * ImportContext
    );

__declspec(dllimport) RPC_STATUS __stdcall
RpcNsBindingSelect(
      RPC_BINDING_VECTOR  * BindingVec,
     RPC_BINDING_HANDLE   * Binding
    );


















































#line 554 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcnsi.h"

#line 556 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcnsi.h"

#line 151 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpc.h"
#line 152 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpc.h"
#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcnterr.h"















#pragma once
#line 18 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcnterr.h"




















#line 39 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcnterr.h"






















































































































































































































































































































































































































































































































#line 542 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcnterr.h"

#line 544 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcnterr.h"

#line 153 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpc.h"



#line 157 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpc.h"




































#line 194 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpc.h"










#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcasync.h"



















#pragma once
#line 22 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcasync.h"



#line 26 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcasync.h"


extern "C" {
#line 30 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcasync.h"





#line 36 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcasync.h"







#line 44 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcasync.h"




typedef
enum _RPC_NOTIFICATION_TYPES
{
    RpcNotificationTypeNone,
    RpcNotificationTypeEvent,

    RpcNotificationTypeApc,
    RpcNotificationTypeIoc,
    RpcNotificationTypeHwnd,
#line 58 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcasync.h"
    RpcNotificationTypeCallback
} RPC_NOTIFICATION_TYPES;


typedef
enum _RPC_ASYNC_EVENT {
    RpcCallComplete,
    RpcSendComplete,
    RpcReceiveComplete,
    RpcClientDisconnect,
    RpcClientCancel
    } RPC_ASYNC_EVENT;
    









#line 81 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcasync.h"

struct _RPC_ASYNC_STATE;

typedef void __stdcall
RPCNOTIFICATION_ROUTINE (
                  struct _RPC_ASYNC_STATE *pAsync,
                  void *Context,
                  RPC_ASYNC_EVENT Event);
typedef RPCNOTIFICATION_ROUTINE *PFN_RPCNOTIFICATION_ROUTINE;

typedef union _RPC_ASYNC_NOTIFICATION_INFO {

    
    
    
    struct {
        PFN_RPCNOTIFICATION_ROUTINE NotificationRoutine;
        HANDLE hThread;
        } APC;




    
    
    
    struct {
        HANDLE hIOPort;
        DWORD dwNumberOfBytesTransferred;
        DWORD_PTR dwCompletionKey;
        LPOVERLAPPED lpOverlapped;
        } IOC;

#line 115 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcasync.h"

    
    
    
    struct {
        HWND hWnd;
        UINT Msg;
        } HWND;

#line 125 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcasync.h"
#line 126 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcasync.h"


    
    
    
    
    HANDLE hEvent;
    




#line 139 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcasync.h"

    
    
    
    
    
    PFN_RPCNOTIFICATION_ROUTINE NotificationRoutine;
} RPC_ASYNC_NOTIFICATION_INFO, *PRPC_ASYNC_NOTIFICATION_INFO;

typedef struct _RPC_ASYNC_STATE {
    unsigned int    Size; 
    unsigned long   Signature;
    long   Lock;
    unsigned long   Flags;
    void           *StubInfo;
    void           *UserInfo;
    void           *RuntimeInfo;
    RPC_ASYNC_EVENT Event;

    RPC_NOTIFICATION_TYPES NotificationType;
    RPC_ASYNC_NOTIFICATION_INFO u;

    LONG_PTR Reserved[4];
    } RPC_ASYNC_STATE, *PRPC_ASYNC_STATE;







__declspec(dllimport)
RPC_STATUS
__stdcall
RpcAsyncInitializeHandle (
     PRPC_ASYNC_STATE pAsync,
     unsigned int     Size
    );


__declspec(dllimport)
RPC_STATUS
__stdcall
RpcAsyncRegisterInfo (
     PRPC_ASYNC_STATE pAsync
    ) ;
#line 186 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcasync.h"

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcAsyncGetCallStatus (
     PRPC_ASYNC_STATE pAsync
    ) ;

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcAsyncCompleteCall (
     PRPC_ASYNC_STATE pAsync,
     void *Reply
    ) ;

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcAsyncAbortCall (
     PRPC_ASYNC_STATE pAsync,
     unsigned long ExceptionCode
    ) ;

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcAsyncCancelCall (
     PRPC_ASYNC_STATE pAsync,
     BOOL fAbort
    ) ;






typedef enum tagExtendedErrorParamTypes
{
    eeptAnsiString = 1,
    eeptUnicodeString,
    eeptLongVal,
    eeptShortVal,
    eeptPointerVal,
    eeptNone,
    eeptBinary
} ExtendedErrorParamTypes;




typedef struct tagBinaryParam
{
    void *Buffer;
    short Size;
} BinaryParam;

typedef struct tagRPC_EE_INFO_PARAM
{
    ExtendedErrorParamTypes ParameterType;
    union
        {
        LPSTR AnsiString;
        LPWSTR UnicodeString;
        long LVal;
        short SVal;
        ULONGLONG PVal;
        BinaryParam BVal;
        } u;
} RPC_EE_INFO_PARAM;








#line 265 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcasync.h"

typedef struct tagRPC_EXTENDED_ERROR_INFO
{
    ULONG Version;
    LPWSTR ComputerName;
    ULONG ProcessID;
    union
        {

        SYSTEMTIME SystemTime;
        FILETIME FileTime;


#line 279 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcasync.h"
        } u;
    ULONG GeneratingComponent;
    ULONG Status;
    USHORT DetectionLocation;
    USHORT Flags;
    int NumberOfParameters;
    RPC_EE_INFO_PARAM Parameters[4];
} RPC_EXTENDED_ERROR_INFO;

typedef struct tagRPC_ERROR_ENUM_HANDLE
{
    ULONG Signature;
    void *CurrentPos;
    void *Head;
} RPC_ERROR_ENUM_HANDLE;

__declspec(dllimport)
RPC_STATUS 
__stdcall
RpcErrorStartEnumeration (
     RPC_ERROR_ENUM_HANDLE *EnumHandle
    );

__declspec(dllimport)
RPC_STATUS 
__stdcall
RpcErrorGetNextRecord (
     RPC_ERROR_ENUM_HANDLE *EnumHandle, 
     BOOL CopyStrings, 
     RPC_EXTENDED_ERROR_INFO *ErrorInfo
    );

__declspec(dllimport)
RPC_STATUS 
__stdcall
RpcErrorEndEnumeration (
     RPC_ERROR_ENUM_HANDLE *EnumHandle
    );

__declspec(dllimport)
RPC_STATUS 
__stdcall
RpcErrorResetEnumeration (
     RPC_ERROR_ENUM_HANDLE *EnumHandle
    );

__declspec(dllimport)
RPC_STATUS 
__stdcall
RpcErrorGetNumberOfRecords (
     RPC_ERROR_ENUM_HANDLE *EnumHandle, 
     int *Records
    );

__declspec(dllimport)
RPC_STATUS 
__stdcall
RpcErrorSaveErrorInfo (
     RPC_ERROR_ENUM_HANDLE *EnumHandle, 
     PVOID *ErrorBlob, 
     size_t *BlobSize
    );

__declspec(dllimport)
RPC_STATUS 
__stdcall
RpcErrorLoadErrorInfo (
     PVOID ErrorBlob, 
     size_t BlobSize, 
     RPC_ERROR_ENUM_HANDLE *EnumHandle
    );

__declspec(dllimport)
RPC_STATUS 
__stdcall
RpcErrorAddRecord (
     RPC_EXTENDED_ERROR_INFO *ErrorInfo
    );

__declspec(dllimport)
void 
__stdcall
RpcErrorClearInformation (
    void
    );

#line 366 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcasync.h"



__declspec(dllimport)
RPC_STATUS
__stdcall
RpcAsyncCleanupThread (
     DWORD dwTimeout
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcGetAuthorizationContextForClient (
     RPC_BINDING_HANDLE ClientBinding,
     BOOL ImpersonateOnReturn,
     PVOID Reserved1,
     PLARGE_INTEGER pExpirationTime,
     LUID Reserved2,
     DWORD Reserved3,
     PVOID Reserved4,
     PVOID *pAuthzClientContext
    );

__declspec(dllimport)
RPC_STATUS 
__stdcall
RpcFreeAuthorizationContext (
     PVOID *pAuthzClientContext
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcSsContextLockExclusive (
     RPC_BINDING_HANDLE ServerBindingHandle,
     PVOID UserContext
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcSsContextLockShared (
     RPC_BINDING_HANDLE ServerBindingHandle,
     PVOID UserContext
    );


typedef enum tagRpcLocalAddressFormat
{
    rlafInvalid = 0,
    rlafIPv4,
    rlafIPv6
} RpcLocalAddressFormat;

typedef struct _RPC_CALL_LOCAL_ADDRESS_V1
{
    unsigned int Version;
    void *Buffer;
    unsigned long BufferSize;
    RpcLocalAddressFormat AddressFormat;
} RPC_CALL_LOCAL_ADDRESS_V1, *PRPC_CALL_LOCAL_ADDRESS_V1;









#line 438 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcasync.h"





#line 444 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcasync.h"

typedef struct tagRPC_CALL_ATTRIBUTES_V1_W
{
    unsigned int Version;
    unsigned long Flags;
    unsigned long ServerPrincipalNameBufferLength;
    unsigned short *ServerPrincipalName;
    unsigned long ClientPrincipalNameBufferLength;
    unsigned short *ClientPrincipalName;
    unsigned long AuthenticationLevel;
    unsigned long AuthenticationService;
    BOOL NullSession;
} RPC_CALL_ATTRIBUTES_V1_W;

typedef struct tagRPC_CALL_ATTRIBUTES_V1_A
{
    unsigned int Version;
    unsigned long Flags;
    unsigned long ServerPrincipalNameBufferLength;
    unsigned char *ServerPrincipalName;
    unsigned long ClientPrincipalNameBufferLength;
    unsigned char *ClientPrincipalName;
    unsigned long AuthenticationLevel;
    unsigned long AuthenticationService;
    BOOL NullSession;
} RPC_CALL_ATTRIBUTES_V1_A;






typedef enum tagRpcCallType
{
    rctInvalid = 0,
    rctNormal,
    rctTraining,
    rctGuaranteed
} RpcCallType;

typedef enum tagRpcCallClientLocality
{
    rcclInvalid = 0,
    rcclLocal,
    rcclRemote,
    rcclClientUnknownLocality
} RpcCallClientLocality;


typedef struct tagRPC_CALL_ATTRIBUTES_V2_W
{
    unsigned int Version;
    unsigned long Flags;
    unsigned long ServerPrincipalNameBufferLength;
    unsigned short *ServerPrincipalName;
    unsigned long ClientPrincipalNameBufferLength;
    unsigned short *ClientPrincipalName;
    unsigned long AuthenticationLevel;
    unsigned long AuthenticationService;
    BOOL NullSession;
    BOOL KernelModeCaller;
    unsigned long ProtocolSequence;
    RpcCallClientLocality IsClientLocal;
    HANDLE ClientPID; 
    unsigned long CallStatus;
    RpcCallType CallType;
    RPC_CALL_LOCAL_ADDRESS_V1 *CallLocalAddress;	
    unsigned short OpNum;
    UUID InterfaceUuid;        
} RPC_CALL_ATTRIBUTES_V2_W;
    
typedef struct tagRPC_CALL_ATTRIBUTES_V2_A
{
    unsigned int Version;
    unsigned long Flags;
    unsigned long ServerPrincipalNameBufferLength;
    unsigned char *ServerPrincipalName;
    unsigned long ClientPrincipalNameBufferLength;
    unsigned char *ClientPrincipalName;
    unsigned long AuthenticationLevel;
    unsigned long AuthenticationService;
    BOOL NullSession;
    BOOL KernelModeCaller;
    unsigned long ProtocolSequence;
    unsigned long IsClientLocal;
    HANDLE ClientPID; 
    unsigned long CallStatus;
    RpcCallType CallType;
    RPC_CALL_LOCAL_ADDRESS_V1 *CallLocalAddress;	
    unsigned short OpNum;
    UUID InterfaceUuid;    
} RPC_CALL_ATTRIBUTES_V2_A;
#line 537 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcasync.h"

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcServerInqCallAttributesW (
     RPC_BINDING_HANDLE ClientBinding,
     void *RpcCallAttributes
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcServerInqCallAttributesA (
     RPC_BINDING_HANDLE ClientBinding,
     void *RpcCallAttributes
    );











#line 565 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcasync.h"

#line 567 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcasync.h"


typedef RPC_CALL_ATTRIBUTES_V2_A RPC_CALL_ATTRIBUTES;


#line 573 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcasync.h"



typedef enum _RPC_NOTIFICATIONS
{
    RpcNotificationCallNone = 0,
    RpcNotificationClientDisconnect = 1,
    RpcNotificationCallCancel = 2      
} RPC_NOTIFICATIONS;



__declspec(dllimport)
RPC_STATUS 
__stdcall 
RpcServerSubscribeForNotification (
     RPC_BINDING_HANDLE Binding,
     RPC_NOTIFICATIONS Notification,
     RPC_NOTIFICATION_TYPES NotificationType,
     RPC_ASYNC_NOTIFICATION_INFO *NotificationInfo
    );

__declspec(dllimport)
RPC_STATUS 
__stdcall 
RpcServerUnsubscribeForNotification (
     RPC_BINDING_HANDLE Binding,
     RPC_NOTIFICATIONS Notification,
     unsigned long *NotificationsQueued
    );

#line 605 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcasync.h"
#line 606 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcasync.h"
 

__declspec(dllimport)
RPC_STATUS 
__stdcall 
RpcBindingBind (
     PRPC_ASYNC_STATE pAsync,
     RPC_BINDING_HANDLE Binding,
     RPC_IF_HANDLE IfSpec    
    );

__declspec(dllimport)
RPC_STATUS 
__stdcall 
RpcBindingUnbind (
     RPC_BINDING_HANDLE Binding
    );





__declspec(dllimport)
RPC_STATUS 
__stdcall 
RpcDiagnoseError (
     RPC_BINDING_HANDLE BindingHandle, 
     RPC_IF_HANDLE IfSpec, 
     RPC_STATUS RpcStatus, 
     RPC_ERROR_ENUM_HANDLE *EnumHandle, 
     ULONG Options,
     HWND ParentWindow
    );

#line 641 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcasync.h"

#line 643 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcasync.h"
#line 644 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcasync.h"



RPC_STATUS __stdcall
I_RpcAsyncSetHandle (
      PRPC_MESSAGE Message,
      PRPC_ASYNC_STATE pAsync
    );

RPC_STATUS __stdcall
I_RpcAsyncAbortCall (
     PRPC_ASYNC_STATE pAsync,
     unsigned long ExceptionCode
    ) ;


int 
__stdcall
I_RpcExceptionFilter (
     unsigned long ExceptionCode
    );
#line 666 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcasync.h"


}
#line 670 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcasync.h"



#line 674 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcasync.h"

#line 676 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcasync.h"


#line 205 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpc.h"

#line 207 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpc.h"



#line 211 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpc.h"


}
#line 215 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpc.h"

#line 217 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpc.h"


#line 14 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"
#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcndr.h"




















#line 22 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcndr.h"






#pragma once
#line 30 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcndr.h"








#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\pshpack8.h"























#pragma warning(disable:4103)

#pragma pack(push,8)


#line 30 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\pshpack8.h"


#line 33 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\pshpack8.h"
#line 34 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\pshpack8.h"

#line 39 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcndr.h"


#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcnsip.h"



















#pragma once
#line 22 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcnsip.h"


extern "C" {
#line 26 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcnsip.h"

typedef struct
{
   RPC_NS_HANDLE        LookupContext;
   RPC_BINDING_HANDLE   ProposedHandle;
   RPC_BINDING_VECTOR * Bindings;

} RPC_IMPORT_CONTEXT_P, * PRPC_IMPORT_CONTEXT_P;




__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcNsGetBuffer(
     PRPC_MESSAGE Message
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcNsSendReceive(
     PRPC_MESSAGE Message,
     RPC_BINDING_HANDLE  * Handle
    );

__declspec(dllimport)
void
__stdcall
I_RpcNsRaiseException(
     PRPC_MESSAGE Message,
     RPC_STATUS Status
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
I_RpcReBindBuffer(
     PRPC_MESSAGE Message
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
I_NsServerBindSearch(
    void
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
I_NsClientBindSearch(
    void
    );

__declspec(dllimport)
void
__stdcall
I_NsClientBindDone(
    void
    );


}
#line 92 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcnsip.h"

#line 94 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcnsip.h"

#line 42 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcndr.h"
#line 43 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcndr.h"

#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcsal.h"







































































































































#pragma once





#line 143 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcsal.h"









extern "C" {
#line 154 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcsal.h"














































































































































































#line 329 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcsal.h"






































































































































































#line 496 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcsal.h"


}
#line 500 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcsal.h"



#line 45 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcndr.h"


extern "C" {
#line 49 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcndr.h"




























































#line 110 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcndr.h"


#line 113 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcndr.h"










#line 124 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcndr.h"





#line 130 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcndr.h"





#line 136 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcndr.h"





#line 142 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcndr.h"





#line 148 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcndr.h"





#line 154 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcndr.h"






typedef unsigned char byte;
typedef byte cs_byte;
typedef unsigned char boolean;










#line 174 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcndr.h"

#line 176 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcndr.h"




















#line 197 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcndr.h"
#line 198 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcndr.h"








void  * __stdcall MIDL_user_allocate(size_t size);
void             __stdcall MIDL_user_free(  void  * );


void * __stdcall I_RpcDefaultAllocate(
         handle_t bh, size_t size, void * (* RealAlloc)(size_t) );

void __stdcall I_RpcDefaultFree(
         handle_t bh, void *, void (*RealFree)(void *) );












#line 228 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcndr.h"











typedef void  * NDR_CCONTEXT;

typedef struct
    {
    void  * pad[2];
    void  * userContext;
    }  * NDR_SCONTEXT;





typedef void (__stdcall  * NDR_RUNDOWN)(void  * context);

typedef void (__stdcall  * NDR_NOTIFY_ROUTINE)(void);
typedef void (__stdcall  * NDR_NOTIFY2_ROUTINE)(boolean flag);

typedef struct _SCONTEXT_QUEUE {
    unsigned long   NumberOfObjects;
    NDR_SCONTEXT  * ArrayOfObjects;
    } SCONTEXT_QUEUE,  * PSCONTEXT_QUEUE;

__declspec(dllimport)
RPC_BINDING_HANDLE
__stdcall
NDRCContextBinding (
     NDR_CCONTEXT     CContext
    );

__declspec(dllimport)
void
__stdcall
NDRCContextMarshall (
      NDR_CCONTEXT    CContext,
     void  *pBuff
    );

__declspec(dllimport)
void
__stdcall
NDRCContextUnmarshall (
     NDR_CCONTEXT        *   pCContext,
      RPC_BINDING_HANDLE      hBinding,
      void                *   pBuff,
      unsigned long           DataRepresentation
    );

__declspec(dllimport)
void
__stdcall
NDRCContextUnmarshall2 (
     NDR_CCONTEXT        *   pCContext,
      RPC_BINDING_HANDLE      hBinding,
      void                *   pBuff,
      unsigned long           DataRepresentation
    );

__declspec(dllimport)
void
__stdcall
NDRSContextMarshall (
      NDR_SCONTEXT    CContext,
     void          * pBuff,
      NDR_RUNDOWN     userRunDownIn
    );

__declspec(dllimport)
NDR_SCONTEXT
__stdcall
NDRSContextUnmarshall (
      void          * pBuff,
      unsigned long   DataRepresentation
    );

__declspec(dllimport)
void
__stdcall
NDRSContextMarshallEx (
      RPC_BINDING_HANDLE  BindingHandle,
      NDR_SCONTEXT        CContext,
     void              * pBuff,
      NDR_RUNDOWN         userRunDownIn
    );

__declspec(dllimport)
void
__stdcall
NDRSContextMarshall2 (
      RPC_BINDING_HANDLE  BindingHandle,
      NDR_SCONTEXT        CContext,
     void              * pBuff,
      NDR_RUNDOWN         userRunDownIn,
      void              * CtxGuard,
     unsigned long        Flags
    );

__declspec(dllimport)
NDR_SCONTEXT
__stdcall
NDRSContextUnmarshallEx (
      RPC_BINDING_HANDLE  BindingHandle,
      void              * pBuff,
      unsigned long       DataRepresentation
    );

__declspec(dllimport)
NDR_SCONTEXT
__stdcall
NDRSContextUnmarshall2(
      RPC_BINDING_HANDLE  BindingHandle,
      void              * pBuff,
      unsigned long       DataRepresentation,
      void              * CtxGuard,
     unsigned long        Flags
    );

__declspec(dllimport)
void
__stdcall
RpcSsDestroyClientContext (
     void  *  * ContextHandle
    );
































































#line 426 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcndr.h"





typedef unsigned long error_status_t;


















































































struct _MIDL_STUB_MESSAGE;
struct _MIDL_STUB_DESC;
struct _FULL_PTR_XLAT_TABLES;

typedef unsigned char  *    RPC_BUFPTR;
typedef unsigned long       RPC_LENGTH;


typedef void (__stdcall  * EXPR_EVAL)( struct _MIDL_STUB_MESSAGE  * );

typedef const unsigned char  * PFORMAT_STRING;




typedef struct
    {
    long              Dimension;

    
    unsigned long  *  BufferConformanceMark;
    unsigned long  *  BufferVarianceMark;

    
    unsigned long  *  MaxCountArray;
    unsigned long  *  OffsetArray;
    unsigned long  *  ActualCountArray;
    } ARRAY_INFO,  *PARRAY_INFO;


typedef struct _NDR_ASYNC_MESSAGE *   PNDR_ASYNC_MESSAGE;
typedef struct _NDR_CORRELATION_INFO *PNDR_CORRELATION_INFO;





typedef const unsigned char  * PFORMAT_STRING;
typedef struct _MIDL_SYNTAX_INFO MIDL_SYNTAX_INFO, *PMIDL_SYNTAX_INFO;

struct NDR_ALLOC_ALL_NODES_CONTEXT;
struct NDR_POINTER_QUEUE_STATE;
struct _NDR_PROC_CONTEXT;

typedef struct _MIDL_STUB_MESSAGE
    {
    
    PRPC_MESSAGE            RpcMsg;

    
    unsigned char       *   Buffer;

    



    unsigned char       *   BufferStart;
    unsigned char       *   BufferEnd;

    






    unsigned char       *   BufferMark;

    
    unsigned long           BufferLength;

    
    unsigned long           MemorySize;

    
    unsigned char       *   Memory;

    
    unsigned char           IsClient;
    unsigned char           Pad;
    unsigned short          uFlags2;

    
    int                     ReuseBuffer;

    
    struct NDR_ALLOC_ALL_NODES_CONTEXT *pAllocAllNodesContext;
    struct NDR_POINTER_QUEUE_STATE     *pPointerQueueState;

    



    
    int                     IgnoreEmbeddedPointers;

    



    unsigned char       *   PointerBufferMark;

    


    unsigned char           CorrDespIncrement;

    unsigned char           uFlags;
    unsigned short          UniquePtrCount;

    



    ULONG_PTR               MaxCount;

    



    unsigned long           Offset;

    



    unsigned long           ActualCount;

    
    void  *             ( __stdcall * pfnAllocate)( size_t );
    void                    ( __stdcall * pfnFree)(void  *);

    





    unsigned char       *   StackTop;

    



    unsigned char       *   pPresentedType;
    unsigned char       *   pTransmitType;

    







    handle_t                SavedHandle;

    


    const struct _MIDL_STUB_DESC  * StubDesc;

    


    struct _FULL_PTR_XLAT_TABLES  * FullPtrXlatTables;
    unsigned long                   FullPtrRefId;

    unsigned long                   PointerLength;

    int                             fInDontFree       :1;
    int                             fDontCallFreeInst :1;
    int                             fInOnlyParam      :1;
    int                             fHasReturn        :1;
    int                             fHasExtensions    :1;
    int                             fHasNewCorrDesc   :1;
    int                             fIsIn             :1;
    int                             fIsOut            :1;
    int                             fIsOicf           :1;
    int                             fBufferValid      :1;
    int                             fHasMemoryValidateCallback: 1;
    int                             fInFree             :1;
    int                             fNeedMCCP         :1;
    int                             fUnused           :3;
    int                             fUnused2          :16;


    unsigned long                   dwDestContext;
    void  *                         pvDestContext;

    NDR_SCONTEXT *                  SavedContextHandles;

    long                            ParamNumber;

    struct IRpcChannelBuffer    *   pRpcChannelBuffer;

    PARRAY_INFO                     pArrayInfo;
    unsigned long           *       SizePtrCountArray;
    unsigned long           *       SizePtrOffsetArray;
    unsigned long           *       SizePtrLengthArray;

    


    void                    *       pArgQueue;

    unsigned long                   dwStubPhase;

    void                    *       LowStackMark;

    


    PNDR_ASYNC_MESSAGE              pAsyncMsg;
    PNDR_CORRELATION_INFO           pCorrInfo;
    unsigned char *                 pCorrMemory;

    void *                          pMemoryList;

    





    




    INT_PTR                         pCSInfo;

    unsigned char *                 ConformanceMark;
    unsigned char *                 VarianceMark;



#line 752 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcndr.h"
    INT_PTR                         Unused;
#line 754 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcndr.h"

    struct _NDR_PROC_CONTEXT *      pContext;

    









    void *                             ContextHandleHash;
    void *                             pUserMarshalList;
    INT_PTR                         Reserved51_3;
    INT_PTR                         Reserved51_4;
    INT_PTR                         Reserved51_5;


    


#line 778 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcndr.h"
    } MIDL_STUB_MESSAGE,  *PMIDL_STUB_MESSAGE;


typedef  struct _MIDL_STUB_MESSAGE MIDL_STUB_MESSAGE,   *PMIDL_STUB_MESSAGE;




typedef void  *
        ( __stdcall * GENERIC_BINDING_ROUTINE)
        (void  *);
typedef void
        ( __stdcall * GENERIC_UNBIND_ROUTINE)
        (void  *, unsigned char  *);

typedef struct _GENERIC_BINDING_ROUTINE_PAIR
    {
    GENERIC_BINDING_ROUTINE     pfnBind;
    GENERIC_UNBIND_ROUTINE      pfnUnbind;
    } GENERIC_BINDING_ROUTINE_PAIR,  *PGENERIC_BINDING_ROUTINE_PAIR;

typedef struct __GENERIC_BINDING_INFO
    {
    void  *            pObj;
    unsigned int                Size;
    GENERIC_BINDING_ROUTINE     pfnBind;
    GENERIC_UNBIND_ROUTINE      pfnUnbind;
    } GENERIC_BINDING_INFO,  *PGENERIC_BINDING_INFO;









#line 816 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcndr.h"


typedef void ( __stdcall * XMIT_HELPER_ROUTINE)
    ( PMIDL_STUB_MESSAGE );

typedef struct _XMIT_ROUTINE_QUINTUPLE
    {
    XMIT_HELPER_ROUTINE     pfnTranslateToXmit;
    XMIT_HELPER_ROUTINE     pfnTranslateFromXmit;
    XMIT_HELPER_ROUTINE     pfnFreeXmit;
    XMIT_HELPER_ROUTINE     pfnFreeInst;
    } XMIT_ROUTINE_QUINTUPLE,  *PXMIT_ROUTINE_QUINTUPLE;

typedef unsigned long
( __stdcall * USER_MARSHAL_SIZING_ROUTINE)
    (unsigned long  *,
     unsigned long,
     void  * );

typedef unsigned char  *
( __stdcall * USER_MARSHAL_MARSHALLING_ROUTINE)
    (unsigned long  *,
     unsigned char  * ,
     void  * );

typedef unsigned char  *
( __stdcall * USER_MARSHAL_UNMARSHALLING_ROUTINE)
    (unsigned long  *,
     unsigned char  *,
     void  * );

typedef void ( __stdcall * USER_MARSHAL_FREEING_ROUTINE)
    (unsigned long  *,
     void  * );

typedef struct _USER_MARSHAL_ROUTINE_QUADRUPLE
    {
    USER_MARSHAL_SIZING_ROUTINE          pfnBufferSize;
    USER_MARSHAL_MARSHALLING_ROUTINE     pfnMarshall;
    USER_MARSHAL_UNMARSHALLING_ROUTINE   pfnUnmarshall;
    USER_MARSHAL_FREEING_ROUTINE         pfnFree;
    } USER_MARSHAL_ROUTINE_QUADRUPLE;



typedef enum _USER_MARSHAL_CB_TYPE
{
    USER_MARSHAL_CB_BUFFER_SIZE,
    USER_MARSHAL_CB_MARSHALL,
    USER_MARSHAL_CB_UNMARSHALL,
    USER_MARSHAL_CB_FREE
} USER_MARSHAL_CB_TYPE;

typedef struct _USER_MARSHAL_CB
{
    unsigned long           Flags;
    PMIDL_STUB_MESSAGE      pStubMsg;
    PFORMAT_STRING          pReserve;
    unsigned long           Signature;
    USER_MARSHAL_CB_TYPE    CBType;
    PFORMAT_STRING          pFormat;
    PFORMAT_STRING          pTypeFormat;
} USER_MARSHAL_CB;









typedef struct _MALLOC_FREE_STRUCT
    {
    void  *     ( __stdcall * pfnAllocate)(size_t);
    void        ( __stdcall * pfnFree)(void  *);
    } MALLOC_FREE_STRUCT;

typedef struct _COMM_FAULT_OFFSETS
    {
    short       CommOffset;
    short       FaultOffset;
    } COMM_FAULT_OFFSETS;





typedef enum _IDL_CS_CONVERT
    {
    IDL_CS_NO_CONVERT,
    IDL_CS_IN_PLACE_CONVERT,
    IDL_CS_NEW_BUFFER_CONVERT
    } IDL_CS_CONVERT;

typedef void
( __stdcall * CS_TYPE_NET_SIZE_ROUTINE)
    (RPC_BINDING_HANDLE     hBinding,
     unsigned long          ulNetworkCodeSet,
     unsigned long          ulLocalBufferSize,
     IDL_CS_CONVERT     *   conversionType,
     unsigned long      *   pulNetworkBufferSize,
     error_status_t     *   pStatus);

typedef void
( __stdcall * CS_TYPE_LOCAL_SIZE_ROUTINE)
    (RPC_BINDING_HANDLE     hBinding,
     unsigned long          ulNetworkCodeSet,
     unsigned long          ulNetworkBufferSize,
     IDL_CS_CONVERT     *   conversionType,
     unsigned long      *   pulLocalBufferSize,
     error_status_t     *   pStatus);

typedef void
( __stdcall * CS_TYPE_TO_NETCS_ROUTINE)
    (RPC_BINDING_HANDLE     hBinding,
     unsigned long          ulNetworkCodeSet,
     void               *   pLocalData,
     unsigned long          ulLocalDataLength,
     byte               *   pNetworkData,
     unsigned long      *   pulNetworkDataLength,
     error_status_t     *   pStatus);

typedef void
( __stdcall * CS_TYPE_FROM_NETCS_ROUTINE)
    (RPC_BINDING_HANDLE     hBinding,
     unsigned long          ulNetworkCodeSet,
     byte               *   pNetworkData,
     unsigned long          ulNetworkDataLength,
     unsigned long          ulLocalBufferSize,
     void               *   pLocalData,
     unsigned long      *   pulLocalDataLength,
     error_status_t     *   pStatus);

typedef void
( __stdcall * CS_TAG_GETTING_ROUTINE)
    (RPC_BINDING_HANDLE     hBinding,
     int                    fServerSide,
     unsigned long      *   pulSendingTag,
     unsigned long      *   pulDesiredReceivingTag,
     unsigned long      *   pulReceivingTag,
     error_status_t     *   pStatus);

void __stdcall
RpcCsGetTags(
     RPC_BINDING_HANDLE     hBinding,
     int                    fServerSide,
     unsigned long      *   pulSendingTag,
     unsigned long      *   pulDesiredReceivingTag,
     unsigned long      *   pulReceivingTag,
     error_status_t     *   pStatus);

typedef struct _NDR_CS_SIZE_CONVERT_ROUTINES
    {
    CS_TYPE_NET_SIZE_ROUTINE    pfnNetSize;
    CS_TYPE_TO_NETCS_ROUTINE    pfnToNetCs;
    CS_TYPE_LOCAL_SIZE_ROUTINE  pfnLocalSize;
    CS_TYPE_FROM_NETCS_ROUTINE  pfnFromNetCs;
    } NDR_CS_SIZE_CONVERT_ROUTINES;

typedef struct _NDR_CS_ROUTINES
    {
    NDR_CS_SIZE_CONVERT_ROUTINES   *pSizeConvertRoutines;
    CS_TAG_GETTING_ROUTINE         *pTagGettingRoutines;
    } NDR_CS_ROUTINES;

typedef struct _NDR_EXPR_DESC
{
    const unsigned short * pOffset;
    PFORMAT_STRING  pFormatExpr;
} NDR_EXPR_DESC;




typedef struct _MIDL_STUB_DESC
    {
    void  *    RpcInterfaceInformation;

    void  *    ( __stdcall * pfnAllocate)(size_t);
    void       ( __stdcall * pfnFree)(void  *);

    union
        {
        handle_t  *             pAutoHandle;
        handle_t  *             pPrimitiveHandle;
        PGENERIC_BINDING_INFO   pGenericBindingInfo;
        } IMPLICIT_HANDLE_INFO;

    const NDR_RUNDOWN  *                    apfnNdrRundownRoutines;
    const GENERIC_BINDING_ROUTINE_PAIR  *   aGenericBindingRoutinePairs;
    const EXPR_EVAL  *                      apfnExprEval;
    const XMIT_ROUTINE_QUINTUPLE  *         aXmitQuintuple;

    const unsigned char  *                  pFormatTypes;

    int                                     fCheckBounds;

    
    unsigned long                           Version;

    MALLOC_FREE_STRUCT  *                   pMallocFreeStruct;

    long                                    MIDLVersion;

    const COMM_FAULT_OFFSETS  *    CommFaultOffsets;

    
    const USER_MARSHAL_ROUTINE_QUADRUPLE  * aUserMarshalQuadruple;

    
    const NDR_NOTIFY_ROUTINE  *             NotifyRoutineTable;

    



    ULONG_PTR                               mFlags;

    
    const NDR_CS_ROUTINES *                 CsRoutineTables;

    void *                                  ProxyServerInfo;
    const NDR_EXPR_DESC *               pExprInfo;

    

    } MIDL_STUB_DESC;


typedef const MIDL_STUB_DESC  * PMIDL_STUB_DESC;

typedef void  * PMIDL_XMIT_TYPE;







#pragma warning(push)
#line 1058 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcndr.h"
#pragma warning( disable:4200 )
#line 1060 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcndr.h"
typedef struct _MIDL_FORMAT_STRING
    {
    short               Pad;
    unsigned char       Format[];
    } MIDL_FORMAT_STRING;


#pragma warning(pop)


#line 1071 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcndr.h"
#line 1072 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcndr.h"
#line 1073 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcndr.h"




typedef void ( __stdcall * STUB_THUNK)( PMIDL_STUB_MESSAGE );


typedef long ( __stdcall * SERVER_ROUTINE)();


#line 1084 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcndr.h"




typedef struct  _MIDL_SERVER_INFO_
    {
    PMIDL_STUB_DESC                     pStubDesc;
    const SERVER_ROUTINE     *          DispatchTable;
    PFORMAT_STRING                      ProcString;
    const unsigned short *              FmtStringOffset;
    const STUB_THUNK *                  ThunkTable;
    PRPC_SYNTAX_IDENTIFIER              pTransferSyntax;
    ULONG_PTR                           nCount;
    PMIDL_SYNTAX_INFO                   pSyntaxInfo;
    } MIDL_SERVER_INFO, *PMIDL_SERVER_INFO;






typedef struct _MIDL_STUBLESS_PROXY_INFO
    {
    PMIDL_STUB_DESC                     pStubDesc;
    PFORMAT_STRING                      ProcFormatString;
    const unsigned short            *   FormatStringOffset;
    PRPC_SYNTAX_IDENTIFIER              pTransferSyntax;
    ULONG_PTR                           nCount;
    PMIDL_SYNTAX_INFO                   pSyntaxInfo;
    } MIDL_STUBLESS_PROXY_INFO;

typedef MIDL_STUBLESS_PROXY_INFO  * PMIDL_STUBLESS_PROXY_INFO;




typedef struct _MIDL_SYNTAX_INFO
{
RPC_SYNTAX_IDENTIFIER               TransferSyntax;
RPC_DISPATCH_TABLE *                DispatchTable;
PFORMAT_STRING                      ProcString;
const unsigned short *              FmtStringOffset;
PFORMAT_STRING                      TypeString;
const void           *              aUserMarshalQuadruple;
ULONG_PTR                           pReserved1;
ULONG_PTR                           pReserved2;
} MIDL_SYNTAX_INFO, *PMIDL_SYNTAX_INFO;

typedef unsigned short * PARAM_OFFSETTABLE, *PPARAM_OFFSETTABLE;




typedef union _CLIENT_CALL_RETURN
    {
    void  *         Pointer;
    LONG_PTR        Simple;
    } CLIENT_CALL_RETURN;


typedef enum
        {
        XLAT_SERVER = 1,
        XLAT_CLIENT
        } XLAT_SIDE;

typedef struct _FULL_PTR_XLAT_TABLES
{
    void * RefIdToPointer;
    void * PointerToRefId;
    unsigned long           NextRefId;   
    XLAT_SIDE               XlatSide;
} FULL_PTR_XLAT_TABLES, *PFULL_PTR_XLAT_TABLES;





RPC_STATUS __stdcall
NdrClientGetSupportedSyntaxes(
     RPC_CLIENT_INTERFACE * pInf,
     unsigned long       * pCount,
     MIDL_SYNTAX_INFO   ** pArr );


RPC_STATUS __stdcall
NdrServerGetSupportedSyntaxes(
     RPC_SERVER_INTERFACE * pInf,
     unsigned long       * pCount,
     MIDL_SYNTAX_INFO   ** pArr,
     unsigned long       * pPreferSyntaxIndex);





__declspec(dllimport)
void
__stdcall
NdrSimpleTypeMarshall(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    unsigned char           FormatChar
    );

__declspec(dllimport)
unsigned char  *
__stdcall
NdrPointerMarshall(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );

__declspec(dllimport)
unsigned char  *
__stdcall
NdrCsArrayMarshall(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );

__declspec(dllimport)
unsigned char  *
__stdcall
NdrCsTagMarshall(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );



__declspec(dllimport)
unsigned char  *
__stdcall
NdrSimpleStructMarshall(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );

__declspec(dllimport)
unsigned char  *
__stdcall
NdrConformantStructMarshall(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );

__declspec(dllimport)
unsigned char  *
__stdcall
NdrConformantVaryingStructMarshall(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );

__declspec(dllimport)
unsigned char  *
__stdcall
NdrComplexStructMarshall(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );



__declspec(dllimport)
unsigned char  *
__stdcall
NdrFixedArrayMarshall(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );

__declspec(dllimport)
unsigned char  *
__stdcall
NdrConformantArrayMarshall(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );

__declspec(dllimport)
unsigned char  *
__stdcall
NdrConformantVaryingArrayMarshall(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );

__declspec(dllimport)
unsigned char  *
__stdcall
NdrVaryingArrayMarshall(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );

__declspec(dllimport)
unsigned char  *
__stdcall
NdrComplexArrayMarshall(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );



__declspec(dllimport)
unsigned char  *
__stdcall
NdrNonConformantStringMarshall(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );

__declspec(dllimport)
unsigned char  *
__stdcall
NdrConformantStringMarshall(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );



__declspec(dllimport)
unsigned char  *
__stdcall
NdrEncapsulatedUnionMarshall(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );

__declspec(dllimport)
unsigned char  *
__stdcall
NdrNonEncapsulatedUnionMarshall(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );



__declspec(dllimport)
unsigned char  *
__stdcall
NdrByteCountPointerMarshall(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );



__declspec(dllimport)
unsigned char  *
__stdcall
NdrXmitOrRepAsMarshall(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );



__declspec(dllimport)
unsigned char  *
__stdcall
NdrUserMarshalMarshall(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );



__declspec(dllimport)
unsigned char  *
__stdcall
NdrInterfacePointerMarshall(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );



__declspec(dllimport)
void
__stdcall
NdrClientContextMarshall(
    PMIDL_STUB_MESSAGE      pStubMsg,
    NDR_CCONTEXT            ContextHandle,
    int                     fCheck
    );

__declspec(dllimport)
void
__stdcall
NdrServerContextMarshall(
    PMIDL_STUB_MESSAGE      pStubMsg,
    NDR_SCONTEXT            ContextHandle,
    NDR_RUNDOWN             RundownRoutine
    );

__declspec(dllimport)
void
__stdcall
NdrServerContextNewMarshall(
    PMIDL_STUB_MESSAGE      pStubMsg,
    NDR_SCONTEXT            ContextHandle,
    NDR_RUNDOWN             RundownRoutine,
    PFORMAT_STRING          pFormat
    );





__declspec(dllimport)
void
__stdcall
NdrSimpleTypeUnmarshall(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    unsigned char           FormatChar
    );

__declspec(dllimport)
unsigned char * __stdcall
__stdcall
NdrCsArrayUnmarshall(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char **        ppMemory,
    PFORMAT_STRING          pFormat,
    unsigned char           fMustAlloc
    );

__declspec(dllimport)
unsigned char * __stdcall
__stdcall
NdrCsTagUnmarshall(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char **        ppMemory,
    PFORMAT_STRING          pFormat,
    unsigned char           fMustAlloc
    );

__declspec(dllimport)
unsigned char * __stdcall
NdrRangeUnmarshall(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char **        ppMemory,
    PFORMAT_STRING          pFormat,
    unsigned char           fMustAlloc
    );

__declspec(dllimport)
void
__stdcall
NdrCorrelationInitialize(
    PMIDL_STUB_MESSAGE      pStubMsg,
    void  *                 pMemory,
    unsigned long           CacheSize,
    unsigned long           flags
    );

__declspec(dllimport)
void
__stdcall
NdrCorrelationPass(
    PMIDL_STUB_MESSAGE      pStubMsg
    );

__declspec(dllimport)
void
__stdcall
NdrCorrelationFree(
    PMIDL_STUB_MESSAGE      pStubMsg
    );

__declspec(dllimport)
unsigned char  *
__stdcall
NdrPointerUnmarshall(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *  *     ppMemory,
    PFORMAT_STRING          pFormat,
    unsigned char           fMustAlloc
    );



__declspec(dllimport)
unsigned char  *
__stdcall
NdrSimpleStructUnmarshall(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *  *     ppMemory,
    PFORMAT_STRING          pFormat,
    unsigned char           fMustAlloc
    );

__declspec(dllimport)
unsigned char  *
__stdcall
NdrConformantStructUnmarshall(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *  *     ppMemory,
    PFORMAT_STRING          pFormat,
    unsigned char           fMustAlloc
    );

__declspec(dllimport)
unsigned char  *
__stdcall
NdrConformantVaryingStructUnmarshall(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *  *     ppMemory,
    PFORMAT_STRING          pFormat,
    unsigned char           fMustAlloc
    );

__declspec(dllimport)
unsigned char  *
__stdcall
NdrComplexStructUnmarshall(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *  *     ppMemory,
    PFORMAT_STRING          pFormat,
    unsigned char           fMustAlloc
    );



__declspec(dllimport)
unsigned char  *
__stdcall
NdrFixedArrayUnmarshall(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *  *     ppMemory,
    PFORMAT_STRING          pFormat,
    unsigned char           fMustAlloc
    );

__declspec(dllimport)
unsigned char  *
__stdcall
NdrConformantArrayUnmarshall(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *  *     ppMemory,
    PFORMAT_STRING          pFormat,
    unsigned char           fMustAlloc
    );

__declspec(dllimport)
unsigned char  *
__stdcall
NdrConformantVaryingArrayUnmarshall(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *  *     ppMemory,
    PFORMAT_STRING          pFormat,
    unsigned char           fMustAlloc
    );

__declspec(dllimport)
unsigned char  *
__stdcall
NdrVaryingArrayUnmarshall(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *  *     ppMemory,
    PFORMAT_STRING          pFormat,
    unsigned char           fMustAlloc
    );

__declspec(dllimport)
unsigned char  *
__stdcall
NdrComplexArrayUnmarshall(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *  *     ppMemory,
    PFORMAT_STRING          pFormat,
    unsigned char           fMustAlloc
    );



__declspec(dllimport)
unsigned char  *
__stdcall
NdrNonConformantStringUnmarshall(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *  *     ppMemory,
    PFORMAT_STRING          pFormat,
    unsigned char           fMustAlloc
    );

__declspec(dllimport)
unsigned char  *
__stdcall
NdrConformantStringUnmarshall(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *  *     ppMemory,
    PFORMAT_STRING          pFormat,
    unsigned char           fMustAlloc
    );



__declspec(dllimport)
unsigned char  *
__stdcall
NdrEncapsulatedUnionUnmarshall(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *  *     ppMemory,
    PFORMAT_STRING          pFormat,
    unsigned char           fMustAlloc
    );

__declspec(dllimport)
unsigned char  *
__stdcall
NdrNonEncapsulatedUnionUnmarshall(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *  *     ppMemory,
    PFORMAT_STRING          pFormat,
    unsigned char           fMustAlloc
    );



__declspec(dllimport)
unsigned char  *
__stdcall
NdrByteCountPointerUnmarshall(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *  *     ppMemory,
    PFORMAT_STRING          pFormat,
    unsigned char           fMustAlloc
    );



__declspec(dllimport)
unsigned char  *
__stdcall
NdrXmitOrRepAsUnmarshall(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *  *     ppMemory,
    PFORMAT_STRING          pFormat,
    unsigned char           fMustAlloc
    );



__declspec(dllimport)
unsigned char  *
__stdcall
NdrUserMarshalUnmarshall(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *  *     ppMemory,
    PFORMAT_STRING          pFormat,
    unsigned char           fMustAlloc
    );



__declspec(dllimport)
unsigned char  *
__stdcall
NdrInterfacePointerUnmarshall(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *  *     ppMemory,
    PFORMAT_STRING          pFormat,
    unsigned char           fMustAlloc
    );



__declspec(dllimport)
void
__stdcall
NdrClientContextUnmarshall(
    PMIDL_STUB_MESSAGE      pStubMsg,
    NDR_CCONTEXT        *   pContextHandle,
    RPC_BINDING_HANDLE      BindHandle
    );

__declspec(dllimport)
NDR_SCONTEXT
__stdcall
NdrServerContextUnmarshall(
    PMIDL_STUB_MESSAGE      pStubMsg
    );



__declspec(dllimport)
NDR_SCONTEXT
__stdcall
NdrContextHandleInitialize(
      PMIDL_STUB_MESSAGE  pStubMsg,
      PFORMAT_STRING      pFormat
    );

__declspec(dllimport)
NDR_SCONTEXT
__stdcall
NdrServerContextNewUnmarshall(
      PMIDL_STUB_MESSAGE  pStubMsg,
      PFORMAT_STRING      pFormat
    );





__declspec(dllimport)
void
__stdcall
NdrPointerBufferSize(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );

__declspec(dllimport)
void
__stdcall
NdrCsArrayBufferSize(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );

__declspec(dllimport)
void
__stdcall
NdrCsTagBufferSize(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );



__declspec(dllimport)
void
__stdcall
NdrSimpleStructBufferSize(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );

__declspec(dllimport)
void
__stdcall
NdrConformantStructBufferSize(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );

__declspec(dllimport)
void
__stdcall
NdrConformantVaryingStructBufferSize(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );

__declspec(dllimport)
void
__stdcall
NdrComplexStructBufferSize(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );



__declspec(dllimport)
void
__stdcall
NdrFixedArrayBufferSize(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );

__declspec(dllimport)
void
__stdcall
NdrConformantArrayBufferSize(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );

__declspec(dllimport)
void
__stdcall
NdrConformantVaryingArrayBufferSize(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );

__declspec(dllimport)
void
__stdcall
NdrVaryingArrayBufferSize(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );

__declspec(dllimport)
void
__stdcall
NdrComplexArrayBufferSize(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );



__declspec(dllimport)
void
__stdcall
NdrConformantStringBufferSize(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );

__declspec(dllimport)
void
__stdcall
NdrNonConformantStringBufferSize(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );



__declspec(dllimport)
void
__stdcall
NdrEncapsulatedUnionBufferSize(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );

__declspec(dllimport)
void
__stdcall
NdrNonEncapsulatedUnionBufferSize(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );



__declspec(dllimport)
void
__stdcall
NdrByteCountPointerBufferSize(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );



__declspec(dllimport)
void
__stdcall
NdrXmitOrRepAsBufferSize(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );



__declspec(dllimport)
void
__stdcall
NdrUserMarshalBufferSize(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );



__declspec(dllimport)
void
__stdcall
NdrInterfacePointerBufferSize(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );



__declspec(dllimport)
void
__stdcall
NdrContextHandleSize(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );





__declspec(dllimport)
unsigned long
__stdcall
NdrPointerMemorySize(
    PMIDL_STUB_MESSAGE      pStubMsg,
    PFORMAT_STRING          pFormat
    );

__declspec(dllimport)
unsigned long
__stdcall
NdrContextHandleMemorySize(
    PMIDL_STUB_MESSAGE      pStubMsg,
    PFORMAT_STRING          pFormat
    );




__declspec(dllimport)
unsigned long
__stdcall
NdrCsArrayMemorySize(
    PMIDL_STUB_MESSAGE      pStubMsg,
    PFORMAT_STRING          pFormat
    );

__declspec(dllimport)
unsigned long
__stdcall
NdrCsTagMemorySize(
    PMIDL_STUB_MESSAGE      pStubMsg,
    PFORMAT_STRING          pFormat
    );



__declspec(dllimport)
unsigned long
__stdcall
NdrSimpleStructMemorySize(
    PMIDL_STUB_MESSAGE      pStubMsg,
    PFORMAT_STRING          pFormat
    );

__declspec(dllimport)
unsigned long
__stdcall
NdrConformantStructMemorySize(
    PMIDL_STUB_MESSAGE      pStubMsg,
    PFORMAT_STRING          pFormat
    );

__declspec(dllimport)
unsigned long
__stdcall
NdrConformantVaryingStructMemorySize(
    PMIDL_STUB_MESSAGE      pStubMsg,
    PFORMAT_STRING          pFormat
    );

__declspec(dllimport)
unsigned long
__stdcall
NdrComplexStructMemorySize(
    PMIDL_STUB_MESSAGE      pStubMsg,
    PFORMAT_STRING          pFormat
    );



__declspec(dllimport)
unsigned long
__stdcall
NdrFixedArrayMemorySize(
    PMIDL_STUB_MESSAGE      pStubMsg,
    PFORMAT_STRING          pFormat
    );

__declspec(dllimport)
unsigned long
__stdcall
NdrConformantArrayMemorySize(
    PMIDL_STUB_MESSAGE      pStubMsg,
    PFORMAT_STRING          pFormat
    );

__declspec(dllimport)
unsigned long
__stdcall
NdrConformantVaryingArrayMemorySize(
    PMIDL_STUB_MESSAGE      pStubMsg,
    PFORMAT_STRING          pFormat
    );

__declspec(dllimport)
unsigned long
__stdcall
NdrVaryingArrayMemorySize(
    PMIDL_STUB_MESSAGE      pStubMsg,
    PFORMAT_STRING          pFormat
    );

__declspec(dllimport)
unsigned long
__stdcall
NdrComplexArrayMemorySize(
    PMIDL_STUB_MESSAGE      pStubMsg,
    PFORMAT_STRING          pFormat
    );



__declspec(dllimport)
unsigned long
__stdcall
NdrConformantStringMemorySize(
    PMIDL_STUB_MESSAGE      pStubMsg,
    PFORMAT_STRING          pFormat
    );

__declspec(dllimport)
unsigned long
__stdcall
NdrNonConformantStringMemorySize(
    PMIDL_STUB_MESSAGE      pStubMsg,
    PFORMAT_STRING          pFormat
    );



__declspec(dllimport)
unsigned long
__stdcall
NdrEncapsulatedUnionMemorySize(
    PMIDL_STUB_MESSAGE      pStubMsg,
    PFORMAT_STRING          pFormat
    );

__declspec(dllimport)
unsigned long
__stdcall
NdrNonEncapsulatedUnionMemorySize(
    PMIDL_STUB_MESSAGE      pStubMsg,
    PFORMAT_STRING          pFormat
    );



__declspec(dllimport)
unsigned long
__stdcall
NdrXmitOrRepAsMemorySize(
    PMIDL_STUB_MESSAGE      pStubMsg,
    PFORMAT_STRING          pFormat
    );



__declspec(dllimport)
unsigned long
__stdcall
NdrUserMarshalMemorySize(
    PMIDL_STUB_MESSAGE      pStubMsg,
    PFORMAT_STRING          pFormat
    );



__declspec(dllimport)
unsigned long
__stdcall
NdrInterfacePointerMemorySize(
    PMIDL_STUB_MESSAGE      pStubMsg,
    PFORMAT_STRING          pFormat
    );





__declspec(dllimport)
void
__stdcall
NdrPointerFree(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );

__declspec(dllimport)
void
__stdcall
NdrCsArrayFree(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );



__declspec(dllimport)
void
__stdcall
NdrSimpleStructFree(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );

__declspec(dllimport)
void
__stdcall
NdrConformantStructFree(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );

__declspec(dllimport)
void
__stdcall
NdrConformantVaryingStructFree(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );

__declspec(dllimport)
void
__stdcall
NdrComplexStructFree(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );



__declspec(dllimport)
void
__stdcall
NdrFixedArrayFree(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );

__declspec(dllimport)
void
__stdcall
NdrConformantArrayFree(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );

__declspec(dllimport)
void
__stdcall
NdrConformantVaryingArrayFree(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );

__declspec(dllimport)
void
__stdcall
NdrVaryingArrayFree(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );

__declspec(dllimport)
void
__stdcall
NdrComplexArrayFree(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );



__declspec(dllimport)
void
__stdcall
NdrEncapsulatedUnionFree(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );

__declspec(dllimport)
void
__stdcall
NdrNonEncapsulatedUnionFree(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );



__declspec(dllimport)
void
__stdcall
NdrByteCountPointerFree(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );



__declspec(dllimport)
void
__stdcall
NdrXmitOrRepAsFree(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );



__declspec(dllimport)
void
__stdcall
NdrUserMarshalFree(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );



__declspec(dllimport)
void
__stdcall
NdrInterfacePointerFree(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pMemory,
    PFORMAT_STRING          pFormat
    );





__declspec(dllimport)
void
__stdcall
NdrConvert2(
    PMIDL_STUB_MESSAGE      pStubMsg,
    PFORMAT_STRING          pFormat,
    long                    NumberParams
    );

__declspec(dllimport)
void
__stdcall
NdrConvert(
    PMIDL_STUB_MESSAGE      pStubMsg,
    PFORMAT_STRING          pFormat
    );














__declspec(dllimport)
unsigned char  *
__stdcall
NdrUserMarshalSimpleTypeConvert(
    unsigned long *         pFlags,
    unsigned char *         pBuffer,
    unsigned char           FormatChar
    );





__declspec(dllimport)
void
__stdcall
NdrClientInitializeNew(
    PRPC_MESSAGE            pRpcMsg,
    PMIDL_STUB_MESSAGE      pStubMsg,
    PMIDL_STUB_DESC         pStubDescriptor,
    unsigned int            ProcNum
    );

__declspec(dllimport)
unsigned char  *
__stdcall
NdrServerInitializeNew(
    PRPC_MESSAGE            pRpcMsg,
    PMIDL_STUB_MESSAGE      pStubMsg,
    PMIDL_STUB_DESC         pStubDescriptor
    );

__declspec(dllimport)
void
__stdcall
NdrServerInitializePartial(
    PRPC_MESSAGE            pRpcMsg,
    PMIDL_STUB_MESSAGE      pStubMsg,
    PMIDL_STUB_DESC         pStubDescriptor,
    unsigned long           RequestedBufferSize
    );

__declspec(dllimport)
void
__stdcall
NdrClientInitialize(
    PRPC_MESSAGE            pRpcMsg,
    PMIDL_STUB_MESSAGE      pStubMsg,
    PMIDL_STUB_DESC         pStubDescriptor,
    unsigned int            ProcNum
    );

__declspec(dllimport)
unsigned char  *
__stdcall
NdrServerInitialize(
    PRPC_MESSAGE            pRpcMsg,
    PMIDL_STUB_MESSAGE      pStubMsg,
    PMIDL_STUB_DESC         pStubDescriptor
    );

__declspec(dllimport)
unsigned char  *
__stdcall
NdrServerInitializeUnmarshall (
    PMIDL_STUB_MESSAGE      pStubMsg,
    PMIDL_STUB_DESC         pStubDescriptor,
    PRPC_MESSAGE            pRpcMsg
    );

__declspec(dllimport)
void
__stdcall
NdrServerInitializeMarshall (
    PRPC_MESSAGE            pRpcMsg,
    PMIDL_STUB_MESSAGE      pStubMsg
    );

__declspec(dllimport)
unsigned char  *
__stdcall
NdrGetBuffer(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned long           BufferLength,
    RPC_BINDING_HANDLE      Handle
    );

__declspec(dllimport)
unsigned char  *
__stdcall
NdrNsGetBuffer(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned long           BufferLength,
    RPC_BINDING_HANDLE      Handle
    );

__declspec(dllimport)
unsigned char  *
__stdcall
NdrSendReceive(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char *         pBufferEnd
    );

__declspec(dllimport)
unsigned char  *
__stdcall
NdrNsSendReceive(
    PMIDL_STUB_MESSAGE      pStubMsg,
    unsigned char  *        pBufferEnd,
    RPC_BINDING_HANDLE  *   pAutoHandle
    );

__declspec(dllimport)
void
__stdcall
NdrFreeBuffer(
    PMIDL_STUB_MESSAGE      pStubMsg
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
NdrGetDcomProtocolVersion(
    PMIDL_STUB_MESSAGE      pStubMsg,
    RPC_VERSION *           pVersion );








CLIENT_CALL_RETURN __cdecl
NdrClientCall2(
    PMIDL_STUB_DESC         pStubDescriptor,
    PFORMAT_STRING          pFormat,
    ...
    );


CLIENT_CALL_RETURN __cdecl
NdrClientCall(
    PMIDL_STUB_DESC         pStubDescriptor,
    PFORMAT_STRING          pFormat,
    ...
    );

CLIENT_CALL_RETURN __cdecl
NdrAsyncClientCall(
    PMIDL_STUB_DESC         pStubDescriptor,
    PFORMAT_STRING          pFormat,
    ...
    );

CLIENT_CALL_RETURN __cdecl
NdrDcomAsyncClientCall(
    PMIDL_STUB_DESC         pStubDescriptor,
    PFORMAT_STRING          pFormat,
    ...
    );


typedef enum {
    STUB_UNMARSHAL,
    STUB_CALL_SERVER,
    STUB_MARSHAL,
    STUB_CALL_SERVER_NO_HRESULT
}STUB_PHASE;

typedef enum {
    PROXY_CALCSIZE,
    PROXY_GETBUFFER,
    PROXY_MARSHAL,
    PROXY_SENDRECEIVE,
    PROXY_UNMARSHAL
}PROXY_PHASE;

struct IRpcStubBuffer;      


__declspec(dllimport)
void
__stdcall
NdrAsyncServerCall(
    PRPC_MESSAGE                pRpcMsg
    );


__declspec(dllimport)
long
__stdcall
NdrAsyncStubCall(
    struct IRpcStubBuffer *     pThis,
    struct IRpcChannelBuffer *  pChannel,
    PRPC_MESSAGE                pRpcMsg,
    unsigned long *             pdwStubPhase
    );


__declspec(dllimport)
long
__stdcall
NdrDcomAsyncStubCall(
    struct IRpcStubBuffer    *  pThis,
    struct IRpcChannelBuffer *  pChannel,
    PRPC_MESSAGE                pRpcMsg,
    unsigned long            *  pdwStubPhase
    );

__declspec(dllimport)
long
__stdcall
NdrStubCall2(
    void  *    pThis, 
    void  * pChannel, 
    PRPC_MESSAGE                pRpcMsg,
    unsigned long  *            pdwStubPhase
    );

__declspec(dllimport)
void
__stdcall
NdrServerCall2(
    PRPC_MESSAGE                pRpcMsg
    );

__declspec(dllimport)
long
__stdcall
NdrStubCall (
    void  *    pThis, 
    void  * pChannel, 
    PRPC_MESSAGE                pRpcMsg,
    unsigned long  *            pdwStubPhase
    );

__declspec(dllimport)
void
__stdcall
NdrServerCall(
    PRPC_MESSAGE                pRpcMsg
    );

__declspec(dllimport)
int
__stdcall
NdrServerUnmarshall(
    void  * pChannel, 
    PRPC_MESSAGE                pRpcMsg,
    PMIDL_STUB_MESSAGE          pStubMsg,
    PMIDL_STUB_DESC             pStubDescriptor,
    PFORMAT_STRING              pFormat,
    void  *                     pParamList
    );

__declspec(dllimport)
void
__stdcall
NdrServerMarshall(
    void  *    pThis, 
    void  * pChannel, 
    PMIDL_STUB_MESSAGE          pStubMsg,
    PFORMAT_STRING              pFormat
    );



__declspec(dllimport)
RPC_STATUS
__stdcall
NdrMapCommAndFaultStatus(
    PMIDL_STUB_MESSAGE          pStubMsg,
    unsigned long  *            pCommStatus,
    unsigned long  *            pFaultStatus,
    RPC_STATUS                  Status
    );







typedef void  * RPC_SS_THREAD_HANDLE;

typedef void  * __stdcall
RPC_CLIENT_ALLOC (
     size_t Size
    );

typedef void __stdcall
RPC_CLIENT_FREE (
     void  * Ptr
    );





__declspec(dllimport)
void  *
__stdcall
RpcSsAllocate (
     size_t Size
    );

__declspec(dllimport)
void
__stdcall
RpcSsDisableAllocate (
    void
    );

__declspec(dllimport)
void
__stdcall
RpcSsEnableAllocate (
    void
    );

__declspec(dllimport)
void
__stdcall
RpcSsFree (
     void  * NodeToFree
    );

__declspec(dllimport)
RPC_SS_THREAD_HANDLE
__stdcall
RpcSsGetThreadHandle (
    void
    );

__declspec(dllimport)
void
__stdcall
RpcSsSetClientAllocFree (
     RPC_CLIENT_ALLOC  * ClientAlloc,
     RPC_CLIENT_FREE   * ClientFree
    );

__declspec(dllimport)
void
__stdcall
RpcSsSetThreadHandle (
     RPC_SS_THREAD_HANDLE Id
    );

__declspec(dllimport)
void
__stdcall
RpcSsSwapClientAllocFree (
     RPC_CLIENT_ALLOC     * ClientAlloc,
     RPC_CLIENT_FREE      * ClientFree,
     RPC_CLIENT_ALLOC *  * OldClientAlloc,
     RPC_CLIENT_FREE  *  * OldClientFree
    );





__declspec(dllimport)
void  *
__stdcall
RpcSmAllocate (
      size_t          Size,
     RPC_STATUS  *   pStatus
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcSmClientFree (
      void        *   pNodeToFree
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcSmDestroyClientContext (
     void         * * ContextHandle
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcSmDisableAllocate (
    void
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcSmEnableAllocate (
    void
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcSmFree (
     void         *   NodeToFree
    );

__declspec(dllimport)
RPC_SS_THREAD_HANDLE
__stdcall
RpcSmGetThreadHandle (
     RPC_STATUS  *   pStatus
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcSmSetClientAllocFree (
     RPC_CLIENT_ALLOC * ClientAlloc,
     RPC_CLIENT_FREE  * ClientFree
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcSmSetThreadHandle (
     RPC_SS_THREAD_HANDLE Id
    );

__declspec(dllimport)
RPC_STATUS
__stdcall
RpcSmSwapClientAllocFree (
     RPC_CLIENT_ALLOC     *   ClientAlloc,
     RPC_CLIENT_FREE      *   ClientFree,
     RPC_CLIENT_ALLOC    * * OldClientAlloc,
     RPC_CLIENT_FREE     * * OldClientFree
    );





__declspec(dllimport)
void
__stdcall
NdrRpcSsEnableAllocate(
    PMIDL_STUB_MESSAGE      pMessage );

__declspec(dllimport)
void
__stdcall
NdrRpcSsDisableAllocate(
    PMIDL_STUB_MESSAGE      pMessage );

__declspec(dllimport)
void
__stdcall
NdrRpcSmSetClientToOsf(
    PMIDL_STUB_MESSAGE      pMessage );

__declspec(dllimport)
void  *
__stdcall
NdrRpcSmClientAllocate (
     size_t Size
    );

__declspec(dllimport)
void
__stdcall
NdrRpcSmClientFree (
     void  * NodeToFree
    );

__declspec(dllimport)
void  *
__stdcall
NdrRpcSsDefaultAllocate (
     size_t Size
    );

__declspec(dllimport)
void
__stdcall
NdrRpcSsDefaultFree (
     void  * NodeToFree
    );









__declspec(dllimport)
PFULL_PTR_XLAT_TABLES
__stdcall
NdrFullPointerXlatInit(
    unsigned long           NumberOfPointers,
    XLAT_SIDE               XlatSide
    );

__declspec(dllimport)
void
__stdcall
NdrFullPointerXlatFree(
    PFULL_PTR_XLAT_TABLES   pXlatTables
    );


__declspec(dllimport)
void  *
__stdcall
NdrAllocate(
    PMIDL_STUB_MESSAGE      pStubMsg,
    size_t                  Len
    );

__declspec(dllimport)
void
__stdcall
NdrClearOutParameters(
    PMIDL_STUB_MESSAGE      pStubMsg,
    PFORMAT_STRING          pFormat,
    void  *                 ArgAddr
    );






__declspec(dllimport)
void  *
__stdcall
NdrOleAllocate (
     size_t Size
    );

__declspec(dllimport)
void
__stdcall
NdrOleFree (
     void  * NodeToFree
    );





#line 2865 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcndr.h"




































#line 2902 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcndr.h"





typedef struct _NDR_USER_MARSHAL_INFO_LEVEL1
{
    void *                      Buffer;
    unsigned long               BufferSize;
    void *(__stdcall * pfnAllocate)(size_t);
    void (__stdcall * pfnFree)(void *);
    struct IRpcChannelBuffer *  pRpcChannelBuffer;
    ULONG_PTR                   Reserved[5];
} NDR_USER_MARSHAL_INFO_LEVEL1;



#pragma warning(push)
#line 2921 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcndr.h"
#pragma warning(disable:4201)
#line 2923 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcndr.h"

typedef struct _NDR_USER_MARSHAL_INFO
{
    unsigned long InformationLevel;
    union {
        NDR_USER_MARSHAL_INFO_LEVEL1 Level1;
    } ;
} NDR_USER_MARSHAL_INFO;



#pragma warning(pop)


#line 2938 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcndr.h"
#line 2939 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcndr.h"

RPC_STATUS
__stdcall
NdrGetUserMarshalInfo (
     unsigned long        *   pFlags,
     unsigned long            InformationLevel,
     NDR_USER_MARSHAL_INFO * pMarshalInfo
    );




RPC_STATUS __stdcall
NdrCreateServerInterfaceFromStub(
             struct IRpcStubBuffer* pStub,
             RPC_SERVER_INTERFACE *pServerIf );




CLIENT_CALL_RETURN __cdecl
NdrClientCall3(
    MIDL_STUBLESS_PROXY_INFO   *pProxyInfo,
    unsigned long               nProcNum,
    void *                      pReturnValue,
    ...
    );

CLIENT_CALL_RETURN __cdecl
Ndr64AsyncClientCall(
    MIDL_STUBLESS_PROXY_INFO   *pProxyInfo,
    unsigned long               nProcNum,
    void *                      pReturnValue,
    ...
    );

CLIENT_CALL_RETURN __cdecl
Ndr64DcomAsyncClientCall(
    MIDL_STUBLESS_PROXY_INFO   *pProxyInfo,
    unsigned long               nProcNum,
    void *                      pReturnValue,
    ...
    );

struct IRpcStubBuffer;      

__declspec(dllimport)
void
__stdcall
Ndr64AsyncServerCall(
    PRPC_MESSAGE                pRpcMsg
    );

__declspec(dllimport)
void
__stdcall
Ndr64AsyncServerCall64(
    PRPC_MESSAGE                pRpcMsg
    );

__declspec(dllimport)
void
__stdcall
Ndr64AsyncServerCallAll(
    PRPC_MESSAGE                pRpcMsg
    );

__declspec(dllimport)
long
__stdcall
Ndr64AsyncStubCall(
    struct IRpcStubBuffer *     pThis,
    struct IRpcChannelBuffer *  pChannel,
    PRPC_MESSAGE                pRpcMsg,
    unsigned long *             pdwStubPhase
    );


__declspec(dllimport)
long
__stdcall
Ndr64DcomAsyncStubCall(
    struct IRpcStubBuffer    *  pThis,
    struct IRpcChannelBuffer *  pChannel,
    PRPC_MESSAGE                pRpcMsg,
    unsigned long            *  pdwStubPhase
    );

__declspec(dllimport)
long
__stdcall
NdrStubCall3 (
    void  *    pThis, 
    void  * pChannel, 
    PRPC_MESSAGE                pRpcMsg,
    unsigned long  *            pdwStubPhase
    );

__declspec(dllimport)
void
__stdcall
NdrServerCallAll(
    PRPC_MESSAGE                pRpcMsg
    );

__declspec(dllimport)
void
__stdcall
NdrServerCallNdr64(
    PRPC_MESSAGE                pRpcMsg
    );


__declspec(dllimport)
void
__stdcall
NdrServerCall3(
    PRPC_MESSAGE                pRpcMsg
    );



__declspec(dllimport)
void
__stdcall
NdrPartialIgnoreClientMarshall(
    PMIDL_STUB_MESSAGE          pStubMsg,
    void *                      pMemory
    );

__declspec(dllimport)
void
__stdcall
NdrPartialIgnoreServerUnmarshall(
    PMIDL_STUB_MESSAGE          pStubMsg,
    void **                     ppMemory
    );

__declspec(dllimport)
void
__stdcall
NdrPartialIgnoreClientBufferSize(
    PMIDL_STUB_MESSAGE          pStubMsg,
    void *                      pMemory
    );

__declspec(dllimport)
void
__stdcall
NdrPartialIgnoreServerInitialize(
    PMIDL_STUB_MESSAGE          pStubMsg,
    void **                     ppMemory,
    PFORMAT_STRING              pFormat
    );


void __stdcall
RpcUserFree( handle_t AsyncHandle, void * pBuffer );


}
#line 3101 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcndr.h"

#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\poppack.h"


























#pragma warning(disable:4103)

#pragma pack(pop)


#line 33 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\poppack.h"


#line 36 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\poppack.h"
#line 37 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\poppack.h"

#line 3103 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcndr.h"

#line 3105 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\rpcndr.h"



#line 15 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"




#line 20 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"



#line 24 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"



#line 28 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"



#line 32 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"






#pragma once
#line 40 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"

#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\pshpack8.h"























#pragma warning(disable:4103)

#pragma pack(push,8)


#line 30 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\pshpack8.h"


#line 33 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\pshpack8.h"
#line 34 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\pshpack8.h"

#line 42 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"






















































#line 97 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"

#line 99 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"

































































































#line 197 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"
























#line 224 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"
   
   
#line 227 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"
#line 228 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"







extern "C++"
{
    template<typename T> void** IID_PPV_ARGS_Helper(T** pp) 
    {
        static_cast<IUnknown*>(*pp);    
        return reinterpret_cast<void**>(pp);
    }
}



















































#line 295 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"












#line 308 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"
#line 309 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"








#line 318 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"
#line 319 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"



































#line 355 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"



typedef enum tagREGCLS
{
    REGCLS_SINGLEUSE = 0,       
    REGCLS_MULTIPLEUSE = 1,     
                                
    REGCLS_MULTI_SEPARATE = 2,  
                                
    REGCLS_SUSPENDED      = 4,  
                                
    REGCLS_SURROGATE      = 8   
                                
                                
} REGCLS;
































#line 404 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"








#line 413 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"











typedef DWORD STGFMT;











typedef struct    IRpcStubBuffer     IRpcStubBuffer;
typedef struct    IRpcChannelBuffer  IRpcChannelBuffer;

#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wtypes.h"





 










#pragma warning( disable: 4049 )  





#line 24 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wtypes.h"




#line 29 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wtypes.h"













#pragma once
#line 44 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wtypes.h"

 



#line 1 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\guiddef.h"
























































#line 58 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\guiddef.h"








#line 67 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\guiddef.h"












































































































































#line 50 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wtypes.h"


extern "C"{
#line 54 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wtypes.h"



 








#pragma once
#line 68 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wtypes.h"


extern RPC_IF_HANDLE __MIDL_itf_wtypes_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_wtypes_0000_0000_v0_0_s_ifspec;





 

typedef struct tagRemHGLOBAL
    {
    long fNullHGlobal;
    unsigned long cbData;
    byte data[ 1 ];
    } 	RemHGLOBAL;

typedef struct tagRemHMETAFILEPICT
    {
    long mm;
    long xExt;
    long yExt;
    unsigned long cbData;
    byte data[ 1 ];
    } 	RemHMETAFILEPICT;

typedef struct tagRemHENHMETAFILE
    {
    unsigned long cbData;
    byte data[ 1 ];
    } 	RemHENHMETAFILE;

typedef struct tagRemHBITMAP
    {
    unsigned long cbData;
    byte data[ 1 ];
    } 	RemHBITMAP;

typedef struct tagRemHPALETTE
    {
    unsigned long cbData;
    byte data[ 1 ];
    } 	RemHPALETTE;

typedef struct tagRemBRUSH
    {
    unsigned long cbData;
    byte data[ 1 ];
    } 	RemHBRUSH;
































































































































































































#line 311 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wtypes.h"






























typedef WCHAR OLECHAR;

typedef    OLECHAR *LPOLESTR;

typedef    const OLECHAR *LPCOLESTR;









#line 356 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wtypes.h"
























typedef unsigned char UCHAR;

typedef short SHORT;

typedef unsigned short USHORT;

typedef DWORD ULONG;

typedef double DOUBLE;






























#line 420 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wtypes.h"
















































































typedef struct _COAUTHIDENTITY
    {
    USHORT *User;
    ULONG UserLength;
    USHORT *Domain;
    ULONG DomainLength;
    USHORT *Password;
    ULONG PasswordLength;
    ULONG Flags;
    } 	COAUTHIDENTITY;

typedef struct _COAUTHINFO
    {
    DWORD dwAuthnSvc;
    DWORD dwAuthzSvc;
    LPWSTR pwszServerPrincName;
    DWORD dwAuthnLevel;
    DWORD dwImpersonationLevel;
    COAUTHIDENTITY *pAuthIdentityData;
    DWORD dwCapabilities;
    } 	COAUTHINFO;

typedef LONG SCODE;

typedef SCODE *PSCODE;






























#line 556 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wtypes.h"
typedef 
enum tagMEMCTX
    {	MEMCTX_TASK	= 1,
	MEMCTX_SHARED	= 2,
	MEMCTX_MACSYSTEM	= 3,
	MEMCTX_UNKNOWN	= -1,
	MEMCTX_SAME	= -2
    } 	MEMCTX;





#line 570 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wtypes.h"



#line 574 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wtypes.h"





#line 580 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wtypes.h"



#line 584 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wtypes.h"








#line 593 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wtypes.h"
typedef 
enum tagCLSCTX
    {	CLSCTX_INPROC_SERVER	= 0x1,
	CLSCTX_INPROC_HANDLER	= 0x2,
	CLSCTX_LOCAL_SERVER	= 0x4,
	CLSCTX_INPROC_SERVER16	= 0x8,
	CLSCTX_REMOTE_SERVER	= 0x10,
	CLSCTX_INPROC_HANDLER16	= 0x20,
	CLSCTX_RESERVED1	= 0x40,
	CLSCTX_RESERVED2	= 0x80,
	CLSCTX_RESERVED3	= 0x100,
	CLSCTX_RESERVED4	= 0x200,
	CLSCTX_NO_CODE_DOWNLOAD	= 0x400,
	CLSCTX_RESERVED5	= 0x800,
	CLSCTX_NO_CUSTOM_MARSHAL	= 0x1000,
	CLSCTX_ENABLE_CODE_DOWNLOAD	= 0x2000,
	CLSCTX_NO_FAILURE_LOG	= 0x4000,
	CLSCTX_DISABLE_AAA	= 0x8000,
	CLSCTX_ENABLE_AAA	= 0x10000,
	CLSCTX_FROM_DEFAULT_CONTEXT	= 0x20000,
	CLSCTX_ACTIVATE_32_BIT_SERVER	= 0x40000,
	CLSCTX_ACTIVATE_64_BIT_SERVER	= 0x80000,
	CLSCTX_ENABLE_CLOAKING	= 0x100000,
	CLSCTX_PS_DLL	= ( int  )0x80000000
    } 	CLSCTX;


















typedef 
enum tagMSHLFLAGS
    {	MSHLFLAGS_NORMAL	= 0,
	MSHLFLAGS_TABLESTRONG	= 1,
	MSHLFLAGS_TABLEWEAK	= 2,
	MSHLFLAGS_NOPING	= 4,
	MSHLFLAGS_RESERVED1	= 8,
	MSHLFLAGS_RESERVED2	= 16,
	MSHLFLAGS_RESERVED3	= 32,
	MSHLFLAGS_RESERVED4	= 64
    } 	MSHLFLAGS;

typedef 
enum tagMSHCTX
    {	MSHCTX_LOCAL	= 0,
	MSHCTX_NOSHAREDMEM	= 1,
	MSHCTX_DIFFERENTMACHINE	= 2,
	MSHCTX_INPROC	= 3,
	MSHCTX_CROSSCTX	= 4
    } 	MSHCTX;

typedef 
enum tagDVASPECT
    {	DVASPECT_CONTENT	= 1,
	DVASPECT_THUMBNAIL	= 2,
	DVASPECT_ICON	= 4,
	DVASPECT_DOCPRINT	= 8
    } 	DVASPECT;

typedef 
enum tagSTGC
    {	STGC_DEFAULT	= 0,
	STGC_OVERWRITE	= 1,
	STGC_ONLYIFCURRENT	= 2,
	STGC_DANGEROUSLYCOMMITMERELYTODISKCACHE	= 4,
	STGC_CONSOLIDATE	= 8
    } 	STGC;

typedef 
enum tagSTGMOVE
    {	STGMOVE_MOVE	= 0,
	STGMOVE_COPY	= 1,
	STGMOVE_SHALLOWCOPY	= 2
    } 	STGMOVE;

typedef 
enum tagSTATFLAG
    {	STATFLAG_DEFAULT	= 0,
	STATFLAG_NONAME	= 1,
	STATFLAG_NOOPEN	= 2
    } 	STATFLAG;

typedef  void *HCONTEXT;



typedef DWORD LCID;

#line 695 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wtypes.h"


typedef USHORT LANGID;

#line 700 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wtypes.h"
typedef struct _BYTE_BLOB
    {
    unsigned long clSize;
    byte abData[ 1 ];
    } 	BYTE_BLOB;

typedef    BYTE_BLOB *UP_BYTE_BLOB;

typedef struct _WORD_BLOB
    {
    unsigned long clSize;
    unsigned short asData[ 1 ];
    } 	WORD_BLOB;

typedef    WORD_BLOB *UP_WORD_BLOB;

typedef struct _DWORD_BLOB
    {
    unsigned long clSize;
    unsigned long alData[ 1 ];
    } 	DWORD_BLOB;

typedef    DWORD_BLOB *UP_DWORD_BLOB;

typedef struct _FLAGGED_BYTE_BLOB
    {
    unsigned long fFlags;
    unsigned long clSize;
    byte abData[ 1 ];
    } 	FLAGGED_BYTE_BLOB;

typedef    FLAGGED_BYTE_BLOB *UP_FLAGGED_BYTE_BLOB;

typedef struct _FLAGGED_WORD_BLOB
    {
    unsigned long fFlags;
    unsigned long clSize;
    unsigned short asData[ 1 ];
    } 	FLAGGED_WORD_BLOB;

typedef    FLAGGED_WORD_BLOB *UP_FLAGGED_WORD_BLOB;

typedef struct _BYTE_SIZEDARR
    {
    unsigned long clSize;
    byte *pData;
    } 	BYTE_SIZEDARR;

typedef struct _SHORT_SIZEDARR
    {
    unsigned long clSize;
    unsigned short *pData;
    } 	WORD_SIZEDARR;

typedef struct _LONG_SIZEDARR
    {
    unsigned long clSize;
    unsigned long *pData;
    } 	DWORD_SIZEDARR;

typedef struct _HYPER_SIZEDARR
    {
    unsigned long clSize;
    __int64 *pData;
    } 	HYPER_SIZEDARR;







typedef struct _userCLIPFORMAT
    {
    long fContext;
     union __MIDL_IWinTypes_0001
        {
        DWORD dwValue;
        wchar_t *pwszName;
        } 	u;
    } 	userCLIPFORMAT;

typedef    userCLIPFORMAT *wireCLIPFORMAT;

typedef  WORD CLIPFORMAT;

typedef struct _GDI_NONREMOTE
    {
    long fContext;
     union __MIDL_IWinTypes_0002
        {
        long hInproc;
        DWORD_BLOB *hRemote;
        } 	u;
    } 	GDI_NONREMOTE;

typedef struct _userHGLOBAL
    {
    long fContext;
     union __MIDL_IWinTypes_0003
        {
        long hInproc;
        FLAGGED_BYTE_BLOB *hRemote;
        __int64 hInproc64;
        } 	u;
    } 	userHGLOBAL;

typedef    userHGLOBAL *wireHGLOBAL;

typedef struct _userHMETAFILE
    {
    long fContext;
     union __MIDL_IWinTypes_0004
        {
        long hInproc;
        BYTE_BLOB *hRemote;
        __int64 hInproc64;
        } 	u;
    } 	userHMETAFILE;

typedef struct _remoteMETAFILEPICT
    {
    long mm;
    long xExt;
    long yExt;
    userHMETAFILE *hMF;
    } 	remoteMETAFILEPICT;

typedef struct _userHMETAFILEPICT
    {
    long fContext;
     union __MIDL_IWinTypes_0005
        {
        long hInproc;
        remoteMETAFILEPICT *hRemote;
        __int64 hInproc64;
        } 	u;
    } 	userHMETAFILEPICT;

typedef struct _userHENHMETAFILE
    {
    long fContext;
     union __MIDL_IWinTypes_0006
        {
        long hInproc;
        BYTE_BLOB *hRemote;
        __int64 hInproc64;
        } 	u;
    } 	userHENHMETAFILE;

typedef struct _userBITMAP
    {
    LONG bmType;
    LONG bmWidth;
    LONG bmHeight;
    LONG bmWidthBytes;
    WORD bmPlanes;
    WORD bmBitsPixel;
    ULONG cbSize;
    byte pBuffer[ 1 ];
    } 	userBITMAP;

typedef struct _userHBITMAP
    {
    long fContext;
     union __MIDL_IWinTypes_0007
        {
        long hInproc;
        userBITMAP *hRemote;
        __int64 hInproc64;
        } 	u;
    } 	userHBITMAP;

typedef struct _userHPALETTE
    {
    long fContext;
     union __MIDL_IWinTypes_0008
        {
        long hInproc;
        LOGPALETTE *hRemote;
        __int64 hInproc64;
        } 	u;
    } 	userHPALETTE;

typedef struct _RemotableHandle
    {
    long fContext;
     union __MIDL_IWinTypes_0009
        {
        long hInproc;
        long hRemote;
        } 	u;
    } 	RemotableHandle;

typedef    RemotableHandle *wireHWND;

typedef    RemotableHandle *wireHMENU;

typedef    RemotableHandle *wireHACCEL;

typedef    RemotableHandle *wireHBRUSH;

typedef    RemotableHandle *wireHFONT;

typedef    RemotableHandle *wireHDC;

typedef    RemotableHandle *wireHICON;

typedef    RemotableHandle *wireHRGN;























#line 933 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wtypes.h"



















































typedef    userHBITMAP *wireHBITMAP;

typedef    userHPALETTE *wireHPALETTE;

typedef    userHENHMETAFILE *wireHENHMETAFILE;

typedef    userHMETAFILE *wireHMETAFILE;

typedef    userHMETAFILEPICT *wireHMETAFILEPICT;














#line 1008 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wtypes.h"
typedef  void *HMETAFILEPICT;



extern RPC_IF_HANDLE IWinTypes_v0_1_c_ifspec;
extern RPC_IF_HANDLE IWinTypes_v0_1_s_ifspec;
#line 1015 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wtypes.h"


 



#pragma warning(push)
#line 1023 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wtypes.h"
#pragma warning(disable:4201)
#line 1025 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wtypes.h"
typedef double DATE;












#line 1039 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wtypes.h"

typedef union tagCY {
    struct {




        unsigned long Lo;
        long      Hi;
#line 1049 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wtypes.h"
    } ;
    LONGLONG int64;
} CY;
#line 1053 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wtypes.h"
#line 1054 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wtypes.h"
typedef CY *LPCY;













#line 1069 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wtypes.h"

typedef struct tagDEC {
    USHORT wReserved;
    union {
        struct {
            BYTE scale;
            BYTE sign;
        } ;
        USHORT signscale;
    } ;
    ULONG Hi32;
    union {
        struct {




            ULONG Lo32;
            ULONG Mid32;
#line 1089 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wtypes.h"
        } ;
        ULONGLONG Lo64;
    } ;
} DECIMAL;



#line 1097 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wtypes.h"
typedef DECIMAL *LPDECIMAL;



#pragma warning(pop)


#line 1105 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wtypes.h"
#line 1106 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wtypes.h"
typedef    FLAGGED_WORD_BLOB *wireBSTR;

typedef  OLECHAR *BSTR;

typedef BSTR *LPBSTR;


typedef short VARIANT_BOOL;





#line 1120 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wtypes.h"


#line 1123 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wtypes.h"
typedef boolean BOOLEAN;






typedef struct tagBSTRBLOB
    {
    ULONG cbSize;
    BYTE *pData;
    } 	BSTRBLOB;

typedef struct tagBSTRBLOB *LPBSTRBLOB;

#line 1139 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wtypes.h"






typedef struct tagBLOB
    {
    ULONG cbSize;
    BYTE *pBlobData;
    } 	BLOB;

typedef struct tagBLOB *LPBLOB;

#line 1154 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wtypes.h"
typedef struct tagCLIPDATA
    {
    ULONG cbSize;
    long ulClipFmt;
    BYTE *pClipData;
    } 	CLIPDATA;



typedef unsigned short VARTYPE;




























































enum VARENUM
    {	VT_EMPTY	= 0,
	VT_NULL	= 1,
	VT_I2	= 2,
	VT_I4	= 3,
	VT_R4	= 4,
	VT_R8	= 5,
	VT_CY	= 6,
	VT_DATE	= 7,
	VT_BSTR	= 8,
	VT_DISPATCH	= 9,
	VT_ERROR	= 10,
	VT_BOOL	= 11,
	VT_VARIANT	= 12,
	VT_UNKNOWN	= 13,
	VT_DECIMAL	= 14,
	VT_I1	= 16,
	VT_UI1	= 17,
	VT_UI2	= 18,
	VT_UI4	= 19,
	VT_I8	= 20,
	VT_UI8	= 21,
	VT_INT	= 22,
	VT_UINT	= 23,
	VT_VOID	= 24,
	VT_HRESULT	= 25,
	VT_PTR	= 26,
	VT_SAFEARRAY	= 27,
	VT_CARRAY	= 28,
	VT_USERDEFINED	= 29,
	VT_LPSTR	= 30,
	VT_LPWSTR	= 31,
	VT_RECORD	= 36,
	VT_INT_PTR	= 37,
	VT_UINT_PTR	= 38,
	VT_FILETIME	= 64,
	VT_BLOB	= 65,
	VT_STREAM	= 66,
	VT_STORAGE	= 67,
	VT_STREAMED_OBJECT	= 68,
	VT_STORED_OBJECT	= 69,
	VT_BLOB_OBJECT	= 70,
	VT_CF	= 71,
	VT_CLSID	= 72,
	VT_VERSIONED_STREAM	= 73,
	VT_BSTR_BLOB	= 0xfff,
	VT_VECTOR	= 0x1000,
	VT_ARRAY	= 0x2000,
	VT_BYREF	= 0x4000,
	VT_RESERVED	= 0x8000,
	VT_ILLEGAL	= 0xffff,
	VT_ILLEGALMASKED	= 0xfff,
	VT_TYPEMASK	= 0xfff
    } ;
typedef ULONG PROPID;



typedef struct _tagpropertykey
    {
    GUID fmtid;
    DWORD pid;
    } 	PROPERTYKEY;

#line 1289 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wtypes.h"































typedef struct tagCSPLATFORM
    {
    DWORD dwPlatformId;
    DWORD dwVersionHi;
    DWORD dwVersionLo;
    DWORD dwProcessorArch;
    } 	CSPLATFORM;

typedef struct tagQUERYCONTEXT
    {
    DWORD dwContext;
    CSPLATFORM Platform;
    LCID Locale;
    DWORD dwVersionHi;
    DWORD dwVersionLo;
    } 	QUERYCONTEXT;

typedef  
enum tagTYSPEC
    {	TYSPEC_CLSID	= 0,
	TYSPEC_FILEEXT	= ( TYSPEC_CLSID + 1 ) ,
	TYSPEC_MIMETYPE	= ( TYSPEC_FILEEXT + 1 ) ,
	TYSPEC_FILENAME	= ( TYSPEC_MIMETYPE + 1 ) ,
	TYSPEC_PROGID	= ( TYSPEC_FILENAME + 1 ) ,
	TYSPEC_PACKAGENAME	= ( TYSPEC_PROGID + 1 ) ,
	TYSPEC_OBJECTID	= ( TYSPEC_PACKAGENAME + 1 ) 
    } 	TYSPEC;

typedef  struct __MIDL___MIDL_itf_wtypes_0000_0001_0001
    {
    DWORD tyspec;
     union __MIDL___MIDL_itf_wtypes_0000_0001_0005
        {
        CLSID clsid;
        LPOLESTR pFileExt;
        LPOLESTR pMimeType;
        LPOLESTR pProgId;
        LPOLESTR pFileName;
        struct 
            {
            LPOLESTR pPackageName;
            GUID PolicyId;
            } 	ByName;
        struct 
            {
            GUID ObjectId;
            GUID PolicyId;
            } 	ByObjectId;
        } 	tagged_union;
    } 	uCLSSPEC;



extern RPC_IF_HANDLE __MIDL_itf_wtypes_0000_0001_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_wtypes_0000_0001_v0_0_s_ifspec;






}
#line 1383 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wtypes.h"

#line 1385 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\wtypes.h"




#line 440 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"
#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\unknwn.h"





 










#pragma warning( disable: 4049 )  




























#pragma once
#line 48 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\unknwn.h"

 



typedef struct IUnknown IUnknown;
#line 55 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\unknwn.h"




typedef struct AsyncIUnknown AsyncIUnknown;
#line 61 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\unknwn.h"




typedef struct IClassFactory IClassFactory;
#line 67 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\unknwn.h"






extern "C"{
#line 75 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\unknwn.h"



 








#pragma once
#line 89 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\unknwn.h"


extern RPC_IF_HANDLE __MIDL_itf_unknwn_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_unknwn_0000_0000_v0_0_s_ifspec;





 

typedef  IUnknown *LPUNKNOWN;







    extern "C" const IID IID_IUnknown;
    extern "C++"
    {
        struct __declspec(uuid("00000000-0000-0000-C000-000000000046")) __declspec(novtable)
        IUnknown
        {
        public:
            
            virtual HRESULT __stdcall QueryInterface( 
                 const IID & riid,
                  void  * *ppvObject) = 0;

            virtual ULONG __stdcall AddRef( void) = 0;

            virtual ULONG __stdcall Release( void) = 0;

            template<class Q>
            HRESULT



            __stdcall
#line 131 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\unknwn.h"
            QueryInterface(Q** pp)
            {
                return QueryInterface(__uuidof(Q), (void **)pp);
            }

            
        };
    } 
    HRESULT __stdcall IUnknown_QueryInterface_Proxy(
        IUnknown  * This,
         const IID & riid,
          void  * *ppvObject);
    
    void __stdcall IUnknown_QueryInterface_Stub(
        IRpcStubBuffer *This,
        IRpcChannelBuffer *_pRpcChannelBuffer,
        PRPC_MESSAGE _pRpcMessage,
        DWORD *_pdwStubPhase);
    
    ULONG __stdcall IUnknown_AddRef_Proxy(
        IUnknown  * This);
    
    void __stdcall IUnknown_AddRef_Stub(
        IRpcStubBuffer *This,
        IRpcChannelBuffer *_pRpcChannelBuffer,
        PRPC_MESSAGE _pRpcMessage,
        DWORD *_pdwStubPhase);
    
    ULONG __stdcall IUnknown_Release_Proxy(
        IUnknown  * This);
    
    void __stdcall IUnknown_Release_Stub(
        IRpcStubBuffer *This,
        IRpcChannelBuffer *_pRpcChannelBuffer,
        PRPC_MESSAGE _pRpcMessage,
        DWORD *_pdwStubPhase);











































































































#line 275 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\unknwn.h"



 

#line 281 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\unknwn.h"


extern RPC_IF_HANDLE __MIDL_itf_unknwn_0000_0001_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_unknwn_0000_0001_v0_0_s_ifspec;





 


extern "C" const IID IID_AsyncIUnknown;


    
    struct __declspec(uuid("000e0000-0000-0000-C000-000000000046")) __declspec(novtable)
    AsyncIUnknown : public IUnknown
    {
    public:
        virtual HRESULT __stdcall Begin_QueryInterface( 
             const IID & riid) = 0;
        
        virtual HRESULT __stdcall Finish_QueryInterface( 
             
              void **ppvObject) = 0;
        
        virtual HRESULT __stdcall Begin_AddRef( void) = 0;
        
        virtual ULONG __stdcall Finish_AddRef( void) = 0;
        
        virtual HRESULT __stdcall Begin_Release( void) = 0;
        
        virtual ULONG __stdcall Finish_Release( void) = 0;
        
    };
    



















































































#line 402 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\unknwn.h"




#line 407 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\unknwn.h"






 

typedef    IClassFactory *LPCLASSFACTORY;


extern "C" const IID IID_IClassFactory;


    
    struct __declspec(uuid("00000001-0000-0000-C000-000000000046")) __declspec(novtable)
    IClassFactory : public IUnknown
    {
    public:
        virtual  HRESULT __stdcall CreateInstance( 
             IUnknown *pUnkOuter,
             const IID & riid,
             void **ppvObject) = 0;
        
        virtual  HRESULT __stdcall LockServer( 
             BOOL fLock) = 0;
        
    };
    




























































#line 497 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\unknwn.h"



 HRESULT __stdcall IClassFactory_RemoteCreateInstance_Proxy( 
     IClassFactory * This,
      const IID & riid,
      IUnknown **ppvObject);


void __stdcall IClassFactory_RemoteCreateInstance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall IClassFactory_RemoteLockServer_Proxy( 
     IClassFactory * This,
     BOOL fLock);


void __stdcall IClassFactory_RemoteLockServer_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#line 527 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\unknwn.h"




 HRESULT __stdcall IClassFactory_CreateInstance_Proxy( 
    IClassFactory * This,
     IUnknown *pUnkOuter,
     const IID & riid,
     void **ppvObject);


 HRESULT __stdcall IClassFactory_CreateInstance_Stub( 
     IClassFactory * This,
      const IID & riid,
      IUnknown **ppvObject);

 HRESULT __stdcall IClassFactory_LockServer_Proxy( 
    IClassFactory * This,
     BOOL fLock);


 HRESULT __stdcall IClassFactory_LockServer_Stub( 
     IClassFactory * This,
     BOOL fLock);






}
#line 559 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\unknwn.h"

#line 561 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\unknwn.h"



#line 441 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"
#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"





 










#pragma warning( disable: 4049 )  




























#pragma once
#line 48 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"

 



typedef struct IMarshal IMarshal;
#line 55 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IMarshal2 IMarshal2;
#line 61 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IMalloc IMalloc;
#line 67 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IMallocSpy IMallocSpy;
#line 73 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IStdMarshalInfo IStdMarshalInfo;
#line 79 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IExternalConnection IExternalConnection;
#line 85 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IMultiQI IMultiQI;
#line 91 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct AsyncIMultiQI AsyncIMultiQI;
#line 97 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IInternalUnknown IInternalUnknown;
#line 103 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IEnumUnknown IEnumUnknown;
#line 109 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IBindCtx IBindCtx;
#line 115 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IEnumMoniker IEnumMoniker;
#line 121 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IRunnableObject IRunnableObject;
#line 127 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IRunningObjectTable IRunningObjectTable;
#line 133 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IPersist IPersist;
#line 139 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IPersistStream IPersistStream;
#line 145 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IMoniker IMoniker;
#line 151 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IROTData IROTData;
#line 157 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IEnumString IEnumString;
#line 163 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct ISequentialStream ISequentialStream;
#line 169 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IStream IStream;
#line 175 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IEnumSTATSTG IEnumSTATSTG;
#line 181 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IStorage IStorage;
#line 187 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IPersistFile IPersistFile;
#line 193 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IPersistStorage IPersistStorage;
#line 199 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct ILockBytes ILockBytes;
#line 205 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IEnumFORMATETC IEnumFORMATETC;
#line 211 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IEnumSTATDATA IEnumSTATDATA;
#line 217 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IRootStorage IRootStorage;
#line 223 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IAdviseSink IAdviseSink;
#line 229 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct AsyncIAdviseSink AsyncIAdviseSink;
#line 235 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IAdviseSink2 IAdviseSink2;
#line 241 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct AsyncIAdviseSink2 AsyncIAdviseSink2;
#line 247 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IDataObject IDataObject;
#line 253 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IDataAdviseHolder IDataAdviseHolder;
#line 259 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IMessageFilter IMessageFilter;
#line 265 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IRpcChannelBuffer IRpcChannelBuffer;
#line 271 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IRpcChannelBuffer2 IRpcChannelBuffer2;
#line 277 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IAsyncRpcChannelBuffer IAsyncRpcChannelBuffer;
#line 283 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IRpcChannelBuffer3 IRpcChannelBuffer3;
#line 289 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IRpcSyntaxNegotiate IRpcSyntaxNegotiate;
#line 295 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IRpcProxyBuffer IRpcProxyBuffer;
#line 301 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IRpcStubBuffer IRpcStubBuffer;
#line 307 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IPSFactoryBuffer IPSFactoryBuffer;
#line 313 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IChannelHook IChannelHook;
#line 319 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IClientSecurity IClientSecurity;
#line 325 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IServerSecurity IServerSecurity;
#line 331 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IClassActivator IClassActivator;
#line 337 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IRpcOptions IRpcOptions;
#line 343 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IGlobalOptions IGlobalOptions;
#line 349 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IFillLockBytes IFillLockBytes;
#line 355 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IProgressNotify IProgressNotify;
#line 361 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct ILayoutStorage ILayoutStorage;
#line 367 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IBlockingLock IBlockingLock;
#line 373 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct ITimeAndNoticeControl ITimeAndNoticeControl;
#line 379 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IOplockStorage IOplockStorage;
#line 385 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct ISurrogate ISurrogate;
#line 391 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IGlobalInterfaceTable IGlobalInterfaceTable;
#line 397 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IDirectWriterLock IDirectWriterLock;
#line 403 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct ISynchronize ISynchronize;
#line 409 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct ISynchronizeHandle ISynchronizeHandle;
#line 415 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct ISynchronizeEvent ISynchronizeEvent;
#line 421 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct ISynchronizeContainer ISynchronizeContainer;
#line 427 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct ISynchronizeMutex ISynchronizeMutex;
#line 433 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct ICancelMethodCalls ICancelMethodCalls;
#line 439 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IAsyncManager IAsyncManager;
#line 445 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct ICallFactory ICallFactory;
#line 451 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IRpcHelper IRpcHelper;
#line 457 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IReleaseMarshalBuffers IReleaseMarshalBuffers;
#line 463 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IWaitMultiple IWaitMultiple;
#line 469 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IUrlMon IUrlMon;
#line 475 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IForegroundTransfer IForegroundTransfer;
#line 481 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IAddrTrackingControl IAddrTrackingControl;
#line 487 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IAddrExclusionControl IAddrExclusionControl;
#line 493 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IPipeByte IPipeByte;
#line 499 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct AsyncIPipeByte AsyncIPipeByte;
#line 505 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IPipeLong IPipeLong;
#line 511 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct AsyncIPipeLong AsyncIPipeLong;
#line 517 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IPipeDouble IPipeDouble;
#line 523 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct AsyncIPipeDouble AsyncIPipeDouble;
#line 529 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IThumbnailExtractor IThumbnailExtractor;
#line 535 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IDummyHICONIncluder IDummyHICONIncluder;
#line 541 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IEnumContextProps IEnumContextProps;
#line 547 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IContext IContext;
#line 553 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IObjContext IObjContext;
#line 559 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IProcessLock IProcessLock;
#line 565 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct ISurrogateService ISurrogateService;
#line 571 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IComThreadingInfo IComThreadingInfo;
#line 577 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IProcessInitControl IProcessInitControl;
#line 583 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




typedef struct IInitializeSpy IInitializeSpy;
#line 589 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






extern "C"{
#line 597 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"



 










#line 612 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"


#line 615 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"


#line 618 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"


#line 621 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"





#pragma warning(push)
#line 628 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"
#pragma warning(disable:4201)
#line 630 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"

#pragma once
#line 633 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"














typedef struct _COSERVERINFO
    {
    DWORD dwReserved1;
    LPWSTR pwszName;
    COAUTHINFO *pAuthInfo;
    DWORD dwReserved2;
    } 	COSERVERINFO;




extern RPC_IF_HANDLE __MIDL_itf_objidl_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_objidl_0000_0000_v0_0_s_ifspec;





 

typedef  IMarshal *LPMARSHAL;


extern "C" const IID IID_IMarshal;


    
    struct __declspec(uuid("00000003-0000-0000-C000-000000000046")) __declspec(novtable)
    IMarshal : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetUnmarshalClass( 
             
              const IID & riid,
             
              void *pv,
             
              DWORD dwDestContext,
             
              void *pvDestContext,
             
              DWORD mshlflags,
             
              CLSID *pCid) = 0;
        
        virtual HRESULT __stdcall GetMarshalSizeMax( 
             
              const IID & riid,
             
              void *pv,
             
              DWORD dwDestContext,
             
              void *pvDestContext,
             
              DWORD mshlflags,
             
              DWORD *pSize) = 0;
        
        virtual HRESULT __stdcall MarshalInterface( 
             
              IStream *pStm,
             
              const IID & riid,
             
              void *pv,
             
              DWORD dwDestContext,
             
              void *pvDestContext,
             
              DWORD mshlflags) = 0;
        
        virtual HRESULT __stdcall UnmarshalInterface( 
             
              IStream *pStm,
             
              const IID & riid,
             
              void **ppv) = 0;
        
        virtual HRESULT __stdcall ReleaseMarshalData( 
             
              IStream *pStm) = 0;
        
        virtual HRESULT __stdcall DisconnectObject( 
             
              DWORD dwReserved) = 0;
        
    };
    






























































































































#line 865 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 870 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 

typedef  IMarshal2 *LPMARSHAL2;


extern "C" const IID IID_IMarshal2;


    
    struct __declspec(uuid("000001cf-0000-0000-C000-000000000046")) __declspec(novtable)
    IMarshal2 : public IMarshal
    {
    public:
    };
    































































































































#line 1019 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 1024 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 

typedef  IMalloc *LPMALLOC;


extern "C" const IID IID_IMalloc;


    
    struct __declspec(uuid("00000002-0000-0000-C000-000000000046")) __declspec(novtable)
    IMalloc : public IUnknown
    {
    public:
        virtual void *__stdcall Alloc( 
             
              SIZE_T cb) = 0;
        
        virtual void *__stdcall Realloc( 
             
              void *pv,
             
              SIZE_T cb) = 0;
        
        virtual void __stdcall Free( 
             
              void *pv) = 0;
        
        virtual SIZE_T __stdcall GetSize( 
             
              void *pv) = 0;
        
        virtual int __stdcall DidAlloc( 
             
              void *pv) = 0;
        
        virtual void __stdcall HeapMinimize( void) = 0;
        
    };
    




























































































#line 1162 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 1167 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 

typedef  IMallocSpy *LPMALLOCSPY;


extern "C" const IID IID_IMallocSpy;


    
    struct __declspec(uuid("0000001d-0000-0000-C000-000000000046")) __declspec(novtable)
    IMallocSpy : public IUnknown
    {
    public:
        virtual SIZE_T __stdcall PreAlloc( 
             
              SIZE_T cbRequest) = 0;
        
        virtual void *__stdcall PostAlloc( 
             
              void *pActual) = 0;
        
        virtual void *__stdcall PreFree( 
             
              void *pRequest,
             
              BOOL fSpyed) = 0;
        
        virtual void __stdcall PostFree( 
             
              BOOL fSpyed) = 0;
        
        virtual SIZE_T __stdcall PreRealloc( 
             
              void *pRequest,
             
              SIZE_T cbRequest,
             
              void **ppNewRequest,
             
              BOOL fSpyed) = 0;
        
        virtual void *__stdcall PostRealloc( 
             
              void *pActual,
             
              BOOL fSpyed) = 0;
        
        virtual void *__stdcall PreGetSize( 
             
              void *pRequest,
             
              BOOL fSpyed) = 0;
        
        virtual SIZE_T __stdcall PostGetSize( 
             
              SIZE_T cbActual,
             
              BOOL fSpyed) = 0;
        
        virtual void *__stdcall PreDidAlloc( 
             
              void *pRequest,
             
              BOOL fSpyed) = 0;
        
        virtual int __stdcall PostDidAlloc( 
             
              void *pRequest,
             
              BOOL fSpyed,
             
              int fActual) = 0;
        
        virtual void __stdcall PreHeapMinimize( void) = 0;
        
        virtual void __stdcall PostHeapMinimize( void) = 0;
        
    };
    




























































































































































#line 1409 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 1414 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 

typedef  IStdMarshalInfo *LPSTDMARSHALINFO;


extern "C" const IID IID_IStdMarshalInfo;


    
    struct __declspec(uuid("00000018-0000-0000-C000-000000000046")) __declspec(novtable)
    IStdMarshalInfo : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetClassForHandler( 
             
              DWORD dwDestContext,
             
              void *pvDestContext,
             
              CLSID *pClsid) = 0;
        
    };
    
























































#line 1500 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 1505 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 

typedef  IExternalConnection *LPEXTERNALCONNECTION;

typedef 
enum tagEXTCONN
    {	EXTCONN_STRONG	= 0x1,
	EXTCONN_WEAK	= 0x2,
	EXTCONN_CALLABLE	= 0x4
    } 	EXTCONN;


extern "C" const IID IID_IExternalConnection;


    
    struct __declspec(uuid("00000019-0000-0000-C000-000000000046")) __declspec(novtable)
    IExternalConnection : public IUnknown
    {
    public:
        virtual DWORD __stdcall AddConnection( 
             
              DWORD extconn,
             
              DWORD reserved) = 0;
        
        virtual DWORD __stdcall ReleaseConnection( 
             
              DWORD extconn,
             
              DWORD reserved,
             
              BOOL fLastReleaseCloses) = 0;
        
    };
    


































































#line 1614 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 1619 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"



 

typedef    IMultiQI *LPMULTIQI;

typedef struct tagMULTI_QI
    {
    const IID *pIID;
    IUnknown *pItf;
    HRESULT hr;
    } 	MULTI_QI;



extern RPC_IF_HANDLE __MIDL_itf_objidl_0000_0006_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_objidl_0000_0006_v0_0_s_ifspec;





 


extern "C" const IID IID_IMultiQI;


    
    struct __declspec(uuid("00000020-0000-0000-C000-000000000046")) __declspec(novtable)
    IMultiQI : public IUnknown
    {
    public:
        virtual HRESULT __stdcall QueryMultipleInterfaces( 
             
              ULONG cMQIs,
             
              MULTI_QI *pMQIs) = 0;
        
    };
    






















































#line 1716 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 1721 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 


extern "C" const IID IID_AsyncIMultiQI;


    
    struct __declspec(uuid("000e0020-0000-0000-C000-000000000046")) __declspec(novtable)
    AsyncIMultiQI : public IUnknown
    {
    public:
        virtual HRESULT __stdcall Begin_QueryMultipleInterfaces( 
             
              ULONG cMQIs,
             
              MULTI_QI *pMQIs) = 0;
        
        virtual HRESULT __stdcall Finish_QueryMultipleInterfaces( 
             
              MULTI_QI *pMQIs) = 0;
        
    };
    






























































#line 1813 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 1818 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 


extern "C" const IID IID_IInternalUnknown;


    
    struct __declspec(uuid("00000021-0000-0000-C000-000000000046")) __declspec(novtable)
    IInternalUnknown : public IUnknown
    {
    public:
        virtual HRESULT __stdcall QueryInternalInterface( 
             
              const IID & riid,
             
              void **ppv) = 0;
        
    };
    






















































#line 1898 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 1903 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 

typedef    IEnumUnknown *LPENUMUNKNOWN;


extern "C" const IID IID_IEnumUnknown;


    
    struct __declspec(uuid("00000100-0000-0000-C000-000000000046")) __declspec(novtable)
    IEnumUnknown : public IUnknown
    {
    public:
        virtual  HRESULT __stdcall Next( 
             
              ULONG celt,
             
              IUnknown **rgelt,
             
              ULONG *pceltFetched) = 0;
        
        virtual HRESULT __stdcall Skip( 
             ULONG celt) = 0;
        
        virtual HRESULT __stdcall Reset( void) = 0;
        
        virtual HRESULT __stdcall Clone( 
              IEnumUnknown **ppenum) = 0;
        
    };
    












































































#line 2017 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"



 HRESULT __stdcall IEnumUnknown_RemoteNext_Proxy( 
     IEnumUnknown * This,
     ULONG celt,
      IUnknown **rgelt,
      ULONG *pceltFetched);


void __stdcall IEnumUnknown_RemoteNext_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#line 2036 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 

typedef    IBindCtx *LPBC;

typedef    IBindCtx *LPBINDCTX;


    typedef  struct tagBIND_OPTS {
    DWORD           cbStruct;
    DWORD           grfFlags;
    DWORD           grfMode;
    DWORD           dwTickCountDeadline;
    } BIND_OPTS, * LPBIND_OPTS;











#line 2067 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"

    typedef struct tagBIND_OPTS2 : tagBIND_OPTS {
    DWORD           dwTrackFlags;
    DWORD           dwClassContext;
    LCID            locale;
    COSERVERINFO *  pServerInfo;
    } BIND_OPTS2, * LPBIND_OPTS2;
















#line 2091 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"

    typedef struct tagBIND_OPTS3 : tagBIND_OPTS2 {
   HWND           hwnd;
    } BIND_OPTS3, * LPBIND_OPTS3;
















#line 2112 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"
typedef 
enum tagBIND_FLAGS
    {	BIND_MAYBOTHERUSER	= 1,
	BIND_JUSTTESTEXISTENCE	= 2
    } 	BIND_FLAGS;


extern "C" const IID IID_IBindCtx;


    
    struct __declspec(uuid("0000000e-0000-0000-C000-000000000046")) __declspec(novtable)
    IBindCtx : public IUnknown
    {
    public:
        virtual HRESULT __stdcall RegisterObjectBound( 
              IUnknown *punk) = 0;
        
        virtual HRESULT __stdcall RevokeObjectBound( 
              IUnknown *punk) = 0;
        
        virtual HRESULT __stdcall ReleaseBoundObjects( void) = 0;
        
        virtual  HRESULT __stdcall SetBindOptions( 
             BIND_OPTS *pbindopts) = 0;
        
        virtual  HRESULT __stdcall GetBindOptions( 
             BIND_OPTS *pbindopts) = 0;
        
        virtual HRESULT __stdcall GetRunningObjectTable( 
              IRunningObjectTable **pprot) = 0;
        
        virtual HRESULT __stdcall RegisterObjectParam( 
              LPOLESTR pszKey,
              IUnknown *punk) = 0;
        
        virtual HRESULT __stdcall GetObjectParam( 
              LPOLESTR pszKey,
              IUnknown **ppunk) = 0;
        
        virtual HRESULT __stdcall EnumObjectParam( 
              IEnumString **ppenum) = 0;
        
        virtual HRESULT __stdcall RevokeObjectParam( 
              LPOLESTR pszKey) = 0;
        
    };
    



















































































































#line 2276 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"



 HRESULT __stdcall IBindCtx_RemoteSetBindOptions_Proxy( 
     IBindCtx * This,
      BIND_OPTS2 *pbindopts);


void __stdcall IBindCtx_RemoteSetBindOptions_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall IBindCtx_RemoteGetBindOptions_Proxy( 
     IBindCtx * This,
      BIND_OPTS2 *pbindopts);


void __stdcall IBindCtx_RemoteGetBindOptions_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#line 2305 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 

typedef    IEnumMoniker *LPENUMMONIKER;


extern "C" const IID IID_IEnumMoniker;


    
    struct __declspec(uuid("00000102-0000-0000-C000-000000000046")) __declspec(novtable)
    IEnumMoniker : public IUnknown
    {
    public:
        virtual  HRESULT __stdcall Next( 
             ULONG celt,
             
              IMoniker **rgelt,
             
              ULONG *pceltFetched) = 0;
        
        virtual HRESULT __stdcall Skip( 
             ULONG celt) = 0;
        
        virtual HRESULT __stdcall Reset( void) = 0;
        
        virtual HRESULT __stdcall Clone( 
              IEnumMoniker **ppenum) = 0;
        
    };
    











































































#line 2417 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"



 HRESULT __stdcall IEnumMoniker_RemoteNext_Proxy( 
     IEnumMoniker * This,
     ULONG celt,
      IMoniker **rgelt,
      ULONG *pceltFetched);


void __stdcall IEnumMoniker_RemoteNext_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#line 2436 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 

typedef    IRunnableObject *LPRUNNABLEOBJECT;


extern "C" const IID IID_IRunnableObject;


    
    struct __declspec(uuid("00000126-0000-0000-C000-000000000046")) __declspec(novtable)
    IRunnableObject : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetRunningClass( 
              LPCLSID lpClsid) = 0;
        
        virtual HRESULT __stdcall Run( 
              LPBINDCTX pbc) = 0;
        
        virtual  BOOL __stdcall IsRunning( void) = 0;
        
        virtual HRESULT __stdcall LockRunning( 
             BOOL fLock,
             BOOL fLastUnlockCloses) = 0;
        
        virtual HRESULT __stdcall SetContainedObject( 
             BOOL fContained) = 0;
        
    };
    















































































#line 2552 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"



 HRESULT __stdcall IRunnableObject_RemoteIsRunning_Proxy( 
     IRunnableObject * This);


void __stdcall IRunnableObject_RemoteIsRunning_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#line 2568 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 

typedef    IRunningObjectTable *LPRUNNINGOBJECTTABLE;


extern "C" const IID IID_IRunningObjectTable;


    
    struct __declspec(uuid("00000010-0000-0000-C000-000000000046")) __declspec(novtable)
    IRunningObjectTable : public IUnknown
    {
    public:
        virtual HRESULT __stdcall Register( 
             DWORD grfFlags,
              IUnknown *punkObject,
              IMoniker *pmkObjectName,
              DWORD *pdwRegister) = 0;
        
        virtual HRESULT __stdcall Revoke( 
             DWORD dwRegister) = 0;
        
        virtual HRESULT __stdcall IsRunning( 
              IMoniker *pmkObjectName) = 0;
        
        virtual HRESULT __stdcall GetObjectA( 
              IMoniker *pmkObjectName,
              IUnknown **ppunkObject) = 0;
        
        virtual HRESULT __stdcall NoteChangeTime( 
             DWORD dwRegister,
              FILETIME *pfiletime) = 0;
        
        virtual HRESULT __stdcall GetTimeOfLastChange( 
              IMoniker *pmkObjectName,
              FILETIME *pfiletime) = 0;
        
        virtual HRESULT __stdcall EnumRunning( 
              IEnumMoniker **ppenumMoniker) = 0;
        
    };
    



































































































#line 2716 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 2721 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 

typedef    IPersist *LPPERSIST;


extern "C" const IID IID_IPersist;


    
    struct __declspec(uuid("0000010c-0000-0000-C000-000000000046")) __declspec(novtable)
    IPersist : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetClassID( 
              CLSID *pClassID) = 0;
        
    };
    



















































#line 2797 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 2802 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 

typedef    IPersistStream *LPPERSISTSTREAM;


extern "C" const IID IID_IPersistStream;


    
    struct __declspec(uuid("00000109-0000-0000-C000-000000000046")) __declspec(novtable)
    IPersistStream : public IPersist
    {
    public:
        virtual HRESULT __stdcall IsDirty( void) = 0;
        
        virtual HRESULT __stdcall Load( 
              IStream *pStm) = 0;
        
        virtual HRESULT __stdcall Save( 
              IStream *pStm,
             BOOL fClearDirty) = 0;
        
        virtual HRESULT __stdcall GetSizeMax( 
              ULARGE_INTEGER *pcbSize) = 0;
        
    };
    
















































































#line 2916 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 2921 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 

typedef    IMoniker *LPMONIKER;

typedef 
enum tagMKSYS
    {	MKSYS_NONE	= 0,
	MKSYS_GENERICCOMPOSITE	= 1,
	MKSYS_FILEMONIKER	= 2,
	MKSYS_ANTIMONIKER	= 3,
	MKSYS_ITEMMONIKER	= 4,
	MKSYS_POINTERMONIKER	= 5,
	MKSYS_CLASSMONIKER	= 7,
	MKSYS_OBJREFMONIKER	= 8,
	MKSYS_SESSIONMONIKER	= 9,
	MKSYS_LUAMONIKER	= 10
    } 	MKSYS;

typedef  
enum tagMKREDUCE
    {	MKRREDUCE_ONE	= ( 3 << 16 ) ,
	MKRREDUCE_TOUSER	= ( 2 << 16 ) ,
	MKRREDUCE_THROUGHUSER	= ( 1 << 16 ) ,
	MKRREDUCE_ALL	= 0
    } 	MKRREDUCE;


extern "C" const IID IID_IMoniker;


    
    struct __declspec(uuid("0000000f-0000-0000-C000-000000000046")) __declspec(novtable)
    IMoniker : public IPersistStream
    {
    public:
        virtual  HRESULT __stdcall BindToObject( 
             IBindCtx *pbc,
             IMoniker *pmkToLeft,
             const IID & riidResult,
             void **ppvResult) = 0;
        
        virtual  HRESULT __stdcall BindToStorage( 
             IBindCtx *pbc,
             IMoniker *pmkToLeft,
             const IID & riid,
             void **ppvObj) = 0;
        
        virtual HRESULT __stdcall Reduce( 
              IBindCtx *pbc,
             DWORD dwReduceHowFar,
              IMoniker **ppmkToLeft,
              IMoniker **ppmkReduced) = 0;
        
        virtual HRESULT __stdcall ComposeWith( 
              IMoniker *pmkRight,
             BOOL fOnlyIfNotGeneric,
              IMoniker **ppmkComposite) = 0;
        
        virtual HRESULT __stdcall Enum( 
             BOOL fForward,
              IEnumMoniker **ppenumMoniker) = 0;
        
        virtual HRESULT __stdcall IsEqual( 
              IMoniker *pmkOtherMoniker) = 0;
        
        virtual HRESULT __stdcall Hash( 
              DWORD *pdwHash) = 0;
        
        virtual HRESULT __stdcall IsRunning( 
              IBindCtx *pbc,
              IMoniker *pmkToLeft,
              IMoniker *pmkNewlyRunning) = 0;
        
        virtual HRESULT __stdcall GetTimeOfLastChange( 
              IBindCtx *pbc,
              IMoniker *pmkToLeft,
              FILETIME *pFileTime) = 0;
        
        virtual HRESULT __stdcall Inverse( 
              IMoniker **ppmk) = 0;
        
        virtual HRESULT __stdcall CommonPrefixWith( 
              IMoniker *pmkOther,
              IMoniker **ppmkPrefix) = 0;
        
        virtual HRESULT __stdcall RelativePathTo( 
              IMoniker *pmkOther,
              IMoniker **ppmkRelPath) = 0;
        
        virtual HRESULT __stdcall GetDisplayName( 
              IBindCtx *pbc,
              IMoniker *pmkToLeft,
              LPOLESTR *ppszDisplayName) = 0;
        
        virtual HRESULT __stdcall ParseDisplayName( 
              IBindCtx *pbc,
              IMoniker *pmkToLeft,
              LPOLESTR pszDisplayName,
              ULONG *pchEaten,
              IMoniker **ppmkOut) = 0;
        
        virtual HRESULT __stdcall IsSystemMoniker( 
              DWORD *pdwMksys) = 0;
        
    };
    


















































































































































































































#line 3244 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"



 HRESULT __stdcall IMoniker_RemoteBindToObject_Proxy( 
     IMoniker * This,
      IBindCtx *pbc,
      IMoniker *pmkToLeft,
      const IID & riidResult,
      IUnknown **ppvResult);


void __stdcall IMoniker_RemoteBindToObject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall IMoniker_RemoteBindToStorage_Proxy( 
     IMoniker * This,
      IBindCtx *pbc,
      IMoniker *pmkToLeft,
      const IID & riid,
      IUnknown **ppvObj);


void __stdcall IMoniker_RemoteBindToStorage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#line 3279 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 


extern "C" const IID IID_IROTData;


    
    struct __declspec(uuid("f29f6bc0-5021-11ce-aa15-00006901293f")) __declspec(novtable)
    IROTData : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetComparisonData( 
              byte *pbData,
             ULONG cbMax,
              ULONG *pcbData) = 0;
        
    };
    





















































#line 3357 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 3362 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 

typedef    IEnumString *LPENUMSTRING;


extern "C" const IID IID_IEnumString;


    
    struct __declspec(uuid("00000101-0000-0000-C000-000000000046")) __declspec(novtable)
    IEnumString : public IUnknown
    {
    public:
        virtual  HRESULT __stdcall Next( 
             ULONG celt,
             
              LPOLESTR *rgelt,
             
              ULONG *pceltFetched) = 0;
        
        virtual HRESULT __stdcall Skip( 
             ULONG celt) = 0;
        
        virtual HRESULT __stdcall Reset( void) = 0;
        
        virtual HRESULT __stdcall Clone( 
              IEnumString **ppenum) = 0;
        
    };
    











































































#line 3474 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"



 HRESULT __stdcall IEnumString_RemoteNext_Proxy( 
     IEnumString * This,
     ULONG celt,
      LPOLESTR *rgelt,
      ULONG *pceltFetched);


void __stdcall IEnumString_RemoteNext_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#line 3493 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 


extern "C" const IID IID_ISequentialStream;


    
    struct __declspec(uuid("0c733a30-2a1c-11ce-ade5-00aa0044773d")) __declspec(novtable)
    ISequentialStream : public IUnknown
    {
    public:
        virtual  HRESULT __stdcall Read( 
             
              void *pv,
             ULONG cb,
             
              ULONG *pcbRead) = 0;
        
        virtual  HRESULT __stdcall Write( 
             
              const void *pv,
             ULONG cb,
             
              ULONG *pcbWritten) = 0;
        
    };
    


































































#line 3593 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"



 HRESULT __stdcall ISequentialStream_RemoteRead_Proxy( 
     ISequentialStream * This,
      byte *pv,
     ULONG cb,
      ULONG *pcbRead);


void __stdcall ISequentialStream_RemoteRead_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall ISequentialStream_RemoteWrite_Proxy( 
     ISequentialStream * This,
      const byte *pv,
     ULONG cb,
      ULONG *pcbWritten);


void __stdcall ISequentialStream_RemoteWrite_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#line 3626 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 

typedef    IStream *LPSTREAM;



















typedef struct tagSTATSTG
    {
    LPOLESTR pwcsName;
    DWORD type;
    ULARGE_INTEGER cbSize;
    FILETIME mtime;
    FILETIME ctime;
    FILETIME atime;
    DWORD grfMode;
    DWORD grfLocksSupported;
    CLSID clsid;
    DWORD grfStateBits;
    DWORD reserved;
    } 	STATSTG;

#line 3670 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"
typedef 
enum tagSTGTY
    {	STGTY_STORAGE	= 1,
	STGTY_STREAM	= 2,
	STGTY_LOCKBYTES	= 3,
	STGTY_PROPERTY	= 4
    } 	STGTY;

typedef 
enum tagSTREAM_SEEK
    {	STREAM_SEEK_SET	= 0,
	STREAM_SEEK_CUR	= 1,
	STREAM_SEEK_END	= 2
    } 	STREAM_SEEK;

typedef 
enum tagLOCKTYPE
    {	LOCK_WRITE	= 1,
	LOCK_EXCLUSIVE	= 2,
	LOCK_ONLYONCE	= 4
    } 	LOCKTYPE;


extern "C" const IID IID_IStream;


    
    struct __declspec(uuid("0000000c-0000-0000-C000-000000000046")) __declspec(novtable)
    IStream : public ISequentialStream
    {
    public:
        virtual  HRESULT __stdcall Seek( 
             LARGE_INTEGER dlibMove,
             DWORD dwOrigin,
             
              ULARGE_INTEGER *plibNewPosition) = 0;
        
        virtual HRESULT __stdcall SetSize( 
             ULARGE_INTEGER libNewSize) = 0;
        
        virtual  HRESULT __stdcall CopyTo( 
             IStream *pstm,
             ULARGE_INTEGER cb,
             
              ULARGE_INTEGER *pcbRead,
             
              ULARGE_INTEGER *pcbWritten) = 0;
        
        virtual HRESULT __stdcall Commit( 
             DWORD grfCommitFlags) = 0;
        
        virtual HRESULT __stdcall Revert( void) = 0;
        
        virtual HRESULT __stdcall LockRegion( 
             ULARGE_INTEGER libOffset,
             ULARGE_INTEGER cb,
             DWORD dwLockType) = 0;
        
        virtual HRESULT __stdcall UnlockRegion( 
             ULARGE_INTEGER libOffset,
             ULARGE_INTEGER cb,
             DWORD dwLockType) = 0;
        
        virtual HRESULT __stdcall Stat( 
              STATSTG *pstatstg,
             DWORD grfStatFlag) = 0;
        
        virtual HRESULT __stdcall Clone( 
              IStream **ppstm) = 0;
        
    };
    














































































































































#line 3885 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"



 HRESULT __stdcall IStream_RemoteSeek_Proxy( 
     IStream * This,
     LARGE_INTEGER dlibMove,
     DWORD dwOrigin,
      ULARGE_INTEGER *plibNewPosition);


void __stdcall IStream_RemoteSeek_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall IStream_RemoteCopyTo_Proxy( 
     IStream * This,
      IStream *pstm,
     ULARGE_INTEGER cb,
      ULARGE_INTEGER *pcbRead,
      ULARGE_INTEGER *pcbWritten);


void __stdcall IStream_RemoteCopyTo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#line 3919 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 

typedef    IEnumSTATSTG *LPENUMSTATSTG;


extern "C" const IID IID_IEnumSTATSTG;


    
    struct __declspec(uuid("0000000d-0000-0000-C000-000000000046")) __declspec(novtable)
    IEnumSTATSTG : public IUnknown
    {
    public:
        virtual  HRESULT __stdcall Next( 
             ULONG celt,
             
              STATSTG *rgelt,
             
              ULONG *pceltFetched) = 0;
        
        virtual HRESULT __stdcall Skip( 
             ULONG celt) = 0;
        
        virtual HRESULT __stdcall Reset( void) = 0;
        
        virtual HRESULT __stdcall Clone( 
              IEnumSTATSTG **ppenum) = 0;
        
    };
    











































































#line 4031 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"



 HRESULT __stdcall IEnumSTATSTG_RemoteNext_Proxy( 
     IEnumSTATSTG * This,
     ULONG celt,
      STATSTG *rgelt,
      ULONG *pceltFetched);


void __stdcall IEnumSTATSTG_RemoteNext_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#line 4050 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 

typedef    IStorage *LPSTORAGE;

typedef struct tagRemSNB
    {
    unsigned long ulCntStr;
    unsigned long ulCntChar;
    OLECHAR rgString[ 1 ];
    } 	RemSNB;

typedef    RemSNB *wireSNB;

typedef  LPOLESTR *SNB;


extern "C" const IID IID_IStorage;


    
    struct __declspec(uuid("0000000b-0000-0000-C000-000000000046")) __declspec(novtable)
    IStorage : public IUnknown
    {
    public:
        virtual HRESULT __stdcall CreateStream( 
              const OLECHAR *pwcsName,
             DWORD grfMode,
             DWORD reserved1,
             DWORD reserved2,
              IStream **ppstm) = 0;
        
        virtual  HRESULT __stdcall OpenStream( 
             const OLECHAR *pwcsName,
             void *reserved1,
             DWORD grfMode,
             DWORD reserved2,
             IStream **ppstm) = 0;
        
        virtual HRESULT __stdcall CreateStorage( 
              const OLECHAR *pwcsName,
             DWORD grfMode,
             DWORD reserved1,
             DWORD reserved2,
              IStorage **ppstg) = 0;
        
        virtual HRESULT __stdcall OpenStorage( 
              const OLECHAR *pwcsName,
              IStorage *pstgPriority,
             DWORD grfMode,
              SNB snbExclude,
             DWORD reserved,
              IStorage **ppstg) = 0;
        
        virtual  HRESULT __stdcall CopyTo( 
             DWORD ciidExclude,
             const IID *rgiidExclude,
             
              SNB snbExclude,
             IStorage *pstgDest) = 0;
        
        virtual HRESULT __stdcall MoveElementTo( 
              const OLECHAR *pwcsName,
              IStorage *pstgDest,
              const OLECHAR *pwcsNewName,
             DWORD grfFlags) = 0;
        
        virtual HRESULT __stdcall Commit( 
             DWORD grfCommitFlags) = 0;
        
        virtual HRESULT __stdcall Revert( void) = 0;
        
        virtual  HRESULT __stdcall EnumElements( 
             DWORD reserved1,
             void *reserved2,
             DWORD reserved3,
             IEnumSTATSTG **ppenum) = 0;
        
        virtual HRESULT __stdcall DestroyElement( 
              const OLECHAR *pwcsName) = 0;
        
        virtual HRESULT __stdcall RenameElement( 
              const OLECHAR *pwcsOldName,
              const OLECHAR *pwcsNewName) = 0;
        
        virtual HRESULT __stdcall SetElementTimes( 
              const OLECHAR *pwcsName,
              const FILETIME *pctime,
              const FILETIME *patime,
              const FILETIME *pmtime) = 0;
        
        virtual HRESULT __stdcall SetClass( 
              const IID & clsid) = 0;
        
        virtual HRESULT __stdcall SetStateBits( 
             DWORD grfStateBits,
             DWORD grfMask) = 0;
        
        virtual HRESULT __stdcall Stat( 
              STATSTG *pstatstg,
             DWORD grfStatFlag) = 0;
        
    };
    





















































































































































































#line 4341 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"



 HRESULT __stdcall IStorage_RemoteOpenStream_Proxy( 
     IStorage * This,
      const OLECHAR *pwcsName,
     unsigned long cbReserved1,
      byte *reserved1,
     DWORD grfMode,
     DWORD reserved2,
      IStream **ppstm);


void __stdcall IStorage_RemoteOpenStream_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall IStorage_RemoteCopyTo_Proxy( 
     IStorage * This,
     DWORD ciidExclude,
      const IID *rgiidExclude,
      SNB snbExclude,
      IStorage *pstgDest);


void __stdcall IStorage_RemoteCopyTo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall IStorage_RemoteEnumElements_Proxy( 
     IStorage * This,
     DWORD reserved1,
     unsigned long cbReserved2,
      byte *reserved2,
     DWORD reserved3,
      IEnumSTATSTG **ppenum);


void __stdcall IStorage_RemoteEnumElements_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#line 4394 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 

typedef    IPersistFile *LPPERSISTFILE;


extern "C" const IID IID_IPersistFile;


    
    struct __declspec(uuid("0000010b-0000-0000-C000-000000000046")) __declspec(novtable)
    IPersistFile : public IPersist
    {
    public:
        virtual HRESULT __stdcall IsDirty( void) = 0;
        
        virtual HRESULT __stdcall Load( 
              LPCOLESTR pszFileName,
             DWORD dwMode) = 0;
        
        virtual HRESULT __stdcall Save( 
              LPCOLESTR pszFileName,
             BOOL fRemember) = 0;
        
        virtual HRESULT __stdcall SaveCompleted( 
              LPCOLESTR pszFileName) = 0;
        
        virtual HRESULT __stdcall GetCurFile( 
              LPOLESTR *ppszFileName) = 0;
        
    };
    
























































































#line 4520 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 4525 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 

typedef    IPersistStorage *LPPERSISTSTORAGE;


extern "C" const IID IID_IPersistStorage;


    
    struct __declspec(uuid("0000010a-0000-0000-C000-000000000046")) __declspec(novtable)
    IPersistStorage : public IPersist
    {
    public:
        virtual HRESULT __stdcall IsDirty( void) = 0;
        
        virtual HRESULT __stdcall InitNew( 
              IStorage *pStg) = 0;
        
        virtual HRESULT __stdcall Load( 
              IStorage *pStg) = 0;
        
        virtual HRESULT __stdcall Save( 
              IStorage *pStgSave,
             BOOL fSameAsLoad) = 0;
        
        virtual HRESULT __stdcall SaveCompleted( 
              IStorage *pStgNew) = 0;
        
        virtual HRESULT __stdcall HandsOffStorage( void) = 0;
        
    };
    





























































































#line 4657 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 4662 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 

typedef    ILockBytes *LPLOCKBYTES;


extern "C" const IID IID_ILockBytes;


    
    struct __declspec(uuid("0000000a-0000-0000-C000-000000000046")) __declspec(novtable)
    ILockBytes : public IUnknown
    {
    public:
        virtual  HRESULT __stdcall ReadAt( 
             ULARGE_INTEGER ulOffset,
             
              void *pv,
             ULONG cb,
             
              ULONG *pcbRead) = 0;
        
        virtual  HRESULT __stdcall WriteAt( 
             ULARGE_INTEGER ulOffset,
             
              const void *pv,
             ULONG cb,
             
              ULONG *pcbWritten) = 0;
        
        virtual HRESULT __stdcall Flush( void) = 0;
        
        virtual HRESULT __stdcall SetSize( 
             ULARGE_INTEGER cb) = 0;
        
        virtual HRESULT __stdcall LockRegion( 
             ULARGE_INTEGER libOffset,
             ULARGE_INTEGER cb,
             DWORD dwLockType) = 0;
        
        virtual HRESULT __stdcall UnlockRegion( 
             ULARGE_INTEGER libOffset,
             ULARGE_INTEGER cb,
             DWORD dwLockType) = 0;
        
        virtual HRESULT __stdcall Stat( 
              STATSTG *pstatstg,
             DWORD grfStatFlag) = 0;
        
    };
    











































































































#line 4826 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"



 HRESULT __stdcall ILockBytes_RemoteReadAt_Proxy( 
     ILockBytes * This,
     ULARGE_INTEGER ulOffset,
      byte *pv,
     ULONG cb,
      ULONG *pcbRead);


void __stdcall ILockBytes_RemoteReadAt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall ILockBytes_RemoteWriteAt_Proxy( 
     ILockBytes * This,
     ULARGE_INTEGER ulOffset,
      const byte *pv,
     ULONG cb,
      ULONG *pcbWritten);


void __stdcall ILockBytes_RemoteWriteAt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#line 4861 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 

typedef    IEnumFORMATETC *LPENUMFORMATETC;


typedef struct tagDVTARGETDEVICE
    {
    DWORD tdSize;
    WORD tdDriverNameOffset;
    WORD tdDeviceNameOffset;
    WORD tdPortNameOffset;
    WORD tdExtDevmodeOffset;
    BYTE tdData[ 1 ];
    } 	DVTARGETDEVICE;


typedef CLIPFORMAT *LPCLIPFORMAT;

typedef struct tagFORMATETC
    {
    CLIPFORMAT cfFormat;
    DVTARGETDEVICE *ptd;
    DWORD dwAspect;
    LONG lindex;
    DWORD tymed;
    } 	FORMATETC;

typedef struct tagFORMATETC *LPFORMATETC;


extern "C" const IID IID_IEnumFORMATETC;


    
    struct __declspec(uuid("00000103-0000-0000-C000-000000000046")) __declspec(novtable)
    IEnumFORMATETC : public IUnknown
    {
    public:
        virtual  HRESULT __stdcall Next( 
             ULONG celt,
             
              FORMATETC *rgelt,
             
              ULONG *pceltFetched) = 0;
        
        virtual HRESULT __stdcall Skip( 
             ULONG celt) = 0;
        
        virtual HRESULT __stdcall Reset( void) = 0;
        
        virtual HRESULT __stdcall Clone( 
              IEnumFORMATETC **ppenum) = 0;
        
    };
    











































































#line 4998 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"



 HRESULT __stdcall IEnumFORMATETC_RemoteNext_Proxy( 
     IEnumFORMATETC * This,
     ULONG celt,
      FORMATETC *rgelt,
      ULONG *pceltFetched);


void __stdcall IEnumFORMATETC_RemoteNext_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#line 5017 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 

typedef    IEnumSTATDATA *LPENUMSTATDATA;

typedef 
enum tagADVF
    {	ADVF_NODATA	= 1,
	ADVF_PRIMEFIRST	= 2,
	ADVF_ONLYONCE	= 4,
	ADVF_DATAONSTOP	= 64,
	ADVFCACHE_NOHANDLER	= 8,
	ADVFCACHE_FORCEBUILTIN	= 16,
	ADVFCACHE_ONSAVE	= 32
    } 	ADVF;

typedef struct tagSTATDATA
    {
    FORMATETC formatetc;
    DWORD advf;
    IAdviseSink *pAdvSink;
    DWORD dwConnection;
    } 	STATDATA;

typedef STATDATA *LPSTATDATA;


extern "C" const IID IID_IEnumSTATDATA;


    
    struct __declspec(uuid("00000105-0000-0000-C000-000000000046")) __declspec(novtable)
    IEnumSTATDATA : public IUnknown
    {
    public:
        virtual  HRESULT __stdcall Next( 
             ULONG celt,
             
              STATDATA *rgelt,
             
              ULONG *pceltFetched) = 0;
        
        virtual HRESULT __stdcall Skip( 
             ULONG celt) = 0;
        
        virtual HRESULT __stdcall Reset( void) = 0;
        
        virtual HRESULT __stdcall Clone( 
              IEnumSTATDATA **ppenum) = 0;
        
    };
    











































































#line 5150 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"



 HRESULT __stdcall IEnumSTATDATA_RemoteNext_Proxy( 
     IEnumSTATDATA * This,
     ULONG celt,
      STATDATA *rgelt,
      ULONG *pceltFetched);


void __stdcall IEnumSTATDATA_RemoteNext_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#line 5169 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 

typedef    IRootStorage *LPROOTSTORAGE;


extern "C" const IID IID_IRootStorage;


    
    struct __declspec(uuid("00000012-0000-0000-C000-000000000046")) __declspec(novtable)
    IRootStorage : public IUnknown
    {
    public:
        virtual HRESULT __stdcall SwitchToFile( 
              LPOLESTR pszFile) = 0;
        
    };
    



















































#line 5245 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 5250 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 

typedef IAdviseSink *LPADVISESINK;

typedef  
enum tagTYMED
    {	TYMED_HGLOBAL	= 1,
	TYMED_FILE	= 2,
	TYMED_ISTREAM	= 4,
	TYMED_ISTORAGE	= 8,
	TYMED_GDI	= 16,
	TYMED_MFPICT	= 32,
	TYMED_ENHMF	= 64,
	TYMED_NULL	= 0
    } 	TYMED;



#pragma warning(push)
#line 5276 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"
#pragma warning(disable:4200)
#line 5278 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"
typedef struct tagRemSTGMEDIUM
    {
    DWORD tymed;
    DWORD dwHandleType;
    unsigned long pData;
    unsigned long pUnkForRelease;
    unsigned long cbData;
    byte data[ 1 ];
    } 	RemSTGMEDIUM;



#pragma warning(pop)


#line 5294 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"
#line 5295 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"















typedef struct tagSTGMEDIUM
    {
    DWORD tymed;
    union 
        {
        HBITMAP hBitmap;
        HMETAFILEPICT hMetaFilePict;
        HENHMETAFILE hEnhMetaFile;
        HGLOBAL hGlobal;
        LPOLESTR lpszFileName;
        IStream *pstm;
        IStorage *pstg;
          
        } 	;
    IUnknown *pUnkForRelease;
    } 	uSTGMEDIUM;

#line 5328 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"
typedef struct _GDI_OBJECT
    {
    DWORD ObjectType;
     union __MIDL_IAdviseSink_0002
        {
        wireHBITMAP hBitmap;
        wireHPALETTE hPalette;
        wireHGLOBAL hGeneric;
        } 	u;
    } 	GDI_OBJECT;

typedef struct _userSTGMEDIUM
    {
    struct _STGMEDIUM_UNION
        {
        DWORD tymed;
         union __MIDL_IAdviseSink_0003
            {
              
            wireHMETAFILEPICT hMetaFilePict;
            wireHENHMETAFILE hHEnhMetaFile;
            GDI_OBJECT *hGdiHandle;
            wireHGLOBAL hGlobal;
            LPOLESTR lpszFileName;
            BYTE_BLOB *pstm;
            BYTE_BLOB *pstg;
            } 	u;
        } 	;
    IUnknown *pUnkForRelease;
    } 	userSTGMEDIUM;

typedef    userSTGMEDIUM *wireSTGMEDIUM;

typedef  uSTGMEDIUM STGMEDIUM;

typedef    userSTGMEDIUM *wireASYNC_STGMEDIUM;

typedef  STGMEDIUM ASYNC_STGMEDIUM;

typedef STGMEDIUM *LPSTGMEDIUM;

typedef struct _userFLAG_STGMEDIUM
    {
    long ContextFlags;
    long fPassOwnership;
    userSTGMEDIUM Stgmed;
    } 	userFLAG_STGMEDIUM;

typedef    userFLAG_STGMEDIUM *wireFLAG_STGMEDIUM;

typedef  struct _FLAG_STGMEDIUM
    {
    long ContextFlags;
    long fPassOwnership;
    STGMEDIUM Stgmed;
    } 	FLAG_STGMEDIUM;


extern "C" const IID IID_IAdviseSink;


    
    struct __declspec(uuid("0000010f-0000-0000-C000-000000000046")) __declspec(novtable)
    IAdviseSink : public IUnknown
    {
    public:
        virtual  void __stdcall OnDataChange( 
             FORMATETC *pFormatetc,
             STGMEDIUM *pStgmed) = 0;
        
        virtual  void __stdcall OnViewChange( 
             DWORD dwAspect,
             LONG lindex) = 0;
        
        virtual  void __stdcall OnRename( 
             IMoniker *pmk) = 0;
        
        virtual  void __stdcall OnSave( void) = 0;
        
        virtual  void __stdcall OnClose( void) = 0;
        
    };
    















































































#line 5491 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"



 HRESULT __stdcall IAdviseSink_RemoteOnDataChange_Proxy( 
     IAdviseSink * This,
      FORMATETC *pFormatetc,
      ASYNC_STGMEDIUM *pStgmed);


void __stdcall IAdviseSink_RemoteOnDataChange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall IAdviseSink_RemoteOnViewChange_Proxy( 
     IAdviseSink * This,
     DWORD dwAspect,
     LONG lindex);


void __stdcall IAdviseSink_RemoteOnViewChange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall IAdviseSink_RemoteOnRename_Proxy( 
     IAdviseSink * This,
      IMoniker *pmk);


void __stdcall IAdviseSink_RemoteOnRename_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall IAdviseSink_RemoteOnSave_Proxy( 
     IAdviseSink * This);


void __stdcall IAdviseSink_RemoteOnSave_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall IAdviseSink_RemoteOnClose_Proxy( 
     IAdviseSink * This);


void __stdcall IAdviseSink_RemoteOnClose_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#line 5556 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 


extern "C" const IID IID_AsyncIAdviseSink;


    
    struct __declspec(uuid("00000150-0000-0000-C000-000000000046")) __declspec(novtable)
    AsyncIAdviseSink : public IUnknown
    {
    public:
        virtual  void __stdcall Begin_OnDataChange( 
             FORMATETC *pFormatetc,
             STGMEDIUM *pStgmed) = 0;
        
        virtual  void __stdcall Finish_OnDataChange( void) = 0;
        
        virtual  void __stdcall Begin_OnViewChange( 
             DWORD dwAspect,
             LONG lindex) = 0;
        
        virtual  void __stdcall Finish_OnViewChange( void) = 0;
        
        virtual  void __stdcall Begin_OnRename( 
             IMoniker *pmk) = 0;
        
        virtual  void __stdcall Finish_OnRename( void) = 0;
        
        virtual  void __stdcall Begin_OnSave( void) = 0;
        
        virtual  void __stdcall Finish_OnSave( void) = 0;
        
        virtual  void __stdcall Begin_OnClose( void) = 0;
        
        virtual  void __stdcall Finish_OnClose( void) = 0;
        
    };
    













































































































#line 5710 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"



 HRESULT __stdcall AsyncIAdviseSink_Begin_RemoteOnDataChange_Proxy( 
     AsyncIAdviseSink * This,
      FORMATETC *pFormatetc,
      ASYNC_STGMEDIUM *pStgmed);


void __stdcall AsyncIAdviseSink_Begin_RemoteOnDataChange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall AsyncIAdviseSink_Finish_RemoteOnDataChange_Proxy( 
     AsyncIAdviseSink * This);


void __stdcall AsyncIAdviseSink_Finish_RemoteOnDataChange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall AsyncIAdviseSink_Begin_RemoteOnViewChange_Proxy( 
     AsyncIAdviseSink * This,
     DWORD dwAspect,
     LONG lindex);


void __stdcall AsyncIAdviseSink_Begin_RemoteOnViewChange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall AsyncIAdviseSink_Finish_RemoteOnViewChange_Proxy( 
     AsyncIAdviseSink * This);


void __stdcall AsyncIAdviseSink_Finish_RemoteOnViewChange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall AsyncIAdviseSink_Begin_RemoteOnRename_Proxy( 
     AsyncIAdviseSink * This,
      IMoniker *pmk);


void __stdcall AsyncIAdviseSink_Begin_RemoteOnRename_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall AsyncIAdviseSink_Finish_RemoteOnRename_Proxy( 
     AsyncIAdviseSink * This);


void __stdcall AsyncIAdviseSink_Finish_RemoteOnRename_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall AsyncIAdviseSink_Begin_RemoteOnSave_Proxy( 
     AsyncIAdviseSink * This);


void __stdcall AsyncIAdviseSink_Begin_RemoteOnSave_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall AsyncIAdviseSink_Finish_RemoteOnSave_Proxy( 
     AsyncIAdviseSink * This);


void __stdcall AsyncIAdviseSink_Finish_RemoteOnSave_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall AsyncIAdviseSink_Begin_RemoteOnClose_Proxy( 
     AsyncIAdviseSink * This);


void __stdcall AsyncIAdviseSink_Begin_RemoteOnClose_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall AsyncIAdviseSink_Finish_RemoteOnClose_Proxy( 
     AsyncIAdviseSink * This);


void __stdcall AsyncIAdviseSink_Finish_RemoteOnClose_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#line 5830 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 

typedef    IAdviseSink2 *LPADVISESINK2;


extern "C" const IID IID_IAdviseSink2;


    
    struct __declspec(uuid("00000125-0000-0000-C000-000000000046")) __declspec(novtable)
    IAdviseSink2 : public IAdviseSink
    {
    public:
        virtual  void __stdcall OnLinkSrcChange( 
             IMoniker *pmk) = 0;
        
    };
    























































































#line 5942 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"



 HRESULT __stdcall IAdviseSink2_RemoteOnLinkSrcChange_Proxy( 
     IAdviseSink2 * This,
      IMoniker *pmk);


void __stdcall IAdviseSink2_RemoteOnLinkSrcChange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#line 5959 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 


extern "C" const IID IID_AsyncIAdviseSink2;


    
    struct __declspec(uuid("00000151-0000-0000-C000-000000000046")) __declspec(novtable)
    AsyncIAdviseSink2 : public AsyncIAdviseSink
    {
    public:
        virtual  void __stdcall Begin_OnLinkSrcChange( 
             IMoniker *pmk) = 0;
        
        virtual  void __stdcall Finish_OnLinkSrcChange( void) = 0;
        
    };
    



























































































































#line 6107 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"



 HRESULT __stdcall AsyncIAdviseSink2_Begin_RemoteOnLinkSrcChange_Proxy( 
     AsyncIAdviseSink2 * This,
      IMoniker *pmk);


void __stdcall AsyncIAdviseSink2_Begin_RemoteOnLinkSrcChange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall AsyncIAdviseSink2_Finish_RemoteOnLinkSrcChange_Proxy( 
     AsyncIAdviseSink2 * This);


void __stdcall AsyncIAdviseSink2_Finish_RemoteOnLinkSrcChange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#line 6135 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 

typedef    IDataObject *LPDATAOBJECT;

typedef 
enum tagDATADIR
    {	DATADIR_GET	= 1,
	DATADIR_SET	= 2
    } 	DATADIR;


extern "C" const IID IID_IDataObject;


    
    struct __declspec(uuid("0000010e-0000-0000-C000-000000000046")) __declspec(novtable)
    IDataObject : public IUnknown
    {
    public:
        virtual  HRESULT __stdcall GetData( 
             FORMATETC *pformatetcIn,
             STGMEDIUM *pmedium) = 0;
        
        virtual  HRESULT __stdcall GetDataHere( 
             FORMATETC *pformatetc,
             STGMEDIUM *pmedium) = 0;
        
        virtual HRESULT __stdcall QueryGetData( 
              FORMATETC *pformatetc) = 0;
        
        virtual HRESULT __stdcall GetCanonicalFormatEtc( 
              FORMATETC *pformatectIn,
              FORMATETC *pformatetcOut) = 0;
        
        virtual  HRESULT __stdcall SetData( 
             FORMATETC *pformatetc,
             STGMEDIUM *pmedium,
             BOOL fRelease) = 0;
        
        virtual HRESULT __stdcall EnumFormatEtc( 
             DWORD dwDirection,
              IEnumFORMATETC **ppenumFormatEtc) = 0;
        
        virtual HRESULT __stdcall DAdvise( 
              FORMATETC *pformatetc,
             DWORD advf,
              IAdviseSink *pAdvSink,
              DWORD *pdwConnection) = 0;
        
        virtual HRESULT __stdcall DUnadvise( 
             DWORD dwConnection) = 0;
        
        virtual HRESULT __stdcall EnumDAdvise( 
              IEnumSTATDATA **ppenumAdvise) = 0;
        
    };
    




















































































































#line 6315 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"



 HRESULT __stdcall IDataObject_RemoteGetData_Proxy( 
     IDataObject * This,
      FORMATETC *pformatetcIn,
      STGMEDIUM *pRemoteMedium);


void __stdcall IDataObject_RemoteGetData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall IDataObject_RemoteGetDataHere_Proxy( 
     IDataObject * This,
      FORMATETC *pformatetc,
      STGMEDIUM *pRemoteMedium);


void __stdcall IDataObject_RemoteGetDataHere_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall IDataObject_RemoteSetData_Proxy( 
     IDataObject * This,
      FORMATETC *pformatetc,
      FLAG_STGMEDIUM *pmedium,
     BOOL fRelease);


void __stdcall IDataObject_RemoteSetData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#line 6360 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 

typedef  IDataAdviseHolder *LPDATAADVISEHOLDER;


extern "C" const IID IID_IDataAdviseHolder;


    
    struct __declspec(uuid("00000110-0000-0000-C000-000000000046")) __declspec(novtable)
    IDataAdviseHolder : public IUnknown
    {
    public:
        virtual HRESULT __stdcall Advise( 
             
              IDataObject *pDataObject,
             
              FORMATETC *pFetc,
             
              DWORD advf,
             
              IAdviseSink *pAdvise,
             
              DWORD *pdwConnection) = 0;
        
        virtual HRESULT __stdcall Unadvise( 
             
              DWORD dwConnection) = 0;
        
        virtual HRESULT __stdcall EnumAdvise( 
             
              IEnumSTATDATA **ppenumAdvise) = 0;
        
        virtual HRESULT __stdcall SendOnDataChange( 
             
              IDataObject *pDataObject,
             
              DWORD dwReserved,
             
              DWORD advf) = 0;
        
    };
    
























































































#line 6498 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 6503 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 

typedef  IMessageFilter *LPMESSAGEFILTER;

typedef 
enum tagCALLTYPE
    {	CALLTYPE_TOPLEVEL	= 1,
	CALLTYPE_NESTED	= 2,
	CALLTYPE_ASYNC	= 3,
	CALLTYPE_TOPLEVEL_CALLPENDING	= 4,
	CALLTYPE_ASYNC_CALLPENDING	= 5
    } 	CALLTYPE;

typedef 
enum tagSERVERCALL
    {	SERVERCALL_ISHANDLED	= 0,
	SERVERCALL_REJECTED	= 1,
	SERVERCALL_RETRYLATER	= 2
    } 	SERVERCALL;

typedef 
enum tagPENDINGTYPE
    {	PENDINGTYPE_TOPLEVEL	= 1,
	PENDINGTYPE_NESTED	= 2
    } 	PENDINGTYPE;

typedef 
enum tagPENDINGMSG
    {	PENDINGMSG_CANCELCALL	= 0,
	PENDINGMSG_WAITNOPROCESS	= 1,
	PENDINGMSG_WAITDEFPROCESS	= 2
    } 	PENDINGMSG;

typedef struct tagINTERFACEINFO
    {
    IUnknown *pUnk;
    IID iid;
    WORD wMethod;
    } 	INTERFACEINFO;

typedef struct tagINTERFACEINFO *LPINTERFACEINFO;


extern "C" const IID IID_IMessageFilter;


    
    struct __declspec(uuid("00000016-0000-0000-C000-000000000046")) __declspec(novtable)
    IMessageFilter : public IUnknown
    {
    public:
        virtual DWORD __stdcall HandleInComingCall( 
             
              DWORD dwCallType,
             
              HTASK htaskCaller,
             
              DWORD dwTickCount,
             
              LPINTERFACEINFO lpInterfaceInfo) = 0;
        
        virtual DWORD __stdcall RetryRejectedCall( 
             
              HTASK htaskCallee,
             
              DWORD dwTickCount,
             
              DWORD dwRejectType) = 0;
        
        virtual DWORD __stdcall MessagePending( 
             
              HTASK htaskCallee,
             
              DWORD dwTickCount,
             
              DWORD dwPendingType) = 0;
        
    };
    


















































































#line 6671 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 6676 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 

typedef unsigned long RPCOLEDATAREP;

typedef struct tagRPCOLEMESSAGE
    {
    void *reserved1;
    RPCOLEDATAREP dataRepresentation;
    void *Buffer;
    ULONG cbBuffer;
    ULONG iMethod;
    void *reserved2[ 5 ];
    ULONG rpcFlags;
    } 	RPCOLEMESSAGE;

typedef RPCOLEMESSAGE *PRPCOLEMESSAGE;


extern "C" const IID IID_IRpcChannelBuffer;


    
    struct __declspec(uuid("D5F56B60-593B-101A-B569-08002B2DBF7A")) __declspec(novtable)
    IRpcChannelBuffer : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetBuffer( 
             
              RPCOLEMESSAGE *pMessage,
             
              const IID & riid) = 0;
        
        virtual HRESULT __stdcall SendReceive( 
             
              RPCOLEMESSAGE *pMessage,
             
              ULONG *pStatus) = 0;
        
        virtual HRESULT __stdcall FreeBuffer( 
             
              RPCOLEMESSAGE *pMessage) = 0;
        
        virtual HRESULT __stdcall GetDestCtx( 
             
              DWORD *pdwDestContext,
             
              void **ppvDestContext) = 0;
        
        virtual HRESULT __stdcall IsConnected( void) = 0;
        
    };
    
























































































#line 6823 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 6828 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 


extern "C" const IID IID_IRpcChannelBuffer2;


    
    struct __declspec(uuid("594f31d0-7f19-11d0-b194-00a0c90dc8bf")) __declspec(novtable)
    IRpcChannelBuffer2 : public IRpcChannelBuffer
    {
    public:
        virtual HRESULT __stdcall GetProtocolVersion( 
             
              DWORD *pdwVersion) = 0;
        
    };
    

































































































#line 6949 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 6954 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 


extern "C" const IID IID_IAsyncRpcChannelBuffer;


    
    struct __declspec(uuid("a5029fb6-3c34-11d1-9c99-00c04fb998aa")) __declspec(novtable)
    IAsyncRpcChannelBuffer : public IRpcChannelBuffer2
    {
    public:
        virtual HRESULT __stdcall Send( 
             
              RPCOLEMESSAGE *pMsg,
             
              ISynchronize *pSync,
             
              ULONG *pulStatus) = 0;
        
        virtual HRESULT __stdcall Receive( 
             
              RPCOLEMESSAGE *pMsg,
             
              ULONG *pulStatus) = 0;
        
        virtual HRESULT __stdcall GetDestCtxEx( 
             
              RPCOLEMESSAGE *pMsg,
             
              DWORD *pdwDestContext,
             
              void **ppvDestContext) = 0;
        
    };
    




































































































































#line 7128 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 7133 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 


extern "C" const IID IID_IRpcChannelBuffer3;


    
    struct __declspec(uuid("25B15600-0115-11d0-BF0D-00AA00B8DFD2")) __declspec(novtable)
    IRpcChannelBuffer3 : public IRpcChannelBuffer2
    {
    public:
        virtual HRESULT __stdcall Send( 
             
              RPCOLEMESSAGE *pMsg,
             
              ULONG *pulStatus) = 0;
        
        virtual HRESULT __stdcall Receive( 
             
              RPCOLEMESSAGE *pMsg,
             
              ULONG ulSize,
             
              ULONG *pulStatus) = 0;
        
        virtual HRESULT __stdcall Cancel( 
             
              RPCOLEMESSAGE *pMsg) = 0;
        
        virtual HRESULT __stdcall GetCallContext( 
             
              RPCOLEMESSAGE *pMsg,
             
              const IID & riid,
             
              void **pInterface) = 0;
        
        virtual HRESULT __stdcall GetDestCtxEx( 
             
              RPCOLEMESSAGE *pMsg,
             
              DWORD *pdwDestContext,
             
              void **ppvDestContext) = 0;
        
        virtual HRESULT __stdcall GetState( 
             
              RPCOLEMESSAGE *pMsg,
             
              DWORD *pState) = 0;
        
        virtual HRESULT __stdcall RegisterAsync( 
             
              RPCOLEMESSAGE *pMsg,
             
              IAsyncManager *pAsyncMgr) = 0;
        
    };
    












































































































































































#line 7371 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 7376 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 


extern "C" const IID IID_IRpcSyntaxNegotiate;


    
    struct __declspec(uuid("58a08519-24c8-4935-b482-3fd823333a4f")) __declspec(novtable)
    IRpcSyntaxNegotiate : public IUnknown
    {
    public:
        virtual HRESULT __stdcall NegotiateSyntax( 
             
              RPCOLEMESSAGE *pMsg) = 0;
        
    };
    




















































#line 7452 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 7457 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 


extern "C" const IID IID_IRpcProxyBuffer;


    
    struct __declspec(uuid("D5F56A34-593B-101A-B569-08002B2DBF7A")) __declspec(novtable)
    IRpcProxyBuffer : public IUnknown
    {
    public:
        virtual HRESULT __stdcall Connect( 
             
              IRpcChannelBuffer *pRpcChannelBuffer) = 0;
        
        virtual void __stdcall Disconnect( void) = 0;
        
    };
    


























































#line 7541 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 7546 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 


extern "C" const IID IID_IRpcStubBuffer;


    
    struct __declspec(uuid("D5F56AFC-593B-101A-B569-08002B2DBF7A")) __declspec(novtable)
    IRpcStubBuffer : public IUnknown
    {
    public:
        virtual HRESULT __stdcall Connect( 
             
              IUnknown *pUnkServer) = 0;
        
        virtual void __stdcall Disconnect( void) = 0;
        
        virtual HRESULT __stdcall Invoke( 
             
              RPCOLEMESSAGE *_prpcmsg,
             
              IRpcChannelBuffer *_pRpcChannelBuffer) = 0;
        
        virtual IRpcStubBuffer *__stdcall IsIIDSupported( 
             
              const IID & riid) = 0;
        
        virtual ULONG __stdcall CountRefs( void) = 0;
        
        virtual HRESULT __stdcall DebugServerQueryInterface( 
             
              void **ppv) = 0;
        
        virtual void __stdcall DebugServerRelease( 
             
              void *pv) = 0;
        
    };
    


































































































#line 7690 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 7695 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 


extern "C" const IID IID_IPSFactoryBuffer;


    
    struct __declspec(uuid("D5F569D0-593B-101A-B569-08002B2DBF7A")) __declspec(novtable)
    IPSFactoryBuffer : public IUnknown
    {
    public:
        virtual HRESULT __stdcall CreateProxy( 
             
              IUnknown *pUnkOuter,
             
              const IID & riid,
             
              IRpcProxyBuffer **ppProxy,
             
              void **ppv) = 0;
        
        virtual HRESULT __stdcall CreateStub( 
             
              const IID & riid,
             
              IUnknown *pUnkServer,
             
              IRpcStubBuffer **ppStub) = 0;
        
    };
    






































































#line 7803 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 7808 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"



 



typedef struct SChannelHookCallInfo
    {
    IID iid;
    DWORD cbSize;
    GUID uCausality;
    DWORD dwServerPid;
    DWORD iMethod;
    void *pObject;
    } 	SChannelHookCallInfo;



extern RPC_IF_HANDLE __MIDL_itf_objidl_0000_0041_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_objidl_0000_0041_v0_0_s_ifspec;





 


extern "C" const IID IID_IChannelHook;


    
    struct __declspec(uuid("1008c4a0-7613-11cf-9af1-0020af6e72f4")) __declspec(novtable)
    IChannelHook : public IUnknown
    {
    public:
        virtual void __stdcall ClientGetSize( 
             
              const GUID & uExtent,
             
              const IID & riid,
             
              ULONG *pDataSize) = 0;
        
        virtual void __stdcall ClientFillBuffer( 
             
              const GUID & uExtent,
             
              const IID & riid,
             
              ULONG *pDataSize,
             
              void *pDataBuffer) = 0;
        
        virtual void __stdcall ClientNotify( 
             
              const GUID & uExtent,
             
              const IID & riid,
             
              ULONG cbDataSize,
             
              void *pDataBuffer,
             
              DWORD lDataRep,
             
              HRESULT hrFault) = 0;
        
        virtual void __stdcall ServerNotify( 
             
              const GUID & uExtent,
             
              const IID & riid,
             
              ULONG cbDataSize,
             
              void *pDataBuffer,
             
              DWORD lDataRep) = 0;
        
        virtual void __stdcall ServerGetSize( 
             
              const GUID & uExtent,
             
              const IID & riid,
             
              HRESULT hrFault,
             
              ULONG *pDataSize) = 0;
        
        virtual void __stdcall ServerFillBuffer( 
             
              const GUID & uExtent,
             
              const IID & riid,
             
              ULONG *pDataSize,
             
              void *pDataBuffer,
             
              HRESULT hrFault) = 0;
        
    };
    






































































































































#line 8048 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 8053 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"



 

#line 8059 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"


extern const FMTID FMTID_SummaryInformation;

extern const FMTID FMTID_DocSummaryInformation;

extern const FMTID FMTID_UserDefinedProperties;

extern const FMTID FMTID_DiscardableInformation;

extern const FMTID FMTID_ImageSummaryInformation;

extern const FMTID FMTID_AudioSummaryInformation;

extern const FMTID FMTID_VideoSummaryInformation;

extern const FMTID FMTID_MediaFileSummaryInformation;





extern RPC_IF_HANDLE __MIDL_itf_objidl_0000_0042_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_objidl_0000_0042_v0_0_s_ifspec;





 

typedef struct tagSOLE_AUTHENTICATION_SERVICE
    {
    DWORD dwAuthnSvc;
    DWORD dwAuthzSvc;
    OLECHAR *pPrincipalName;
    HRESULT hr;
    } 	SOLE_AUTHENTICATION_SERVICE;

typedef SOLE_AUTHENTICATION_SERVICE *PSOLE_AUTHENTICATION_SERVICE;

typedef 
enum tagEOLE_AUTHENTICATION_CAPABILITIES
    {	EOAC_NONE	= 0,
	EOAC_MUTUAL_AUTH	= 0x1,
	EOAC_STATIC_CLOAKING	= 0x20,
	EOAC_DYNAMIC_CLOAKING	= 0x40,
	EOAC_ANY_AUTHORITY	= 0x80,
	EOAC_MAKE_FULLSIC	= 0x100,
	EOAC_DEFAULT	= 0x800,
	EOAC_SECURE_REFS	= 0x2,
	EOAC_ACCESS_CONTROL	= 0x4,
	EOAC_APPID	= 0x8,
	EOAC_DYNAMIC	= 0x10,
	EOAC_REQUIRE_FULLSIC	= 0x200,
	EOAC_AUTO_IMPERSONATE	= 0x400,
	EOAC_NO_CUSTOM_MARSHAL	= 0x2000,
	EOAC_DISABLE_AAA	= 0x1000
    } 	EOLE_AUTHENTICATION_CAPABILITIES;





typedef struct tagSOLE_AUTHENTICATION_INFO
    {
    DWORD dwAuthnSvc;
    DWORD dwAuthzSvc;
    void *pAuthInfo;
    } 	SOLE_AUTHENTICATION_INFO;

typedef struct tagSOLE_AUTHENTICATION_INFO *PSOLE_AUTHENTICATION_INFO;

typedef struct tagSOLE_AUTHENTICATION_LIST
    {
    DWORD cAuthInfo;
    SOLE_AUTHENTICATION_INFO *aAuthInfo;
    } 	SOLE_AUTHENTICATION_LIST;

typedef struct tagSOLE_AUTHENTICATION_LIST *PSOLE_AUTHENTICATION_LIST;


extern "C" const IID IID_IClientSecurity;


    
    struct __declspec(uuid("0000013D-0000-0000-C000-000000000046")) __declspec(novtable)
    IClientSecurity : public IUnknown
    {
    public:
        virtual HRESULT __stdcall QueryBlanket( 
             
              IUnknown *pProxy,
             
              DWORD *pAuthnSvc,
             
              DWORD *pAuthzSvc,
             
              OLECHAR **pServerPrincName,
             
              DWORD *pAuthnLevel,
             
              DWORD *pImpLevel,
             
              void **pAuthInfo,
             
              DWORD *pCapabilites) = 0;
        
        virtual HRESULT __stdcall SetBlanket( 
             
              IUnknown *pProxy,
             
              DWORD dwAuthnSvc,
             
              DWORD dwAuthzSvc,
             
              OLECHAR *pServerPrincName,
             
              DWORD dwAuthnLevel,
             
              DWORD dwImpLevel,
             
              void *pAuthInfo,
             
              DWORD dwCapabilities) = 0;
        
        virtual HRESULT __stdcall CopyProxy( 
             
              IUnknown *pProxy,
             
              IUnknown **ppCopy) = 0;
        
    };
    


































































































#line 8292 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 8297 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 


extern "C" const IID IID_IServerSecurity;


    
    struct __declspec(uuid("0000013E-0000-0000-C000-000000000046")) __declspec(novtable)
    IServerSecurity : public IUnknown
    {
    public:
        virtual HRESULT __stdcall QueryBlanket( 
             
              DWORD *pAuthnSvc,
             
              DWORD *pAuthzSvc,
             
              OLECHAR **pServerPrincName,
             
              DWORD *pAuthnLevel,
             
              DWORD *pImpLevel,
             
              void **pPrivs,
             
              DWORD *pCapabilities) = 0;
        
        virtual HRESULT __stdcall ImpersonateClient( void) = 0;
        
        virtual HRESULT __stdcall RevertToSelf( void) = 0;
        
        virtual BOOL __stdcall IsImpersonating( void) = 0;
        
    };
    


















































































#line 8421 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 8426 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 


extern "C" const IID IID_IClassActivator;


    
    struct __declspec(uuid("00000140-0000-0000-C000-000000000046")) __declspec(novtable)
    IClassActivator : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetClassObject( 
              const IID & rclsid,
             DWORD dwClassContext,
             LCID locale,
              const IID & riid,
              void **ppv) = 0;
        
    };
    























































#line 8508 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 8513 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"



 

typedef 
enum tagRPCOPT_PROPERTIES
    {	COMBND_RPCTIMEOUT	= 0x1,
	COMBND_SERVER_LOCALITY	= 0x2
    } 	RPCOPT_PROPERTIES;

typedef 
enum tagRPCOPT_SERVER_LOCALITY_VALUES
    {	SERVER_LOCALITY_PROCESS_LOCAL	= 0,
	SERVER_LOCALITY_MACHINE_LOCAL	= 1,
	SERVER_LOCALITY_REMOTE	= 2
    } 	RPCOPT_SERVER_LOCALITY_VALUES;



extern RPC_IF_HANDLE __MIDL_itf_objidl_0000_0045_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_objidl_0000_0045_v0_0_s_ifspec;





 


extern "C" const IID IID_IRpcOptions;


    
    struct __declspec(uuid("00000144-0000-0000-C000-000000000046")) __declspec(novtable)
    IRpcOptions : public IUnknown
    {
    public:
        virtual HRESULT __stdcall Set( 
             
              IUnknown *pPrx,
             
              RPCOPT_PROPERTIES dwProperty,
             
              ULONG_PTR dwValue) = 0;
        
        virtual HRESULT __stdcall Query( 
             
              IUnknown *pPrx,
             
              RPCOPT_PROPERTIES dwProperty,
             
              ULONG_PTR *pdwValue) = 0;
        
    };
    




































































#line 8638 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 8643 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"



 

typedef 
enum tagGLOBALOPT_PROPERTIES
    {	COMGLB_EXCEPTION_HANDLING	= 1,
	COMGLB_APPID	= 2,
	COMGLB_RPC_THREADPOOL_SETTING	= 3
    } 	GLOBALOPT_PROPERTIES;

typedef 
enum tagGLOBALOPT_EH_VALUES
    {	COMGLB_EXCEPTION_HANDLE	= 0,
	COMGLB_EXCEPTION_DONOT_HANDLE_FATAL	= 1,
	COMGLB_EXCEPTION_DONOT_HANDLE	= COMGLB_EXCEPTION_DONOT_HANDLE_FATAL,
	COMGLB_EXCEPTION_DONOT_HANDLE_ANY	= 2
    } 	GLOBALOPT_EH_VALUES;

typedef 
enum tagGLOBALOPT_RPCTP_VALUES
    {	COMGLB_RPC_THREADPOOL_SETTING_DEFAULT_POOL	= 0,
	COMGLB_RPC_THREADPOOL_SETTING_PRIVATE_POOL	= 1
    } 	GLOBALOPT_RPCTP_VALUES;



extern RPC_IF_HANDLE __MIDL_itf_objidl_0000_0046_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_objidl_0000_0046_v0_0_s_ifspec;





 


extern "C" const IID IID_IGlobalOptions;


    
    struct __declspec(uuid("0000015B-0000-0000-C000-000000000046")) __declspec(novtable)
    IGlobalOptions : public IUnknown
    {
    public:
        virtual HRESULT __stdcall Set( 
             
              GLOBALOPT_PROPERTIES dwProperty,
             
              ULONG_PTR dwValue) = 0;
        
        virtual HRESULT __stdcall Query( 
             
              GLOBALOPT_PROPERTIES dwProperty,
             
              ULONG_PTR *pdwValue) = 0;
        
    };
    
































































#line 8768 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 8773 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"



 

#line 8779 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"


extern RPC_IF_HANDLE __MIDL_itf_objidl_0000_0047_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_objidl_0000_0047_v0_0_s_ifspec;





 


extern "C" const IID IID_IFillLockBytes;


    
    struct __declspec(uuid("99caf010-415e-11cf-8814-00aa00b569f5")) __declspec(novtable)
    IFillLockBytes : public IUnknown
    {
    public:
        virtual  HRESULT __stdcall FillAppend( 
             
              const void *pv,
             
              ULONG cb,
             
              ULONG *pcbWritten) = 0;
        
        virtual  HRESULT __stdcall FillAt( 
             
              ULARGE_INTEGER ulOffset,
             
              const void *pv,
             
              ULONG cb,
             
              ULONG *pcbWritten) = 0;
        
        virtual HRESULT __stdcall SetFillSize( 
             ULARGE_INTEGER ulSize) = 0;
        
        virtual HRESULT __stdcall Terminate( 
             BOOL bCanceled) = 0;
        
    };
    




















































































#line 8910 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"



 HRESULT __stdcall IFillLockBytes_RemoteFillAppend_Proxy( 
     IFillLockBytes * This,
      const byte *pv,
     ULONG cb,
      ULONG *pcbWritten);


void __stdcall IFillLockBytes_RemoteFillAppend_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall IFillLockBytes_RemoteFillAt_Proxy( 
     IFillLockBytes * This,
     ULARGE_INTEGER ulOffset,
      const byte *pv,
     ULONG cb,
      ULONG *pcbWritten);


void __stdcall IFillLockBytes_RemoteFillAt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#line 8944 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 


extern "C" const IID IID_IProgressNotify;


    
    struct __declspec(uuid("a9d758a0-4617-11cf-95fc-00aa00680db4")) __declspec(novtable)
    IProgressNotify : public IUnknown
    {
    public:
        virtual HRESULT __stdcall OnProgress( 
             DWORD dwProgressCurrent,
             DWORD dwProgressMaximum,
             BOOL fAccurate,
             BOOL fOwner) = 0;
        
    };
    






















































#line 9024 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 9029 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 

typedef struct tagStorageLayout
    {
    DWORD LayoutType;
    OLECHAR *pwcsElementName;
    LARGE_INTEGER cOffset;
    LARGE_INTEGER cBytes;
    } 	StorageLayout;


extern "C" const IID IID_ILayoutStorage;


    
    struct __declspec(uuid("0e6d4d90-6738-11cf-9608-00aa00680db4")) __declspec(novtable)
    ILayoutStorage : public IUnknown
    {
    public:
        virtual HRESULT __stdcall LayoutScript( 
             
              StorageLayout *pStorageLayout,
             
              DWORD nEntries,
             
              DWORD glfInterleavedFlag) = 0;
        
        virtual HRESULT __stdcall BeginMonitor( void) = 0;
        
        virtual HRESULT __stdcall EndMonitor( void) = 0;
        
        virtual HRESULT __stdcall ReLayoutDocfile( 
             
              OLECHAR *pwcsNewDfName) = 0;
        
        virtual HRESULT __stdcall ReLayoutDocfileOnILockBytes( 
             
              ILockBytes *pILockBytes) = 0;
        
    };
    




















































































#line 9161 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 9166 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 


extern "C" const IID IID_IBlockingLock;


    
    struct __declspec(uuid("30f3d47a-6447-11d1-8e3c-00c04fb9386d")) __declspec(novtable)
    IBlockingLock : public IUnknown
    {
    public:
        virtual HRESULT __stdcall Lock( 
             DWORD dwTimeout) = 0;
        
        virtual HRESULT __stdcall Unlock( void) = 0;
        
    };
    

























































#line 9248 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 9253 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 


extern "C" const IID IID_ITimeAndNoticeControl;


    
    struct __declspec(uuid("bc0bf6ae-8878-11d1-83e9-00c04fc2c6d4")) __declspec(novtable)
    ITimeAndNoticeControl : public IUnknown
    {
    public:
        virtual HRESULT __stdcall SuppressChanges( 
             DWORD res1,
             DWORD res2) = 0;
        
    };
    




















































#line 9329 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 9334 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 


extern "C" const IID IID_IOplockStorage;


    
    struct __declspec(uuid("8d19c834-8879-11d1-83e9-00c04fc2c6d4")) __declspec(novtable)
    IOplockStorage : public IUnknown
    {
    public:
        virtual HRESULT __stdcall CreateStorageEx( 
              LPCWSTR pwcsName,
             DWORD grfMode,
             DWORD stgfmt,
             DWORD grfAttrs,
              const IID & riid,
              void **ppstgOpen) = 0;
        
        virtual HRESULT __stdcall OpenStorageEx( 
              LPCWSTR pwcsName,
             DWORD grfMode,
             DWORD stgfmt,
             DWORD grfAttrs,
              const IID & riid,
              void **ppstgOpen) = 0;
        
    };
    




































































#line 9438 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 9443 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 

typedef    ISurrogate *LPSURROGATE;


extern "C" const IID IID_ISurrogate;


    
    struct __declspec(uuid("00000022-0000-0000-C000-000000000046")) __declspec(novtable)
    ISurrogate : public IUnknown
    {
    public:
        virtual HRESULT __stdcall LoadDllServer( 
              const IID & Clsid) = 0;
        
        virtual HRESULT __stdcall FreeSurrogate( void) = 0;
        
    };
    

























































#line 9527 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 9532 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 

typedef  IGlobalInterfaceTable *LPGLOBALINTERFACETABLE;


extern "C" const IID IID_IGlobalInterfaceTable;


    
    struct __declspec(uuid("00000146-0000-0000-C000-000000000046")) __declspec(novtable)
    IGlobalInterfaceTable : public IUnknown
    {
    public:
        virtual HRESULT __stdcall RegisterInterfaceInGlobal( 
             
              IUnknown *pUnk,
             
              const IID & riid,
             
              DWORD *pdwCookie) = 0;
        
        virtual HRESULT __stdcall RevokeInterfaceFromGlobal( 
             
              DWORD dwCookie) = 0;
        
        virtual HRESULT __stdcall GetInterfaceFromGlobal( 
             
              DWORD dwCookie,
             
              const IID & riid,
             
              void **ppv) = 0;
        
    };
    












































































#line 9650 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 9655 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 


extern "C" const IID IID_IDirectWriterLock;


    
    struct __declspec(uuid("0e6d4d92-6738-11cf-9608-00aa00680db4")) __declspec(novtable)
    IDirectWriterLock : public IUnknown
    {
    public:
        virtual HRESULT __stdcall WaitForWriteAccess( 
             DWORD dwTimeout) = 0;
        
        virtual HRESULT __stdcall ReleaseWriteAccess( void) = 0;
        
        virtual HRESULT __stdcall HaveWriteAccess( void) = 0;
        
    };
    































































#line 9745 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 9750 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 


extern "C" const IID IID_ISynchronize;


    
    struct __declspec(uuid("00000030-0000-0000-C000-000000000046")) __declspec(novtable)
    ISynchronize : public IUnknown
    {
    public:
        virtual HRESULT __stdcall Wait( 
             DWORD dwFlags,
             DWORD dwMilliseconds) = 0;
        
        virtual HRESULT __stdcall Signal( void) = 0;
        
        virtual HRESULT __stdcall Reset( void) = 0;
        
    };
    
































































#line 9842 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 9847 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 


extern "C" const IID IID_ISynchronizeHandle;


    
    struct __declspec(uuid("00000031-0000-0000-C000-000000000046")) __declspec(novtable)
    ISynchronizeHandle : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetHandle( 
             
              HANDLE *ph) = 0;
        
    };
    




















































#line 9923 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 9928 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 


extern "C" const IID IID_ISynchronizeEvent;


    
    struct __declspec(uuid("00000032-0000-0000-C000-000000000046")) __declspec(novtable)
    ISynchronizeEvent : public ISynchronizeHandle
    {
    public:
        virtual HRESULT __stdcall SetEventHandle( 
             
              HANDLE *ph) = 0;
        
    };
    





























































#line 10013 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 10018 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 


extern "C" const IID IID_ISynchronizeContainer;


    
    struct __declspec(uuid("00000033-0000-0000-C000-000000000046")) __declspec(novtable)
    ISynchronizeContainer : public IUnknown
    {
    public:
        virtual HRESULT __stdcall AddSynchronize( 
             
              ISynchronize *pSync) = 0;
        
        virtual HRESULT __stdcall WaitMultiple( 
             
              DWORD dwFlags,
             
              DWORD dwTimeOut,
             
              ISynchronize **ppSync) = 0;
        
    };
    
































































#line 10114 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 10119 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 


extern "C" const IID IID_ISynchronizeMutex;


    
    struct __declspec(uuid("00000025-0000-0000-C000-000000000046")) __declspec(novtable)
    ISynchronizeMutex : public ISynchronize
    {
    public:
        virtual HRESULT __stdcall ReleaseMutex( void) = 0;
        
    };
    







































































#line 10212 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 10217 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 

typedef  ICancelMethodCalls *LPCANCELMETHODCALLS;


extern "C" const IID IID_ICancelMethodCalls;


    
    struct __declspec(uuid("00000029-0000-0000-C000-000000000046")) __declspec(novtable)
    ICancelMethodCalls : public IUnknown
    {
    public:
        virtual HRESULT __stdcall Cancel( 
             
              ULONG ulSeconds) = 0;
        
        virtual HRESULT __stdcall TestCancel( void) = 0;
        
    };
    


























































#line 10303 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 10308 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 

typedef 
enum tagDCOM_CALL_STATE
    {	DCOM_NONE	= 0,
	DCOM_CALL_COMPLETE	= 0x1,
	DCOM_CALL_CANCELED	= 0x2
    } 	DCOM_CALL_STATE;


extern "C" const IID IID_IAsyncManager;


    
    struct __declspec(uuid("0000002A-0000-0000-C000-000000000046")) __declspec(novtable)
    IAsyncManager : public IUnknown
    {
    public:
        virtual HRESULT __stdcall CompleteCall( 
             
              HRESULT Result) = 0;
        
        virtual HRESULT __stdcall GetCallContext( 
             
              const IID & riid,
             
              void **pInterface) = 0;
        
        virtual HRESULT __stdcall GetState( 
             
              ULONG *pulStateFlags) = 0;
        
    };
    






































































#line 10419 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 10424 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 


extern "C" const IID IID_ICallFactory;


    
    struct __declspec(uuid("1c733a30-2a1c-11ce-ade5-00aa0044773d")) __declspec(novtable)
    ICallFactory : public IUnknown
    {
    public:
        virtual HRESULT __stdcall CreateCall( 
             
              const IID & riid,
             
              IUnknown *pCtrlUnk,
             
              const IID & riid2,
             
              IUnknown **ppv) = 0;
        
    };
    


























































#line 10512 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 10517 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 


extern "C" const IID IID_IRpcHelper;


    
    struct __declspec(uuid("00000149-0000-0000-C000-000000000046")) __declspec(novtable)
    IRpcHelper : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetDCOMProtocolVersion( 
             
              DWORD *pComVersion) = 0;
        
        virtual HRESULT __stdcall GetIIDFromOBJREF( 
             
              void *pObjRef,
             
              IID **piid) = 0;
        
    };
    






























































#line 10609 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 10614 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 


extern "C" const IID IID_IReleaseMarshalBuffers;


    
    struct __declspec(uuid("eb0cb9e8-7996-11d2-872e-0000f8080859")) __declspec(novtable)
    IReleaseMarshalBuffers : public IUnknown
    {
    public:
        virtual HRESULT __stdcall ReleaseMarshalBuffer( 
             
              RPCOLEMESSAGE *pMsg,
             
              DWORD dwFlags,
             
              IUnknown *pChnl) = 0;
        
    };
    
























































#line 10698 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 10703 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 


extern "C" const IID IID_IWaitMultiple;


    
    struct __declspec(uuid("0000002B-0000-0000-C000-000000000046")) __declspec(novtable)
    IWaitMultiple : public IUnknown
    {
    public:
        virtual HRESULT __stdcall WaitMultiple( 
             
              DWORD timeout,
             
              ISynchronize **pSync) = 0;
        
        virtual HRESULT __stdcall AddSynchronize( 
             
              ISynchronize *pSync) = 0;
        
    };
    






























































#line 10795 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 10800 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 


extern "C" const IID IID_IUrlMon;


    
    struct __declspec(uuid("00000026-0000-0000-C000-000000000046")) __declspec(novtable)
    IUrlMon : public IUnknown
    {
    public:
        virtual HRESULT __stdcall AsyncGetClassBits( 
              const IID & rclsid,
              LPCWSTR pszTYPE,
              LPCWSTR pszExt,
             DWORD dwFileVersionMS,
             DWORD dwFileVersionLS,
              LPCWSTR pszCodeBase,
              IBindCtx *pbc,
             DWORD dwClassContext,
              const IID & riid,
             DWORD flags) = 0;
        
    };
    




























































#line 10892 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 10897 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 


extern "C" const IID IID_IForegroundTransfer;


    
    struct __declspec(uuid("00000145-0000-0000-C000-000000000046")) __declspec(novtable)
    IForegroundTransfer : public IUnknown
    {
    public:
        virtual HRESULT __stdcall AllowForegroundTransfer( 
             
              void *lpvReserved) = 0;
        
    };
    




















































#line 10973 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 10978 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 

typedef  IAddrTrackingControl *LPADDRTRACKINGCONTROL;


extern "C" const IID IID_IAddrTrackingControl;


    
    struct __declspec(uuid("00000147-0000-0000-C000-000000000046")) __declspec(novtable)
    IAddrTrackingControl : public IUnknown
    {
    public:
        virtual HRESULT __stdcall EnableCOMDynamicAddrTracking( void) = 0;
        
        virtual HRESULT __stdcall DisableCOMDynamicAddrTracking( void) = 0;
        
    };
    
























































#line 11060 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 11065 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 

typedef  IAddrExclusionControl *LPADDREXCLUSIONCONTROL;


extern "C" const IID IID_IAddrExclusionControl;


    
    struct __declspec(uuid("00000148-0000-0000-C000-000000000046")) __declspec(novtable)
    IAddrExclusionControl : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetCurrentAddrExclusionList( 
             
              const IID & riid,
             
              void **ppEnumerator) = 0;
        
        virtual HRESULT __stdcall UpdateAddrExclusionList( 
             
              IUnknown *pEnumerator) = 0;
        
    };
    






























































#line 11159 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 11164 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 


extern "C" const IID IID_IPipeByte;


    
    struct __declspec(uuid("DB2F3ACA-2F86-11d1-8E04-00C04FB9989A")) __declspec(novtable)
    IPipeByte : public IUnknown
    {
    public:
        virtual HRESULT __stdcall Pull( 
              BYTE *buf,
             ULONG cRequest,
              ULONG *pcReturned) = 0;
        
        virtual HRESULT __stdcall Push( 
              BYTE *buf,
             ULONG cSent) = 0;
        
    };
    





























































#line 11254 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 11259 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 


extern "C" const IID IID_AsyncIPipeByte;


    
    struct __declspec(uuid("DB2F3ACB-2F86-11d1-8E04-00C04FB9989A")) __declspec(novtable)
    AsyncIPipeByte : public IUnknown
    {
    public:
        virtual HRESULT __stdcall Begin_Pull( 
             ULONG cRequest) = 0;
        
        virtual HRESULT __stdcall Finish_Pull( 
              BYTE *buf,
              ULONG *pcReturned) = 0;
        
        virtual HRESULT __stdcall Begin_Push( 
              BYTE *buf,
             ULONG cSent) = 0;
        
        virtual HRESULT __stdcall Finish_Push( void) = 0;
        
    };
    









































































#line 11365 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 11370 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 


extern "C" const IID IID_IPipeLong;


    
    struct __declspec(uuid("DB2F3ACC-2F86-11d1-8E04-00C04FB9989A")) __declspec(novtable)
    IPipeLong : public IUnknown
    {
    public:
        virtual HRESULT __stdcall Pull( 
              LONG *buf,
             ULONG cRequest,
              ULONG *pcReturned) = 0;
        
        virtual HRESULT __stdcall Push( 
              LONG *buf,
             ULONG cSent) = 0;
        
    };
    





























































#line 11460 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 11465 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 


extern "C" const IID IID_AsyncIPipeLong;


    
    struct __declspec(uuid("DB2F3ACD-2F86-11d1-8E04-00C04FB9989A")) __declspec(novtable)
    AsyncIPipeLong : public IUnknown
    {
    public:
        virtual HRESULT __stdcall Begin_Pull( 
             ULONG cRequest) = 0;
        
        virtual HRESULT __stdcall Finish_Pull( 
              LONG *buf,
              ULONG *pcReturned) = 0;
        
        virtual HRESULT __stdcall Begin_Push( 
              LONG *buf,
             ULONG cSent) = 0;
        
        virtual HRESULT __stdcall Finish_Push( void) = 0;
        
    };
    









































































#line 11571 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 11576 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 


extern "C" const IID IID_IPipeDouble;


    
    struct __declspec(uuid("DB2F3ACE-2F86-11d1-8E04-00C04FB9989A")) __declspec(novtable)
    IPipeDouble : public IUnknown
    {
    public:
        virtual HRESULT __stdcall Pull( 
              DOUBLE *buf,
             ULONG cRequest,
              ULONG *pcReturned) = 0;
        
        virtual HRESULT __stdcall Push( 
              DOUBLE *buf,
             ULONG cSent) = 0;
        
    };
    





























































#line 11666 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 11671 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 


extern "C" const IID IID_AsyncIPipeDouble;


    
    struct __declspec(uuid("DB2F3ACF-2F86-11d1-8E04-00C04FB9989A")) __declspec(novtable)
    AsyncIPipeDouble : public IUnknown
    {
    public:
        virtual HRESULT __stdcall Begin_Pull( 
             ULONG cRequest) = 0;
        
        virtual HRESULT __stdcall Finish_Pull( 
              DOUBLE *buf,
              ULONG *pcReturned) = 0;
        
        virtual HRESULT __stdcall Begin_Push( 
              DOUBLE *buf,
             ULONG cSent) = 0;
        
        virtual HRESULT __stdcall Finish_Push( void) = 0;
        
    };
    









































































#line 11777 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 11782 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 


extern "C" const IID IID_IThumbnailExtractor;


    
    struct __declspec(uuid("969dc708-5c76-11d1-8d86-0000f804b057")) __declspec(novtable)
    IThumbnailExtractor : public IUnknown
    {
    public:
        virtual HRESULT __stdcall ExtractThumbnail( 
              IStorage *pStg,
             ULONG ulLength,
             ULONG ulHeight,
              ULONG *pulOutputLength,
              ULONG *pulOutputHeight,
              HBITMAP *phOutputBitmap) = 0;
        
        virtual HRESULT __stdcall OnFileUpdated( 
              IStorage *pStg) = 0;
        
    };
    































































#line 11876 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 11881 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 


extern "C" const IID IID_IDummyHICONIncluder;


    
    struct __declspec(uuid("947990de-cc28-11d2-a0f7-00805f858fb1")) __declspec(novtable)
    IDummyHICONIncluder : public IUnknown
    {
    public:
        virtual HRESULT __stdcall Dummy( 
              HICON h1,
              HDC h2) = 0;
        
    };
    




















































#line 11957 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 11962 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"



 















































































































































































































































































































































































































































































#line 12430 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"
typedef 
enum tagApplicationType
    {	ServerApplication	= 0,
	LibraryApplication	= ( ServerApplication + 1 ) 
    } 	ApplicationType;

typedef 
enum tagShutdownType
    {	IdleShutdown	= 0,
	ForcedShutdown	= ( IdleShutdown + 1 ) 
    } 	ShutdownType;



extern RPC_IF_HANDLE __MIDL_itf_objidl_0000_0079_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_objidl_0000_0079_v0_0_s_ifspec;





 


extern "C" const IID IID_IProcessLock;


    
    struct __declspec(uuid("000001d5-0000-0000-C000-000000000046")) __declspec(novtable)
    IProcessLock : public IUnknown
    {
    public:
        virtual ULONG __stdcall AddRefOnProcess( void) = 0;
        
        virtual ULONG __stdcall ReleaseRefOnProcess( void) = 0;
        
    };
    
























































#line 12525 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 12530 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 


extern "C" const IID IID_ISurrogateService;


    
    struct __declspec(uuid("000001d4-0000-0000-C000-000000000046")) __declspec(novtable)
    ISurrogateService : public IUnknown
    {
    public:
        virtual HRESULT __stdcall Init( 
             
              const GUID & rguidProcessID,
             
              IProcessLock *pProcessLock,
             
              BOOL *pfApplicationAware) = 0;
        
        virtual HRESULT __stdcall ApplicationLaunch( 
             
              const GUID & rguidApplID,
             
              ApplicationType appType) = 0;
        
        virtual HRESULT __stdcall ApplicationFree( 
             
              const GUID & rguidApplID) = 0;
        
        virtual HRESULT __stdcall CatalogRefresh( 
             
              ULONG ulReserved) = 0;
        
        virtual HRESULT __stdcall ProcessShutdown( 
             
              ShutdownType shutdownType) = 0;
        
    };
    


























































































#line 12666 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 12671 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"



 

typedef 
enum _APTTYPEQUALIFIER
    {	APTTYPEQUALIFIER_NONE	= 0,
	APTTYPEQUALIFIER_IMPLICIT_MTA	= 1,
	APTTYPEQUALIFIER_NA_ON_MTA	= 2,
	APTTYPEQUALIFIER_NA_ON_STA	= 3,
	APTTYPEQUALIFIER_NA_ON_IMPLICIT_MTA	= 4,
	APTTYPEQUALIFIER_NA_ON_MAINSTA	= 5
    } 	APTTYPEQUALIFIER;

typedef 
enum _APTTYPE
    {	APTTYPE_CURRENT	= -1,
	APTTYPE_STA	= 0,
	APTTYPE_MTA	= 1,
	APTTYPE_NA	= 2,
	APTTYPE_MAINSTA	= 3
    } 	APTTYPE;

typedef 
enum _THDTYPE
    {	THDTYPE_BLOCKMESSAGES	= 0,
	THDTYPE_PROCESSMESSAGES	= 1
    } 	THDTYPE;

typedef DWORD APARTMENTID;



extern RPC_IF_HANDLE __MIDL_itf_objidl_0000_0081_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_objidl_0000_0081_v0_0_s_ifspec;





 


extern "C" const IID IID_IComThreadingInfo;


    
    struct __declspec(uuid("000001ce-0000-0000-C000-000000000046")) __declspec(novtable)
    IComThreadingInfo : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetCurrentApartmentType( 
             
              APTTYPE *pAptType) = 0;
        
        virtual HRESULT __stdcall GetCurrentThreadType( 
             
              THDTYPE *pThreadType) = 0;
        
        virtual HRESULT __stdcall GetCurrentLogicalThreadId( 
             
              GUID *pguidLogicalThreadId) = 0;
        
        virtual HRESULT __stdcall SetCurrentLogicalThreadId( 
             
              const GUID & rguid) = 0;
        
    };
    












































































#line 12818 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 12823 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"






 


extern "C" const IID IID_IProcessInitControl;


    
    struct __declspec(uuid("72380d55-8d2b-43a3-8513-2b6ef31434e9")) __declspec(novtable)
    IProcessInitControl : public IUnknown
    {
    public:
        virtual HRESULT __stdcall ResetInitializerTimeout( 
             DWORD dwSecondsRemaining) = 0;
        
    };
    



















































#line 12897 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 12902 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"



 




extern RPC_IF_HANDLE __MIDL_itf_objidl_0000_0083_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_objidl_0000_0083_v0_0_s_ifspec;





 

typedef  IInitializeSpy *LPINITIALIZESPY;


extern "C" const IID IID_IInitializeSpy;


    
    struct __declspec(uuid("00000034-0000-0000-C000-000000000046")) __declspec(novtable)
    IInitializeSpy : public IUnknown
    {
    public:
        virtual HRESULT __stdcall PreInitialize( 
             
              DWORD dwCoInit,
             
              DWORD dwCurThreadAptRefs) = 0;
        
        virtual HRESULT __stdcall PostInitialize( 
             
              HRESULT hrCoInit,
             
              DWORD dwCoInit,
             
              DWORD dwNewThreadAptRefs) = 0;
        
        virtual HRESULT __stdcall PreUninitialize( 
             
              DWORD dwCurThreadAptRefs) = 0;
        
        virtual HRESULT __stdcall PostUninitialize( 
             
              DWORD dwNewThreadAptRefs) = 0;
        
    };
    


















































































#line 13037 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 13042 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"



 

#line 13048 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"


#pragma warning(pop)


#line 13054 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"
#line 13055 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"


extern RPC_IF_HANDLE __MIDL_itf_objidl_0000_0084_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_objidl_0000_0084_v0_0_s_ifspec;



unsigned long             __stdcall  ASYNC_STGMEDIUM_UserSize(      unsigned long *, unsigned long            ,  ASYNC_STGMEDIUM * ); 
unsigned char * __stdcall  ASYNC_STGMEDIUM_UserMarshal(   unsigned long *,  unsigned char *,  ASYNC_STGMEDIUM * ); 
unsigned char * __stdcall  ASYNC_STGMEDIUM_UserUnmarshal( unsigned long *,  unsigned char *,  ASYNC_STGMEDIUM * ); 
void                      __stdcall  ASYNC_STGMEDIUM_UserFree(      unsigned long *,  ASYNC_STGMEDIUM * ); 

unsigned long             __stdcall  CLIPFORMAT_UserSize(      unsigned long *, unsigned long            ,  CLIPFORMAT * ); 
unsigned char * __stdcall  CLIPFORMAT_UserMarshal(   unsigned long *,  unsigned char *,  CLIPFORMAT * ); 
unsigned char * __stdcall  CLIPFORMAT_UserUnmarshal( unsigned long *,  unsigned char *,  CLIPFORMAT * ); 
void                      __stdcall  CLIPFORMAT_UserFree(      unsigned long *,  CLIPFORMAT * ); 

unsigned long             __stdcall  FLAG_STGMEDIUM_UserSize(      unsigned long *, unsigned long            ,  FLAG_STGMEDIUM * ); 
unsigned char * __stdcall  FLAG_STGMEDIUM_UserMarshal(   unsigned long *,  unsigned char *,  FLAG_STGMEDIUM * ); 
unsigned char * __stdcall  FLAG_STGMEDIUM_UserUnmarshal( unsigned long *,  unsigned char *,  FLAG_STGMEDIUM * ); 
void                      __stdcall  FLAG_STGMEDIUM_UserFree(      unsigned long *,  FLAG_STGMEDIUM * ); 

unsigned long             __stdcall  HBITMAP_UserSize(      unsigned long *, unsigned long            ,  HBITMAP * ); 
unsigned char * __stdcall  HBITMAP_UserMarshal(   unsigned long *,  unsigned char *,  HBITMAP * ); 
unsigned char * __stdcall  HBITMAP_UserUnmarshal( unsigned long *,  unsigned char *,  HBITMAP * ); 
void                      __stdcall  HBITMAP_UserFree(      unsigned long *,  HBITMAP * ); 

unsigned long             __stdcall  HDC_UserSize(      unsigned long *, unsigned long            ,  HDC * ); 
unsigned char * __stdcall  HDC_UserMarshal(   unsigned long *,  unsigned char *,  HDC * ); 
unsigned char * __stdcall  HDC_UserUnmarshal( unsigned long *,  unsigned char *,  HDC * ); 
void                      __stdcall  HDC_UserFree(      unsigned long *,  HDC * ); 

unsigned long             __stdcall  HICON_UserSize(      unsigned long *, unsigned long            ,  HICON * ); 
unsigned char * __stdcall  HICON_UserMarshal(   unsigned long *,  unsigned char *,  HICON * ); 
unsigned char * __stdcall  HICON_UserUnmarshal( unsigned long *,  unsigned char *,  HICON * ); 
void                      __stdcall  HICON_UserFree(      unsigned long *,  HICON * ); 

unsigned long             __stdcall  SNB_UserSize(      unsigned long *, unsigned long            ,  SNB * ); 
unsigned char * __stdcall  SNB_UserMarshal(   unsigned long *,  unsigned char *,  SNB * ); 
unsigned char * __stdcall  SNB_UserUnmarshal( unsigned long *,  unsigned char *,  SNB * ); 
void                      __stdcall  SNB_UserFree(      unsigned long *,  SNB * ); 

unsigned long             __stdcall  STGMEDIUM_UserSize(      unsigned long *, unsigned long            ,  STGMEDIUM * ); 
unsigned char * __stdcall  STGMEDIUM_UserMarshal(   unsigned long *,  unsigned char *,  STGMEDIUM * ); 
unsigned char * __stdcall  STGMEDIUM_UserUnmarshal( unsigned long *,  unsigned char *,  STGMEDIUM * ); 
void                      __stdcall  STGMEDIUM_UserFree(      unsigned long *,  STGMEDIUM * ); 

unsigned long             __stdcall  ASYNC_STGMEDIUM_UserSize64(      unsigned long *, unsigned long            ,  ASYNC_STGMEDIUM * ); 
unsigned char * __stdcall  ASYNC_STGMEDIUM_UserMarshal64(   unsigned long *,  unsigned char *,  ASYNC_STGMEDIUM * ); 
unsigned char * __stdcall  ASYNC_STGMEDIUM_UserUnmarshal64( unsigned long *,  unsigned char *,  ASYNC_STGMEDIUM * ); 
void                      __stdcall  ASYNC_STGMEDIUM_UserFree64(      unsigned long *,  ASYNC_STGMEDIUM * ); 

unsigned long             __stdcall  CLIPFORMAT_UserSize64(      unsigned long *, unsigned long            ,  CLIPFORMAT * ); 
unsigned char * __stdcall  CLIPFORMAT_UserMarshal64(   unsigned long *,  unsigned char *,  CLIPFORMAT * ); 
unsigned char * __stdcall  CLIPFORMAT_UserUnmarshal64( unsigned long *,  unsigned char *,  CLIPFORMAT * ); 
void                      __stdcall  CLIPFORMAT_UserFree64(      unsigned long *,  CLIPFORMAT * ); 

unsigned long             __stdcall  FLAG_STGMEDIUM_UserSize64(      unsigned long *, unsigned long            ,  FLAG_STGMEDIUM * ); 
unsigned char * __stdcall  FLAG_STGMEDIUM_UserMarshal64(   unsigned long *,  unsigned char *,  FLAG_STGMEDIUM * ); 
unsigned char * __stdcall  FLAG_STGMEDIUM_UserUnmarshal64( unsigned long *,  unsigned char *,  FLAG_STGMEDIUM * ); 
void                      __stdcall  FLAG_STGMEDIUM_UserFree64(      unsigned long *,  FLAG_STGMEDIUM * ); 

unsigned long             __stdcall  HBITMAP_UserSize64(      unsigned long *, unsigned long            ,  HBITMAP * ); 
unsigned char * __stdcall  HBITMAP_UserMarshal64(   unsigned long *,  unsigned char *,  HBITMAP * ); 
unsigned char * __stdcall  HBITMAP_UserUnmarshal64( unsigned long *,  unsigned char *,  HBITMAP * ); 
void                      __stdcall  HBITMAP_UserFree64(      unsigned long *,  HBITMAP * ); 

unsigned long             __stdcall  HDC_UserSize64(      unsigned long *, unsigned long            ,  HDC * ); 
unsigned char * __stdcall  HDC_UserMarshal64(   unsigned long *,  unsigned char *,  HDC * ); 
unsigned char * __stdcall  HDC_UserUnmarshal64( unsigned long *,  unsigned char *,  HDC * ); 
void                      __stdcall  HDC_UserFree64(      unsigned long *,  HDC * ); 

unsigned long             __stdcall  HICON_UserSize64(      unsigned long *, unsigned long            ,  HICON * ); 
unsigned char * __stdcall  HICON_UserMarshal64(   unsigned long *,  unsigned char *,  HICON * ); 
unsigned char * __stdcall  HICON_UserUnmarshal64( unsigned long *,  unsigned char *,  HICON * ); 
void                      __stdcall  HICON_UserFree64(      unsigned long *,  HICON * ); 

unsigned long             __stdcall  SNB_UserSize64(      unsigned long *, unsigned long            ,  SNB * ); 
unsigned char * __stdcall  SNB_UserMarshal64(   unsigned long *,  unsigned char *,  SNB * ); 
unsigned char * __stdcall  SNB_UserUnmarshal64( unsigned long *,  unsigned char *,  SNB * ); 
void                      __stdcall  SNB_UserFree64(      unsigned long *,  SNB * ); 

unsigned long             __stdcall  STGMEDIUM_UserSize64(      unsigned long *, unsigned long            ,  STGMEDIUM * ); 
unsigned char * __stdcall  STGMEDIUM_UserMarshal64(   unsigned long *,  unsigned char *,  STGMEDIUM * ); 
unsigned char * __stdcall  STGMEDIUM_UserUnmarshal64( unsigned long *,  unsigned char *,  STGMEDIUM * ); 
void                      __stdcall  STGMEDIUM_UserFree64(      unsigned long *,  STGMEDIUM * ); 

 HRESULT __stdcall IEnumUnknown_Next_Proxy( 
    IEnumUnknown * This,
     
      ULONG celt,
     
      IUnknown **rgelt,
     
      ULONG *pceltFetched);


 HRESULT __stdcall IEnumUnknown_Next_Stub( 
     IEnumUnknown * This,
     ULONG celt,
      IUnknown **rgelt,
      ULONG *pceltFetched);

 HRESULT __stdcall IBindCtx_SetBindOptions_Proxy( 
    IBindCtx * This,
     BIND_OPTS *pbindopts);


 HRESULT __stdcall IBindCtx_SetBindOptions_Stub( 
     IBindCtx * This,
      BIND_OPTS2 *pbindopts);

 HRESULT __stdcall IBindCtx_GetBindOptions_Proxy( 
    IBindCtx * This,
     BIND_OPTS *pbindopts);


 HRESULT __stdcall IBindCtx_GetBindOptions_Stub( 
     IBindCtx * This,
      BIND_OPTS2 *pbindopts);

 HRESULT __stdcall IEnumMoniker_Next_Proxy( 
    IEnumMoniker * This,
     ULONG celt,
     
      IMoniker **rgelt,
     
      ULONG *pceltFetched);


 HRESULT __stdcall IEnumMoniker_Next_Stub( 
     IEnumMoniker * This,
     ULONG celt,
      IMoniker **rgelt,
      ULONG *pceltFetched);

 BOOL __stdcall IRunnableObject_IsRunning_Proxy( 
    IRunnableObject * This);


 HRESULT __stdcall IRunnableObject_IsRunning_Stub( 
     IRunnableObject * This);

 HRESULT __stdcall IMoniker_BindToObject_Proxy( 
    IMoniker * This,
     IBindCtx *pbc,
     IMoniker *pmkToLeft,
     const IID & riidResult,
     void **ppvResult);


 HRESULT __stdcall IMoniker_BindToObject_Stub( 
     IMoniker * This,
      IBindCtx *pbc,
      IMoniker *pmkToLeft,
      const IID & riidResult,
      IUnknown **ppvResult);

 HRESULT __stdcall IMoniker_BindToStorage_Proxy( 
    IMoniker * This,
     IBindCtx *pbc,
     IMoniker *pmkToLeft,
     const IID & riid,
     void **ppvObj);


 HRESULT __stdcall IMoniker_BindToStorage_Stub( 
     IMoniker * This,
      IBindCtx *pbc,
      IMoniker *pmkToLeft,
      const IID & riid,
      IUnknown **ppvObj);

 HRESULT __stdcall IEnumString_Next_Proxy( 
    IEnumString * This,
     ULONG celt,
     
      LPOLESTR *rgelt,
     
      ULONG *pceltFetched);


 HRESULT __stdcall IEnumString_Next_Stub( 
     IEnumString * This,
     ULONG celt,
      LPOLESTR *rgelt,
      ULONG *pceltFetched);

 HRESULT __stdcall ISequentialStream_Read_Proxy( 
    ISequentialStream * This,
     
      void *pv,
     ULONG cb,
     
      ULONG *pcbRead);


 HRESULT __stdcall ISequentialStream_Read_Stub( 
     ISequentialStream * This,
      byte *pv,
     ULONG cb,
      ULONG *pcbRead);

 HRESULT __stdcall ISequentialStream_Write_Proxy( 
    ISequentialStream * This,
     
      const void *pv,
     ULONG cb,
     
      ULONG *pcbWritten);


 HRESULT __stdcall ISequentialStream_Write_Stub( 
     ISequentialStream * This,
      const byte *pv,
     ULONG cb,
      ULONG *pcbWritten);

 HRESULT __stdcall IStream_Seek_Proxy( 
    IStream * This,
     LARGE_INTEGER dlibMove,
     DWORD dwOrigin,
     
      ULARGE_INTEGER *plibNewPosition);


 HRESULT __stdcall IStream_Seek_Stub( 
     IStream * This,
     LARGE_INTEGER dlibMove,
     DWORD dwOrigin,
      ULARGE_INTEGER *plibNewPosition);

 HRESULT __stdcall IStream_CopyTo_Proxy( 
    IStream * This,
     IStream *pstm,
     ULARGE_INTEGER cb,
     
      ULARGE_INTEGER *pcbRead,
     
      ULARGE_INTEGER *pcbWritten);


 HRESULT __stdcall IStream_CopyTo_Stub( 
     IStream * This,
      IStream *pstm,
     ULARGE_INTEGER cb,
      ULARGE_INTEGER *pcbRead,
      ULARGE_INTEGER *pcbWritten);

 HRESULT __stdcall IEnumSTATSTG_Next_Proxy( 
    IEnumSTATSTG * This,
     ULONG celt,
     
      STATSTG *rgelt,
     
      ULONG *pceltFetched);


 HRESULT __stdcall IEnumSTATSTG_Next_Stub( 
     IEnumSTATSTG * This,
     ULONG celt,
      STATSTG *rgelt,
      ULONG *pceltFetched);

 HRESULT __stdcall IStorage_OpenStream_Proxy( 
    IStorage * This,
     const OLECHAR *pwcsName,
     void *reserved1,
     DWORD grfMode,
     DWORD reserved2,
     IStream **ppstm);


 HRESULT __stdcall IStorage_OpenStream_Stub( 
     IStorage * This,
      const OLECHAR *pwcsName,
     unsigned long cbReserved1,
      byte *reserved1,
     DWORD grfMode,
     DWORD reserved2,
      IStream **ppstm);

 HRESULT __stdcall IStorage_CopyTo_Proxy( 
    IStorage * This,
     DWORD ciidExclude,
     const IID *rgiidExclude,
     
      SNB snbExclude,
     IStorage *pstgDest);


 HRESULT __stdcall IStorage_CopyTo_Stub( 
     IStorage * This,
     DWORD ciidExclude,
      const IID *rgiidExclude,
      SNB snbExclude,
      IStorage *pstgDest);

 HRESULT __stdcall IStorage_EnumElements_Proxy( 
    IStorage * This,
     DWORD reserved1,
     void *reserved2,
     DWORD reserved3,
     IEnumSTATSTG **ppenum);


 HRESULT __stdcall IStorage_EnumElements_Stub( 
     IStorage * This,
     DWORD reserved1,
     unsigned long cbReserved2,
      byte *reserved2,
     DWORD reserved3,
      IEnumSTATSTG **ppenum);

 HRESULT __stdcall ILockBytes_ReadAt_Proxy( 
    ILockBytes * This,
     ULARGE_INTEGER ulOffset,
     
      void *pv,
     ULONG cb,
     
      ULONG *pcbRead);


 HRESULT __stdcall ILockBytes_ReadAt_Stub( 
     ILockBytes * This,
     ULARGE_INTEGER ulOffset,
      byte *pv,
     ULONG cb,
      ULONG *pcbRead);

 HRESULT __stdcall ILockBytes_WriteAt_Proxy( 
    ILockBytes * This,
     ULARGE_INTEGER ulOffset,
     
      const void *pv,
     ULONG cb,
     
      ULONG *pcbWritten);


 HRESULT __stdcall ILockBytes_WriteAt_Stub( 
     ILockBytes * This,
     ULARGE_INTEGER ulOffset,
      const byte *pv,
     ULONG cb,
      ULONG *pcbWritten);

 HRESULT __stdcall IEnumFORMATETC_Next_Proxy( 
    IEnumFORMATETC * This,
     ULONG celt,
     
      FORMATETC *rgelt,
     
      ULONG *pceltFetched);


 HRESULT __stdcall IEnumFORMATETC_Next_Stub( 
     IEnumFORMATETC * This,
     ULONG celt,
      FORMATETC *rgelt,
      ULONG *pceltFetched);

 HRESULT __stdcall IEnumSTATDATA_Next_Proxy( 
    IEnumSTATDATA * This,
     ULONG celt,
     
      STATDATA *rgelt,
     
      ULONG *pceltFetched);


 HRESULT __stdcall IEnumSTATDATA_Next_Stub( 
     IEnumSTATDATA * This,
     ULONG celt,
      STATDATA *rgelt,
      ULONG *pceltFetched);

 void __stdcall IAdviseSink_OnDataChange_Proxy( 
    IAdviseSink * This,
     FORMATETC *pFormatetc,
     STGMEDIUM *pStgmed);


 HRESULT __stdcall IAdviseSink_OnDataChange_Stub( 
     IAdviseSink * This,
      FORMATETC *pFormatetc,
      ASYNC_STGMEDIUM *pStgmed);

 void __stdcall IAdviseSink_OnViewChange_Proxy( 
    IAdviseSink * This,
     DWORD dwAspect,
     LONG lindex);


 HRESULT __stdcall IAdviseSink_OnViewChange_Stub( 
     IAdviseSink * This,
     DWORD dwAspect,
     LONG lindex);

 void __stdcall IAdviseSink_OnRename_Proxy( 
    IAdviseSink * This,
     IMoniker *pmk);


 HRESULT __stdcall IAdviseSink_OnRename_Stub( 
     IAdviseSink * This,
      IMoniker *pmk);

 void __stdcall IAdviseSink_OnSave_Proxy( 
    IAdviseSink * This);


 HRESULT __stdcall IAdviseSink_OnSave_Stub( 
     IAdviseSink * This);

 void __stdcall IAdviseSink_OnClose_Proxy( 
    IAdviseSink * This);


 HRESULT __stdcall IAdviseSink_OnClose_Stub( 
     IAdviseSink * This);

 void __stdcall IAdviseSink2_OnLinkSrcChange_Proxy( 
    IAdviseSink2 * This,
     IMoniker *pmk);


 HRESULT __stdcall IAdviseSink2_OnLinkSrcChange_Stub( 
     IAdviseSink2 * This,
      IMoniker *pmk);

 HRESULT __stdcall IDataObject_GetData_Proxy( 
    IDataObject * This,
     FORMATETC *pformatetcIn,
     STGMEDIUM *pmedium);


 HRESULT __stdcall IDataObject_GetData_Stub( 
     IDataObject * This,
      FORMATETC *pformatetcIn,
      STGMEDIUM *pRemoteMedium);

 HRESULT __stdcall IDataObject_GetDataHere_Proxy( 
    IDataObject * This,
     FORMATETC *pformatetc,
     STGMEDIUM *pmedium);


 HRESULT __stdcall IDataObject_GetDataHere_Stub( 
     IDataObject * This,
      FORMATETC *pformatetc,
      STGMEDIUM *pRemoteMedium);

 HRESULT __stdcall IDataObject_SetData_Proxy( 
    IDataObject * This,
     FORMATETC *pformatetc,
     STGMEDIUM *pmedium,
     BOOL fRelease);


 HRESULT __stdcall IDataObject_SetData_Stub( 
     IDataObject * This,
      FORMATETC *pformatetc,
      FLAG_STGMEDIUM *pmedium,
     BOOL fRelease);

 HRESULT __stdcall IFillLockBytes_FillAppend_Proxy( 
    IFillLockBytes * This,
     
      const void *pv,
     
      ULONG cb,
     
      ULONG *pcbWritten);


 HRESULT __stdcall IFillLockBytes_FillAppend_Stub( 
     IFillLockBytes * This,
      const byte *pv,
     ULONG cb,
      ULONG *pcbWritten);

 HRESULT __stdcall IFillLockBytes_FillAt_Proxy( 
    IFillLockBytes * This,
     
      ULARGE_INTEGER ulOffset,
     
      const void *pv,
     
      ULONG cb,
     
      ULONG *pcbWritten);


 HRESULT __stdcall IFillLockBytes_FillAt_Stub( 
     IFillLockBytes * This,
     ULARGE_INTEGER ulOffset,
      const byte *pv,
     ULONG cb,
      ULONG *pcbWritten);

 void __stdcall AsyncIAdviseSink_Begin_OnDataChange_Proxy( 
    AsyncIAdviseSink * This,
     FORMATETC *pFormatetc,
     STGMEDIUM *pStgmed);


 HRESULT __stdcall AsyncIAdviseSink_Begin_OnDataChange_Stub( 
     AsyncIAdviseSink * This,
      FORMATETC *pFormatetc,
      ASYNC_STGMEDIUM *pStgmed);

 void __stdcall AsyncIAdviseSink_Finish_OnDataChange_Proxy( 
    AsyncIAdviseSink * This);


 HRESULT __stdcall AsyncIAdviseSink_Finish_OnDataChange_Stub( 
     AsyncIAdviseSink * This);

 void __stdcall AsyncIAdviseSink_Begin_OnViewChange_Proxy( 
    AsyncIAdviseSink * This,
     DWORD dwAspect,
     LONG lindex);


 HRESULT __stdcall AsyncIAdviseSink_Begin_OnViewChange_Stub( 
     AsyncIAdviseSink * This,
     DWORD dwAspect,
     LONG lindex);

 void __stdcall AsyncIAdviseSink_Finish_OnViewChange_Proxy( 
    AsyncIAdviseSink * This);


 HRESULT __stdcall AsyncIAdviseSink_Finish_OnViewChange_Stub( 
     AsyncIAdviseSink * This);

 void __stdcall AsyncIAdviseSink_Begin_OnRename_Proxy( 
    AsyncIAdviseSink * This,
     IMoniker *pmk);


 HRESULT __stdcall AsyncIAdviseSink_Begin_OnRename_Stub( 
     AsyncIAdviseSink * This,
      IMoniker *pmk);

 void __stdcall AsyncIAdviseSink_Finish_OnRename_Proxy( 
    AsyncIAdviseSink * This);


 HRESULT __stdcall AsyncIAdviseSink_Finish_OnRename_Stub( 
     AsyncIAdviseSink * This);

 void __stdcall AsyncIAdviseSink_Begin_OnSave_Proxy( 
    AsyncIAdviseSink * This);


 HRESULT __stdcall AsyncIAdviseSink_Begin_OnSave_Stub( 
     AsyncIAdviseSink * This);

 void __stdcall AsyncIAdviseSink_Finish_OnSave_Proxy( 
    AsyncIAdviseSink * This);


 HRESULT __stdcall AsyncIAdviseSink_Finish_OnSave_Stub( 
     AsyncIAdviseSink * This);

 void __stdcall AsyncIAdviseSink_Begin_OnClose_Proxy( 
    AsyncIAdviseSink * This);


 HRESULT __stdcall AsyncIAdviseSink_Begin_OnClose_Stub( 
     AsyncIAdviseSink * This);

 void __stdcall AsyncIAdviseSink_Finish_OnClose_Proxy( 
    AsyncIAdviseSink * This);


 HRESULT __stdcall AsyncIAdviseSink_Finish_OnClose_Stub( 
     AsyncIAdviseSink * This);

 void __stdcall AsyncIAdviseSink2_Begin_OnLinkSrcChange_Proxy( 
    AsyncIAdviseSink2 * This,
     IMoniker *pmk);


 HRESULT __stdcall AsyncIAdviseSink2_Begin_OnLinkSrcChange_Stub( 
     AsyncIAdviseSink2 * This,
      IMoniker *pmk);

 void __stdcall AsyncIAdviseSink2_Finish_OnLinkSrcChange_Proxy( 
    AsyncIAdviseSink2 * This);


 HRESULT __stdcall AsyncIAdviseSink2_Finish_OnLinkSrcChange_Stub( 
     AsyncIAdviseSink2 * This);






}
#line 13660 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"

#line 13662 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objidl.h"




#line 442 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"










#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\guiddef.h"
























































#line 58 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\guiddef.h"








#line 67 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\guiddef.h"












































































































































#line 453 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"


#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\cguid.h"













#pragma once
#line 16 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\cguid.h"



#pragma warning(push)
#line 21 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\cguid.h"
#pragma warning(disable:4001) 
#line 23 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\cguid.h"


extern "C" {
#line 27 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\cguid.h"

extern const IID GUID_NULL;


extern const IID CATID_MARSHALER;
#line 33 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\cguid.h"

extern const IID IID_IRpcChannel;
extern const IID IID_IRpcStub;
extern const IID IID_IStubManager;
extern const IID IID_IRpcProxy;
extern const IID IID_IProxyManager;
extern const IID IID_IPSFactory;
extern const IID IID_IInternalMoniker;
extern const IID IID_IDfReserved1;
extern const IID IID_IDfReserved2;
extern const IID IID_IDfReserved3;
extern const CLSID CLSID_StdMarshal;
extern const CLSID CLSID_AggStdMarshal;
extern const CLSID CLSID_StdAsyncActManager;
extern const IID IID_IStub;
extern const IID IID_IProxy;
extern const IID IID_IEnumGeneric;
extern const IID IID_IEnumHolder;
extern const IID IID_IEnumCallback;
extern const IID IID_IOleManager;
extern const IID IID_IOlePresObj;
extern const IID IID_IDebug;
extern const IID IID_IDebugStream;
extern const CLSID CLSID_PSGenObject;
extern const CLSID CLSID_PSClientSite;
extern const CLSID CLSID_PSClassObject;
extern const CLSID CLSID_PSInPlaceActive;
extern const CLSID CLSID_PSInPlaceFrame;
extern const CLSID CLSID_PSDragDrop;
extern const CLSID CLSID_PSBindCtx;
extern const CLSID CLSID_PSEnumerators;
extern const CLSID CLSID_StaticMetafile;
extern const CLSID CLSID_StaticDib;
extern const CLSID CID_CDfsVolume;
extern const CLSID CLSID_DCOMAccessControl;
extern const CLSID CLSID_GlobalOptions;
extern const CLSID CLSID_StdGlobalInterfaceTable;
extern const CLSID CLSID_ComBinding;
extern const CLSID CLSID_StdEvent;
extern const CLSID CLSID_ManualResetEvent;
extern const CLSID CLSID_SynchronizeContainer;


extern const CLSID CLSID_AddrControl;
#line 78 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\cguid.h"


extern const CLSID CLSID_ContextSwitcher;
#line 82 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\cguid.h"










extern const CLSID CLSID_CCDFormKrnl;
extern const CLSID CLSID_CCDPropertyPage;
extern const CLSID CLSID_CCDFormDialog;




extern const CLSID CLSID_CCDCommandButton;
extern const CLSID CLSID_CCDComboBox;
extern const CLSID CLSID_CCDTextBox;
extern const CLSID CLSID_CCDCheckBox;
extern const CLSID CLSID_CCDLabel;
extern const CLSID CLSID_CCDOptionButton;
extern const CLSID CLSID_CCDListBox;
extern const CLSID CLSID_CCDScrollBar;
extern const CLSID CLSID_CCDGroupBox;




extern const CLSID CLSID_CCDGeneralPropertyPage;
extern const CLSID CLSID_CCDGenericPropertyPage;
extern const CLSID CLSID_CCDFontPropertyPage;
extern const CLSID CLSID_CCDColorPropertyPage;
extern const CLSID CLSID_CCDLabelPropertyPage;
extern const CLSID CLSID_CCDCheckBoxPropertyPage;
extern const CLSID CLSID_CCDTextBoxPropertyPage;
extern const CLSID CLSID_CCDOptionButtonPropertyPage;
extern const CLSID CLSID_CCDListBoxPropertyPage;
extern const CLSID CLSID_CCDCommandButtonPropertyPage;
extern const CLSID CLSID_CCDComboBoxPropertyPage;
extern const CLSID CLSID_CCDScrollBarPropertyPage;
extern const CLSID CLSID_CCDGroupBoxPropertyPage;
extern const CLSID CLSID_CCDXObjectPropertyPage;

extern const CLSID CLSID_CStdPropertyFrame;

extern const CLSID CLSID_CFormPropertyPage;
extern const CLSID CLSID_CGridPropertyPage;

extern const CLSID CLSID_CWSJArticlePage;
extern const CLSID CLSID_CSystemPage;

extern const CLSID CLSID_IdentityUnmarshal;
extern const CLSID CLSID_InProcFreeMarshaler;

extern const CLSID CLSID_Picture_Metafile;
extern const CLSID CLSID_Picture_EnhMetafile;
extern const CLSID CLSID_Picture_Dib;




extern const GUID GUID_TRISTATE;


}
#line 150 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\cguid.h"



#pragma warning(pop)


#line 157 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\cguid.h"
#line 158 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\cguid.h"

#line 160 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\cguid.h"

#line 456 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"
#line 457 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"


typedef enum tagCOINIT
{
  COINIT_APARTMENTTHREADED  = 0x2,      


  
  COINIT_MULTITHREADED      = 0x0,      
  COINIT_DISABLE_OLE1DDE    = 0x4,      
  COINIT_SPEED_OVER_MEMORY  = 0x8,      
#line 469 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"
} COINIT;







extern "C" __declspec(dllimport) DWORD __stdcall CoBuildVersion( void );



 extern "C" __declspec(dllimport) HRESULT __stdcall  CoInitialize( LPVOID pvReserved);
extern "C" __declspec(dllimport) void __stdcall  CoUninitialize(void);
 extern "C" __declspec(dllimport) HRESULT __stdcall  CoGetMalloc( DWORD dwMemContext,  LPMALLOC * ppMalloc);
extern "C" __declspec(dllimport) DWORD __stdcall CoGetCurrentProcess(void);
extern "C" __declspec(dllimport) HRESULT __stdcall  CoRegisterMallocSpy( LPMALLOCSPY pMallocSpy);
extern "C" __declspec(dllimport) HRESULT __stdcall  CoRevokeMallocSpy(void);
extern "C" __declspec(dllimport) HRESULT __stdcall  CoCreateStandardMalloc( DWORD memctx,  IMalloc * * ppMalloc);



 extern "C" __declspec(dllimport) HRESULT __stdcall  CoInitializeEx( LPVOID pvReserved,  DWORD dwCoInit);


extern "C" __declspec(dllimport) HRESULT __stdcall CoGetCallerTID(  LPDWORD lpdwTID );


extern "C" __declspec(dllimport) HRESULT __stdcall CoGetCurrentLogicalThreadId( GUID *pguid);
#line 499 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"



 extern "C" __declspec(dllimport) HRESULT __stdcall  CoRegisterInitializeSpy( LPINITIALIZESPY pSpy,  ULARGE_INTEGER *puliCookie);
 extern "C" __declspec(dllimport) HRESULT __stdcall  CoRevokeInitializeSpy( ULARGE_INTEGER uliCookie);

 extern "C" __declspec(dllimport) HRESULT __stdcall  CoGetContextToken( ULONG_PTR* pToken);



typedef enum tagCOMSD
{
    SD_LAUNCHPERMISSIONS = 0,       
    SD_ACCESSPERMISSIONS = 1,       
    SD_LAUNCHRESTRICTIONS = 2,      
    SD_ACCESSRESTRICTIONS = 3       

} COMSD;
 extern "C" __declspec(dllimport) HRESULT __stdcall  CoGetSystemSecurityPermissions(COMSD comSDType, PSECURITY_DESCRIPTOR *ppSD);

#line 520 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"




 extern "C" __declspec(dllimport) HRESULT __stdcall CoGetApartmentType( APTTYPE * pAptType,  APTTYPEQUALIFIER * pAptQualifier);

#line 527 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"




#line 532 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"



typedef struct tagSOleTlsDataPublic
{
    void *pvReserved0[2];
    DWORD dwReserved0[3];
    void *pvReserved1[1];
    DWORD dwReserved1[3];
    void *pvReserved2[4];
    DWORD dwReserved2[1];
    void *pCurrentCtx;
} SOleTlsDataPublic;

#line 547 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"



 extern "C" __declspec(dllimport) HRESULT __stdcall     CoGetObjectContext( const IID & riid,  LPVOID * ppv);



 extern "C" __declspec(dllimport) HRESULT __stdcall  CoGetClassObject( const IID & rclsid,  DWORD dwClsContext,  LPVOID pvReserved,
                     const IID & riid,  LPVOID * ppv);
 extern "C" __declspec(dllimport) HRESULT __stdcall  CoRegisterClassObject( const IID & rclsid,  LPUNKNOWN pUnk,
                     DWORD dwClsContext,  DWORD flags,  LPDWORD lpdwRegister);
 extern "C" __declspec(dllimport) HRESULT __stdcall  CoRevokeClassObject( DWORD dwRegister);
 extern "C" __declspec(dllimport) HRESULT __stdcall  CoResumeClassObjects(void);
 extern "C" __declspec(dllimport) HRESULT __stdcall  CoSuspendClassObjects(void);
extern "C" __declspec(dllimport) ULONG __stdcall CoAddRefServerProcess(void);
extern "C" __declspec(dllimport) ULONG __stdcall CoReleaseServerProcess(void);
 extern "C" __declspec(dllimport) HRESULT __stdcall  CoGetPSClsid( const IID & riid,  CLSID *pClsid);
 extern "C" __declspec(dllimport) HRESULT __stdcall  CoRegisterPSClsid( const IID & riid,  const IID & rclsid);


 extern "C" __declspec(dllimport) HRESULT __stdcall  CoRegisterSurrogate( LPSURROGATE pSurrogate);



 extern "C" __declspec(dllimport) HRESULT __stdcall CoGetMarshalSizeMax( ULONG *pulSize,  const IID & riid,  LPUNKNOWN pUnk,
                     DWORD dwDestContext,  LPVOID pvDestContext,  DWORD mshlflags);
 extern "C" __declspec(dllimport) HRESULT __stdcall CoMarshalInterface( LPSTREAM pStm,  const IID & riid,  LPUNKNOWN pUnk,
                     DWORD dwDestContext,  LPVOID pvDestContext,  DWORD mshlflags);
 extern "C" __declspec(dllimport) HRESULT __stdcall CoUnmarshalInterface( LPSTREAM pStm,  const IID & riid,  LPVOID * ppv);
extern "C" __declspec(dllimport) HRESULT __stdcall CoMarshalHresult( LPSTREAM pstm,  HRESULT hresult);
extern "C" __declspec(dllimport) HRESULT __stdcall CoUnmarshalHresult( LPSTREAM pstm,  HRESULT  * phresult);
 extern "C" __declspec(dllimport) HRESULT __stdcall CoReleaseMarshalData( LPSTREAM pStm);
 extern "C" __declspec(dllimport) HRESULT __stdcall CoDisconnectObject( LPUNKNOWN pUnk,  DWORD dwReserved);
 extern "C" __declspec(dllimport) HRESULT __stdcall CoLockObjectExternal( LPUNKNOWN pUnk,  BOOL fLock,  BOOL fLastUnlockReleases);
 extern "C" __declspec(dllimport) HRESULT __stdcall CoGetStandardMarshal( const IID & riid,  LPUNKNOWN pUnk,
                     DWORD dwDestContext,  LPVOID pvDestContext,  DWORD mshlflags,
                     LPMARSHAL * ppMarshal);


 extern "C" __declspec(dllimport) HRESULT __stdcall CoGetStdMarshalEx( LPUNKNOWN pUnkOuter,  DWORD smexflags,
                             LPUNKNOWN * ppUnkInner);


typedef enum tagSTDMSHLFLAGS
{
    SMEXF_SERVER     = 0x01,       
    SMEXF_HANDLER    = 0x02        
} STDMSHLFLAGS;


extern "C" __declspec(dllimport) BOOL __stdcall CoIsHandlerConnected( LPUNKNOWN pUnk);


 extern "C" __declspec(dllimport) HRESULT __stdcall CoMarshalInterThreadInterfaceInStream( const IID & riid,  LPUNKNOWN pUnk,
                     LPSTREAM *ppStm);

 extern "C" __declspec(dllimport) HRESULT __stdcall CoGetInterfaceAndReleaseStream( LPSTREAM pStm,  const IID & iid,
                     LPVOID * ppv);

 extern "C" __declspec(dllimport) HRESULT __stdcall CoCreateFreeThreadedMarshaler( LPUNKNOWN  punkOuter,
                     LPUNKNOWN *ppunkMarshal);



extern "C" __declspec(dllimport) HINSTANCE __stdcall CoLoadLibrary( LPOLESTR lpszLibName,  BOOL bAutoFree);
extern "C" __declspec(dllimport) void __stdcall CoFreeLibrary( HINSTANCE hInst);
extern "C" __declspec(dllimport) void __stdcall CoFreeAllLibraries(void);
extern "C" __declspec(dllimport) void __stdcall CoFreeUnusedLibraries(void);


extern "C" __declspec(dllimport) void __stdcall CoFreeUnusedLibrariesEx( DWORD dwUnloadDelay,  DWORD dwReserved);
#line 619 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"


 extern "C" __declspec(dllimport) HRESULT __stdcall CoDisconnectContext(DWORD dwTimeout);
#line 623 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"






 extern "C" __declspec(dllimport) HRESULT __stdcall CoInitializeSecurity(
                     PSECURITY_DESCRIPTOR    pSecDesc,
                     LONG                        cAuthSvc,
                     
                         SOLE_AUTHENTICATION_SERVICE *asAuthSvc,
                     void                    *pReserved1,
                     DWORD                        dwAuthnLevel,
                     DWORD                        dwImpLevel,
                     void                    *pAuthList,
                     DWORD                        dwCapabilities,
                     void                    *pReserved3 );


 extern "C" __declspec(dllimport) HRESULT __stdcall CoGetCallContext(  const IID & riid,  void **ppInterface );


 extern "C" __declspec(dllimport) HRESULT __stdcall CoQueryProxyBlanket(
     IUnknown                       *pProxy,
     DWORD                     *pwAuthnSvc,
     DWORD                     *pAuthzSvc,
     OLECHAR            **pServerPrincName,
     DWORD                     *pAuthnLevel,
     DWORD                     *pImpLevel,
     RPC_AUTH_IDENTITY_HANDLE  *pAuthInfo,
     DWORD                     *pCapabilites );


 extern "C" __declspec(dllimport) HRESULT __stdcall CoSetProxyBlanket(
     IUnknown                     *pProxy,
     DWORD                         dwAuthnSvc,
     DWORD                         dwAuthzSvc,
     OLECHAR                  *pServerPrincName,
     DWORD                         dwAuthnLevel,
     DWORD                         dwImpLevel,
     RPC_AUTH_IDENTITY_HANDLE  pAuthInfo,
     DWORD                         dwCapabilities );


 extern "C" __declspec(dllimport) HRESULT __stdcall CoCopyProxy(
     IUnknown           *pProxy,
     IUnknown   **ppCopy );


 extern "C" __declspec(dllimport) HRESULT __stdcall CoQueryClientBlanket(
     DWORD             *pAuthnSvc,
     DWORD             *pAuthzSvc,
     OLECHAR           **pServerPrincName,
     DWORD             *pAuthnLevel,
     DWORD             *pImpLevel,
     RPC_AUTHZ_HANDLE  *pPrivs,
     DWORD           *pCapabilities );


 extern "C" __declspec(dllimport) HRESULT __stdcall CoImpersonateClient(void);


 extern "C" __declspec(dllimport) HRESULT __stdcall CoRevertToSelf(void);


 extern "C" __declspec(dllimport) HRESULT __stdcall CoQueryAuthenticationServices(
     DWORD *pcAuthSvc,
     SOLE_AUTHENTICATION_SERVICE **asAuthSvc );


 extern "C" __declspec(dllimport) HRESULT __stdcall CoSwitchCallContext(  IUnknown *pNewObject,  IUnknown **ppOldObject );









#line 704 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"



 extern "C" __declspec(dllimport) HRESULT __stdcall CoCreateInstance(     const IID & rclsid, 
                            LPUNKNOWN pUnkOuter,
                                DWORD dwClsContext, 
                                const IID & riid, 
                            LPVOID * ppv);





 extern "C" __declspec(dllimport) HRESULT __stdcall CoGetInstanceFromFile(
     COSERVERINFO *            pServerInfo,
     CLSID        *            pClsid,
     IUnknown     *            punkOuter, 
     DWORD                         dwClsCtx,
     DWORD                         grfMode,
     OLECHAR          *            pwszName,
     DWORD                         dwCount,
     MULTI_QI * pResults );


 extern "C" __declspec(dllimport) HRESULT __stdcall CoGetInstanceFromIStorage(
     COSERVERINFO *            pServerInfo,
     CLSID        *            pClsid,
     IUnknown     *            punkOuter, 
     DWORD                         dwClsCtx,
     struct IStorage  *            pstg,
     DWORD                         dwCount,
     MULTI_QI * pResults );


 extern "C" __declspec(dllimport) HRESULT __stdcall CoCreateInstanceEx(
     const IID &                      Clsid,
     IUnknown     *            punkOuter, 
     DWORD                         dwClsCtx,
     COSERVERINFO *            pServerInfo,
     DWORD                         dwCount,
     MULTI_QI * pResults );

#line 747 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"





 extern "C" __declspec(dllimport) HRESULT __stdcall CoGetCancelObject( DWORD dwThreadId,  const IID & iid,  void **ppUnk);


 extern "C" __declspec(dllimport) HRESULT __stdcall CoSetCancelObject( IUnknown *pUnk);


 extern "C" __declspec(dllimport) HRESULT __stdcall CoCancelCall( DWORD dwThreadId,  ULONG ulTimeout);


 extern "C" __declspec(dllimport) HRESULT __stdcall CoTestCancel(void);


 extern "C" __declspec(dllimport) HRESULT __stdcall CoEnableCallCancellation( LPVOID pReserved);


 extern "C" __declspec(dllimport) HRESULT __stdcall CoDisableCallCancellation( LPVOID pReserved);


extern "C" __declspec(dllimport) HRESULT __stdcall CoAllowSetForegroundWindow( IUnknown *pUnk,  LPVOID lpvReserved);


extern "C" __declspec(dllimport) HRESULT __stdcall DcomChannelSetHResult( LPVOID pvReserved,  ULONG* pulReserved,  HRESULT appsHR);

#line 776 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"



 extern "C" __declspec(dllimport) HRESULT __stdcall StringFromCLSID( const IID & rclsid,  LPOLESTR * lplpsz);
 extern "C" __declspec(dllimport) HRESULT __stdcall CLSIDFromString( LPCOLESTR lpsz,  LPCLSID pclsid);
 extern "C" __declspec(dllimport) HRESULT __stdcall StringFromIID( const IID & rclsid,  LPOLESTR * lplpsz);
 extern "C" __declspec(dllimport) HRESULT __stdcall IIDFromString( LPCOLESTR lpsz,  LPIID lpiid);
extern "C" __declspec(dllimport) BOOL __stdcall CoIsOle1Class( const IID & rclsid);
 extern "C" __declspec(dllimport) HRESULT __stdcall ProgIDFromCLSID ( const IID & clsid,  LPOLESTR * lplpszProgID);
 extern "C" __declspec(dllimport) HRESULT __stdcall CLSIDFromProgID ( LPCOLESTR lpszProgID,  LPCLSID lpclsid);
 extern "C" __declspec(dllimport) HRESULT __stdcall CLSIDFromProgIDEx ( LPCOLESTR lpszProgID,  LPCLSID lpclsid);
 extern "C" __declspec(dllimport) int __stdcall StringFromGUID2( const GUID & rguid,  LPOLESTR lpsz,  int cchMax);

 extern "C" __declspec(dllimport) HRESULT __stdcall CoCreateGuid( GUID  *pguid);

extern "C" __declspec(dllimport) BOOL __stdcall CoFileTimeToDosDateTime(
                  FILETIME * lpFileTime,  LPWORD lpDosDate,  LPWORD lpDosTime);
extern "C" __declspec(dllimport) BOOL __stdcall CoDosDateTimeToFileTime(
                        WORD nDosDate,  WORD nDosTime,  FILETIME * lpFileTime);
extern "C" __declspec(dllimport) HRESULT __stdcall  CoFileTimeNow(  FILETIME * lpFileTime );


 extern "C" __declspec(dllimport) HRESULT __stdcall CoRegisterMessageFilter(  LPMESSAGEFILTER lpMessageFilter,
                                 LPMESSAGEFILTER * lplpMessageFilter );



extern "C" __declspec(dllimport) HRESULT __stdcall CoRegisterChannelHook(  const GUID & ExtensionUuid,  IChannelHook *pChannelHook );
#line 805 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"





 extern "C" __declspec(dllimport) HRESULT __stdcall CoWaitForMultipleHandles ( DWORD dwFlags,
                                     DWORD dwTimeout,
                                     ULONG cHandles,
                                     LPHANDLE pHandles,
                                     LPDWORD  lpdwindex);



typedef enum tagCOWAIT_FLAGS
{
  COWAIT_WAITALL = 1,
  COWAIT_ALERTABLE = 2,
  COWAIT_INPUTAVAILABLE = 4
}COWAIT_FLAGS;

#line 826 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"





 extern "C" __declspec(dllimport) HRESULT __stdcall CoInvalidateRemoteMachineBindings( LPOLESTR pszMachineName);
#line 833 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"



 extern "C" __declspec(dllimport) HRESULT __stdcall CoGetTreatAsClass( const IID & clsidOld,  LPCLSID pClsidNew);
 extern "C" __declspec(dllimport) HRESULT __stdcall CoTreatAsClass( const IID & clsidOld,  const IID & clsidNew);










typedef HRESULT (__stdcall * LPFNGETCLASSOBJECT) (const IID &, const IID &, LPVOID *);





typedef HRESULT (__stdcall * LPFNCANUNLOADNOW)(void);


extern "C" HRESULT __stdcall  DllGetClassObject( const IID & rclsid,  const IID & riid,  LPVOID * ppv);

extern "C" HRESULT __stdcall  DllCanUnloadNow(void);



extern "C" __declspec(dllimport)      LPVOID __stdcall CoTaskMemAlloc(
	 SIZE_T cb);
extern "C" __declspec(dllimport)     LPVOID __stdcall CoTaskMemRealloc(
	     LPVOID pv, 
	 SIZE_T cb);
extern "C" __declspec(dllimport) void __stdcall   CoTaskMemFree(
	     LPVOID pv
	); 





extern "C" __declspec(dllimport) HRESULT __stdcall CreateDataAdviseHolder( LPDATAADVISEHOLDER * ppDAHolder);

extern "C" __declspec(dllimport) HRESULT __stdcall CreateDataCache( LPUNKNOWN pUnkOuter,  const IID & rclsid,
                           const IID & iid,  LPVOID * ppv);





 extern "C" __declspec(dllimport) HRESULT __stdcall StgCreateDocfile(  const WCHAR* pwcsName,
             DWORD grfMode,
             DWORD reserved,
             IStorage** ppstgOpen);

 extern "C" __declspec(dllimport) HRESULT __stdcall StgCreateDocfileOnILockBytes( ILockBytes* plkbyt,
                     DWORD grfMode,
                     DWORD reserved,
                     IStorage** ppstgOpen);

 extern "C" __declspec(dllimport) HRESULT __stdcall StgOpenStorage(  const WCHAR* pwcsName,
               IStorage* pstgPriority,
               DWORD grfMode,
               SNB snbExclude,
               DWORD reserved,
               IStorage** ppstgOpen);
 extern "C" __declspec(dllimport) HRESULT __stdcall StgOpenStorageOnILockBytes( ILockBytes* plkbyt,
                   IStorage* pstgPriority,
                   DWORD grfMode,
                   SNB snbExclude,
                   DWORD reserved,
                   IStorage** ppstgOpen);

 extern "C" __declspec(dllimport) HRESULT __stdcall StgIsStorageFile(  const WCHAR* pwcsName);
 extern "C" __declspec(dllimport) HRESULT __stdcall StgIsStorageILockBytes( ILockBytes* plkbyt);

 extern "C" __declspec(dllimport) HRESULT __stdcall StgSetTimes(  const WCHAR* lpszName,
                    const FILETIME* pctime,
                    const FILETIME* patime,
                    const FILETIME* pmtime);

 extern "C" __declspec(dllimport) HRESULT __stdcall StgOpenAsyncDocfileOnIFillLockBytes(  IFillLockBytes *pflb,
              DWORD grfMode,
              DWORD asyncFlags,
              IStorage** ppstgOpen);

 extern "C" __declspec(dllimport) HRESULT __stdcall StgGetIFillLockBytesOnILockBytes(  ILockBytes *pilb,
              IFillLockBytes** ppflb);

 extern "C" __declspec(dllimport) HRESULT __stdcall StgGetIFillLockBytesOnFile(  OLECHAR const *pwcsName,
              IFillLockBytes** ppflb);


 extern "C" __declspec(dllimport) HRESULT __stdcall StgOpenLayoutDocfile(  OLECHAR const *pwcsDfName,
              DWORD grfMode,
              DWORD reserved,
              IStorage** ppstgOpen);




#line 937 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"



#line 941 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"

typedef struct tagSTGOPTIONS
{
    USHORT usVersion;            
    USHORT reserved;             
    ULONG ulSectorSize;          

    const WCHAR *pwcsTemplateFile;  
#line 950 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"
} STGOPTIONS;

 extern "C" __declspec(dllimport) HRESULT __stdcall StgCreateStorageEx (  const WCHAR* pwcsName,
             DWORD grfMode,
             DWORD stgfmt,              
             DWORD grfAttrs,
             STGOPTIONS* pStgOptions,
             PSECURITY_DESCRIPTOR pSecurityDescriptor,
             const IID & riid,
             void** ppObjectOpen);

 extern "C" __declspec(dllimport) HRESULT __stdcall StgOpenStorageEx (  const WCHAR* pwcsName,
             DWORD grfMode,
             DWORD stgfmt,              
             DWORD grfAttrs,
             STGOPTIONS* pStgOptions,
             PSECURITY_DESCRIPTOR pSecurityDescriptor,
             const IID & riid,
             void** ppObjectOpen);






 extern "C" __declspec(dllimport) HRESULT __stdcall  BindMoniker( LPMONIKER pmk,  DWORD grfOpt,  const IID & iidResult,  LPVOID * ppvResult);

extern "C" __declspec(dllimport) HRESULT __stdcall  CoInstall(
     IBindCtx     * pbc,
     DWORD          dwFlags,
     uCLSSPEC     * pClassSpec,
     QUERYCONTEXT * pQuery,
     LPWSTR         pszCodeBase);

 extern "C" __declspec(dllimport) HRESULT __stdcall  CoGetObject( LPCWSTR pszName,  BIND_OPTS *pBindOptions,  const IID & riid,  void **ppv);
 extern "C" __declspec(dllimport) HRESULT __stdcall  MkParseDisplayName( LPBC pbc,  LPCOLESTR szUserName,
                 ULONG  * pchEaten,  LPMONIKER  * ppmk);
 extern "C" __declspec(dllimport) HRESULT __stdcall  MonikerRelativePathTo( LPMONIKER pmkSrc,  LPMONIKER pmkDest,  LPMONIKER
                * ppmkRelPath,  BOOL dwReserved);
 extern "C" __declspec(dllimport) HRESULT __stdcall  MonikerCommonPrefixWith( LPMONIKER pmkThis,  LPMONIKER pmkOther,
                 LPMONIKER * ppmkCommon);
 extern "C" __declspec(dllimport) HRESULT __stdcall  CreateBindCtx( DWORD reserved,  LPBC * ppbc);
 extern "C" __declspec(dllimport) HRESULT __stdcall  CreateGenericComposite( LPMONIKER pmkFirst,  LPMONIKER pmkRest,
     LPMONIKER * ppmkComposite);
 extern "C" __declspec(dllimport) HRESULT __stdcall  GetClassFile ( LPCOLESTR szFilename,  CLSID * pclsid);

 extern "C" __declspec(dllimport) HRESULT __stdcall  CreateClassMoniker( const IID & rclsid,  LPMONIKER * ppmk);

 extern "C" __declspec(dllimport) HRESULT __stdcall  CreateFileMoniker( LPCOLESTR lpszPathName,  LPMONIKER * ppmk);

 extern "C" __declspec(dllimport) HRESULT __stdcall  CreateItemMoniker( LPCOLESTR lpszDelim,  LPCOLESTR lpszItem,
                           LPMONIKER * ppmk);
 extern "C" __declspec(dllimport) HRESULT __stdcall  CreateAntiMoniker( LPMONIKER * ppmk);
 extern "C" __declspec(dllimport) HRESULT __stdcall  CreatePointerMoniker( LPUNKNOWN punk,  LPMONIKER * ppmk);
 extern "C" __declspec(dllimport) HRESULT __stdcall  CreateObjrefMoniker( LPUNKNOWN punk,  LPMONIKER  * ppmk);

 extern "C" __declspec(dllimport) HRESULT __stdcall  GetRunningObjectTable(  DWORD reserved,  LPRUNNINGOBJECTTABLE * pprot);

#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"





 










#pragma warning( disable: 4049 )  




























#pragma once
#line 48 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"

 



typedef struct IPersistMoniker IPersistMoniker;
#line 55 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




typedef struct IMonikerProp IMonikerProp;
#line 61 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




typedef struct IBindProtocol IBindProtocol;
#line 67 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




typedef struct IBinding IBinding;
#line 73 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




typedef struct IBindStatusCallback IBindStatusCallback;
#line 79 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




typedef struct IBindStatusCallbackEx IBindStatusCallbackEx;
#line 85 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




typedef struct IAuthenticate IAuthenticate;
#line 91 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




typedef struct IAuthenticateEx IAuthenticateEx;
#line 97 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




typedef struct IHttpNegotiate IHttpNegotiate;
#line 103 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




typedef struct IHttpNegotiate2 IHttpNegotiate2;
#line 109 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




typedef struct IHttpNegotiate3 IHttpNegotiate3;
#line 115 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




typedef struct IWinInetFileStream IWinInetFileStream;
#line 121 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




typedef struct IWindowForBindingUI IWindowForBindingUI;
#line 127 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




typedef struct ICodeInstall ICodeInstall;
#line 133 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




typedef struct IUri IUri;
#line 139 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




typedef struct IUriContainer IUriContainer;
#line 145 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




typedef struct IUriBuilder IUriBuilder;
#line 151 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




typedef struct IUriBuilderFactory IUriBuilderFactory;
#line 157 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




typedef struct IWinInetInfo IWinInetInfo;
#line 163 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




typedef struct IHttpSecurity IHttpSecurity;
#line 169 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




typedef struct IWinInetHttpInfo IWinInetHttpInfo;
#line 175 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




typedef struct IWinInetCacheHints IWinInetCacheHints;
#line 181 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




typedef struct IWinInetCacheHints2 IWinInetCacheHints2;
#line 187 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




typedef struct IBindHost IBindHost;
#line 193 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




typedef struct IInternet IInternet;
#line 199 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




typedef struct IInternetBindInfo IInternetBindInfo;
#line 205 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




typedef struct IInternetBindInfoEx IInternetBindInfoEx;
#line 211 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




typedef struct IInternetProtocolRoot IInternetProtocolRoot;
#line 217 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




typedef struct IInternetProtocol IInternetProtocol;
#line 223 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




typedef struct IInternetProtocolEx IInternetProtocolEx;
#line 229 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




typedef struct IInternetProtocolSink IInternetProtocolSink;
#line 235 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




typedef struct IInternetProtocolSinkStackable IInternetProtocolSinkStackable;
#line 241 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




typedef struct IInternetSession IInternetSession;
#line 247 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




typedef struct IInternetThreadSwitch IInternetThreadSwitch;
#line 253 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




typedef struct IInternetPriority IInternetPriority;
#line 259 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




typedef struct IInternetProtocolInfo IInternetProtocolInfo;
#line 265 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




typedef struct IInternetSecurityMgrSite IInternetSecurityMgrSite;
#line 271 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




typedef struct IInternetSecurityManager IInternetSecurityManager;
#line 277 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




typedef struct IInternetSecurityManagerEx IInternetSecurityManagerEx;
#line 283 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




typedef struct IInternetSecurityManagerEx2 IInternetSecurityManagerEx2;
#line 289 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




typedef struct IZoneIdentifier IZoneIdentifier;
#line 295 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




typedef struct IInternetHostSecurityManager IInternetHostSecurityManager;
#line 301 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




typedef struct IInternetZoneManager IInternetZoneManager;
#line 307 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




typedef struct IInternetZoneManagerEx IInternetZoneManagerEx;
#line 313 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




typedef struct IInternetZoneManagerEx2 IInternetZoneManagerEx2;
#line 319 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




typedef struct ISoftDistExt ISoftDistExt;
#line 325 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




typedef struct ICatalogFileInfo ICatalogFileInfo;
#line 331 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




typedef struct IDataFilter IDataFilter;
#line 337 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




typedef struct IEncodingFilterFactory IEncodingFilterFactory;
#line 343 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




typedef struct IWrappedProtocol IWrappedProtocol;
#line 349 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




#line 1 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"





 










#pragma warning( disable: 4049 )  




























#pragma once
#line 48 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"

 



typedef struct IOleAdviseHolder IOleAdviseHolder;
#line 55 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"




typedef struct IOleCache IOleCache;
#line 61 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"




typedef struct IOleCache2 IOleCache2;
#line 67 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"




typedef struct IOleCacheControl IOleCacheControl;
#line 73 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"




typedef struct IParseDisplayName IParseDisplayName;
#line 79 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"




typedef struct IOleContainer IOleContainer;
#line 85 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"




typedef struct IOleClientSite IOleClientSite;
#line 91 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"




typedef struct IOleObject IOleObject;
#line 97 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"




typedef struct IOleWindow IOleWindow;
#line 103 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"




typedef struct IOleLink IOleLink;
#line 109 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"




typedef struct IOleItemContainer IOleItemContainer;
#line 115 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"




typedef struct IOleInPlaceUIWindow IOleInPlaceUIWindow;
#line 121 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"




typedef struct IOleInPlaceActiveObject IOleInPlaceActiveObject;
#line 127 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"




typedef struct IOleInPlaceFrame IOleInPlaceFrame;
#line 133 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"




typedef struct IOleInPlaceObject IOleInPlaceObject;
#line 139 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"




typedef struct IOleInPlaceSite IOleInPlaceSite;
#line 145 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"




typedef struct IContinue IContinue;
#line 151 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"




typedef struct IViewObject IViewObject;
#line 157 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"




typedef struct IViewObject2 IViewObject2;
#line 163 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"




typedef struct IDropSource IDropSource;
#line 169 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"




typedef struct IDropTarget IDropTarget;
#line 175 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"




typedef struct IDropSourceNotify IDropSourceNotify;
#line 181 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"




typedef struct IEnumOLEVERB IEnumOLEVERB;
#line 187 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"






extern "C"{
#line 195 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"



 








#pragma once
#line 209 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"




extern RPC_IF_HANDLE __MIDL_itf_oleidl_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_oleidl_0000_0000_v0_0_s_ifspec;





 

typedef  IOleAdviseHolder *LPOLEADVISEHOLDER;


extern "C" const IID IID_IOleAdviseHolder;


    
    struct __declspec(uuid("00000111-0000-0000-C000-000000000046")) __declspec(novtable)
    IOleAdviseHolder : public IUnknown
    {
    public:
        virtual HRESULT __stdcall Advise( 
             
              IAdviseSink *pAdvise,
             
              DWORD *pdwConnection) = 0;
        
        virtual HRESULT __stdcall Unadvise( 
             DWORD dwConnection) = 0;
        
        virtual HRESULT __stdcall EnumAdvise( 
             
              IEnumSTATDATA **ppenumAdvise) = 0;
        
        virtual HRESULT __stdcall SendOnRename( 
             
              IMoniker *pmk) = 0;
        
        virtual HRESULT __stdcall SendOnSave( void) = 0;
        
        virtual HRESULT __stdcall SendOnClose( void) = 0;
        
    };
    

























































































#line 346 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"




#line 351 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"






 

typedef    IOleCache *LPOLECACHE;


extern "C" const IID IID_IOleCache;


    
    struct __declspec(uuid("0000011e-0000-0000-C000-000000000046")) __declspec(novtable)
    IOleCache : public IUnknown
    {
    public:
        virtual HRESULT __stdcall Cache( 
              FORMATETC *pformatetc,
             DWORD advf,
              DWORD *pdwConnection) = 0;
        
        virtual HRESULT __stdcall Uncache( 
             DWORD dwConnection) = 0;
        
        virtual HRESULT __stdcall EnumCache( 
              IEnumSTATDATA **ppenumSTATDATA) = 0;
        
        virtual HRESULT __stdcall InitCache( 
              IDataObject *pDataObject) = 0;
        
        virtual HRESULT __stdcall SetData( 
              FORMATETC *pformatetc,
              STGMEDIUM *pmedium,
             BOOL fRelease) = 0;
        
    };
    



















































































#line 475 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"




#line 480 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"






 

typedef    IOleCache2 *LPOLECACHE2;



















typedef  
enum tagDISCARDCACHE
    {	DISCARDCACHE_SAVEIFDIRTY	= 0,
	DISCARDCACHE_NOSAVE	= 1
    } 	DISCARDCACHE;


extern "C" const IID IID_IOleCache2;


    
    struct __declspec(uuid("00000128-0000-0000-C000-000000000046")) __declspec(novtable)
    IOleCache2 : public IOleCache
    {
    public:
        virtual  HRESULT __stdcall UpdateCache( 
             
              LPDATAOBJECT pDataObject,
             
              DWORD grfUpdf,
             
              LPVOID pReserved) = 0;
        
        virtual HRESULT __stdcall DiscardCache( 
             DWORD dwDiscardOptions) = 0;
        
    };
    







































































































#line 640 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"



 HRESULT __stdcall IOleCache2_RemoteUpdateCache_Proxy( 
     IOleCache2 * This,
      LPDATAOBJECT pDataObject,
     DWORD grfUpdf,
     LONG_PTR pReserved);


void __stdcall IOleCache2_RemoteUpdateCache_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#line 659 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"






 

typedef    IOleCacheControl *LPOLECACHECONTROL;


extern "C" const IID IID_IOleCacheControl;


    
    struct __declspec(uuid("00000129-0000-0000-C000-000000000046")) __declspec(novtable)
    IOleCacheControl : public IUnknown
    {
    public:
        virtual HRESULT __stdcall OnRun( 
             LPDATAOBJECT pDataObject) = 0;
        
        virtual HRESULT __stdcall OnStop( void) = 0;
        
    };
    

























































#line 743 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"




#line 748 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"






 

typedef    IParseDisplayName *LPPARSEDISPLAYNAME;


extern "C" const IID IID_IParseDisplayName;


    
    struct __declspec(uuid("0000011a-0000-0000-C000-000000000046")) __declspec(novtable)
    IParseDisplayName : public IUnknown
    {
    public:
        virtual HRESULT __stdcall ParseDisplayName( 
              IBindCtx *pbc,
              LPOLESTR pszDisplayName,
              ULONG *pchEaten,
              IMoniker **ppmkOut) = 0;
        
    };
    






















































#line 830 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"




#line 835 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"






 

typedef    IOleContainer *LPOLECONTAINER;


extern "C" const IID IID_IOleContainer;


    
    struct __declspec(uuid("0000011b-0000-0000-C000-000000000046")) __declspec(novtable)
    IOleContainer : public IParseDisplayName
    {
    public:
        virtual HRESULT __stdcall EnumObjects( 
             DWORD grfFlags,
              IEnumUnknown **ppenum) = 0;
        
        virtual HRESULT __stdcall LockContainer( 
             BOOL fLock) = 0;
        
    };
    






































































#line 934 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"




#line 939 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"






 

typedef    IOleClientSite *LPOLECLIENTSITE;


extern "C" const IID IID_IOleClientSite;


    
    struct __declspec(uuid("00000118-0000-0000-C000-000000000046")) __declspec(novtable)
    IOleClientSite : public IUnknown
    {
    public:
        virtual HRESULT __stdcall SaveObject( void) = 0;
        
        virtual HRESULT __stdcall GetMoniker( 
             DWORD dwAssign,
             DWORD dwWhichMoniker,
              IMoniker **ppmk) = 0;
        
        virtual HRESULT __stdcall GetContainer( 
              IOleContainer **ppContainer) = 0;
        
        virtual HRESULT __stdcall ShowObject( void) = 0;
        
        virtual HRESULT __stdcall OnShowWindow( 
             BOOL fShow) = 0;
        
        virtual HRESULT __stdcall RequestNewObjectLayout( void) = 0;
        
    };
    





















































































#line 1063 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"




#line 1068 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"






 

typedef    IOleObject *LPOLEOBJECT;

typedef 
enum tagOLEGETMONIKER
    {	OLEGETMONIKER_ONLYIFTHERE	= 1,
	OLEGETMONIKER_FORCEASSIGN	= 2,
	OLEGETMONIKER_UNASSIGN	= 3,
	OLEGETMONIKER_TEMPFORUSER	= 4
    } 	OLEGETMONIKER;

typedef 
enum tagOLEWHICHMK
    {	OLEWHICHMK_CONTAINER	= 1,
	OLEWHICHMK_OBJREL	= 2,
	OLEWHICHMK_OBJFULL	= 3
    } 	OLEWHICHMK;

typedef 
enum tagUSERCLASSTYPE
    {	USERCLASSTYPE_FULL	= 1,
	USERCLASSTYPE_SHORT	= 2,
	USERCLASSTYPE_APPNAME	= 3
    } 	USERCLASSTYPE;

typedef 
enum tagOLEMISC
    {	OLEMISC_RECOMPOSEONRESIZE	= 0x1,
	OLEMISC_ONLYICONIC	= 0x2,
	OLEMISC_INSERTNOTREPLACE	= 0x4,
	OLEMISC_STATIC	= 0x8,
	OLEMISC_CANTLINKINSIDE	= 0x10,
	OLEMISC_CANLINKBYOLE1	= 0x20,
	OLEMISC_ISLINKOBJECT	= 0x40,
	OLEMISC_INSIDEOUT	= 0x80,
	OLEMISC_ACTIVATEWHENVISIBLE	= 0x100,
	OLEMISC_RENDERINGISDEVICEINDEPENDENT	= 0x200,
	OLEMISC_INVISIBLEATRUNTIME	= 0x400,
	OLEMISC_ALWAYSRUN	= 0x800,
	OLEMISC_ACTSLIKEBUTTON	= 0x1000,
	OLEMISC_ACTSLIKELABEL	= 0x2000,
	OLEMISC_NOUIACTIVATE	= 0x4000,
	OLEMISC_ALIGNABLE	= 0x8000,
	OLEMISC_SIMPLEFRAME	= 0x10000,
	OLEMISC_SETCLIENTSITEFIRST	= 0x20000,
	OLEMISC_IMEMODE	= 0x40000,
	OLEMISC_IGNOREACTIVATEWHENVISIBLE	= 0x80000,
	OLEMISC_WANTSTOMENUMERGE	= 0x100000,
	OLEMISC_SUPPORTSMULTILEVELUNDO	= 0x200000
    } 	OLEMISC;

typedef 
enum tagOLECLOSE
    {	OLECLOSE_SAVEIFDIRTY	= 0,
	OLECLOSE_NOSAVE	= 1,
	OLECLOSE_PROMPTSAVE	= 2
    } 	OLECLOSE;


extern "C" const IID IID_IOleObject;


    
    struct __declspec(uuid("00000112-0000-0000-C000-000000000046")) __declspec(novtable)
    IOleObject : public IUnknown
    {
    public:
        virtual HRESULT __stdcall SetClientSite( 
              IOleClientSite *pClientSite) = 0;
        
        virtual HRESULT __stdcall GetClientSite( 
              IOleClientSite **ppClientSite) = 0;
        
        virtual HRESULT __stdcall SetHostNames( 
              LPCOLESTR szContainerApp,
              LPCOLESTR szContainerObj) = 0;
        
        virtual HRESULT __stdcall Close( 
             DWORD dwSaveOption) = 0;
        
        virtual HRESULT __stdcall SetMoniker( 
             DWORD dwWhichMoniker,
              IMoniker *pmk) = 0;
        
        virtual HRESULT __stdcall GetMoniker( 
             DWORD dwAssign,
             DWORD dwWhichMoniker,
              IMoniker **ppmk) = 0;
        
        virtual HRESULT __stdcall InitFromData( 
              IDataObject *pDataObject,
             BOOL fCreation,
             DWORD dwReserved) = 0;
        
        virtual HRESULT __stdcall GetClipboardData( 
             DWORD dwReserved,
              IDataObject **ppDataObject) = 0;
        
        virtual HRESULT __stdcall DoVerb( 
             LONG iVerb,
              LPMSG lpmsg,
              IOleClientSite *pActiveSite,
             LONG lindex,
              HWND hwndParent,
              LPCRECT lprcPosRect) = 0;
        
        virtual HRESULT __stdcall EnumVerbs( 
              IEnumOLEVERB **ppEnumOleVerb) = 0;
        
        virtual HRESULT __stdcall Update( void) = 0;
        
        virtual HRESULT __stdcall IsUpToDate( void) = 0;
        
        virtual HRESULT __stdcall GetUserClassID( 
              CLSID *pClsid) = 0;
        
        virtual HRESULT __stdcall GetUserType( 
             DWORD dwFormOfType,
              LPOLESTR *pszUserType) = 0;
        
        virtual HRESULT __stdcall SetExtent( 
             DWORD dwDrawAspect,
              SIZEL *psizel) = 0;
        
        virtual HRESULT __stdcall GetExtent( 
             DWORD dwDrawAspect,
              SIZEL *psizel) = 0;
        
        virtual HRESULT __stdcall Advise( 
              IAdviseSink *pAdvSink,
              DWORD *pdwConnection) = 0;
        
        virtual HRESULT __stdcall Unadvise( 
             DWORD dwConnection) = 0;
        
        virtual HRESULT __stdcall EnumAdvise( 
              IEnumSTATDATA **ppenumAdvise) = 0;
        
        virtual HRESULT __stdcall GetMiscStatus( 
             DWORD dwAspect,
              DWORD *pdwStatus) = 0;
        
        virtual HRESULT __stdcall SetColorScheme( 
              LOGPALETTE *pLogpal) = 0;
        
    };
    














































































































































































































#line 1429 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"




#line 1434 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"






 

typedef 
enum tagOLERENDER
    {	OLERENDER_NONE	= 0,
	OLERENDER_DRAW	= 1,
	OLERENDER_FORMAT	= 2,
	OLERENDER_ASIS	= 3
    } 	OLERENDER;

typedef OLERENDER *LPOLERENDER;

typedef struct tagOBJECTDESCRIPTOR
    {
    ULONG cbSize;
    CLSID clsid;
    DWORD dwDrawAspect;
    SIZEL sizel;
    POINTL pointl;
    DWORD dwStatus;
    DWORD dwFullUserTypeName;
    DWORD dwSrcOfCopy;
    } 	OBJECTDESCRIPTOR;

typedef struct tagOBJECTDESCRIPTOR *POBJECTDESCRIPTOR;

typedef struct tagOBJECTDESCRIPTOR *LPOBJECTDESCRIPTOR;

typedef struct tagOBJECTDESCRIPTOR LINKSRCDESCRIPTOR;

typedef struct tagOBJECTDESCRIPTOR *PLINKSRCDESCRIPTOR;

typedef struct tagOBJECTDESCRIPTOR *LPLINKSRCDESCRIPTOR;



extern RPC_IF_HANDLE IOLETypes_v0_0_c_ifspec;
extern RPC_IF_HANDLE IOLETypes_v0_0_s_ifspec;
#line 1479 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"





 

typedef    IOleWindow *LPOLEWINDOW;


extern "C" const IID IID_IOleWindow;


    
    struct __declspec(uuid("00000114-0000-0000-C000-000000000046")) __declspec(novtable)
    IOleWindow : public IUnknown
    {
    public:
        virtual  HRESULT __stdcall GetWindow( 
              HWND *phwnd) = 0;
        
        virtual HRESULT __stdcall ContextSensitiveHelp( 
             BOOL fEnterMode) = 0;
        
    };
    


























































#line 1564 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"




#line 1569 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"






 

typedef    IOleLink *LPOLELINK;

typedef 
enum tagOLEUPDATE
    {	OLEUPDATE_ALWAYS	= 1,
	OLEUPDATE_ONCALL	= 3
    } 	OLEUPDATE;

typedef OLEUPDATE *LPOLEUPDATE;

typedef OLEUPDATE *POLEUPDATE;

typedef 
enum tagOLELINKBIND
    {	OLELINKBIND_EVENIFCLASSDIFF	= 1
    } 	OLELINKBIND;


extern "C" const IID IID_IOleLink;


    
    struct __declspec(uuid("0000011d-0000-0000-C000-000000000046")) __declspec(novtable)
    IOleLink : public IUnknown
    {
    public:
        virtual HRESULT __stdcall SetUpdateOptions( 
             DWORD dwUpdateOpt) = 0;
        
        virtual HRESULT __stdcall GetUpdateOptions( 
              DWORD *pdwUpdateOpt) = 0;
        
        virtual HRESULT __stdcall SetSourceMoniker( 
              IMoniker *pmk,
              const IID & rclsid) = 0;
        
        virtual HRESULT __stdcall GetSourceMoniker( 
              IMoniker **ppmk) = 0;
        
        virtual HRESULT __stdcall SetSourceDisplayName( 
              LPCOLESTR pszStatusText) = 0;
        
        virtual HRESULT __stdcall GetSourceDisplayName( 
              LPOLESTR *ppszDisplayName) = 0;
        
        virtual HRESULT __stdcall BindToSource( 
             DWORD bindflags,
              IBindCtx *pbc) = 0;
        
        virtual HRESULT __stdcall BindIfRunning( void) = 0;
        
        virtual HRESULT __stdcall GetBoundSource( 
              IUnknown **ppunk) = 0;
        
        virtual HRESULT __stdcall UnbindSource( void) = 0;
        
        virtual HRESULT __stdcall Update( 
              IBindCtx *pbc) = 0;
        
    };
    

























































































































#line 1760 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"




#line 1765 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"






 

typedef    IOleItemContainer *LPOLEITEMCONTAINER;

typedef 
enum tagBINDSPEED
    {	BINDSPEED_INDEFINITE	= 1,
	BINDSPEED_MODERATE	= 2,
	BINDSPEED_IMMEDIATE	= 3
    } 	BINDSPEED;

typedef  
enum tagOLECONTF
    {	OLECONTF_EMBEDDINGS	= 1,
	OLECONTF_LINKS	= 2,
	OLECONTF_OTHERS	= 4,
	OLECONTF_ONLYUSER	= 8,
	OLECONTF_ONLYIFRUNNING	= 16
    } 	OLECONTF;


extern "C" const IID IID_IOleItemContainer;


    
    struct __declspec(uuid("0000011c-0000-0000-C000-000000000046")) __declspec(novtable)
    IOleItemContainer : public IOleContainer
    {
    public:
        virtual HRESULT __stdcall GetObjectA( 
              LPOLESTR pszItem,
             DWORD dwSpeedNeeded,
              IBindCtx *pbc,
              const IID & riid,
              void **ppvObject) = 0;
        
        virtual HRESULT __stdcall GetObjectStorage( 
              LPOLESTR pszItem,
              IBindCtx *pbc,
              const IID & riid,
              void **ppvStorage) = 0;
        
        virtual HRESULT __stdcall IsRunning( 
              LPOLESTR pszItem) = 0;
        
    };
    



































































































#line 1918 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"




#line 1923 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"






 

typedef    IOleInPlaceUIWindow *LPOLEINPLACEUIWINDOW;

typedef RECT BORDERWIDTHS;

typedef LPRECT LPBORDERWIDTHS;

typedef LPCRECT LPCBORDERWIDTHS;


extern "C" const IID IID_IOleInPlaceUIWindow;


    
    struct __declspec(uuid("00000115-0000-0000-C000-000000000046")) __declspec(novtable)
    IOleInPlaceUIWindow : public IOleWindow
    {
    public:
        virtual  HRESULT __stdcall GetBorder( 
              LPRECT lprectBorder) = 0;
        
        virtual  HRESULT __stdcall RequestBorderSpace( 
              LPCBORDERWIDTHS pborderwidths) = 0;
        
        virtual  HRESULT __stdcall SetBorderSpace( 
              LPCBORDERWIDTHS pborderwidths) = 0;
        
        virtual HRESULT __stdcall SetActiveObject( 
              IOleInPlaceActiveObject *pActiveObject,
              LPCOLESTR pszObjName) = 0;
        
    };
    
























































































#line 2052 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"




#line 2057 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"






 

typedef    IOleInPlaceActiveObject *LPOLEINPLACEACTIVEOBJECT;


extern "C" const IID IID_IOleInPlaceActiveObject;


    
    struct __declspec(uuid("00000117-0000-0000-C000-000000000046")) __declspec(novtable)
    IOleInPlaceActiveObject : public IOleWindow
    {
    public:
        virtual  HRESULT __stdcall TranslateAcceleratorA( 
             
              LPMSG lpmsg) = 0;
        
        virtual  HRESULT __stdcall OnFrameWindowActivate( 
             BOOL fActivate) = 0;
        
        virtual  HRESULT __stdcall OnDocWindowActivate( 
             BOOL fActivate) = 0;
        
        virtual  HRESULT __stdcall ResizeBorder( 
             
              LPCRECT prcBorder,
             
              IOleInPlaceUIWindow *pUIWindow,
             
              BOOL fFrameWindow) = 0;
        
        virtual HRESULT __stdcall EnableModeless( 
             BOOL fEnable) = 0;
        
    };
    




































































































#line 2200 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"



 HRESULT __stdcall IOleInPlaceActiveObject_RemoteTranslateAccelerator_Proxy( 
     IOleInPlaceActiveObject * This);


void __stdcall IOleInPlaceActiveObject_RemoteTranslateAccelerator_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall IOleInPlaceActiveObject_RemoteResizeBorder_Proxy( 
     IOleInPlaceActiveObject * This,
      LPCRECT prcBorder,
      const IID & riid,
      IOleInPlaceUIWindow *pUIWindow,
     BOOL fFrameWindow);


void __stdcall IOleInPlaceActiveObject_RemoteResizeBorder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#line 2231 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"






 

typedef    IOleInPlaceFrame *LPOLEINPLACEFRAME;

typedef struct tagOIFI
    {
    UINT cb;
    BOOL fMDIApp;
    HWND hwndFrame;
    HACCEL haccel;
    UINT cAccelEntries;
    } 	OLEINPLACEFRAMEINFO;

typedef struct tagOIFI *LPOLEINPLACEFRAMEINFO;

typedef struct tagOleMenuGroupWidths
    {
    LONG width[ 6 ];
    } 	OLEMENUGROUPWIDTHS;

typedef struct tagOleMenuGroupWidths *LPOLEMENUGROUPWIDTHS;

typedef HGLOBAL HOLEMENU;


extern "C" const IID IID_IOleInPlaceFrame;


    
    struct __declspec(uuid("00000116-0000-0000-C000-000000000046")) __declspec(novtable)
    IOleInPlaceFrame : public IOleInPlaceUIWindow
    {
    public:
        virtual HRESULT __stdcall InsertMenus( 
              HMENU hmenuShared,
              LPOLEMENUGROUPWIDTHS lpMenuWidths) = 0;
        
        virtual  HRESULT __stdcall SetMenu( 
              HMENU hmenuShared,
              HOLEMENU holemenu,
              HWND hwndActiveObject) = 0;
        
        virtual HRESULT __stdcall RemoveMenus( 
              HMENU hmenuShared) = 0;
        
        virtual  HRESULT __stdcall SetStatusText( 
              LPCOLESTR pszStatusText) = 0;
        
        virtual HRESULT __stdcall EnableModeless( 
             BOOL fEnable) = 0;
        
        virtual HRESULT __stdcall TranslateAcceleratorA( 
              LPMSG lpmsg,
             WORD wID) = 0;
        
    };
    







































































































































#line 2430 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"




#line 2435 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"






 

typedef    IOleInPlaceObject *LPOLEINPLACEOBJECT;


extern "C" const IID IID_IOleInPlaceObject;


    
    struct __declspec(uuid("00000113-0000-0000-C000-000000000046")) __declspec(novtable)
    IOleInPlaceObject : public IOleWindow
    {
    public:
        virtual HRESULT __stdcall InPlaceDeactivate( void) = 0;
        
        virtual HRESULT __stdcall UIDeactivate( void) = 0;
        
        virtual  HRESULT __stdcall SetObjectRects( 
              LPCRECT lprcPosRect,
              LPCRECT lprcClipRect) = 0;
        
        virtual HRESULT __stdcall ReactivateAndUndo( void) = 0;
        
    };
    





















































































#line 2552 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"




#line 2557 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"






 

typedef    IOleInPlaceSite *LPOLEINPLACESITE;


extern "C" const IID IID_IOleInPlaceSite;


    
    struct __declspec(uuid("00000119-0000-0000-C000-000000000046")) __declspec(novtable)
    IOleInPlaceSite : public IOleWindow
    {
    public:
        virtual HRESULT __stdcall CanInPlaceActivate( void) = 0;
        
        virtual HRESULT __stdcall OnInPlaceActivate( void) = 0;
        
        virtual HRESULT __stdcall OnUIActivate( void) = 0;
        
        virtual HRESULT __stdcall GetWindowContext( 
              IOleInPlaceFrame **ppFrame,
              IOleInPlaceUIWindow **ppDoc,
              LPRECT lprcPosRect,
              LPRECT lprcClipRect,
              LPOLEINPLACEFRAMEINFO lpFrameInfo) = 0;
        
        virtual HRESULT __stdcall Scroll( 
             SIZE scrollExtant) = 0;
        
        virtual HRESULT __stdcall OnUIDeactivate( 
             BOOL fUndoable) = 0;
        
        virtual HRESULT __stdcall OnInPlaceDeactivate( void) = 0;
        
        virtual HRESULT __stdcall DiscardUndoState( void) = 0;
        
        virtual HRESULT __stdcall DeactivateAndUndo( void) = 0;
        
        virtual HRESULT __stdcall OnPosRectChange( 
              LPCRECT lprcPosRect) = 0;
        
    };
    































































































































#line 2734 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"




#line 2739 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"






 


extern "C" const IID IID_IContinue;


    
    struct __declspec(uuid("0000012a-0000-0000-C000-000000000046")) __declspec(novtable)
    IContinue : public IUnknown
    {
    public:
        virtual HRESULT __stdcall FContinue( void) = 0;
        
    };
    


















































#line 2811 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"




#line 2816 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"






 

typedef    IViewObject *LPVIEWOBJECT;


extern "C" const IID IID_IViewObject;


    
    struct __declspec(uuid("0000010d-0000-0000-C000-000000000046")) __declspec(novtable)
    IViewObject : public IUnknown
    {
    public:
        virtual  HRESULT __stdcall Draw( 
             
              DWORD dwDrawAspect,
             
              LONG lindex,
             
              void *pvAspect,
             
              DVTARGETDEVICE *ptd,
             
              HDC hdcTargetDev,
             
              HDC hdcDraw,
             
              LPCRECTL lprcBounds,
             
              LPCRECTL lprcWBounds,
             
              BOOL ( __stdcall *pfnContinue )( 
                ULONG_PTR dwContinue),
             
              ULONG_PTR dwContinue) = 0;
        
        virtual  HRESULT __stdcall GetColorSet( 
             
              DWORD dwDrawAspect,
             
              LONG lindex,
             
              void *pvAspect,
             
              DVTARGETDEVICE *ptd,
             
              HDC hicTargetDev,
             
              LOGPALETTE **ppColorSet) = 0;
        
        virtual  HRESULT __stdcall Freeze( 
             
              DWORD dwDrawAspect,
             
              LONG lindex,
             
              void *pvAspect,
             
              DWORD *pdwFreeze) = 0;
        
        virtual HRESULT __stdcall Unfreeze( 
             DWORD dwFreeze) = 0;
        
        virtual HRESULT __stdcall SetAdvise( 
             DWORD aspects,
             DWORD advf,
              IAdviseSink *pAdvSink) = 0;
        
        virtual  HRESULT __stdcall GetAdvise( 
             
              DWORD *pAspects,
             
              DWORD *pAdvf,
             
              IAdviseSink **ppAdvSink) = 0;
        
    };
    



































































































































#line 3032 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"



 HRESULT __stdcall IViewObject_RemoteDraw_Proxy( 
     IViewObject * This,
     DWORD dwDrawAspect,
     LONG lindex,
     ULONG_PTR pvAspect,
      DVTARGETDEVICE *ptd,
      HDC hdcTargetDev,
      HDC hdcDraw,
      LPCRECTL lprcBounds,
      LPCRECTL lprcWBounds,
      IContinue *pContinue);


void __stdcall IViewObject_RemoteDraw_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall IViewObject_RemoteGetColorSet_Proxy( 
     IViewObject * This,
     DWORD dwDrawAspect,
     LONG lindex,
     ULONG_PTR pvAspect,
      DVTARGETDEVICE *ptd,
     ULONG_PTR hicTargetDev,
      LOGPALETTE **ppColorSet);


void __stdcall IViewObject_RemoteGetColorSet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall IViewObject_RemoteFreeze_Proxy( 
     IViewObject * This,
     DWORD dwDrawAspect,
     LONG lindex,
     ULONG_PTR pvAspect,
      DWORD *pdwFreeze);


void __stdcall IViewObject_RemoteFreeze_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall IViewObject_RemoteGetAdvise_Proxy( 
     IViewObject * This,
      DWORD *pAspects,
      DWORD *pAdvf,
      IAdviseSink **ppAdvSink);


void __stdcall IViewObject_RemoteGetAdvise_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#line 3103 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"






 

typedef    IViewObject2 *LPVIEWOBJECT2;


extern "C" const IID IID_IViewObject2;


    
    struct __declspec(uuid("00000127-0000-0000-C000-000000000046")) __declspec(novtable)
    IViewObject2 : public IViewObject
    {
    public:
        virtual HRESULT __stdcall GetExtent( 
             DWORD dwDrawAspect,
             LONG lindex,
              DVTARGETDEVICE *ptd,
              LPSIZEL lpsizel) = 0;
        
    };
    














































































































































#line 3273 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"




#line 3278 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"






 

typedef  IDropSource *LPDROPSOURCE;


extern "C" const IID IID_IDropSource;


    
    struct __declspec(uuid("00000121-0000-0000-C000-000000000046")) __declspec(novtable)
    IDropSource : public IUnknown
    {
    public:
        virtual HRESULT __stdcall QueryContinueDrag( 
             
              BOOL fEscapePressed,
             
              DWORD grfKeyState) = 0;
        
        virtual HRESULT __stdcall GiveFeedback( 
             
              DWORD dwEffect) = 0;
        
    };
    






























































#line 3372 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"




#line 3377 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"






 

typedef    IDropTarget *LPDROPTARGET;


































extern "C" const IID IID_IDropTarget;


    
    struct __declspec(uuid("00000122-0000-0000-C000-000000000046")) __declspec(novtable)
    IDropTarget : public IUnknown
    {
    public:
        virtual HRESULT __stdcall DragEnter( 
              IDataObject *pDataObj,
             DWORD grfKeyState,
             POINTL pt,
              DWORD *pdwEffect) = 0;
        
        virtual HRESULT __stdcall DragOver( 
             DWORD grfKeyState,
             POINTL pt,
              DWORD *pdwEffect) = 0;
        
        virtual HRESULT __stdcall DragLeave( void) = 0;
        
        virtual HRESULT __stdcall Drop( 
              IDataObject *pDataObj,
             DWORD grfKeyState,
             POINTL pt,
              DWORD *pdwEffect) = 0;
        
    };
    















































































#line 3529 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"




#line 3534 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"






 


extern "C" const IID IID_IDropSourceNotify;


    
    struct __declspec(uuid("0000012B-0000-0000-C000-000000000046")) __declspec(novtable)
    IDropSourceNotify : public IUnknown
    {
    public:
        virtual HRESULT __stdcall DragEnterTarget( 
             
              HWND hwndTarget) = 0;
        
        virtual HRESULT __stdcall DragLeaveTarget( void) = 0;
        
    };
    


























































#line 3618 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"




#line 3623 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"






 

typedef    IEnumOLEVERB *LPENUMOLEVERB;

typedef struct tagOLEVERB
    {
    LONG lVerb;
    LPOLESTR lpszVerbName;
    DWORD fuFlags;
    DWORD grfAttribs;
    } 	OLEVERB;

typedef struct tagOLEVERB *LPOLEVERB;

typedef  
enum tagOLEVERBATTRIB
    {	OLEVERBATTRIB_NEVERDIRTIES	= 1,
	OLEVERBATTRIB_ONCONTAINERMENU	= 2
    } 	OLEVERBATTRIB;


extern "C" const IID IID_IEnumOLEVERB;


    
    struct __declspec(uuid("00000104-0000-0000-C000-000000000046")) __declspec(novtable)
    IEnumOLEVERB : public IUnknown
    {
    public:
        virtual  HRESULT __stdcall Next( 
             
              ULONG celt,
             
              LPOLEVERB rgelt,
             
              ULONG *pceltFetched) = 0;
        
        virtual HRESULT __stdcall Skip( 
             ULONG celt) = 0;
        
        virtual HRESULT __stdcall Reset( void) = 0;
        
        virtual HRESULT __stdcall Clone( 
              IEnumOLEVERB **ppenum) = 0;
        
    };
    












































































#line 3753 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"



 HRESULT __stdcall IEnumOLEVERB_RemoteNext_Proxy( 
     IEnumOLEVERB * This,
     ULONG celt,
      LPOLEVERB rgelt,
      ULONG *pceltFetched);


void __stdcall IEnumOLEVERB_RemoteNext_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#line 3772 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"




unsigned long             __stdcall  CLIPFORMAT_UserSize(      unsigned long *, unsigned long            ,  CLIPFORMAT * ); 
unsigned char * __stdcall  CLIPFORMAT_UserMarshal(   unsigned long *,  unsigned char *,  CLIPFORMAT * ); 
unsigned char * __stdcall  CLIPFORMAT_UserUnmarshal( unsigned long *,  unsigned char *,  CLIPFORMAT * ); 
void                      __stdcall  CLIPFORMAT_UserFree(      unsigned long *,  CLIPFORMAT * ); 

unsigned long             __stdcall  HACCEL_UserSize(      unsigned long *, unsigned long            ,  HACCEL * ); 
unsigned char * __stdcall  HACCEL_UserMarshal(   unsigned long *,  unsigned char *,  HACCEL * ); 
unsigned char * __stdcall  HACCEL_UserUnmarshal( unsigned long *,  unsigned char *,  HACCEL * ); 
void                      __stdcall  HACCEL_UserFree(      unsigned long *,  HACCEL * ); 

unsigned long             __stdcall  HDC_UserSize(      unsigned long *, unsigned long            ,  HDC * ); 
unsigned char * __stdcall  HDC_UserMarshal(   unsigned long *,  unsigned char *,  HDC * ); 
unsigned char * __stdcall  HDC_UserUnmarshal( unsigned long *,  unsigned char *,  HDC * ); 
void                      __stdcall  HDC_UserFree(      unsigned long *,  HDC * ); 

unsigned long             __stdcall  HGLOBAL_UserSize(      unsigned long *, unsigned long            ,  HGLOBAL * ); 
unsigned char * __stdcall  HGLOBAL_UserMarshal(   unsigned long *,  unsigned char *,  HGLOBAL * ); 
unsigned char * __stdcall  HGLOBAL_UserUnmarshal( unsigned long *,  unsigned char *,  HGLOBAL * ); 
void                      __stdcall  HGLOBAL_UserFree(      unsigned long *,  HGLOBAL * ); 

unsigned long             __stdcall  HMENU_UserSize(      unsigned long *, unsigned long            ,  HMENU * ); 
unsigned char * __stdcall  HMENU_UserMarshal(   unsigned long *,  unsigned char *,  HMENU * ); 
unsigned char * __stdcall  HMENU_UserUnmarshal( unsigned long *,  unsigned char *,  HMENU * ); 
void                      __stdcall  HMENU_UserFree(      unsigned long *,  HMENU * ); 

unsigned long             __stdcall  HWND_UserSize(      unsigned long *, unsigned long            ,  HWND * ); 
unsigned char * __stdcall  HWND_UserMarshal(   unsigned long *,  unsigned char *,  HWND * ); 
unsigned char * __stdcall  HWND_UserUnmarshal( unsigned long *,  unsigned char *,  HWND * ); 
void                      __stdcall  HWND_UserFree(      unsigned long *,  HWND * ); 

unsigned long             __stdcall  STGMEDIUM_UserSize(      unsigned long *, unsigned long            ,  STGMEDIUM * ); 
unsigned char * __stdcall  STGMEDIUM_UserMarshal(   unsigned long *,  unsigned char *,  STGMEDIUM * ); 
unsigned char * __stdcall  STGMEDIUM_UserUnmarshal( unsigned long *,  unsigned char *,  STGMEDIUM * ); 
void                      __stdcall  STGMEDIUM_UserFree(      unsigned long *,  STGMEDIUM * ); 

unsigned long             __stdcall  CLIPFORMAT_UserSize64(      unsigned long *, unsigned long            ,  CLIPFORMAT * ); 
unsigned char * __stdcall  CLIPFORMAT_UserMarshal64(   unsigned long *,  unsigned char *,  CLIPFORMAT * ); 
unsigned char * __stdcall  CLIPFORMAT_UserUnmarshal64( unsigned long *,  unsigned char *,  CLIPFORMAT * ); 
void                      __stdcall  CLIPFORMAT_UserFree64(      unsigned long *,  CLIPFORMAT * ); 

unsigned long             __stdcall  HACCEL_UserSize64(      unsigned long *, unsigned long            ,  HACCEL * ); 
unsigned char * __stdcall  HACCEL_UserMarshal64(   unsigned long *,  unsigned char *,  HACCEL * ); 
unsigned char * __stdcall  HACCEL_UserUnmarshal64( unsigned long *,  unsigned char *,  HACCEL * ); 
void                      __stdcall  HACCEL_UserFree64(      unsigned long *,  HACCEL * ); 

unsigned long             __stdcall  HDC_UserSize64(      unsigned long *, unsigned long            ,  HDC * ); 
unsigned char * __stdcall  HDC_UserMarshal64(   unsigned long *,  unsigned char *,  HDC * ); 
unsigned char * __stdcall  HDC_UserUnmarshal64( unsigned long *,  unsigned char *,  HDC * ); 
void                      __stdcall  HDC_UserFree64(      unsigned long *,  HDC * ); 

unsigned long             __stdcall  HGLOBAL_UserSize64(      unsigned long *, unsigned long            ,  HGLOBAL * ); 
unsigned char * __stdcall  HGLOBAL_UserMarshal64(   unsigned long *,  unsigned char *,  HGLOBAL * ); 
unsigned char * __stdcall  HGLOBAL_UserUnmarshal64( unsigned long *,  unsigned char *,  HGLOBAL * ); 
void                      __stdcall  HGLOBAL_UserFree64(      unsigned long *,  HGLOBAL * ); 

unsigned long             __stdcall  HMENU_UserSize64(      unsigned long *, unsigned long            ,  HMENU * ); 
unsigned char * __stdcall  HMENU_UserMarshal64(   unsigned long *,  unsigned char *,  HMENU * ); 
unsigned char * __stdcall  HMENU_UserUnmarshal64( unsigned long *,  unsigned char *,  HMENU * ); 
void                      __stdcall  HMENU_UserFree64(      unsigned long *,  HMENU * ); 

unsigned long             __stdcall  HWND_UserSize64(      unsigned long *, unsigned long            ,  HWND * ); 
unsigned char * __stdcall  HWND_UserMarshal64(   unsigned long *,  unsigned char *,  HWND * ); 
unsigned char * __stdcall  HWND_UserUnmarshal64( unsigned long *,  unsigned char *,  HWND * ); 
void                      __stdcall  HWND_UserFree64(      unsigned long *,  HWND * ); 

unsigned long             __stdcall  STGMEDIUM_UserSize64(      unsigned long *, unsigned long            ,  STGMEDIUM * ); 
unsigned char * __stdcall  STGMEDIUM_UserMarshal64(   unsigned long *,  unsigned char *,  STGMEDIUM * ); 
unsigned char * __stdcall  STGMEDIUM_UserUnmarshal64( unsigned long *,  unsigned char *,  STGMEDIUM * ); 
void                      __stdcall  STGMEDIUM_UserFree64(      unsigned long *,  STGMEDIUM * ); 

 HRESULT __stdcall IOleCache2_UpdateCache_Proxy( 
    IOleCache2 * This,
     
      LPDATAOBJECT pDataObject,
     
      DWORD grfUpdf,
     
      LPVOID pReserved);


 HRESULT __stdcall IOleCache2_UpdateCache_Stub( 
     IOleCache2 * This,
      LPDATAOBJECT pDataObject,
     DWORD grfUpdf,
     LONG_PTR pReserved);

 HRESULT __stdcall IOleInPlaceActiveObject_TranslateAccelerator_Proxy( 
    IOleInPlaceActiveObject * This,
     
      LPMSG lpmsg);


 HRESULT __stdcall IOleInPlaceActiveObject_TranslateAccelerator_Stub( 
     IOleInPlaceActiveObject * This);

 HRESULT __stdcall IOleInPlaceActiveObject_ResizeBorder_Proxy( 
    IOleInPlaceActiveObject * This,
     
      LPCRECT prcBorder,
     
      IOleInPlaceUIWindow *pUIWindow,
     
      BOOL fFrameWindow);


 HRESULT __stdcall IOleInPlaceActiveObject_ResizeBorder_Stub( 
     IOleInPlaceActiveObject * This,
      LPCRECT prcBorder,
      const IID & riid,
      IOleInPlaceUIWindow *pUIWindow,
     BOOL fFrameWindow);

 HRESULT __stdcall IViewObject_Draw_Proxy( 
    IViewObject * This,
     
      DWORD dwDrawAspect,
     
      LONG lindex,
     
      void *pvAspect,
     
      DVTARGETDEVICE *ptd,
     
      HDC hdcTargetDev,
     
      HDC hdcDraw,
     
      LPCRECTL lprcBounds,
     
      LPCRECTL lprcWBounds,
     
      BOOL ( __stdcall *pfnContinue )( 
        ULONG_PTR dwContinue),
     
      ULONG_PTR dwContinue);


 HRESULT __stdcall IViewObject_Draw_Stub( 
     IViewObject * This,
     DWORD dwDrawAspect,
     LONG lindex,
     ULONG_PTR pvAspect,
      DVTARGETDEVICE *ptd,
      HDC hdcTargetDev,
      HDC hdcDraw,
      LPCRECTL lprcBounds,
      LPCRECTL lprcWBounds,
      IContinue *pContinue);

 HRESULT __stdcall IViewObject_GetColorSet_Proxy( 
    IViewObject * This,
     
      DWORD dwDrawAspect,
     
      LONG lindex,
     
      void *pvAspect,
     
      DVTARGETDEVICE *ptd,
     
      HDC hicTargetDev,
     
      LOGPALETTE **ppColorSet);


 HRESULT __stdcall IViewObject_GetColorSet_Stub( 
     IViewObject * This,
     DWORD dwDrawAspect,
     LONG lindex,
     ULONG_PTR pvAspect,
      DVTARGETDEVICE *ptd,
     ULONG_PTR hicTargetDev,
      LOGPALETTE **ppColorSet);

 HRESULT __stdcall IViewObject_Freeze_Proxy( 
    IViewObject * This,
     
      DWORD dwDrawAspect,
     
      LONG lindex,
     
      void *pvAspect,
     
      DWORD *pdwFreeze);


 HRESULT __stdcall IViewObject_Freeze_Stub( 
     IViewObject * This,
     DWORD dwDrawAspect,
     LONG lindex,
     ULONG_PTR pvAspect,
      DWORD *pdwFreeze);

 HRESULT __stdcall IViewObject_GetAdvise_Proxy( 
    IViewObject * This,
     
      DWORD *pAspects,
     
      DWORD *pAdvf,
     
      IAdviseSink **ppAdvSink);


 HRESULT __stdcall IViewObject_GetAdvise_Stub( 
     IViewObject * This,
      DWORD *pAspects,
      DWORD *pAdvf,
      IAdviseSink **ppAdvSink);

 HRESULT __stdcall IEnumOLEVERB_Next_Proxy( 
    IEnumOLEVERB * This,
     
      ULONG celt,
     
      LPOLEVERB rgelt,
     
      ULONG *pceltFetched);


 HRESULT __stdcall IEnumOLEVERB_Next_Stub( 
     IEnumOLEVERB * This,
     ULONG celt,
      LPOLEVERB rgelt,
      ULONG *pceltFetched);






}
#line 4008 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"

#line 4010 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oleidl.h"




#line 354 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"
#line 1 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\servprov.h"





 










#pragma warning( disable: 4049 )  




























#pragma once
#line 48 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\servprov.h"

 



typedef struct IServiceProvider IServiceProvider;
#line 55 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\servprov.h"






extern "C"{
#line 63 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\servprov.h"



 












#pragma comment(lib,"uuid.lib")







extern RPC_IF_HANDLE __MIDL_itf_servprov_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_servprov_0000_0000_v0_0_s_ifspec;





 

typedef    IServiceProvider *LPSERVICEPROVIDER;


    extern "C" const IID IID_IServiceProvider;
    extern "C++"
    {
        struct __declspec(uuid("6d5140c1-7436-11ce-8034-00aa006009fa")) __declspec(novtable)
        IServiceProvider : public IUnknown
        {
        public:
            virtual  HRESULT __stdcall QueryService( 
                  const GUID & guidService,
                  const IID & riid,
                  void  * *ppvObject) = 0;
            
            template <class Q>
            HRESULT __stdcall QueryService( const GUID & guidService,  Q** pp)
            {
                return QueryService(guidService, __uuidof(Q), (void **)pp);
            }
        };
    }

     HRESULT __stdcall IServiceProvider_RemoteQueryService_Proxy( 
         IServiceProvider  * This,
          const GUID & guidService,
          const IID & riid,
          IUnknown  * *ppvObject);

    void __stdcall IServiceProvider_RemoteQueryService_Stub(
        IRpcStubBuffer *This,
        IRpcChannelBuffer *_pRpcChannelBuffer,
        PRPC_MESSAGE _pRpcMessage,
        DWORD *_pdwStubPhase);
































































































#line 227 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\servprov.h"



 

#line 233 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\servprov.h"


extern RPC_IF_HANDLE __MIDL_itf_servprov_0000_0001_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_servprov_0000_0001_v0_0_s_ifspec;



 HRESULT __stdcall IServiceProvider_QueryService_Proxy( 
    IServiceProvider * This,
     
      const GUID & guidService,
     
      const IID & riid,
     
      void **ppvObject);


 HRESULT __stdcall IServiceProvider_QueryService_Stub( 
     IServiceProvider * This,
      const GUID & guidService,
      const IID & riid,
      IUnknown **ppvObject);






}
#line 263 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\servprov.h"

#line 265 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\servprov.h"



#line 355 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"
#line 1 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"





 










#pragma warning( disable: 4049 )  
























#pragma once
#line 44 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"

 



typedef struct IXMLDOMImplementation IXMLDOMImplementation;
#line 51 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




typedef struct IXMLDOMNode IXMLDOMNode;
#line 57 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




typedef struct IXMLDOMDocumentFragment IXMLDOMDocumentFragment;
#line 63 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




typedef struct IXMLDOMDocument IXMLDOMDocument;
#line 69 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




typedef struct IXMLDOMNodeList IXMLDOMNodeList;
#line 75 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




typedef struct IXMLDOMNamedNodeMap IXMLDOMNamedNodeMap;
#line 81 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




typedef struct IXMLDOMCharacterData IXMLDOMCharacterData;
#line 87 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




typedef struct IXMLDOMAttribute IXMLDOMAttribute;
#line 93 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




typedef struct IXMLDOMElement IXMLDOMElement;
#line 99 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




typedef struct IXMLDOMText IXMLDOMText;
#line 105 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




typedef struct IXMLDOMComment IXMLDOMComment;
#line 111 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




typedef struct IXMLDOMProcessingInstruction IXMLDOMProcessingInstruction;
#line 117 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




typedef struct IXMLDOMCDATASection IXMLDOMCDATASection;
#line 123 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




typedef struct IXMLDOMDocumentType IXMLDOMDocumentType;
#line 129 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




typedef struct IXMLDOMNotation IXMLDOMNotation;
#line 135 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




typedef struct IXMLDOMEntity IXMLDOMEntity;
#line 141 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




typedef struct IXMLDOMEntityReference IXMLDOMEntityReference;
#line 147 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




typedef struct IXMLDOMParseError IXMLDOMParseError;
#line 153 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




typedef struct IXTLRuntime IXTLRuntime;
#line 159 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




typedef struct XMLDOMDocumentEvents XMLDOMDocumentEvents;
#line 165 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"






typedef class DOMDocument DOMDocument;


#line 175 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"

#line 177 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"






typedef class DOMFreeThreadedDocument DOMFreeThreadedDocument;


#line 187 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"

#line 189 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




typedef struct IXMLHttpRequest IXMLHttpRequest;
#line 195 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"






typedef class XMLHTTPRequest XMLHTTPRequest;


#line 205 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"

#line 207 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




typedef struct IXMLDSOControl IXMLDSOControl;
#line 213 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"






typedef class XMLDSOControl XMLDSOControl;


#line 223 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"

#line 225 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




typedef struct IXMLElementCollection IXMLElementCollection;
#line 231 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




typedef struct IXMLDocument IXMLDocument;
#line 237 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




typedef struct IXMLDocument2 IXMLDocument2;
#line 243 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




typedef struct IXMLElement IXMLElement;
#line 249 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




typedef struct IXMLElement2 IXMLElement2;
#line 255 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




typedef struct IXMLAttribute IXMLAttribute;
#line 261 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




typedef struct IXMLError IXMLError;
#line 267 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"






typedef class XMLDocument XMLDocument;


#line 277 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"

#line 279 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"





#line 1 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"





 










#pragma warning( disable: 4049 )  




























#pragma once
#line 48 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"

 



typedef struct ICreateTypeInfo ICreateTypeInfo;
#line 55 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"




typedef struct ICreateTypeInfo2 ICreateTypeInfo2;
#line 61 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"




typedef struct ICreateTypeLib ICreateTypeLib;
#line 67 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"




typedef struct ICreateTypeLib2 ICreateTypeLib2;
#line 73 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"




typedef struct IDispatch IDispatch;
#line 79 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"




typedef struct IEnumVARIANT IEnumVARIANT;
#line 85 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"




typedef struct ITypeComp ITypeComp;
#line 91 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"




typedef struct ITypeInfo ITypeInfo;
#line 97 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"




typedef struct ITypeInfo2 ITypeInfo2;
#line 103 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"




typedef struct ITypeLib ITypeLib;
#line 109 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"




typedef struct ITypeLib2 ITypeLib2;
#line 115 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"




typedef struct ITypeChangeEvents ITypeChangeEvents;
#line 121 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"




typedef struct IErrorInfo IErrorInfo;
#line 127 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"




typedef struct ICreateErrorInfo ICreateErrorInfo;
#line 133 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"




typedef struct ISupportErrorInfo ISupportErrorInfo;
#line 139 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"




typedef struct ITypeFactory ITypeFactory;
#line 145 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"




typedef struct ITypeMarshal ITypeMarshal;
#line 151 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"




typedef struct IRecordInfo IRecordInfo;
#line 157 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"




typedef struct IErrorLog IErrorLog;
#line 163 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"




typedef struct IPropertyBag IPropertyBag;
#line 169 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"






extern "C"{
#line 177 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"



 









#pragma warning(push)
#line 192 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"
#pragma warning(disable:4201)    
#line 194 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"

#pragma once
#line 197 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"




















extern RPC_IF_HANDLE __MIDL_itf_oaidl_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_oaidl_0000_0000_v0_0_s_ifspec;





 

typedef CY CURRENCY;

typedef struct tagSAFEARRAYBOUND
    {
    ULONG cElements;
    LONG lLbound;
    } 	SAFEARRAYBOUND;

typedef struct tagSAFEARRAYBOUND *LPSAFEARRAYBOUND;


typedef    struct _wireVARIANT *wireVARIANT;

typedef    struct _wireBRECORD *wireBRECORD;

typedef struct _wireSAFEARR_BSTR
    {
    ULONG Size;
    wireBSTR *aBstr;
    } 	SAFEARR_BSTR;

typedef struct _wireSAFEARR_UNKNOWN
    {
    ULONG Size;
    IUnknown **apUnknown;
    } 	SAFEARR_UNKNOWN;

typedef struct _wireSAFEARR_DISPATCH
    {
    ULONG Size;
    IDispatch **apDispatch;
    } 	SAFEARR_DISPATCH;

typedef struct _wireSAFEARR_VARIANT
    {
    ULONG Size;
    wireVARIANT *aVariant;
    } 	SAFEARR_VARIANT;

typedef struct _wireSAFEARR_BRECORD
    {
    ULONG Size;
    wireBRECORD *aRecord;
    } 	SAFEARR_BRECORD;

typedef struct _wireSAFEARR_HAVEIID
    {
    ULONG Size;
    IUnknown **apUnknown;
    IID iid;
    } 	SAFEARR_HAVEIID;

typedef  
enum tagSF_TYPE
    {	SF_ERROR	= VT_ERROR,
	SF_I1	= VT_I1,
	SF_I2	= VT_I2,
	SF_I4	= VT_I4,
	SF_I8	= VT_I8,
	SF_BSTR	= VT_BSTR,
	SF_UNKNOWN	= VT_UNKNOWN,
	SF_DISPATCH	= VT_DISPATCH,
	SF_VARIANT	= VT_VARIANT,
	SF_RECORD	= VT_RECORD,
	SF_HAVEIID	= ( VT_UNKNOWN | VT_RESERVED ) 
    } 	SF_TYPE;

typedef struct _wireSAFEARRAY_UNION
    {
    ULONG sfType;
     union __MIDL_IOleAutomationTypes_0001
        {
        SAFEARR_BSTR BstrStr;
        SAFEARR_UNKNOWN UnknownStr;
        SAFEARR_DISPATCH DispatchStr;
        SAFEARR_VARIANT VariantStr;
        SAFEARR_BRECORD RecordStr;
        SAFEARR_HAVEIID HaveIidStr;
        BYTE_SIZEDARR ByteStr;
        WORD_SIZEDARR WordStr;
        DWORD_SIZEDARR LongStr;
        HYPER_SIZEDARR HyperStr;
        } 	u;
    } 	SAFEARRAYUNION;

typedef    struct _wireSAFEARRAY
    {
    USHORT cDims;
    USHORT fFeatures;
    ULONG cbElements;
    ULONG cLocks;
    SAFEARRAYUNION uArrayStructs;
    SAFEARRAYBOUND rgsabound[ 1 ];
    } 	*wireSAFEARRAY;

typedef    wireSAFEARRAY *wirePSAFEARRAY;

typedef struct tagSAFEARRAY
    {
    USHORT cDims;
    USHORT fFeatures;
    ULONG cbElements;
    ULONG cLocks;
    PVOID pvData;
    SAFEARRAYBOUND rgsabound[ 1 ];
    } 	SAFEARRAY;

typedef  SAFEARRAY *LPSAFEARRAY;


















































































#line 417 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"






#line 424 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"
typedef  struct tagVARIANT VARIANT;

struct tagVARIANT
    {
    union 
        {
        struct 
            {
            VARTYPE vt;
            WORD wReserved1;
            WORD wReserved2;
            WORD wReserved3;
            union 
                {
                LONGLONG llVal;
                LONG lVal;
                BYTE bVal;
                SHORT iVal;
                FLOAT fltVal;
                DOUBLE dblVal;
                VARIANT_BOOL boolVal;
                
                SCODE scode;
                CY cyVal;
                DATE date;
                BSTR bstrVal;
                IUnknown *punkVal;
                IDispatch *pdispVal;
                SAFEARRAY *parray;
                BYTE *pbVal;
                SHORT *piVal;
                LONG *plVal;
                LONGLONG *pllVal;
                FLOAT *pfltVal;
                DOUBLE *pdblVal;
                VARIANT_BOOL *pboolVal;
                
                SCODE *pscode;
                CY *pcyVal;
                DATE *pdate;
                BSTR *pbstrVal;
                IUnknown **ppunkVal;
                IDispatch **ppdispVal;
                SAFEARRAY **pparray;
                VARIANT *pvarVal;
                PVOID byref;
                CHAR cVal;
                USHORT uiVal;
                ULONG ulVal;
                ULONGLONG ullVal;
                INT intVal;
                UINT uintVal;
                DECIMAL *pdecVal;
                CHAR *pcVal;
                USHORT *puiVal;
                ULONG *pulVal;
                ULONGLONG *pullVal;
                INT *pintVal;
                UINT *puintVal;
                struct 
                    {
                    PVOID pvRecord;
                    IRecordInfo *pRecInfo;
                    } 	;
                } 	;
            } 	;
        DECIMAL decVal;
        } 	;
    } ;
typedef VARIANT *LPVARIANT;

typedef VARIANT VARIANTARG;

typedef VARIANT *LPVARIANTARG;












#line 511 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"
#line 512 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"

#line 514 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"


struct _wireBRECORD
    {
    ULONG fFlags;
    ULONG clSize;
    IRecordInfo *pRecInfo;
    byte *pRecord;
    } ;
struct _wireVARIANT
    {
    DWORD clSize;
    DWORD rpcReserved;
    USHORT vt;
    USHORT wReserved1;
    USHORT wReserved2;
    USHORT wReserved3;
    union 
        {
        LONGLONG llVal;
        LONG lVal;
        BYTE bVal;
        SHORT iVal;
        FLOAT fltVal;
        DOUBLE dblVal;
        VARIANT_BOOL boolVal;
        SCODE scode;
        CY cyVal;
        DATE date;
        wireBSTR bstrVal;
        IUnknown *punkVal;
        IDispatch *pdispVal;
        wirePSAFEARRAY parray;
        wireBRECORD brecVal;
        BYTE *pbVal;
        SHORT *piVal;
        LONG *plVal;
        LONGLONG *pllVal;
        FLOAT *pfltVal;
        DOUBLE *pdblVal;
        VARIANT_BOOL *pboolVal;
        SCODE *pscode;
        CY *pcyVal;
        DATE *pdate;
        wireBSTR *pbstrVal;
        IUnknown **ppunkVal;
        IDispatch **ppdispVal;
        wirePSAFEARRAY *pparray;
        wireVARIANT *pvarVal;
        CHAR cVal;
        USHORT uiVal;
        ULONG ulVal;
        ULONGLONG ullVal;
        INT intVal;
        UINT uintVal;
        DECIMAL decVal;
        DECIMAL *pdecVal;
        CHAR *pcVal;
        USHORT *puiVal;
        ULONG *pulVal;
        ULONGLONG *pullVal;
        INT *pintVal;
        UINT *puintVal;
          
          
        } 	;
    } ;
typedef LONG DISPID;

typedef DISPID MEMBERID;

typedef DWORD HREFTYPE;

typedef  
enum tagTYPEKIND
    {	TKIND_ENUM	= 0,
	TKIND_RECORD	= ( TKIND_ENUM + 1 ) ,
	TKIND_MODULE	= ( TKIND_RECORD + 1 ) ,
	TKIND_INTERFACE	= ( TKIND_MODULE + 1 ) ,
	TKIND_DISPATCH	= ( TKIND_INTERFACE + 1 ) ,
	TKIND_COCLASS	= ( TKIND_DISPATCH + 1 ) ,
	TKIND_ALIAS	= ( TKIND_COCLASS + 1 ) ,
	TKIND_UNION	= ( TKIND_ALIAS + 1 ) ,
	TKIND_MAX	= ( TKIND_UNION + 1 ) 
    } 	TYPEKIND;

typedef struct tagTYPEDESC
    {
    union 
        {
        struct tagTYPEDESC *lptdesc;
        struct tagARRAYDESC *lpadesc;
        HREFTYPE hreftype;
          
        } 	;
    VARTYPE vt;
    } 	TYPEDESC;

typedef struct tagARRAYDESC
    {
    TYPEDESC tdescElem;
    USHORT cDims;
    SAFEARRAYBOUND rgbounds[ 1 ];
    } 	ARRAYDESC;

typedef struct tagPARAMDESCEX
    {
    ULONG cBytes;
    VARIANTARG varDefaultValue;
    } 	PARAMDESCEX;

typedef struct tagPARAMDESCEX *LPPARAMDESCEX;

typedef struct tagPARAMDESC
    {
    LPPARAMDESCEX pparamdescex;
    USHORT wParamFlags;
    } 	PARAMDESC;

typedef struct tagPARAMDESC *LPPARAMDESC;

















typedef struct tagIDLDESC
    {
    ULONG_PTR dwReserved;
    USHORT wIDLFlags;
    } 	IDLDESC;

typedef struct tagIDLDESC *LPIDLDESC;




















#line 679 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"

typedef struct tagELEMDESC {
    TYPEDESC tdesc;             
    union {
        IDLDESC idldesc;        
        PARAMDESC paramdesc;    
    } ;
} ELEMDESC, * LPELEMDESC;

#line 689 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"

typedef struct tagTYPEATTR
    {
    GUID guid;
    LCID lcid;
    DWORD dwReserved;
    MEMBERID memidConstructor;
    MEMBERID memidDestructor;
    LPOLESTR lpstrSchema;
    ULONG cbSizeInstance;
    TYPEKIND typekind;
    WORD cFuncs;
    WORD cVars;
    WORD cImplTypes;
    WORD cbSizeVft;
    WORD cbAlignment;
    WORD wTypeFlags;
    WORD wMajorVerNum;
    WORD wMinorVerNum;
    TYPEDESC tdescAlias;
    IDLDESC idldescType;
    } 	TYPEATTR;

typedef struct tagTYPEATTR *LPTYPEATTR;

typedef struct tagDISPPARAMS
    {
    VARIANTARG *rgvarg;
    DISPID *rgdispidNamedArgs;
    UINT cArgs;
    UINT cNamedArgs;
    } 	DISPPARAMS;


















#line 740 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"

typedef struct tagEXCEPINFO {
    WORD  wCode;
    WORD  wReserved;
    BSTR  bstrSource;
    BSTR  bstrDescription;
    BSTR  bstrHelpFile;
    DWORD dwHelpContext;
    PVOID pvReserved;
    HRESULT (__stdcall *pfnDeferredFillIn)(struct tagEXCEPINFO *);
    SCODE scode;
} EXCEPINFO, * LPEXCEPINFO;

#line 754 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"

typedef  
enum tagCALLCONV
    {	CC_FASTCALL	= 0,
	CC_CDECL	= 1,
	CC_MSCPASCAL	= ( CC_CDECL + 1 ) ,
	CC_PASCAL	= CC_MSCPASCAL,
	CC_MACPASCAL	= ( CC_PASCAL + 1 ) ,
	CC_STDCALL	= ( CC_MACPASCAL + 1 ) ,
	CC_FPFASTCALL	= ( CC_STDCALL + 1 ) ,
	CC_SYSCALL	= ( CC_FPFASTCALL + 1 ) ,
	CC_MPWCDECL	= ( CC_SYSCALL + 1 ) ,
	CC_MPWPASCAL	= ( CC_MPWCDECL + 1 ) ,
	CC_MAX	= ( CC_MPWPASCAL + 1 ) 
    } 	CALLCONV;

typedef  
enum tagFUNCKIND
    {	FUNC_VIRTUAL	= 0,
	FUNC_PUREVIRTUAL	= ( FUNC_VIRTUAL + 1 ) ,
	FUNC_NONVIRTUAL	= ( FUNC_PUREVIRTUAL + 1 ) ,
	FUNC_STATIC	= ( FUNC_NONVIRTUAL + 1 ) ,
	FUNC_DISPATCH	= ( FUNC_STATIC + 1 ) 
    } 	FUNCKIND;

typedef  
enum tagINVOKEKIND
    {	INVOKE_FUNC	= 1,
	INVOKE_PROPERTYGET	= 2,
	INVOKE_PROPERTYPUT	= 4,
	INVOKE_PROPERTYPUTREF	= 8
    } 	INVOKEKIND;

typedef struct tagFUNCDESC
    {
    MEMBERID memid;
    SCODE *lprgscode;
    ELEMDESC *lprgelemdescParam;
    FUNCKIND funckind;
    INVOKEKIND invkind;
    CALLCONV callconv;
    SHORT cParams;
    SHORT cParamsOpt;
    SHORT oVft;
    SHORT cScodes;
    ELEMDESC elemdescFunc;
    WORD wFuncFlags;
    } 	FUNCDESC;

typedef struct tagFUNCDESC *LPFUNCDESC;

typedef  
enum tagVARKIND
    {	VAR_PERINSTANCE	= 0,
	VAR_STATIC	= ( VAR_PERINSTANCE + 1 ) ,
	VAR_CONST	= ( VAR_STATIC + 1 ) ,
	VAR_DISPATCH	= ( VAR_CONST + 1 ) 
    } 	VARKIND;









typedef struct tagVARDESC
    {
    MEMBERID memid;
    LPOLESTR lpstrSchema;
    union 
        {
        ULONG oInst;
        VARIANT *lpvarValue;
        } 	;
    ELEMDESC elemdescVar;
    WORD wVarFlags;
    VARKIND varkind;
    } 	VARDESC;

typedef struct tagVARDESC *LPVARDESC;

typedef 
enum tagTYPEFLAGS
    {	TYPEFLAG_FAPPOBJECT	= 0x1,
	TYPEFLAG_FCANCREATE	= 0x2,
	TYPEFLAG_FLICENSED	= 0x4,
	TYPEFLAG_FPREDECLID	= 0x8,
	TYPEFLAG_FHIDDEN	= 0x10,
	TYPEFLAG_FCONTROL	= 0x20,
	TYPEFLAG_FDUAL	= 0x40,
	TYPEFLAG_FNONEXTENSIBLE	= 0x80,
	TYPEFLAG_FOLEAUTOMATION	= 0x100,
	TYPEFLAG_FRESTRICTED	= 0x200,
	TYPEFLAG_FAGGREGATABLE	= 0x400,
	TYPEFLAG_FREPLACEABLE	= 0x800,
	TYPEFLAG_FDISPATCHABLE	= 0x1000,
	TYPEFLAG_FREVERSEBIND	= 0x2000,
	TYPEFLAG_FPROXY	= 0x4000
    } 	TYPEFLAGS;

typedef 
enum tagFUNCFLAGS
    {	FUNCFLAG_FRESTRICTED	= 0x1,
	FUNCFLAG_FSOURCE	= 0x2,
	FUNCFLAG_FBINDABLE	= 0x4,
	FUNCFLAG_FREQUESTEDIT	= 0x8,
	FUNCFLAG_FDISPLAYBIND	= 0x10,
	FUNCFLAG_FDEFAULTBIND	= 0x20,
	FUNCFLAG_FHIDDEN	= 0x40,
	FUNCFLAG_FUSESGETLASTERROR	= 0x80,
	FUNCFLAG_FDEFAULTCOLLELEM	= 0x100,
	FUNCFLAG_FUIDEFAULT	= 0x200,
	FUNCFLAG_FNONBROWSABLE	= 0x400,
	FUNCFLAG_FREPLACEABLE	= 0x800,
	FUNCFLAG_FIMMEDIATEBIND	= 0x1000
    } 	FUNCFLAGS;

typedef 
enum tagVARFLAGS
    {	VARFLAG_FREADONLY	= 0x1,
	VARFLAG_FSOURCE	= 0x2,
	VARFLAG_FBINDABLE	= 0x4,
	VARFLAG_FREQUESTEDIT	= 0x8,
	VARFLAG_FDISPLAYBIND	= 0x10,
	VARFLAG_FDEFAULTBIND	= 0x20,
	VARFLAG_FHIDDEN	= 0x40,
	VARFLAG_FRESTRICTED	= 0x80,
	VARFLAG_FDEFAULTCOLLELEM	= 0x100,
	VARFLAG_FUIDEFAULT	= 0x200,
	VARFLAG_FNONBROWSABLE	= 0x400,
	VARFLAG_FREPLACEABLE	= 0x800,
	VARFLAG_FIMMEDIATEBIND	= 0x1000
    } 	VARFLAGS;

typedef  struct tagCLEANLOCALSTORAGE
    {
    IUnknown *pInterface;
    PVOID pStorage;
    DWORD flags;
    } 	CLEANLOCALSTORAGE;

typedef struct tagCUSTDATAITEM
    {
    GUID guid;
    VARIANTARG varValue;
    } 	CUSTDATAITEM;

typedef struct tagCUSTDATAITEM *LPCUSTDATAITEM;

typedef struct tagCUSTDATA
    {
    DWORD cCustData;
    LPCUSTDATAITEM prgCustData;
    } 	CUSTDATA;

typedef struct tagCUSTDATA *LPCUSTDATA;



extern RPC_IF_HANDLE IOleAutomationTypes_v1_0_c_ifspec;
extern RPC_IF_HANDLE IOleAutomationTypes_v1_0_s_ifspec;
#line 918 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"





 

typedef  ICreateTypeInfo *LPCREATETYPEINFO;


extern "C" const IID IID_ICreateTypeInfo;


    
    struct __declspec(uuid("00020405-0000-0000-C000-000000000046")) __declspec(novtable)
    ICreateTypeInfo : public IUnknown
    {
    public:
        virtual HRESULT __stdcall SetGuid( 
             const GUID & guid) = 0;
        
        virtual HRESULT __stdcall SetTypeFlags( 
             UINT uTypeFlags) = 0;
        
        virtual HRESULT __stdcall SetDocString( 
             
              LPOLESTR pStrDoc) = 0;
        
        virtual HRESULT __stdcall SetHelpContext( 
             DWORD dwHelpContext) = 0;
        
        virtual HRESULT __stdcall SetVersion( 
             WORD wMajorVerNum,
             WORD wMinorVerNum) = 0;
        
        virtual HRESULT __stdcall AddRefTypeInfo( 
             ITypeInfo *pTInfo,
             HREFTYPE *phRefType) = 0;
        
        virtual HRESULT __stdcall AddFuncDesc( 
             UINT index,
             FUNCDESC *pFuncDesc) = 0;
        
        virtual HRESULT __stdcall AddImplType( 
             UINT index,
             HREFTYPE hRefType) = 0;
        
        virtual HRESULT __stdcall SetImplTypeFlags( 
             UINT index,
             INT implTypeFlags) = 0;
        
        virtual HRESULT __stdcall SetAlignment( 
             WORD cbAlignment) = 0;
        
        virtual HRESULT __stdcall SetSchema( 
             
              LPOLESTR pStrSchema) = 0;
        
        virtual HRESULT __stdcall AddVarDesc( 
             UINT index,
             VARDESC *pVarDesc) = 0;
        
        virtual HRESULT __stdcall SetFuncAndParamNames( 
             UINT index,
             
              LPOLESTR *rgszNames,
             UINT cNames) = 0;
        
        virtual HRESULT __stdcall SetVarName( 
             UINT index,
             
              LPOLESTR szName) = 0;
        
        virtual HRESULT __stdcall SetTypeDescAlias( 
             TYPEDESC *pTDescAlias) = 0;
        
        virtual HRESULT __stdcall DefineFuncAsDllEntry( 
             UINT index,
             
              LPOLESTR szDllName,
             
              LPOLESTR szProcName) = 0;
        
        virtual HRESULT __stdcall SetFuncDocString( 
             UINT index,
             
              LPOLESTR szDocString) = 0;
        
        virtual HRESULT __stdcall SetVarDocString( 
             UINT index,
             
              LPOLESTR szDocString) = 0;
        
        virtual HRESULT __stdcall SetFuncHelpContext( 
             UINT index,
             DWORD dwHelpContext) = 0;
        
        virtual HRESULT __stdcall SetVarHelpContext( 
             UINT index,
             DWORD dwHelpContext) = 0;
        
        virtual HRESULT __stdcall SetMops( 
             UINT index,
             BSTR bstrMops) = 0;
        
        virtual HRESULT __stdcall SetTypeIdldesc( 
             IDLDESC *pIdlDesc) = 0;
        
        virtual HRESULT __stdcall LayOut( void) = 0;
        
    };
    




































































































































































































































#line 1259 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"




#line 1264 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"






 

typedef  ICreateTypeInfo2 *LPCREATETYPEINFO2;


extern "C" const IID IID_ICreateTypeInfo2;


    
    struct __declspec(uuid("0002040E-0000-0000-C000-000000000046")) __declspec(novtable)
    ICreateTypeInfo2 : public ICreateTypeInfo
    {
    public:
        virtual HRESULT __stdcall DeleteFuncDesc( 
             UINT index) = 0;
        
        virtual HRESULT __stdcall DeleteFuncDescByMemId( 
             MEMBERID memid,
             INVOKEKIND invKind) = 0;
        
        virtual HRESULT __stdcall DeleteVarDesc( 
             UINT index) = 0;
        
        virtual HRESULT __stdcall DeleteVarDescByMemId( 
             MEMBERID memid) = 0;
        
        virtual HRESULT __stdcall DeleteImplType( 
             UINT index) = 0;
        
        virtual HRESULT __stdcall SetCustData( 
             const GUID & guid,
             VARIANT *pVarVal) = 0;
        
        virtual HRESULT __stdcall SetFuncCustData( 
             UINT index,
             const GUID & guid,
             VARIANT *pVarVal) = 0;
        
        virtual HRESULT __stdcall SetParamCustData( 
             UINT indexFunc,
             UINT indexParam,
             const GUID & guid,
             VARIANT *pVarVal) = 0;
        
        virtual HRESULT __stdcall SetVarCustData( 
             UINT index,
             const GUID & guid,
             VARIANT *pVarVal) = 0;
        
        virtual HRESULT __stdcall SetImplTypeCustData( 
             UINT index,
             const GUID & guid,
             VARIANT *pVarVal) = 0;
        
        virtual HRESULT __stdcall SetHelpStringContext( 
             ULONG dwHelpStringContext) = 0;
        
        virtual HRESULT __stdcall SetFuncHelpStringContext( 
             UINT index,
             ULONG dwHelpStringContext) = 0;
        
        virtual HRESULT __stdcall SetVarHelpStringContext( 
             UINT index,
             ULONG dwHelpStringContext) = 0;
        
        virtual HRESULT __stdcall Invalidate( void) = 0;
        
        virtual HRESULT __stdcall SetName( 
             
              LPOLESTR szName) = 0;
        
    };
    



























































































































































































































































































































































#line 1691 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"




#line 1696 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"






 

typedef  ICreateTypeLib *LPCREATETYPELIB;


extern "C" const IID IID_ICreateTypeLib;


    
    struct __declspec(uuid("00020406-0000-0000-C000-000000000046")) __declspec(novtable)
    ICreateTypeLib : public IUnknown
    {
    public:
        virtual HRESULT __stdcall CreateTypeInfo( 
             
              LPOLESTR szName,
             TYPEKIND tkind,
             ICreateTypeInfo **ppCTInfo) = 0;
        
        virtual HRESULT __stdcall SetName( 
             
              LPOLESTR szName) = 0;
        
        virtual HRESULT __stdcall SetVersion( 
             WORD wMajorVerNum,
             WORD wMinorVerNum) = 0;
        
        virtual HRESULT __stdcall SetGuid( 
             const GUID & guid) = 0;
        
        virtual HRESULT __stdcall SetDocString( 
             
              LPOLESTR szDoc) = 0;
        
        virtual HRESULT __stdcall SetHelpFileName( 
             
              LPOLESTR szHelpFileName) = 0;
        
        virtual HRESULT __stdcall SetHelpContext( 
             DWORD dwHelpContext) = 0;
        
        virtual HRESULT __stdcall SetLcid( 
             LCID lcid) = 0;
        
        virtual HRESULT __stdcall SetLibFlags( 
             UINT uLibFlags) = 0;
        
        virtual HRESULT __stdcall SaveAllChanges( void) = 0;
        
    };
    
























































































































#line 1874 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"




#line 1879 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"






 

typedef  ICreateTypeLib2 *LPCREATETYPELIB2;


extern "C" const IID IID_ICreateTypeLib2;


    
    struct __declspec(uuid("0002040F-0000-0000-C000-000000000046")) __declspec(novtable)
    ICreateTypeLib2 : public ICreateTypeLib
    {
    public:
        virtual HRESULT __stdcall DeleteTypeInfo( 
             
              LPOLESTR szName) = 0;
        
        virtual HRESULT __stdcall SetCustData( 
             const GUID & guid,
             VARIANT *pVarVal) = 0;
        
        virtual HRESULT __stdcall SetHelpStringContext( 
             ULONG dwHelpStringContext) = 0;
        
        virtual HRESULT __stdcall SetHelpStringDll( 
             
              LPOLESTR szFileName) = 0;
        
    };
    
























































































































































#line 2068 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"




#line 2073 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"






 

typedef    IDispatch *LPDISPATCH;

































extern "C" const IID IID_IDispatch;


    
    struct __declspec(uuid("00020400-0000-0000-C000-000000000046")) __declspec(novtable)
    IDispatch : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetTypeInfoCount( 
              UINT *pctinfo) = 0;
        
        virtual HRESULT __stdcall GetTypeInfo( 
             UINT iTInfo,
             LCID lcid,
              ITypeInfo **ppTInfo) = 0;
        
        virtual HRESULT __stdcall GetIDsOfNames( 
              const IID & riid,
              LPOLESTR *rgszNames,
              UINT cNames,
             LCID lcid,
              DISPID *rgDispId) = 0;
        
        virtual  HRESULT __stdcall Invoke( 
             DISPID dispIdMember,
             const IID & riid,
             LCID lcid,
             WORD wFlags,
             DISPPARAMS *pDispParams,
             VARIANT *pVarResult,
             EXCEPINFO *pExcepInfo,
             UINT *puArgErr) = 0;
        
    };
    





















































































#line 2236 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"



 HRESULT __stdcall IDispatch_RemoteInvoke_Proxy( 
     IDispatch * This,
     DISPID dispIdMember,
      const IID & riid,
     LCID lcid,
     DWORD dwFlags,
      DISPPARAMS *pDispParams,
      VARIANT *pVarResult,
      EXCEPINFO *pExcepInfo,
      UINT *pArgErr,
     UINT cVarRef,
      UINT *rgVarRefIdx,
      VARIANTARG *rgVarRef);


void __stdcall IDispatch_RemoteInvoke_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#line 2263 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"






 

typedef    IEnumVARIANT *LPENUMVARIANT;


extern "C" const IID IID_IEnumVARIANT;


    
    struct __declspec(uuid("00020404-0000-0000-C000-000000000046")) __declspec(novtable)
    IEnumVARIANT : public IUnknown
    {
    public:
        virtual  HRESULT __stdcall Next( 
             ULONG celt,
             VARIANT *rgVar,
             ULONG *pCeltFetched) = 0;
        
        virtual HRESULT __stdcall Skip( 
             ULONG celt) = 0;
        
        virtual HRESULT __stdcall Reset( void) = 0;
        
        virtual HRESULT __stdcall Clone( 
              IEnumVARIANT **ppEnum) = 0;
        
    };
    









































































#line 2371 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"



 HRESULT __stdcall IEnumVARIANT_RemoteNext_Proxy( 
     IEnumVARIANT * This,
     ULONG celt,
      VARIANT *rgVar,
      ULONG *pCeltFetched);


void __stdcall IEnumVARIANT_RemoteNext_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#line 2390 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"






 

typedef    ITypeComp *LPTYPECOMP;

typedef  
enum tagDESCKIND
    {	DESCKIND_NONE	= 0,
	DESCKIND_FUNCDESC	= ( DESCKIND_NONE + 1 ) ,
	DESCKIND_VARDESC	= ( DESCKIND_FUNCDESC + 1 ) ,
	DESCKIND_TYPECOMP	= ( DESCKIND_VARDESC + 1 ) ,
	DESCKIND_IMPLICITAPPOBJ	= ( DESCKIND_TYPECOMP + 1 ) ,
	DESCKIND_MAX	= ( DESCKIND_IMPLICITAPPOBJ + 1 ) 
    } 	DESCKIND;

typedef union tagBINDPTR
    {
    FUNCDESC *lpfuncdesc;
    VARDESC *lpvardesc;
    ITypeComp *lptcomp;
    } 	BINDPTR;

typedef union tagBINDPTR *LPBINDPTR;


extern "C" const IID IID_ITypeComp;


    
    struct __declspec(uuid("00020403-0000-0000-C000-000000000046")) __declspec(novtable)
    ITypeComp : public IUnknown
    {
    public:
        virtual  HRESULT __stdcall Bind( 
             
              LPOLESTR szName,
             ULONG lHashVal,
             WORD wFlags,
             ITypeInfo **ppTInfo,
             DESCKIND *pDescKind,
             BINDPTR *pBindPtr) = 0;
        
        virtual  HRESULT __stdcall BindType( 
             
              LPOLESTR szName,
             ULONG lHashVal,
             ITypeInfo **ppTInfo,
             ITypeComp **ppTComp) = 0;
        
    };
    




































































#line 2515 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"



 HRESULT __stdcall ITypeComp_RemoteBind_Proxy( 
     ITypeComp * This,
      LPOLESTR szName,
     ULONG lHashVal,
     WORD wFlags,
      ITypeInfo **ppTInfo,
      DESCKIND *pDescKind,
      LPFUNCDESC *ppFuncDesc,
      LPVARDESC *ppVarDesc,
      ITypeComp **ppTypeComp,
      CLEANLOCALSTORAGE *pDummy);


void __stdcall ITypeComp_RemoteBind_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall ITypeComp_RemoteBindType_Proxy( 
     ITypeComp * This,
      LPOLESTR szName,
     ULONG lHashVal,
      ITypeInfo **ppTInfo);


void __stdcall ITypeComp_RemoteBindType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#line 2554 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"






 

typedef    ITypeInfo *LPTYPEINFO;


extern "C" const IID IID_ITypeInfo;


    
    struct __declspec(uuid("00020401-0000-0000-C000-000000000046")) __declspec(novtable)
    ITypeInfo : public IUnknown
    {
    public:
        virtual  HRESULT __stdcall GetTypeAttr( 
             TYPEATTR **ppTypeAttr) = 0;
        
        virtual HRESULT __stdcall GetTypeComp( 
              ITypeComp **ppTComp) = 0;
        
        virtual  HRESULT __stdcall GetFuncDesc( 
             UINT index,
             FUNCDESC **ppFuncDesc) = 0;
        
        virtual  HRESULT __stdcall GetVarDesc( 
             UINT index,
             VARDESC **ppVarDesc) = 0;
        
        virtual  HRESULT __stdcall GetNames( 
             MEMBERID memid,
             BSTR *rgBstrNames,
             UINT cMaxNames,
             UINT *pcNames) = 0;
        
        virtual HRESULT __stdcall GetRefTypeOfImplType( 
             UINT index,
              HREFTYPE *pRefType) = 0;
        
        virtual HRESULT __stdcall GetImplTypeFlags( 
             UINT index,
              INT *pImplTypeFlags) = 0;
        
        virtual  HRESULT __stdcall GetIDsOfNames( 
             
              LPOLESTR *rgszNames,
             UINT cNames,
             MEMBERID *pMemId) = 0;
        
        virtual  HRESULT __stdcall Invoke( 
             PVOID pvInstance,
             MEMBERID memid,
             WORD wFlags,
             DISPPARAMS *pDispParams,
             VARIANT *pVarResult,
             EXCEPINFO *pExcepInfo,
             UINT *puArgErr) = 0;
        
        virtual  HRESULT __stdcall GetDocumentation( 
             MEMBERID memid,
             BSTR *pBstrName,
             BSTR *pBstrDocString,
             DWORD *pdwHelpContext,
             BSTR *pBstrHelpFile) = 0;
        
        virtual  HRESULT __stdcall GetDllEntry( 
             MEMBERID memid,
             INVOKEKIND invKind,
             BSTR *pBstrDllName,
             BSTR *pBstrName,
             WORD *pwOrdinal) = 0;
        
        virtual HRESULT __stdcall GetRefTypeInfo( 
             HREFTYPE hRefType,
              ITypeInfo **ppTInfo) = 0;
        
        virtual  HRESULT __stdcall AddressOfMember( 
             MEMBERID memid,
             INVOKEKIND invKind,
             PVOID *ppv) = 0;
        
        virtual  HRESULT __stdcall CreateInstance( 
             IUnknown *pUnkOuter,
             const IID & riid,
             PVOID *ppvObj) = 0;
        
        virtual HRESULT __stdcall GetMops( 
             MEMBERID memid,
              BSTR *pBstrMops) = 0;
        
        virtual  HRESULT __stdcall GetContainingTypeLib( 
             ITypeLib **ppTLib,
             UINT *pIndex) = 0;
        
        virtual  void __stdcall ReleaseTypeAttr( 
             TYPEATTR *pTypeAttr) = 0;
        
        virtual  void __stdcall ReleaseFuncDesc( 
             FUNCDESC *pFuncDesc) = 0;
        
        virtual  void __stdcall ReleaseVarDesc( 
             VARDESC *pVarDesc) = 0;
        
    };
    
















































































































































































































#line 2872 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"



 HRESULT __stdcall ITypeInfo_RemoteGetTypeAttr_Proxy( 
     ITypeInfo * This,
      LPTYPEATTR *ppTypeAttr,
      CLEANLOCALSTORAGE *pDummy);


void __stdcall ITypeInfo_RemoteGetTypeAttr_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall ITypeInfo_RemoteGetFuncDesc_Proxy( 
     ITypeInfo * This,
     UINT index,
      LPFUNCDESC *ppFuncDesc,
      CLEANLOCALSTORAGE *pDummy);


void __stdcall ITypeInfo_RemoteGetFuncDesc_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall ITypeInfo_RemoteGetVarDesc_Proxy( 
     ITypeInfo * This,
     UINT index,
      LPVARDESC *ppVarDesc,
      CLEANLOCALSTORAGE *pDummy);


void __stdcall ITypeInfo_RemoteGetVarDesc_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall ITypeInfo_RemoteGetNames_Proxy( 
     ITypeInfo * This,
     MEMBERID memid,
      BSTR *rgBstrNames,
     UINT cMaxNames,
      UINT *pcNames);


void __stdcall ITypeInfo_RemoteGetNames_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall ITypeInfo_LocalGetIDsOfNames_Proxy( 
     ITypeInfo * This);


void __stdcall ITypeInfo_LocalGetIDsOfNames_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall ITypeInfo_LocalInvoke_Proxy( 
     ITypeInfo * This);


void __stdcall ITypeInfo_LocalInvoke_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall ITypeInfo_RemoteGetDocumentation_Proxy( 
     ITypeInfo * This,
     MEMBERID memid,
     DWORD refPtrFlags,
      BSTR *pBstrName,
      BSTR *pBstrDocString,
      DWORD *pdwHelpContext,
      BSTR *pBstrHelpFile);


void __stdcall ITypeInfo_RemoteGetDocumentation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall ITypeInfo_RemoteGetDllEntry_Proxy( 
     ITypeInfo * This,
     MEMBERID memid,
     INVOKEKIND invKind,
     DWORD refPtrFlags,
      BSTR *pBstrDllName,
      BSTR *pBstrName,
      WORD *pwOrdinal);


void __stdcall ITypeInfo_RemoteGetDllEntry_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall ITypeInfo_LocalAddressOfMember_Proxy( 
     ITypeInfo * This);


void __stdcall ITypeInfo_LocalAddressOfMember_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall ITypeInfo_RemoteCreateInstance_Proxy( 
     ITypeInfo * This,
      const IID & riid,
      IUnknown **ppvObj);


void __stdcall ITypeInfo_RemoteCreateInstance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall ITypeInfo_RemoteGetContainingTypeLib_Proxy( 
     ITypeInfo * This,
      ITypeLib **ppTLib,
      UINT *pIndex);


void __stdcall ITypeInfo_RemoteGetContainingTypeLib_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall ITypeInfo_LocalReleaseTypeAttr_Proxy( 
     ITypeInfo * This);


void __stdcall ITypeInfo_LocalReleaseTypeAttr_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall ITypeInfo_LocalReleaseFuncDesc_Proxy( 
     ITypeInfo * This);


void __stdcall ITypeInfo_LocalReleaseFuncDesc_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall ITypeInfo_LocalReleaseVarDesc_Proxy( 
     ITypeInfo * This);


void __stdcall ITypeInfo_LocalReleaseVarDesc_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#line 3059 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"






 

typedef    ITypeInfo2 *LPTYPEINFO2;


extern "C" const IID IID_ITypeInfo2;


    
    struct __declspec(uuid("00020412-0000-0000-C000-000000000046")) __declspec(novtable)
    ITypeInfo2 : public ITypeInfo
    {
    public:
        virtual HRESULT __stdcall GetTypeKind( 
              TYPEKIND *pTypeKind) = 0;
        
        virtual HRESULT __stdcall GetTypeFlags( 
              ULONG *pTypeFlags) = 0;
        
        virtual HRESULT __stdcall GetFuncIndexOfMemId( 
             MEMBERID memid,
             INVOKEKIND invKind,
              UINT *pFuncIndex) = 0;
        
        virtual HRESULT __stdcall GetVarIndexOfMemId( 
             MEMBERID memid,
              UINT *pVarIndex) = 0;
        
        virtual HRESULT __stdcall GetCustData( 
              const GUID & guid,
              VARIANT *pVarVal) = 0;
        
        virtual HRESULT __stdcall GetFuncCustData( 
             UINT index,
              const GUID & guid,
              VARIANT *pVarVal) = 0;
        
        virtual HRESULT __stdcall GetParamCustData( 
             UINT indexFunc,
             UINT indexParam,
              const GUID & guid,
              VARIANT *pVarVal) = 0;
        
        virtual HRESULT __stdcall GetVarCustData( 
             UINT index,
              const GUID & guid,
              VARIANT *pVarVal) = 0;
        
        virtual HRESULT __stdcall GetImplTypeCustData( 
             UINT index,
              const GUID & guid,
              VARIANT *pVarVal) = 0;
        
        virtual  HRESULT __stdcall GetDocumentation2( 
             MEMBERID memid,
             LCID lcid,
             BSTR *pbstrHelpString,
             DWORD *pdwHelpStringContext,
             BSTR *pbstrHelpStringDll) = 0;
        
        virtual HRESULT __stdcall GetAllCustData( 
              CUSTDATA *pCustData) = 0;
        
        virtual HRESULT __stdcall GetAllFuncCustData( 
             UINT index,
              CUSTDATA *pCustData) = 0;
        
        virtual HRESULT __stdcall GetAllParamCustData( 
             UINT indexFunc,
             UINT indexParam,
              CUSTDATA *pCustData) = 0;
        
        virtual HRESULT __stdcall GetAllVarCustData( 
             UINT index,
              CUSTDATA *pCustData) = 0;
        
        virtual HRESULT __stdcall GetAllImplTypeCustData( 
             UINT index,
              CUSTDATA *pCustData) = 0;
        
    };
    
















































































































































































































































































































































#line 3484 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"



 HRESULT __stdcall ITypeInfo2_RemoteGetDocumentation2_Proxy( 
     ITypeInfo2 * This,
     MEMBERID memid,
     LCID lcid,
     DWORD refPtrFlags,
      BSTR *pbstrHelpString,
      DWORD *pdwHelpStringContext,
      BSTR *pbstrHelpStringDll);


void __stdcall ITypeInfo2_RemoteGetDocumentation2_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#line 3506 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"






 

typedef  
enum tagSYSKIND
    {	SYS_WIN16	= 0,
	SYS_WIN32	= ( SYS_WIN16 + 1 ) ,
	SYS_MAC	= ( SYS_WIN32 + 1 ) ,
	SYS_WIN64	= ( SYS_MAC + 1 ) 
    } 	SYSKIND;

typedef  
enum tagLIBFLAGS
    {	LIBFLAG_FRESTRICTED	= 0x1,
	LIBFLAG_FCONTROL	= 0x2,
	LIBFLAG_FHIDDEN	= 0x4,
	LIBFLAG_FHASDISKIMAGE	= 0x8
    } 	LIBFLAGS;

typedef    ITypeLib *LPTYPELIB;

typedef struct tagTLIBATTR
    {
    GUID guid;
    LCID lcid;
    SYSKIND syskind;
    WORD wMajorVerNum;
    WORD wMinorVerNum;
    WORD wLibFlags;
    } 	TLIBATTR;

typedef struct tagTLIBATTR *LPTLIBATTR;


extern "C" const IID IID_ITypeLib;


    
    struct __declspec(uuid("00020402-0000-0000-C000-000000000046")) __declspec(novtable)
    ITypeLib : public IUnknown
    {
    public:
        virtual  UINT __stdcall GetTypeInfoCount( void) = 0;
        
        virtual HRESULT __stdcall GetTypeInfo( 
             UINT index,
              ITypeInfo **ppTInfo) = 0;
        
        virtual HRESULT __stdcall GetTypeInfoType( 
             UINT index,
              TYPEKIND *pTKind) = 0;
        
        virtual HRESULT __stdcall GetTypeInfoOfGuid( 
              const GUID & guid,
              ITypeInfo **ppTinfo) = 0;
        
        virtual  HRESULT __stdcall GetLibAttr( 
             TLIBATTR **ppTLibAttr) = 0;
        
        virtual HRESULT __stdcall GetTypeComp( 
              ITypeComp **ppTComp) = 0;
        
        virtual  HRESULT __stdcall GetDocumentation( 
             INT index,
             BSTR *pBstrName,
             BSTR *pBstrDocString,
             DWORD *pdwHelpContext,
             BSTR *pBstrHelpFile) = 0;
        
        virtual  HRESULT __stdcall IsName( 
             
              LPOLESTR szNameBuf,
             ULONG lHashVal,
             BOOL *pfName) = 0;
        
        virtual  HRESULT __stdcall FindName( 
             
              LPOLESTR szNameBuf,
             ULONG lHashVal,
             ITypeInfo **ppTInfo,
             MEMBERID *rgMemId,
             USHORT *pcFound) = 0;
        
        virtual  void __stdcall ReleaseTLibAttr( 
             TLIBATTR *pTLibAttr) = 0;
        
    };
    
































































































































#line 3728 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"



 HRESULT __stdcall ITypeLib_RemoteGetTypeInfoCount_Proxy( 
     ITypeLib * This,
      UINT *pcTInfo);


void __stdcall ITypeLib_RemoteGetTypeInfoCount_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall ITypeLib_RemoteGetLibAttr_Proxy( 
     ITypeLib * This,
      LPTLIBATTR *ppTLibAttr,
      CLEANLOCALSTORAGE *pDummy);


void __stdcall ITypeLib_RemoteGetLibAttr_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall ITypeLib_RemoteGetDocumentation_Proxy( 
     ITypeLib * This,
     INT index,
     DWORD refPtrFlags,
      BSTR *pBstrName,
      BSTR *pBstrDocString,
      DWORD *pdwHelpContext,
      BSTR *pBstrHelpFile);


void __stdcall ITypeLib_RemoteGetDocumentation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall ITypeLib_RemoteIsName_Proxy( 
     ITypeLib * This,
      LPOLESTR szNameBuf,
     ULONG lHashVal,
      BOOL *pfName,
      BSTR *pBstrLibName);


void __stdcall ITypeLib_RemoteIsName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall ITypeLib_RemoteFindName_Proxy( 
     ITypeLib * This,
      LPOLESTR szNameBuf,
     ULONG lHashVal,
      ITypeInfo **ppTInfo,
      MEMBERID *rgMemId,
      USHORT *pcFound,
      BSTR *pBstrLibName);


void __stdcall ITypeLib_RemoteFindName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall ITypeLib_LocalReleaseTLibAttr_Proxy( 
     ITypeLib * This);


void __stdcall ITypeLib_LocalReleaseTLibAttr_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#line 3818 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"






 

typedef    ITypeLib2 *LPTYPELIB2;


extern "C" const IID IID_ITypeLib2;


    
    struct __declspec(uuid("00020411-0000-0000-C000-000000000046")) __declspec(novtable)
    ITypeLib2 : public ITypeLib
    {
    public:
        virtual HRESULT __stdcall GetCustData( 
              const GUID & guid,
              VARIANT *pVarVal) = 0;
        
        virtual  HRESULT __stdcall GetLibStatistics( 
             ULONG *pcUniqueNames,
             ULONG *pcchUniqueNames) = 0;
        
        virtual  HRESULT __stdcall GetDocumentation2( 
             INT index,
             LCID lcid,
             BSTR *pbstrHelpString,
             DWORD *pdwHelpStringContext,
             BSTR *pbstrHelpStringDll) = 0;
        
        virtual HRESULT __stdcall GetAllCustData( 
              CUSTDATA *pCustData) = 0;
        
    };
    



































































































































































#line 4021 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"



 HRESULT __stdcall ITypeLib2_RemoteGetLibStatistics_Proxy( 
     ITypeLib2 * This,
      ULONG *pcUniqueNames,
      ULONG *pcchUniqueNames);


void __stdcall ITypeLib2_RemoteGetLibStatistics_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall ITypeLib2_RemoteGetDocumentation2_Proxy( 
     ITypeLib2 * This,
     INT index,
     LCID lcid,
     DWORD refPtrFlags,
      BSTR *pbstrHelpString,
      DWORD *pdwHelpStringContext,
      BSTR *pbstrHelpStringDll);


void __stdcall ITypeLib2_RemoteGetDocumentation2_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#line 4056 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"






 

typedef  ITypeChangeEvents *LPTYPECHANGEEVENTS;

typedef 
enum tagCHANGEKIND
    {	CHANGEKIND_ADDMEMBER	= 0,
	CHANGEKIND_DELETEMEMBER	= ( CHANGEKIND_ADDMEMBER + 1 ) ,
	CHANGEKIND_SETNAMES	= ( CHANGEKIND_DELETEMEMBER + 1 ) ,
	CHANGEKIND_SETDOCUMENTATION	= ( CHANGEKIND_SETNAMES + 1 ) ,
	CHANGEKIND_GENERAL	= ( CHANGEKIND_SETDOCUMENTATION + 1 ) ,
	CHANGEKIND_INVALIDATE	= ( CHANGEKIND_GENERAL + 1 ) ,
	CHANGEKIND_CHANGEFAILED	= ( CHANGEKIND_INVALIDATE + 1 ) ,
	CHANGEKIND_MAX	= ( CHANGEKIND_CHANGEFAILED + 1 ) 
    } 	CHANGEKIND;


extern "C" const IID IID_ITypeChangeEvents;


    
    struct __declspec(uuid("00020410-0000-0000-C000-000000000046")) __declspec(novtable)
    ITypeChangeEvents : public IUnknown
    {
    public:
        virtual HRESULT __stdcall RequestTypeChange( 
             CHANGEKIND changeKind,
             ITypeInfo *pTInfoBefore,
             
              LPOLESTR pStrName,
             INT *pfCancel) = 0;
        
        virtual HRESULT __stdcall AfterTypeChange( 
             CHANGEKIND changeKind,
             ITypeInfo *pTInfoAfter,
             
              LPOLESTR pStrName) = 0;
        
    };
    

































































#line 4168 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"




#line 4173 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"






 

typedef    IErrorInfo *LPERRORINFO;


extern "C" const IID IID_IErrorInfo;


    
    struct __declspec(uuid("1CF2B120-547D-101B-8E65-08002B2BD119")) __declspec(novtable)
    IErrorInfo : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetGUID( 
              GUID *pGUID) = 0;
        
        virtual HRESULT __stdcall GetSource( 
              BSTR *pBstrSource) = 0;
        
        virtual HRESULT __stdcall GetDescription( 
              BSTR *pBstrDescription) = 0;
        
        virtual HRESULT __stdcall GetHelpFile( 
              BSTR *pBstrHelpFile) = 0;
        
        virtual HRESULT __stdcall GetHelpContext( 
              DWORD *pdwHelpContext) = 0;
        
    };
    















































































#line 4289 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"




#line 4294 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"






 

typedef    ICreateErrorInfo *LPCREATEERRORINFO;


extern "C" const IID IID_ICreateErrorInfo;


    
    struct __declspec(uuid("22F03340-547D-101B-8E65-08002B2BD119")) __declspec(novtable)
    ICreateErrorInfo : public IUnknown
    {
    public:
        virtual HRESULT __stdcall SetGUID( 
              const GUID & rguid) = 0;
        
        virtual HRESULT __stdcall SetSource( 
              LPOLESTR szSource) = 0;
        
        virtual HRESULT __stdcall SetDescription( 
              LPOLESTR szDescription) = 0;
        
        virtual HRESULT __stdcall SetHelpFile( 
              LPOLESTR szHelpFile) = 0;
        
        virtual HRESULT __stdcall SetHelpContext( 
             DWORD dwHelpContext) = 0;
        
    };
    















































































#line 4410 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"




#line 4415 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"






 

typedef    ISupportErrorInfo *LPSUPPORTERRORINFO;


extern "C" const IID IID_ISupportErrorInfo;


    
    struct __declspec(uuid("DF0B3D60-548F-101B-8E65-08002B2BD119")) __declspec(novtable)
    ISupportErrorInfo : public IUnknown
    {
    public:
        virtual HRESULT __stdcall InterfaceSupportsErrorInfo( 
              const IID & riid) = 0;
        
    };
    



















































#line 4491 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"




#line 4496 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"






 


extern "C" const IID IID_ITypeFactory;


    
    struct __declspec(uuid("0000002E-0000-0000-C000-000000000046")) __declspec(novtable)
    ITypeFactory : public IUnknown
    {
    public:
        virtual HRESULT __stdcall CreateFromTypeInfo( 
              ITypeInfo *pTypeInfo,
              const IID & riid,
              IUnknown **ppv) = 0;
        
    };
    





















































#line 4574 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"




#line 4579 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"






 


extern "C" const IID IID_ITypeMarshal;


    
    struct __declspec(uuid("0000002D-0000-0000-C000-000000000046")) __declspec(novtable)
    ITypeMarshal : public IUnknown
    {
    public:
        virtual HRESULT __stdcall Size( 
             PVOID pvType,
             DWORD dwDestContext,
             PVOID pvDestContext,
             ULONG *pSize) = 0;
        
        virtual HRESULT __stdcall Marshal( 
             PVOID pvType,
             DWORD dwDestContext,
             PVOID pvDestContext,
             ULONG cbBufferLength,
             BYTE *pBuffer,
             ULONG *pcbWritten) = 0;
        
        virtual HRESULT __stdcall Unmarshal( 
             PVOID pvType,
             DWORD dwFlags,
             ULONG cbBufferLength,
             BYTE *pBuffer,
             ULONG *pcbRead) = 0;
        
        virtual HRESULT __stdcall Free( 
             PVOID pvType) = 0;
        
    };
    




















































































#line 4707 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"




#line 4712 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"






 

typedef  IRecordInfo *LPRECORDINFO;


extern "C" const IID IID_IRecordInfo;


    
    struct __declspec(uuid("0000002F-0000-0000-C000-000000000046")) __declspec(novtable)
    IRecordInfo : public IUnknown
    {
    public:
        virtual HRESULT __stdcall RecordInit( 
             PVOID pvNew) = 0;
        
        virtual HRESULT __stdcall RecordClear( 
             PVOID pvExisting) = 0;
        
        virtual HRESULT __stdcall RecordCopy( 
             PVOID pvExisting,
             PVOID pvNew) = 0;
        
        virtual HRESULT __stdcall GetGuid( 
             GUID *pguid) = 0;
        
        virtual HRESULT __stdcall GetName( 
             BSTR *pbstrName) = 0;
        
        virtual HRESULT __stdcall GetSize( 
             ULONG *pcbSize) = 0;
        
        virtual HRESULT __stdcall GetTypeInfo( 
             ITypeInfo **ppTypeInfo) = 0;
        
        virtual HRESULT __stdcall GetField( 
             PVOID pvData,
             LPCOLESTR szFieldName,
             VARIANT *pvarField) = 0;
        
        virtual HRESULT __stdcall GetFieldNoCopy( 
             PVOID pvData,
             LPCOLESTR szFieldName,
             VARIANT *pvarField,
             PVOID *ppvDataCArray) = 0;
        
        virtual HRESULT __stdcall PutField( 
             ULONG wFlags,
             PVOID pvData,
             LPCOLESTR szFieldName,
             VARIANT *pvarField) = 0;
        
        virtual HRESULT __stdcall PutFieldNoCopy( 
             ULONG wFlags,
             PVOID pvData,
             LPCOLESTR szFieldName,
             VARIANT *pvarField) = 0;
        
        virtual HRESULT __stdcall GetFieldNames( 
             ULONG *pcNames,
             BSTR *rgBstrNames) = 0;
        
        virtual BOOL __stdcall IsMatchingType( 
             IRecordInfo *pRecordInfo) = 0;
        
        virtual PVOID __stdcall RecordCreate( void) = 0;
        
        virtual HRESULT __stdcall RecordCreateCopy( 
             PVOID pvSource,
             PVOID *ppvDest) = 0;
        
        virtual HRESULT __stdcall RecordDestroy( 
             PVOID pvRecord) = 0;
        
    };
    









































































































































































#line 4964 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"




#line 4969 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"






 

typedef IErrorLog *LPERRORLOG;


extern "C" const IID IID_IErrorLog;


    
    struct __declspec(uuid("3127CA40-446E-11CE-8135-00AA004BB851")) __declspec(novtable)
    IErrorLog : public IUnknown
    {
    public:
        virtual HRESULT __stdcall AddError( 
              LPCOLESTR pszPropName,
              EXCEPINFO *pExcepInfo) = 0;
        
    };
    




















































#line 5047 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"




#line 5052 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"






 

typedef IPropertyBag *LPPROPERTYBAG;


extern "C" const IID IID_IPropertyBag;


    
    struct __declspec(uuid("55272A00-42CB-11CE-8135-00AA004BB851")) __declspec(novtable)
    IPropertyBag : public IUnknown
    {
    public:
        virtual  HRESULT __stdcall Read( 
             LPCOLESTR pszPropName,
             VARIANT *pVar,
             IErrorLog *pErrorLog) = 0;
        
        virtual HRESULT __stdcall Write( 
              LPCOLESTR pszPropName,
              VARIANT *pVar) = 0;
        
    };
    





























































#line 5144 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"



 HRESULT __stdcall IPropertyBag_RemoteRead_Proxy( 
     IPropertyBag * This,
      LPCOLESTR pszPropName,
      VARIANT *pVar,
      IErrorLog *pErrorLog,
     DWORD varType,
      IUnknown *pUnkObj);


void __stdcall IPropertyBag_RemoteRead_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#line 5165 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"



 



#pragma warning(pop)


#line 5176 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"
#line 5177 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"


extern RPC_IF_HANDLE __MIDL_itf_oaidl_0000_0021_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_oaidl_0000_0021_v0_0_s_ifspec;



unsigned long             __stdcall  BSTR_UserSize(      unsigned long *, unsigned long            ,  BSTR * ); 
unsigned char * __stdcall  BSTR_UserMarshal(   unsigned long *,  unsigned char *,  BSTR * ); 
unsigned char * __stdcall  BSTR_UserUnmarshal( unsigned long *,  unsigned char *,  BSTR * ); 
void                      __stdcall  BSTR_UserFree(      unsigned long *,  BSTR * ); 

unsigned long             __stdcall  CLEANLOCALSTORAGE_UserSize(      unsigned long *, unsigned long            ,  CLEANLOCALSTORAGE * ); 
unsigned char * __stdcall  CLEANLOCALSTORAGE_UserMarshal(   unsigned long *,  unsigned char *,  CLEANLOCALSTORAGE * ); 
unsigned char * __stdcall  CLEANLOCALSTORAGE_UserUnmarshal( unsigned long *,  unsigned char *,  CLEANLOCALSTORAGE * ); 
void                      __stdcall  CLEANLOCALSTORAGE_UserFree(      unsigned long *,  CLEANLOCALSTORAGE * ); 

unsigned long             __stdcall  VARIANT_UserSize(      unsigned long *, unsigned long            ,  VARIANT * ); 
unsigned char * __stdcall  VARIANT_UserMarshal(   unsigned long *,  unsigned char *,  VARIANT * ); 
unsigned char * __stdcall  VARIANT_UserUnmarshal( unsigned long *,  unsigned char *,  VARIANT * ); 
void                      __stdcall  VARIANT_UserFree(      unsigned long *,  VARIANT * ); 

unsigned long             __stdcall  BSTR_UserSize64(      unsigned long *, unsigned long            ,  BSTR * ); 
unsigned char * __stdcall  BSTR_UserMarshal64(   unsigned long *,  unsigned char *,  BSTR * ); 
unsigned char * __stdcall  BSTR_UserUnmarshal64( unsigned long *,  unsigned char *,  BSTR * ); 
void                      __stdcall  BSTR_UserFree64(      unsigned long *,  BSTR * ); 

unsigned long             __stdcall  CLEANLOCALSTORAGE_UserSize64(      unsigned long *, unsigned long            ,  CLEANLOCALSTORAGE * ); 
unsigned char * __stdcall  CLEANLOCALSTORAGE_UserMarshal64(   unsigned long *,  unsigned char *,  CLEANLOCALSTORAGE * ); 
unsigned char * __stdcall  CLEANLOCALSTORAGE_UserUnmarshal64( unsigned long *,  unsigned char *,  CLEANLOCALSTORAGE * ); 
void                      __stdcall  CLEANLOCALSTORAGE_UserFree64(      unsigned long *,  CLEANLOCALSTORAGE * ); 

unsigned long             __stdcall  VARIANT_UserSize64(      unsigned long *, unsigned long            ,  VARIANT * ); 
unsigned char * __stdcall  VARIANT_UserMarshal64(   unsigned long *,  unsigned char *,  VARIANT * ); 
unsigned char * __stdcall  VARIANT_UserUnmarshal64( unsigned long *,  unsigned char *,  VARIANT * ); 
void                      __stdcall  VARIANT_UserFree64(      unsigned long *,  VARIANT * ); 

 HRESULT __stdcall IDispatch_Invoke_Proxy( 
    IDispatch * This,
     DISPID dispIdMember,
     const IID & riid,
     LCID lcid,
     WORD wFlags,
     DISPPARAMS *pDispParams,
     VARIANT *pVarResult,
     EXCEPINFO *pExcepInfo,
     UINT *puArgErr);


 HRESULT __stdcall IDispatch_Invoke_Stub( 
     IDispatch * This,
     DISPID dispIdMember,
      const IID & riid,
     LCID lcid,
     DWORD dwFlags,
      DISPPARAMS *pDispParams,
      VARIANT *pVarResult,
      EXCEPINFO *pExcepInfo,
      UINT *pArgErr,
     UINT cVarRef,
      UINT *rgVarRefIdx,
      VARIANTARG *rgVarRef);

 HRESULT __stdcall IEnumVARIANT_Next_Proxy( 
    IEnumVARIANT * This,
     ULONG celt,
     VARIANT *rgVar,
     ULONG *pCeltFetched);


 HRESULT __stdcall IEnumVARIANT_Next_Stub( 
     IEnumVARIANT * This,
     ULONG celt,
      VARIANT *rgVar,
      ULONG *pCeltFetched);

 HRESULT __stdcall ITypeComp_Bind_Proxy( 
    ITypeComp * This,
     
      LPOLESTR szName,
     ULONG lHashVal,
     WORD wFlags,
     ITypeInfo **ppTInfo,
     DESCKIND *pDescKind,
     BINDPTR *pBindPtr);


 HRESULT __stdcall ITypeComp_Bind_Stub( 
     ITypeComp * This,
      LPOLESTR szName,
     ULONG lHashVal,
     WORD wFlags,
      ITypeInfo **ppTInfo,
      DESCKIND *pDescKind,
      LPFUNCDESC *ppFuncDesc,
      LPVARDESC *ppVarDesc,
      ITypeComp **ppTypeComp,
      CLEANLOCALSTORAGE *pDummy);

 HRESULT __stdcall ITypeComp_BindType_Proxy( 
    ITypeComp * This,
     
      LPOLESTR szName,
     ULONG lHashVal,
     ITypeInfo **ppTInfo,
     ITypeComp **ppTComp);


 HRESULT __stdcall ITypeComp_BindType_Stub( 
     ITypeComp * This,
      LPOLESTR szName,
     ULONG lHashVal,
      ITypeInfo **ppTInfo);

 HRESULT __stdcall ITypeInfo_GetTypeAttr_Proxy( 
    ITypeInfo * This,
     TYPEATTR **ppTypeAttr);


 HRESULT __stdcall ITypeInfo_GetTypeAttr_Stub( 
     ITypeInfo * This,
      LPTYPEATTR *ppTypeAttr,
      CLEANLOCALSTORAGE *pDummy);

 HRESULT __stdcall ITypeInfo_GetFuncDesc_Proxy( 
    ITypeInfo * This,
     UINT index,
     FUNCDESC **ppFuncDesc);


 HRESULT __stdcall ITypeInfo_GetFuncDesc_Stub( 
     ITypeInfo * This,
     UINT index,
      LPFUNCDESC *ppFuncDesc,
      CLEANLOCALSTORAGE *pDummy);

 HRESULT __stdcall ITypeInfo_GetVarDesc_Proxy( 
    ITypeInfo * This,
     UINT index,
     VARDESC **ppVarDesc);


 HRESULT __stdcall ITypeInfo_GetVarDesc_Stub( 
     ITypeInfo * This,
     UINT index,
      LPVARDESC *ppVarDesc,
      CLEANLOCALSTORAGE *pDummy);

 HRESULT __stdcall ITypeInfo_GetNames_Proxy( 
    ITypeInfo * This,
     MEMBERID memid,
     BSTR *rgBstrNames,
     UINT cMaxNames,
     UINT *pcNames);


 HRESULT __stdcall ITypeInfo_GetNames_Stub( 
     ITypeInfo * This,
     MEMBERID memid,
      BSTR *rgBstrNames,
     UINT cMaxNames,
      UINT *pcNames);

 HRESULT __stdcall ITypeInfo_GetIDsOfNames_Proxy( 
    ITypeInfo * This,
     
      LPOLESTR *rgszNames,
     UINT cNames,
     MEMBERID *pMemId);


 HRESULT __stdcall ITypeInfo_GetIDsOfNames_Stub( 
     ITypeInfo * This);

 HRESULT __stdcall ITypeInfo_Invoke_Proxy( 
    ITypeInfo * This,
     PVOID pvInstance,
     MEMBERID memid,
     WORD wFlags,
     DISPPARAMS *pDispParams,
     VARIANT *pVarResult,
     EXCEPINFO *pExcepInfo,
     UINT *puArgErr);


 HRESULT __stdcall ITypeInfo_Invoke_Stub( 
     ITypeInfo * This);

 HRESULT __stdcall ITypeInfo_GetDocumentation_Proxy( 
    ITypeInfo * This,
     MEMBERID memid,
     BSTR *pBstrName,
     BSTR *pBstrDocString,
     DWORD *pdwHelpContext,
     BSTR *pBstrHelpFile);


 HRESULT __stdcall ITypeInfo_GetDocumentation_Stub( 
     ITypeInfo * This,
     MEMBERID memid,
     DWORD refPtrFlags,
      BSTR *pBstrName,
      BSTR *pBstrDocString,
      DWORD *pdwHelpContext,
      BSTR *pBstrHelpFile);

 HRESULT __stdcall ITypeInfo_GetDllEntry_Proxy( 
    ITypeInfo * This,
     MEMBERID memid,
     INVOKEKIND invKind,
     BSTR *pBstrDllName,
     BSTR *pBstrName,
     WORD *pwOrdinal);


 HRESULT __stdcall ITypeInfo_GetDllEntry_Stub( 
     ITypeInfo * This,
     MEMBERID memid,
     INVOKEKIND invKind,
     DWORD refPtrFlags,
      BSTR *pBstrDllName,
      BSTR *pBstrName,
      WORD *pwOrdinal);

 HRESULT __stdcall ITypeInfo_AddressOfMember_Proxy( 
    ITypeInfo * This,
     MEMBERID memid,
     INVOKEKIND invKind,
     PVOID *ppv);


 HRESULT __stdcall ITypeInfo_AddressOfMember_Stub( 
     ITypeInfo * This);

 HRESULT __stdcall ITypeInfo_CreateInstance_Proxy( 
    ITypeInfo * This,
     IUnknown *pUnkOuter,
     const IID & riid,
     PVOID *ppvObj);


 HRESULT __stdcall ITypeInfo_CreateInstance_Stub( 
     ITypeInfo * This,
      const IID & riid,
      IUnknown **ppvObj);

 HRESULT __stdcall ITypeInfo_GetContainingTypeLib_Proxy( 
    ITypeInfo * This,
     ITypeLib **ppTLib,
     UINT *pIndex);


 HRESULT __stdcall ITypeInfo_GetContainingTypeLib_Stub( 
     ITypeInfo * This,
      ITypeLib **ppTLib,
      UINT *pIndex);

 void __stdcall ITypeInfo_ReleaseTypeAttr_Proxy( 
    ITypeInfo * This,
     TYPEATTR *pTypeAttr);


 HRESULT __stdcall ITypeInfo_ReleaseTypeAttr_Stub( 
     ITypeInfo * This);

 void __stdcall ITypeInfo_ReleaseFuncDesc_Proxy( 
    ITypeInfo * This,
     FUNCDESC *pFuncDesc);


 HRESULT __stdcall ITypeInfo_ReleaseFuncDesc_Stub( 
     ITypeInfo * This);

 void __stdcall ITypeInfo_ReleaseVarDesc_Proxy( 
    ITypeInfo * This,
     VARDESC *pVarDesc);


 HRESULT __stdcall ITypeInfo_ReleaseVarDesc_Stub( 
     ITypeInfo * This);

 HRESULT __stdcall ITypeInfo2_GetDocumentation2_Proxy( 
    ITypeInfo2 * This,
     MEMBERID memid,
     LCID lcid,
     BSTR *pbstrHelpString,
     DWORD *pdwHelpStringContext,
     BSTR *pbstrHelpStringDll);


 HRESULT __stdcall ITypeInfo2_GetDocumentation2_Stub( 
     ITypeInfo2 * This,
     MEMBERID memid,
     LCID lcid,
     DWORD refPtrFlags,
      BSTR *pbstrHelpString,
      DWORD *pdwHelpStringContext,
      BSTR *pbstrHelpStringDll);

 UINT __stdcall ITypeLib_GetTypeInfoCount_Proxy( 
    ITypeLib * This);


 HRESULT __stdcall ITypeLib_GetTypeInfoCount_Stub( 
     ITypeLib * This,
      UINT *pcTInfo);

 HRESULT __stdcall ITypeLib_GetLibAttr_Proxy( 
    ITypeLib * This,
     TLIBATTR **ppTLibAttr);


 HRESULT __stdcall ITypeLib_GetLibAttr_Stub( 
     ITypeLib * This,
      LPTLIBATTR *ppTLibAttr,
      CLEANLOCALSTORAGE *pDummy);

 HRESULT __stdcall ITypeLib_GetDocumentation_Proxy( 
    ITypeLib * This,
     INT index,
     BSTR *pBstrName,
     BSTR *pBstrDocString,
     DWORD *pdwHelpContext,
     BSTR *pBstrHelpFile);


 HRESULT __stdcall ITypeLib_GetDocumentation_Stub( 
     ITypeLib * This,
     INT index,
     DWORD refPtrFlags,
      BSTR *pBstrName,
      BSTR *pBstrDocString,
      DWORD *pdwHelpContext,
      BSTR *pBstrHelpFile);

 HRESULT __stdcall ITypeLib_IsName_Proxy( 
    ITypeLib * This,
     
      LPOLESTR szNameBuf,
     ULONG lHashVal,
     BOOL *pfName);


 HRESULT __stdcall ITypeLib_IsName_Stub( 
     ITypeLib * This,
      LPOLESTR szNameBuf,
     ULONG lHashVal,
      BOOL *pfName,
      BSTR *pBstrLibName);

 HRESULT __stdcall ITypeLib_FindName_Proxy( 
    ITypeLib * This,
     
      LPOLESTR szNameBuf,
     ULONG lHashVal,
     ITypeInfo **ppTInfo,
     MEMBERID *rgMemId,
     USHORT *pcFound);


 HRESULT __stdcall ITypeLib_FindName_Stub( 
     ITypeLib * This,
      LPOLESTR szNameBuf,
     ULONG lHashVal,
      ITypeInfo **ppTInfo,
      MEMBERID *rgMemId,
      USHORT *pcFound,
      BSTR *pBstrLibName);

 void __stdcall ITypeLib_ReleaseTLibAttr_Proxy( 
    ITypeLib * This,
     TLIBATTR *pTLibAttr);


 HRESULT __stdcall ITypeLib_ReleaseTLibAttr_Stub( 
     ITypeLib * This);

 HRESULT __stdcall ITypeLib2_GetLibStatistics_Proxy( 
    ITypeLib2 * This,
     ULONG *pcUniqueNames,
     ULONG *pcchUniqueNames);


 HRESULT __stdcall ITypeLib2_GetLibStatistics_Stub( 
     ITypeLib2 * This,
      ULONG *pcUniqueNames,
      ULONG *pcchUniqueNames);

 HRESULT __stdcall ITypeLib2_GetDocumentation2_Proxy( 
    ITypeLib2 * This,
     INT index,
     LCID lcid,
     BSTR *pbstrHelpString,
     DWORD *pdwHelpStringContext,
     BSTR *pbstrHelpStringDll);


 HRESULT __stdcall ITypeLib2_GetDocumentation2_Stub( 
     ITypeLib2 * This,
     INT index,
     LCID lcid,
     DWORD refPtrFlags,
      BSTR *pbstrHelpString,
      DWORD *pdwHelpStringContext,
      BSTR *pbstrHelpStringDll);

 HRESULT __stdcall IPropertyBag_Read_Proxy( 
    IPropertyBag * This,
     LPCOLESTR pszPropName,
     VARIANT *pVar,
     IErrorLog *pErrorLog);


 HRESULT __stdcall IPropertyBag_Read_Stub( 
     IPropertyBag * This,
      LPCOLESTR pszPropName,
      VARIANT *pVar,
      IErrorLog *pErrorLog,
     DWORD varType,
      IUnknown *pUnkObj);






}
#line 5605 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"

#line 5607 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\oaidl.h"




#line 285 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"


extern "C"{
#line 289 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"



 







typedef struct _xml_error
    {
    unsigned int _nLine;
    BSTR _pchBuf;
    unsigned int _cchBuf;
    unsigned int _ich;
    BSTR _pszFound;
    BSTR _pszExpected;
    DWORD _reserved1;
    DWORD _reserved2;
    } 	XML_ERROR;



extern RPC_IF_HANDLE __MIDL_itf_msxml_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_msxml_0000_0000_v0_0_s_ifspec;






 

























typedef  
enum tagDOMNodeType
    {	NODE_INVALID	= 0,
	NODE_ELEMENT	= ( NODE_INVALID + 1 ) ,
	NODE_ATTRIBUTE	= ( NODE_ELEMENT + 1 ) ,
	NODE_TEXT	= ( NODE_ATTRIBUTE + 1 ) ,
	NODE_CDATA_SECTION	= ( NODE_TEXT + 1 ) ,
	NODE_ENTITY_REFERENCE	= ( NODE_CDATA_SECTION + 1 ) ,
	NODE_ENTITY	= ( NODE_ENTITY_REFERENCE + 1 ) ,
	NODE_PROCESSING_INSTRUCTION	= ( NODE_ENTITY + 1 ) ,
	NODE_COMMENT	= ( NODE_PROCESSING_INSTRUCTION + 1 ) ,
	NODE_DOCUMENT	= ( NODE_COMMENT + 1 ) ,
	NODE_DOCUMENT_TYPE	= ( NODE_DOCUMENT + 1 ) ,
	NODE_DOCUMENT_FRAGMENT	= ( NODE_DOCUMENT_TYPE + 1 ) ,
	NODE_NOTATION	= ( NODE_DOCUMENT_FRAGMENT + 1 ) 
    } 	DOMNodeType;
















typedef  
enum tagXMLEMEM_TYPE
    {	XMLELEMTYPE_ELEMENT	= 0,
	XMLELEMTYPE_TEXT	= ( XMLELEMTYPE_ELEMENT + 1 ) ,
	XMLELEMTYPE_COMMENT	= ( XMLELEMTYPE_TEXT + 1 ) ,
	XMLELEMTYPE_DOCUMENT	= ( XMLELEMTYPE_COMMENT + 1 ) ,
	XMLELEMTYPE_DTD	= ( XMLELEMTYPE_DOCUMENT + 1 ) ,
	XMLELEMTYPE_PI	= ( XMLELEMTYPE_DTD + 1 ) ,
	XMLELEMTYPE_OTHER	= ( XMLELEMTYPE_PI + 1 ) 
    } 	XMLELEM_TYPE;


extern "C" const IID LIBID_MSXML;





 


extern "C" const IID IID_IXMLDOMImplementation;


    
    struct __declspec(uuid("2933BF8F-7B36-11d2-B20E-00C04F983E60")) __declspec(novtable)
    IXMLDOMImplementation : public IDispatch
    {
    public:
        virtual  HRESULT __stdcall hasFeature( 
             BSTR feature,
             BSTR version,
             VARIANT_BOOL *hasFeature) = 0;
        
    };
    































































































#line 512 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




#line 517 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"






 


extern "C" const IID IID_IXMLDOMNode;


    
    struct __declspec(uuid("2933BF80-7B36-11d2-B20E-00C04F983E60")) __declspec(novtable)
    IXMLDOMNode : public IDispatch
    {
    public:
        virtual  HRESULT __stdcall get_nodeName( 
             BSTR *name) = 0;
        
        virtual  HRESULT __stdcall get_nodeValue( 
             VARIANT *value) = 0;
        
        virtual  HRESULT __stdcall put_nodeValue( 
             VARIANT value) = 0;
        
        virtual  HRESULT __stdcall get_nodeType( 
             DOMNodeType *type) = 0;
        
        virtual  HRESULT __stdcall get_parentNode( 
             IXMLDOMNode **parent) = 0;
        
        virtual  HRESULT __stdcall get_childNodes( 
             IXMLDOMNodeList **childList) = 0;
        
        virtual  HRESULT __stdcall get_firstChild( 
             IXMLDOMNode **firstChild) = 0;
        
        virtual  HRESULT __stdcall get_lastChild( 
             IXMLDOMNode **lastChild) = 0;
        
        virtual  HRESULT __stdcall get_previousSibling( 
             IXMLDOMNode **previousSibling) = 0;
        
        virtual  HRESULT __stdcall get_nextSibling( 
             IXMLDOMNode **nextSibling) = 0;
        
        virtual  HRESULT __stdcall get_attributes( 
             IXMLDOMNamedNodeMap **attributeMap) = 0;
        
        virtual  HRESULT __stdcall insertBefore( 
             IXMLDOMNode *newChild,
             VARIANT refChild,
             IXMLDOMNode **outNewChild) = 0;
        
        virtual  HRESULT __stdcall replaceChild( 
             IXMLDOMNode *newChild,
             IXMLDOMNode *oldChild,
             IXMLDOMNode **outOldChild) = 0;
        
        virtual  HRESULT __stdcall removeChild( 
             IXMLDOMNode *childNode,
             IXMLDOMNode **oldChild) = 0;
        
        virtual  HRESULT __stdcall appendChild( 
             IXMLDOMNode *newChild,
             IXMLDOMNode **outNewChild) = 0;
        
        virtual  HRESULT __stdcall hasChildNodes( 
             VARIANT_BOOL *hasChild) = 0;
        
        virtual  HRESULT __stdcall get_ownerDocument( 
             IXMLDOMDocument **XMLDOMDocument) = 0;
        
        virtual  HRESULT __stdcall cloneNode( 
             VARIANT_BOOL deep,
             IXMLDOMNode **cloneRoot) = 0;
        
        virtual  HRESULT __stdcall get_nodeTypeString( 
             BSTR *nodeType) = 0;
        
        virtual  HRESULT __stdcall get_text( 
             BSTR *text) = 0;
        
        virtual  HRESULT __stdcall put_text( 
             BSTR text) = 0;
        
        virtual  HRESULT __stdcall get_specified( 
             VARIANT_BOOL *isSpecified) = 0;
        
        virtual  HRESULT __stdcall get_definition( 
             IXMLDOMNode **definitionNode) = 0;
        
        virtual  HRESULT __stdcall get_nodeTypedValue( 
             VARIANT *typedValue) = 0;
        
        virtual  HRESULT __stdcall put_nodeTypedValue( 
             VARIANT typedValue) = 0;
        
        virtual  HRESULT __stdcall get_dataType( 
             VARIANT *dataTypeName) = 0;
        
        virtual  HRESULT __stdcall put_dataType( 
             BSTR dataTypeName) = 0;
        
        virtual  HRESULT __stdcall get_xml( 
             BSTR *xmlString) = 0;
        
        virtual  HRESULT __stdcall transformNode( 
             IXMLDOMNode *stylesheet,
             BSTR *xmlString) = 0;
        
        virtual  HRESULT __stdcall selectNodes( 
             BSTR queryString,
             IXMLDOMNodeList **resultList) = 0;
        
        virtual  HRESULT __stdcall selectSingleNode( 
             BSTR queryString,
             IXMLDOMNode **resultNode) = 0;
        
        virtual  HRESULT __stdcall get_parsed( 
             VARIANT_BOOL *isParsed) = 0;
        
        virtual  HRESULT __stdcall get_namespaceURI( 
             BSTR *namespaceURI) = 0;
        
        virtual  HRESULT __stdcall get_prefix( 
             BSTR *prefixString) = 0;
        
        virtual  HRESULT __stdcall get_baseName( 
             BSTR *nameString) = 0;
        
        virtual  HRESULT __stdcall transformNodeToObject( 
             IXMLDOMNode *stylesheet,
             VARIANT outputObject) = 0;
        
    };
    





























































































































































































































































































































































#line 1005 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




#line 1010 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"






 


extern "C" const IID IID_IXMLDOMDocumentFragment;


    
    struct __declspec(uuid("3efaa413-272f-11d2-836f-0000f87a7782")) __declspec(novtable)
    IXMLDOMDocumentFragment : public IXMLDOMNode
    {
    public:
    };
    






























































































































































































































































































































































#line 1380 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




#line 1385 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"






 


extern "C" const IID IID_IXMLDOMDocument;


    
    struct __declspec(uuid("2933BF81-7B36-11d2-B20E-00C04F983E60")) __declspec(novtable)
    IXMLDOMDocument : public IXMLDOMNode
    {
    public:
        virtual  HRESULT __stdcall get_doctype( 
             IXMLDOMDocumentType **documentType) = 0;
        
        virtual  HRESULT __stdcall get_implementation( 
             IXMLDOMImplementation **impl) = 0;
        
        virtual  HRESULT __stdcall get_documentElement( 
             IXMLDOMElement **DOMElement) = 0;
        
        virtual  HRESULT __stdcall putref_documentElement( 
             IXMLDOMElement *DOMElement) = 0;
        
        virtual  HRESULT __stdcall createElement( 
             BSTR tagName,
             IXMLDOMElement **element) = 0;
        
        virtual  HRESULT __stdcall createDocumentFragment( 
             IXMLDOMDocumentFragment **docFrag) = 0;
        
        virtual  HRESULT __stdcall createTextNode( 
             BSTR data,
             IXMLDOMText **text) = 0;
        
        virtual  HRESULT __stdcall createComment( 
             BSTR data,
             IXMLDOMComment **comment) = 0;
        
        virtual  HRESULT __stdcall createCDATASection( 
             BSTR data,
             IXMLDOMCDATASection **cdata) = 0;
        
        virtual  HRESULT __stdcall createProcessingInstruction( 
             BSTR target,
             BSTR data,
             IXMLDOMProcessingInstruction **pi) = 0;
        
        virtual  HRESULT __stdcall createAttribute( 
             BSTR name,
             IXMLDOMAttribute **attribute) = 0;
        
        virtual  HRESULT __stdcall createEntityReference( 
             BSTR name,
             IXMLDOMEntityReference **entityRef) = 0;
        
        virtual  HRESULT __stdcall getElementsByTagName( 
             BSTR tagName,
             IXMLDOMNodeList **resultList) = 0;
        
        virtual  HRESULT __stdcall createNode( 
             VARIANT Type,
             BSTR name,
             BSTR namespaceURI,
             IXMLDOMNode **node) = 0;
        
        virtual  HRESULT __stdcall nodeFromID( 
             BSTR idString,
             IXMLDOMNode **node) = 0;
        
        virtual  HRESULT __stdcall load( 
             VARIANT xmlSource,
             VARIANT_BOOL *isSuccessful) = 0;
        
        virtual  HRESULT __stdcall get_readyState( 
             long *value) = 0;
        
        virtual  HRESULT __stdcall get_parseError( 
             IXMLDOMParseError **errorObj) = 0;
        
        virtual  HRESULT __stdcall get_url( 
             BSTR *urlString) = 0;
        
        virtual  HRESULT __stdcall get_async( 
             VARIANT_BOOL *isAsync) = 0;
        
        virtual  HRESULT __stdcall put_async( 
             VARIANT_BOOL isAsync) = 0;
        
        virtual  HRESULT __stdcall abort( void) = 0;
        
        virtual  HRESULT __stdcall loadXML( 
             BSTR bstrXML,
             VARIANT_BOOL *isSuccessful) = 0;
        
        virtual  HRESULT __stdcall save( 
             VARIANT destination) = 0;
        
        virtual  HRESULT __stdcall get_validateOnParse( 
             VARIANT_BOOL *isValidating) = 0;
        
        virtual  HRESULT __stdcall put_validateOnParse( 
             VARIANT_BOOL isValidating) = 0;
        
        virtual  HRESULT __stdcall get_resolveExternals( 
             VARIANT_BOOL *isResolving) = 0;
        
        virtual  HRESULT __stdcall put_resolveExternals( 
             VARIANT_BOOL isResolving) = 0;
        
        virtual  HRESULT __stdcall get_preserveWhiteSpace( 
             VARIANT_BOOL *isPreserving) = 0;
        
        virtual  HRESULT __stdcall put_preserveWhiteSpace( 
             VARIANT_BOOL isPreserving) = 0;
        
        virtual  HRESULT __stdcall put_onreadystatechange( 
             VARIANT readystatechangeSink) = 0;
        
        virtual  HRESULT __stdcall put_ondataavailable( 
             VARIANT ondataavailableSink) = 0;
        
        virtual  HRESULT __stdcall put_ontransformnode( 
             VARIANT ontransformnodeSink) = 0;
        
    };
    



















































































































































































































































































































































































































































































































































































































#line 2113 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




#line 2118 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"






 


extern "C" const IID IID_IXMLDOMNodeList;


    
    struct __declspec(uuid("2933BF82-7B36-11d2-B20E-00C04F983E60")) __declspec(novtable)
    IXMLDOMNodeList : public IDispatch
    {
    public:
        virtual  HRESULT __stdcall get_item( 
             long index,
             IXMLDOMNode **listItem) = 0;
        
        virtual  HRESULT __stdcall get_length( 
             long *listLength) = 0;
        
        virtual  HRESULT __stdcall nextNode( 
             IXMLDOMNode **nextItem) = 0;
        
        virtual  HRESULT __stdcall reset( void) = 0;
        
        virtual  HRESULT __stdcall get__newEnum( 
             IUnknown **ppUnk) = 0;
        
    };
    

























































































































#line 2274 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




#line 2279 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"






 


extern "C" const IID IID_IXMLDOMNamedNodeMap;


    
    struct __declspec(uuid("2933BF83-7B36-11d2-B20E-00C04F983E60")) __declspec(novtable)
    IXMLDOMNamedNodeMap : public IDispatch
    {
    public:
        virtual  HRESULT __stdcall getNamedItem( 
             BSTR name,
             IXMLDOMNode **namedItem) = 0;
        
        virtual  HRESULT __stdcall setNamedItem( 
             IXMLDOMNode *newItem,
             IXMLDOMNode **nameItem) = 0;
        
        virtual  HRESULT __stdcall removeNamedItem( 
             BSTR name,
             IXMLDOMNode **namedItem) = 0;
        
        virtual  HRESULT __stdcall get_item( 
             long index,
             IXMLDOMNode **listItem) = 0;
        
        virtual  HRESULT __stdcall get_length( 
             long *listLength) = 0;
        
        virtual  HRESULT __stdcall getQualifiedItem( 
             BSTR baseName,
             BSTR namespaceURI,
             IXMLDOMNode **qualifiedItem) = 0;
        
        virtual  HRESULT __stdcall removeQualifiedItem( 
             BSTR baseName,
             BSTR namespaceURI,
             IXMLDOMNode **qualifiedItem) = 0;
        
        virtual  HRESULT __stdcall nextNode( 
             IXMLDOMNode **nextItem) = 0;
        
        virtual  HRESULT __stdcall reset( void) = 0;
        
        virtual  HRESULT __stdcall get__newEnum( 
             IUnknown **ppUnk) = 0;
        
    };
    



































































































































































#line 2499 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




#line 2504 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"






 


extern "C" const IID IID_IXMLDOMCharacterData;


    
    struct __declspec(uuid("2933BF84-7B36-11d2-B20E-00C04F983E60")) __declspec(novtable)
    IXMLDOMCharacterData : public IXMLDOMNode
    {
    public:
        virtual  HRESULT __stdcall get_data( 
             BSTR *data) = 0;
        
        virtual  HRESULT __stdcall put_data( 
             BSTR data) = 0;
        
        virtual  HRESULT __stdcall get_length( 
             long *dataLength) = 0;
        
        virtual  HRESULT __stdcall substringData( 
             long offset,
             long count,
             BSTR *data) = 0;
        
        virtual  HRESULT __stdcall appendData( 
             BSTR data) = 0;
        
        virtual  HRESULT __stdcall insertData( 
             long offset,
             BSTR data) = 0;
        
        virtual  HRESULT __stdcall deleteData( 
             long offset,
             long count) = 0;
        
        virtual  HRESULT __stdcall replaceData( 
             long offset,
             long count,
             BSTR data) = 0;
        
    };
    




























































































































































































































































































































































































































#line 2966 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




#line 2971 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"






 


extern "C" const IID IID_IXMLDOMAttribute;


    
    struct __declspec(uuid("2933BF85-7B36-11d2-B20E-00C04F983E60")) __declspec(novtable)
    IXMLDOMAttribute : public IXMLDOMNode
    {
    public:
        virtual  HRESULT __stdcall get_name( 
             BSTR *attributeName) = 0;
        
        virtual  HRESULT __stdcall get_value( 
             VARIANT *attributeValue) = 0;
        
        virtual  HRESULT __stdcall put_value( 
             VARIANT attributeValue) = 0;
        
    };
    



















































































































































































































































































































































































#line 3371 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




#line 3376 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"






 


extern "C" const IID IID_IXMLDOMElement;


    
    struct __declspec(uuid("2933BF86-7B36-11d2-B20E-00C04F983E60")) __declspec(novtable)
    IXMLDOMElement : public IXMLDOMNode
    {
    public:
        virtual  HRESULT __stdcall get_tagName( 
             BSTR *tagName) = 0;
        
        virtual  HRESULT __stdcall getAttribute( 
             BSTR name,
             VARIANT *value) = 0;
        
        virtual  HRESULT __stdcall setAttribute( 
             BSTR name,
             VARIANT value) = 0;
        
        virtual  HRESULT __stdcall removeAttribute( 
             BSTR name) = 0;
        
        virtual  HRESULT __stdcall getAttributeNode( 
             BSTR name,
             IXMLDOMAttribute **attributeNode) = 0;
        
        virtual  HRESULT __stdcall setAttributeNode( 
             IXMLDOMAttribute *DOMAttribute,
             IXMLDOMAttribute **attributeNode) = 0;
        
        virtual  HRESULT __stdcall removeAttributeNode( 
             IXMLDOMAttribute *DOMAttribute,
             IXMLDOMAttribute **attributeNode) = 0;
        
        virtual  HRESULT __stdcall getElementsByTagName( 
             BSTR tagName,
             IXMLDOMNodeList **resultList) = 0;
        
        virtual  HRESULT __stdcall normalize( void) = 0;
        
    };
    


































































































































































































































































































































































































































#line 3846 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




#line 3851 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"






 


extern "C" const IID IID_IXMLDOMText;


    
    struct __declspec(uuid("2933BF87-7B36-11d2-B20E-00C04F983E60")) __declspec(novtable)
    IXMLDOMText : public IXMLDOMCharacterData
    {
    public:
        virtual  HRESULT __stdcall splitText( 
             long offset,
             IXMLDOMText **rightHandTextNode) = 0;
        
    };
    





































































































































































































































































































































































































































#line 4296 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




#line 4301 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"






 


extern "C" const IID IID_IXMLDOMComment;


    
    struct __declspec(uuid("2933BF88-7B36-11d2-B20E-00C04F983E60")) __declspec(novtable)
    IXMLDOMComment : public IXMLDOMCharacterData
    {
    public:
    };
    





























































































































































































































































































































































































































#line 4734 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




#line 4739 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"






 


extern "C" const IID IID_IXMLDOMProcessingInstruction;


    
    struct __declspec(uuid("2933BF89-7B36-11d2-B20E-00C04F983E60")) __declspec(novtable)
    IXMLDOMProcessingInstruction : public IXMLDOMNode
    {
    public:
        virtual  HRESULT __stdcall get_target( 
             BSTR *name) = 0;
        
        virtual  HRESULT __stdcall get_data( 
             BSTR *value) = 0;
        
        virtual  HRESULT __stdcall put_data( 
             BSTR value) = 0;
        
    };
    



















































































































































































































































































































































































#line 5139 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




#line 5144 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"






 


extern "C" const IID IID_IXMLDOMCDATASection;


    
    struct __declspec(uuid("2933BF8A-7B36-11d2-B20E-00C04F983E60")) __declspec(novtable)
    IXMLDOMCDATASection : public IXMLDOMText
    {
    public:
    };
    






































































































































































































































































































































































































































#line 5586 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




#line 5591 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"






 


extern "C" const IID IID_IXMLDOMDocumentType;


    
    struct __declspec(uuid("2933BF8B-7B36-11d2-B20E-00C04F983E60")) __declspec(novtable)
    IXMLDOMDocumentType : public IXMLDOMNode
    {
    public:
        virtual  HRESULT __stdcall get_name( 
             BSTR *rootName) = 0;
        
        virtual  HRESULT __stdcall get_entities( 
             IXMLDOMNamedNodeMap **entityMap) = 0;
        
        virtual  HRESULT __stdcall get_notations( 
             IXMLDOMNamedNodeMap **notationMap) = 0;
        
    };
    



















































































































































































































































































































































































#line 5991 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




#line 5996 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"






 


extern "C" const IID IID_IXMLDOMNotation;


    
    struct __declspec(uuid("2933BF8C-7B36-11d2-B20E-00C04F983E60")) __declspec(novtable)
    IXMLDOMNotation : public IXMLDOMNode
    {
    public:
        virtual  HRESULT __stdcall get_publicId( 
             VARIANT *publicID) = 0;
        
        virtual  HRESULT __stdcall get_systemId( 
             VARIANT *systemID) = 0;
        
    };
    












































































































































































































































































































































































#line 6386 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




#line 6391 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"






 


extern "C" const IID IID_IXMLDOMEntity;


    
    struct __declspec(uuid("2933BF8D-7B36-11d2-B20E-00C04F983E60")) __declspec(novtable)
    IXMLDOMEntity : public IXMLDOMNode
    {
    public:
        virtual  HRESULT __stdcall get_publicId( 
             VARIANT *publicID) = 0;
        
        virtual  HRESULT __stdcall get_systemId( 
             VARIANT *systemID) = 0;
        
        virtual  HRESULT __stdcall get_notationName( 
             BSTR *name) = 0;
        
    };
    



















































































































































































































































































































































































#line 6791 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




#line 6796 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"






 


extern "C" const IID IID_IXMLDOMEntityReference;


    
    struct __declspec(uuid("2933BF8E-7B36-11d2-B20E-00C04F983E60")) __declspec(novtable)
    IXMLDOMEntityReference : public IXMLDOMNode
    {
    public:
    };
    






























































































































































































































































































































































#line 7166 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




#line 7171 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"






 


extern "C" const IID IID_IXMLDOMParseError;


    
    struct __declspec(uuid("3efaa426-272f-11d2-836f-0000f87a7782")) __declspec(novtable)
    IXMLDOMParseError : public IDispatch
    {
    public:
        virtual  HRESULT __stdcall get_errorCode( 
             long *errorCode) = 0;
        
        virtual  HRESULT __stdcall get_url( 
             BSTR *urlString) = 0;
        
        virtual  HRESULT __stdcall get_reason( 
             BSTR *reasonString) = 0;
        
        virtual  HRESULT __stdcall get_srcText( 
             BSTR *sourceString) = 0;
        
        virtual  HRESULT __stdcall get_line( 
             long *lineNumber) = 0;
        
        virtual  HRESULT __stdcall get_linepos( 
             long *linePosition) = 0;
        
        virtual  HRESULT __stdcall get_filepos( 
             long *filePosition) = 0;
        
    };
    







































































































































#line 7347 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




#line 7352 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"






 


extern "C" const IID IID_IXTLRuntime;


    
    struct __declspec(uuid("3efaa425-272f-11d2-836f-0000f87a7782")) __declspec(novtable)
    IXTLRuntime : public IXMLDOMNode
    {
    public:
        virtual  HRESULT __stdcall uniqueID( 
             IXMLDOMNode *pNode,
             long *pID) = 0;
        
        virtual  HRESULT __stdcall depth( 
             IXMLDOMNode *pNode,
             long *pDepth) = 0;
        
        virtual  HRESULT __stdcall childNumber( 
             IXMLDOMNode *pNode,
             long *pNumber) = 0;
        
        virtual  HRESULT __stdcall ancestorChildNumber( 
             BSTR bstrNodeName,
             IXMLDOMNode *pNode,
             long *pNumber) = 0;
        
        virtual  HRESULT __stdcall absoluteChildNumber( 
             IXMLDOMNode *pNode,
             long *pNumber) = 0;
        
        virtual  HRESULT __stdcall formatIndex( 
             long lIndex,
             BSTR bstrFormat,
             BSTR *pbstrFormattedString) = 0;
        
        virtual  HRESULT __stdcall formatNumber( 
             double dblNumber,
             BSTR bstrFormat,
             BSTR *pbstrFormattedString) = 0;
        
        virtual  HRESULT __stdcall formatDate( 
             VARIANT varDate,
             BSTR bstrFormat,
             VARIANT varDestLocale,
             BSTR *pbstrFormattedString) = 0;
        
        virtual  HRESULT __stdcall formatTime( 
             VARIANT varTime,
             BSTR bstrFormat,
             VARIANT varDestLocale,
             BSTR *pbstrFormattedString) = 0;
        
    };
    













































































































































































































































































































































































































































#line 7844 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




#line 7849 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"






 


extern "C" const IID DIID_XMLDOMDocumentEvents;



    struct __declspec(uuid("3efaa427-272f-11d2-836f-0000f87a7782")) __declspec(novtable)
    XMLDOMDocumentEvents : public IDispatch
    {
    };
    





















































































#line 7953 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"


#line 7956 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"


extern "C" const CLSID CLSID_DOMDocument;



class __declspec(uuid("2933BF90-7B36-11d2-B20E-00C04F983E60"))
DOMDocument;
#line 7965 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"

extern "C" const CLSID CLSID_DOMFreeThreadedDocument;



class __declspec(uuid("2933BF91-7B36-11d2-B20E-00C04F983E60"))
DOMFreeThreadedDocument;
#line 7973 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"





 


extern "C" const IID IID_IXMLHttpRequest;


    
    struct __declspec(uuid("ED8C108D-4349-11D2-91A4-00C04F7969E8")) __declspec(novtable)
    IXMLHttpRequest : public IDispatch
    {
    public:
        virtual  HRESULT __stdcall open( 
              BSTR bstrMethod,
              BSTR bstrUrl,
             VARIANT varAsync,
             VARIANT bstrUser,
             VARIANT bstrPassword) = 0;
        
        virtual  HRESULT __stdcall setRequestHeader( 
              BSTR bstrHeader,
              BSTR bstrValue) = 0;
        
        virtual  HRESULT __stdcall getResponseHeader( 
              BSTR bstrHeader,
              BSTR *pbstrValue) = 0;
        
        virtual  HRESULT __stdcall getAllResponseHeaders( 
              BSTR *pbstrHeaders) = 0;
        
        virtual  HRESULT __stdcall send( 
             VARIANT varBody) = 0;
        
        virtual  HRESULT __stdcall abort( void) = 0;
        
        virtual  HRESULT __stdcall get_status( 
              long *plStatus) = 0;
        
        virtual  HRESULT __stdcall get_statusText( 
              BSTR *pbstrStatus) = 0;
        
        virtual  HRESULT __stdcall get_responseXML( 
              IDispatch **ppBody) = 0;
        
        virtual  HRESULT __stdcall get_responseText( 
              BSTR *pbstrBody) = 0;
        
        virtual  HRESULT __stdcall get_responseBody( 
              VARIANT *pvarBody) = 0;
        
        virtual  HRESULT __stdcall get_responseStream( 
              VARIANT *pvarBody) = 0;
        
        virtual  HRESULT __stdcall get_readyState( 
              long *plState) = 0;
        
        virtual  HRESULT __stdcall put_onreadystatechange( 
              IDispatch *pReadyStateSink) = 0;
        
    };
    





























































































































































































#line 8228 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




#line 8233 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"


extern "C" const CLSID CLSID_XMLHTTPRequest;



class __declspec(uuid("ED8C108E-4349-11D2-91A4-00C04F7969E8"))
XMLHTTPRequest;
#line 8242 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"





 


extern "C" const IID IID_IXMLDSOControl;


    
    struct __declspec(uuid("310afa62-0575-11d2-9ca9-0060b0ec3d39")) __declspec(novtable)
    IXMLDSOControl : public IDispatch
    {
    public:
        virtual  HRESULT __stdcall get_XMLDocument( 
             IXMLDOMDocument **ppDoc) = 0;
        
        virtual  HRESULT __stdcall put_XMLDocument( 
             IXMLDOMDocument *ppDoc) = 0;
        
        virtual  HRESULT __stdcall get_JavaDSOCompatible( 
             BOOL *fJavaDSOCompatible) = 0;
        
        virtual  HRESULT __stdcall put_JavaDSOCompatible( 
             BOOL fJavaDSOCompatible) = 0;
        
        virtual  HRESULT __stdcall get_readyState( 
             long *state) = 0;
        
    };
    

























































































































#line 8397 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




#line 8402 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"


extern "C" const CLSID CLSID_XMLDSOControl;



class __declspec(uuid("550dda30-0541-11d2-9ca9-0060b0ec3d39"))
XMLDSOControl;
#line 8411 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"





 


extern "C" const IID IID_IXMLElementCollection;


    
    struct __declspec(uuid("65725580-9B5D-11d0-9BFE-00C04FC99C8E")) __declspec(novtable)
    IXMLElementCollection : public IDispatch
    {
    public:
        virtual  HRESULT __stdcall put_length( 
             long v) = 0;
        
        virtual  HRESULT __stdcall get_length( 
             long *p) = 0;
        
        virtual  HRESULT __stdcall get__newEnum( 
             IUnknown **ppUnk) = 0;
        
        virtual  HRESULT __stdcall item( 
             VARIANT var1,
             VARIANT var2,
             IDispatch **ppDisp) = 0;
        
    };
    




















































































































#line 8560 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




#line 8565 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"






 


extern "C" const IID IID_IXMLDocument;


    
    struct __declspec(uuid("F52E2B61-18A1-11d1-B105-00805F49916B")) __declspec(novtable)
    IXMLDocument : public IDispatch
    {
    public:
        virtual  HRESULT __stdcall get_root( 
             IXMLElement **p) = 0;
        
        virtual  HRESULT __stdcall get_fileSize( 
             BSTR *p) = 0;
        
        virtual  HRESULT __stdcall get_fileModifiedDate( 
             BSTR *p) = 0;
        
        virtual  HRESULT __stdcall get_fileUpdatedDate( 
             BSTR *p) = 0;
        
        virtual  HRESULT __stdcall get_URL( 
             BSTR *p) = 0;
        
        virtual  HRESULT __stdcall put_URL( 
             BSTR p) = 0;
        
        virtual  HRESULT __stdcall get_mimeType( 
             BSTR *p) = 0;
        
        virtual  HRESULT __stdcall get_readyState( 
             long *pl) = 0;
        
        virtual  HRESULT __stdcall get_charset( 
             BSTR *p) = 0;
        
        virtual  HRESULT __stdcall put_charset( 
             BSTR p) = 0;
        
        virtual  HRESULT __stdcall get_version( 
             BSTR *p) = 0;
        
        virtual  HRESULT __stdcall get_doctype( 
             BSTR *p) = 0;
        
        virtual  HRESULT __stdcall get_dtdURL( 
             BSTR *p) = 0;
        
        virtual  HRESULT __stdcall createElement( 
             VARIANT vType,
             VARIANT var1,
             IXMLElement **ppElem) = 0;
        
    };
    


























































































































































































#line 8815 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




#line 8820 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"






 


extern "C" const IID IID_IXMLDocument2;


    
    struct __declspec(uuid("2B8DE2FE-8D2D-11d1-B2FC-00C04FD915A9")) __declspec(novtable)
    IXMLDocument2 : public IDispatch
    {
    public:
        virtual  HRESULT __stdcall get_root( 
             IXMLElement2 **p) = 0;
        
        virtual  HRESULT __stdcall get_fileSize( 
             BSTR *p) = 0;
        
        virtual  HRESULT __stdcall get_fileModifiedDate( 
             BSTR *p) = 0;
        
        virtual  HRESULT __stdcall get_fileUpdatedDate( 
             BSTR *p) = 0;
        
        virtual  HRESULT __stdcall get_URL( 
             BSTR *p) = 0;
        
        virtual  HRESULT __stdcall put_URL( 
             BSTR p) = 0;
        
        virtual  HRESULT __stdcall get_mimeType( 
             BSTR *p) = 0;
        
        virtual  HRESULT __stdcall get_readyState( 
             long *pl) = 0;
        
        virtual  HRESULT __stdcall get_charset( 
             BSTR *p) = 0;
        
        virtual  HRESULT __stdcall put_charset( 
             BSTR p) = 0;
        
        virtual  HRESULT __stdcall get_version( 
             BSTR *p) = 0;
        
        virtual  HRESULT __stdcall get_doctype( 
             BSTR *p) = 0;
        
        virtual  HRESULT __stdcall get_dtdURL( 
             BSTR *p) = 0;
        
        virtual  HRESULT __stdcall createElement( 
             VARIANT vType,
             VARIANT var1,
             IXMLElement2 **ppElem) = 0;
        
        virtual  HRESULT __stdcall get_async( 
             VARIANT_BOOL *pf) = 0;
        
        virtual  HRESULT __stdcall put_async( 
             VARIANT_BOOL f) = 0;
        
    };
    








































































































































































































#line 9090 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




#line 9095 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"






 


extern "C" const IID IID_IXMLElement;


    
    struct __declspec(uuid("3F7F31AC-E15F-11d0-9C25-00C04FC99C8E")) __declspec(novtable)
    IXMLElement : public IDispatch
    {
    public:
        virtual  HRESULT __stdcall get_tagName( 
             BSTR *p) = 0;
        
        virtual  HRESULT __stdcall put_tagName( 
             BSTR p) = 0;
        
        virtual  HRESULT __stdcall get_parent( 
             IXMLElement **ppParent) = 0;
        
        virtual  HRESULT __stdcall setAttribute( 
             BSTR strPropertyName,
             VARIANT PropertyValue) = 0;
        
        virtual  HRESULT __stdcall getAttribute( 
             BSTR strPropertyName,
             VARIANT *PropertyValue) = 0;
        
        virtual  HRESULT __stdcall removeAttribute( 
             BSTR strPropertyName) = 0;
        
        virtual  HRESULT __stdcall get_children( 
             IXMLElementCollection **pp) = 0;
        
        virtual  HRESULT __stdcall get_type( 
             long *plType) = 0;
        
        virtual  HRESULT __stdcall get_text( 
             BSTR *p) = 0;
        
        virtual  HRESULT __stdcall put_text( 
             BSTR p) = 0;
        
        virtual  HRESULT __stdcall addChild( 
             IXMLElement *pChildElem,
            long lIndex,
            long lReserved) = 0;
        
        virtual  HRESULT __stdcall removeChild( 
             IXMLElement *pChildElem) = 0;
        
    };
    














































































































































































#line 9329 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




#line 9334 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"






 


extern "C" const IID IID_IXMLElement2;


    
    struct __declspec(uuid("2B8DE2FF-8D2D-11d1-B2FC-00C04FD915A9")) __declspec(novtable)
    IXMLElement2 : public IDispatch
    {
    public:
        virtual  HRESULT __stdcall get_tagName( 
             BSTR *p) = 0;
        
        virtual  HRESULT __stdcall put_tagName( 
             BSTR p) = 0;
        
        virtual  HRESULT __stdcall get_parent( 
             IXMLElement2 **ppParent) = 0;
        
        virtual  HRESULT __stdcall setAttribute( 
             BSTR strPropertyName,
             VARIANT PropertyValue) = 0;
        
        virtual  HRESULT __stdcall getAttribute( 
             BSTR strPropertyName,
             VARIANT *PropertyValue) = 0;
        
        virtual  HRESULT __stdcall removeAttribute( 
             BSTR strPropertyName) = 0;
        
        virtual  HRESULT __stdcall get_children( 
             IXMLElementCollection **pp) = 0;
        
        virtual  HRESULT __stdcall get_type( 
             long *plType) = 0;
        
        virtual  HRESULT __stdcall get_text( 
             BSTR *p) = 0;
        
        virtual  HRESULT __stdcall put_text( 
             BSTR p) = 0;
        
        virtual  HRESULT __stdcall addChild( 
             IXMLElement2 *pChildElem,
            long lIndex,
            long lReserved) = 0;
        
        virtual  HRESULT __stdcall removeChild( 
             IXMLElement2 *pChildElem) = 0;
        
        virtual  HRESULT __stdcall get_attributes( 
             IXMLElementCollection **pp) = 0;
        
    };
    





















































































































































































#line 9578 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




#line 9583 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"






 


extern "C" const IID IID_IXMLAttribute;


    
    struct __declspec(uuid("D4D4A0FC-3B73-11d1-B2B4-00C04FB92596")) __declspec(novtable)
    IXMLAttribute : public IDispatch
    {
    public:
        virtual  HRESULT __stdcall get_name( 
             BSTR *n) = 0;
        
        virtual  HRESULT __stdcall get_value( 
             BSTR *v) = 0;
        
    };
    




































































































#line 9709 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




#line 9714 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"






 


extern "C" const IID IID_IXMLError;


    
    struct __declspec(uuid("948C5AD3-C58D-11d0-9C0B-00C04FC99C8E")) __declspec(novtable)
    IXMLError : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetErrorInfo( 
            XML_ERROR *pErrorReturn) = 0;
        
    };
    



















































#line 9788 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




#line 9793 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"


extern "C" const CLSID CLSID_XMLDocument;



class __declspec(uuid("CFC399AF-D876-11d0-9C10-00C04FC99C8E"))
XMLDocument;
#line 9802 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"
#line 9803 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"






}
#line 9811 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"

#line 9813 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\msxml.h"




#line 356 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"


extern "C"{
#line 360 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 












#pragma comment(lib,"uuid.lib")



















extern "C" const IID CLSID_SBS_StdURLMoniker;  
extern "C" const IID CLSID_SBS_HttpProtocol;   
extern "C" const IID CLSID_SBS_FtpProtocol;    
extern "C" const IID CLSID_SBS_GopherProtocol; 
extern "C" const IID CLSID_SBS_HttpSProtocol;  
extern "C" const IID CLSID_SBS_FileProtocol;   
extern "C" const IID CLSID_SBS_MkProtocol;     
extern "C" const IID CLSID_SBS_UrlMkBindCtx;   
extern "C" const IID CLSID_SBS_SoftDistExt;  
extern "C" const IID CLSID_SBS_StdEncodingFilterFac; 
extern "C" const IID CLSID_SBS_DeCompMimeFilter;     
extern "C" const IID CLSID_SBS_CdlProtocol;          
extern "C" const IID CLSID_SBS_ClassInstallFilter;   
extern "C" const IID CLSID_SBS_InternetSecurityManager;  
extern "C" const IID CLSID_SBS_InternetZoneManager;  







extern "C" const IID IID_IAsyncMoniker;    
extern "C" const IID CLSID_StdURLMoniker;  
extern "C" const IID CLSID_HttpProtocol;   
extern "C" const IID CLSID_FtpProtocol;    
extern "C" const IID CLSID_GopherProtocol; 
extern "C" const IID CLSID_HttpSProtocol;  
extern "C" const IID CLSID_FileProtocol;   
extern "C" const IID CLSID_MkProtocol;     
extern "C" const IID CLSID_StdURLProtocol; 
extern "C" const IID CLSID_UrlMkBindCtx;   
extern "C" const IID CLSID_StdEncodingFilterFac; 
extern "C" const IID CLSID_DeCompMimeFilter;     
extern "C" const IID CLSID_CdlProtocol;          
extern "C" const IID CLSID_ClassInstallFilter;   
extern "C" const IID IID_IAsyncBindCtx;    
 






 
extern "C" HRESULT __stdcall CreateURLMoniker(LPMONIKER pMkCtx, LPCWSTR szURL, LPMONIKER  * ppmk);             
extern "C" HRESULT __stdcall CreateURLMonikerEx(LPMONIKER pMkCtx, LPCWSTR szURL, LPMONIKER  * ppmk, DWORD dwFlags);             
extern "C" HRESULT __stdcall GetClassURL(LPCWSTR szURL, CLSID *pClsID);                                           
extern "C" HRESULT __stdcall CreateAsyncBindCtx(DWORD reserved, IBindStatusCallback *pBSCb,                       
                                IEnumFORMATETC *pEFetc, IBindCtx **ppBC);                   

extern "C" HRESULT __stdcall CreateURLMonikerEx2(LPMONIKER pMkCtx, IUri* pUri, LPMONIKER  * ppmk, DWORD dwFlags);             
#line 449 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"
extern "C" HRESULT __stdcall CreateAsyncBindCtxEx(IBindCtx *pbc, DWORD dwOptions, IBindStatusCallback *pBSCb, IEnumFORMATETC *pEnum,   
                            IBindCtx **ppBC, DWORD reserved);                                                     
extern "C" HRESULT __stdcall MkParseDisplayNameEx(IBindCtx *pbc, LPCWSTR szDisplayName, ULONG *pchEaten,          
                                LPMONIKER *ppmk);                                           
extern "C" HRESULT __stdcall RegisterBindStatusCallback(LPBC pBC, IBindStatusCallback *pBSCb,                     
                                IBindStatusCallback**  ppBSCBPrev, DWORD dwReserved);       
extern "C" HRESULT __stdcall RevokeBindStatusCallback(LPBC pBC, IBindStatusCallback *pBSCb);                      
extern "C" HRESULT __stdcall GetClassFileOrMime(LPBC pBC, LPCWSTR szFilename, LPVOID pBuffer, DWORD cbSize, LPCWSTR szMime, DWORD dwReserved, CLSID *pclsid); 
extern "C" HRESULT __stdcall IsValidURL(LPBC pBC, LPCWSTR szURL, DWORD dwReserved);                               
extern "C" HRESULT __stdcall CoGetClassObjectFromURL( const IID & rCLASSID,
            LPCWSTR szCODE, DWORD dwFileVersionMS, 
            DWORD dwFileVersionLS, LPCWSTR szTYPE,
            LPBINDCTX pBindCtx, DWORD dwClsContext,
            LPVOID pvReserved, const IID & riid, LPVOID * ppv);
extern "C" HRESULT __stdcall IEInstallScope( LPDWORD pdwScope);
extern "C" HRESULT __stdcall FaultInIEFeature( HWND hWnd,
             uCLSSPEC *pClassSpec,
             QUERYCONTEXT *pQuery, DWORD dwFlags);                                           
extern "C" HRESULT __stdcall GetComponentIDFromCLSSPEC( uCLSSPEC *pClassspec,
             LPSTR * ppszComponentID);                                                      


                                                 
                                                 
                                                 


 

extern "C" HRESULT __stdcall IsAsyncMoniker(IMoniker* pmk);                                                       
extern "C" HRESULT __stdcall CreateURLBinding(LPCWSTR lpszUrl,  IBindCtx *pbc,  IBinding **ppBdg);
 
extern "C" HRESULT __stdcall RegisterMediaTypes(UINT ctypes, const LPCSTR* rgszTypes, CLIPFORMAT* rgcfTypes);            
extern "C" HRESULT __stdcall FindMediaType(LPCSTR rgszTypes,  CLIPFORMAT* rgcfTypes);                                       
extern "C" HRESULT __stdcall CreateFormatEnumerator( UINT cfmtetc, FORMATETC* rgfmtetc, IEnumFORMATETC** ppenumfmtetc); 
extern "C" HRESULT __stdcall RegisterFormatEnumerator(LPBC pBC, IEnumFORMATETC *pEFetc, DWORD reserved);          
extern "C" HRESULT __stdcall RevokeFormatEnumerator(LPBC pBC, IEnumFORMATETC *pEFetc);                            
extern "C" HRESULT __stdcall RegisterMediaTypeClass(LPBC pBC,UINT ctypes, const LPCSTR* rgszTypes, CLSID *rgclsID, DWORD reserved);    
extern "C" HRESULT __stdcall FindMediaTypeClass(LPBC pBC, LPCSTR szType, CLSID *pclsID, DWORD reserved);                          
extern "C" HRESULT __stdcall UrlMkSetSessionOption(DWORD dwOption,  LPVOID pBuffer, DWORD dwBufferLength,  DWORD dwReserved);       
extern "C" HRESULT __stdcall UrlMkGetSessionOption(DWORD dwOption,  LPVOID pBuffer, DWORD dwBufferLength,  DWORD *pdwBufferLengthOut,  DWORD dwReserved);       
extern "C" HRESULT __stdcall FindMimeFromData(                                                                                                                  
                    LPBC    pBC,                   
                    LPCWSTR pwzUrl,                
     LPVOID  pBuffer,               
                            DWORD   cbSize,                
                    LPCWSTR pwzMimeProposed,       
                            DWORD   dwMimeFlags,           
                 LPWSTR  *ppwzMimeOut,          
                  DWORD   dwReserved);           





#line 505 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"


extern "C" HRESULT __stdcall ObtainUserAgentString(                           
                                        DWORD dwOption, 
     LPSTR pszUAOut, 
                                 DWORD *cbSize); 
extern "C" HRESULT __stdcall CompareSecurityIds(BYTE* pbSecurityId1, DWORD dwLen1, BYTE* pbSecurityId2, DWORD dwLen2, DWORD dwReserved);    
extern "C" HRESULT __stdcall CompatFlagsFromClsid(CLSID *pclsid, LPDWORD pdwCompatFlags, LPDWORD pdwMiscStatusFlags);             
 






#line 521 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"


#line 524 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"
 


































 






#line 567 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"
                                                                             



                                                                             









































#line 614 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"







extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0000_v0_0_s_ifspec;





 

typedef    IPersistMoniker *LPPERSISTMONIKER;


extern "C" const IID IID_IPersistMoniker;


    
    struct __declspec(uuid("79eac9c9-baf9-11ce-8c82-00aa004ba90b")) __declspec(novtable)
    IPersistMoniker : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetClassID( 
              CLSID *pClassID) = 0;
        
        virtual HRESULT __stdcall IsDirty( void) = 0;
        
        virtual HRESULT __stdcall Load( 
             BOOL fFullyAvailable,
              IMoniker *pimkName,
              LPBC pibc,
             DWORD grfMode) = 0;
        
        virtual HRESULT __stdcall Save( 
              IMoniker *pimkName,
              LPBC pbc,
             BOOL fRemember) = 0;
        
        virtual HRESULT __stdcall SaveCompleted( 
              IMoniker *pimkName,
              LPBC pibc) = 0;
        
        virtual HRESULT __stdcall GetCurMoniker( 
              IMoniker **ppimkName) = 0;
        
    };
    



























































































#line 758 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




#line 763 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 

#line 769 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0001_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0001_v0_0_s_ifspec;





 

typedef    IMonikerProp *LPMONIKERPROP;

typedef  
enum __MIDL_IMonikerProp_0001
    {	MIMETYPEPROP	= 0,
	USE_SRC_URL	= 0x1,
	CLASSIDPROP	= 0x2,
	TRUSTEDDOWNLOADPROP	= 0x3,
	POPUPLEVELPROP	= 0x4
    } 	MONIKERPROPERTY;


extern "C" const IID IID_IMonikerProp;


    
    struct __declspec(uuid("a5ca5f7f-1847-4d87-9c5b-918509f7511d")) __declspec(novtable)
    IMonikerProp : public IUnknown
    {
    public:
        virtual HRESULT __stdcall PutProperty( 
             MONIKERPROPERTY mkp,
              LPCWSTR val) = 0;
        
    };
    




















































#line 861 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




#line 866 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 

#line 872 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0002_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0002_v0_0_s_ifspec;





 

typedef  IBindProtocol *LPBINDPROTOCOL;


extern "C" const IID IID_IBindProtocol;


    
    struct __declspec(uuid("79eac9cd-baf9-11ce-8c82-00aa004ba90b")) __declspec(novtable)
    IBindProtocol : public IUnknown
    {
    public:
        virtual HRESULT __stdcall CreateBinding( 
             LPCWSTR szUrl,
             IBindCtx *pbc,
             IBinding **ppb) = 0;
        
    };
    





















































#line 957 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




#line 962 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 

#line 968 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0003_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0003_v0_0_s_ifspec;





 

typedef    IBinding *LPBINDING;


extern "C" const IID IID_IBinding;


    
    struct __declspec(uuid("79eac9c0-baf9-11ce-8c82-00aa004ba90b")) __declspec(novtable)
    IBinding : public IUnknown
    {
    public:
        virtual HRESULT __stdcall Abort( void) = 0;
        
        virtual HRESULT __stdcall Suspend( void) = 0;
        
        virtual HRESULT __stdcall Resume( void) = 0;
        
        virtual HRESULT __stdcall SetPriority( 
             LONG nPriority) = 0;
        
        virtual HRESULT __stdcall GetPriority( 
              LONG *pnPriority) = 0;
        
        virtual  HRESULT __stdcall GetBindResult( 
             CLSID *pclsidProtocol,
             DWORD *pdwResult,
             
              LPOLESTR *pszResult,
             DWORD *pdwReserved) = 0;
        
    };
    























































































#line 1101 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 HRESULT __stdcall IBinding_RemoteGetBindResult_Proxy( 
     IBinding * This,
      CLSID *pclsidProtocol,
      DWORD *pdwResult,
      LPOLESTR *pszResult,
     DWORD dwReserved);


void __stdcall IBinding_RemoteGetBindResult_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#line 1121 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 

#line 1127 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0004_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0004_v0_0_s_ifspec;





 

typedef    IBindStatusCallback *LPBINDSTATUSCALLBACK;

typedef  
enum __MIDL_IBindStatusCallback_0001
    {	BINDVERB_GET	= 0,
	BINDVERB_POST	= 0x1,
	BINDVERB_PUT	= 0x2,
	BINDVERB_CUSTOM	= 0x3,
	BINDVERB_RESERVED1	= 0x4
    } 	BINDVERB;

typedef  
enum __MIDL_IBindStatusCallback_0002
    {	BINDINFOF_URLENCODESTGMEDDATA	= 0x1,
	BINDINFOF_URLENCODEDEXTRAINFO	= 0x2
    } 	BINDINFOF;

typedef  
enum __MIDL_IBindStatusCallback_0003
    {	BINDF_ASYNCHRONOUS	= 0x1,
	BINDF_ASYNCSTORAGE	= 0x2,
	BINDF_NOPROGRESSIVERENDERING	= 0x4,
	BINDF_OFFLINEOPERATION	= 0x8,
	BINDF_GETNEWESTVERSION	= 0x10,
	BINDF_NOWRITECACHE	= 0x20,
	BINDF_NEEDFILE	= 0x40,
	BINDF_PULLDATA	= 0x80,
	BINDF_IGNORESECURITYPROBLEM	= 0x100,
	BINDF_RESYNCHRONIZE	= 0x200,
	BINDF_HYPERLINK	= 0x400,
	BINDF_NO_UI	= 0x800,
	BINDF_SILENTOPERATION	= 0x1000,
	BINDF_PRAGMA_NO_CACHE	= 0x2000,
	BINDF_GETCLASSOBJECT	= 0x4000,
	BINDF_RESERVED_1	= 0x8000,
	BINDF_FREE_THREADED	= 0x10000,
	BINDF_DIRECT_READ	= 0x20000,
	BINDF_FORMS_SUBMIT	= 0x40000,
	BINDF_GETFROMCACHE_IF_NET_FAIL	= 0x80000,
	BINDF_FROMURLMON	= 0x100000,
	BINDF_FWD_BACK	= 0x200000,
	BINDF_PREFERDEFAULTHANDLER	= 0x400000,
	BINDF_ENFORCERESTRICTED	= 0x800000
    } 	BINDF;

typedef  
enum __MIDL_IBindStatusCallback_0004
    {	URL_ENCODING_NONE	= 0,
	URL_ENCODING_ENABLE_UTF8	= 0x10000000,
	URL_ENCODING_DISABLE_UTF8	= 0x20000000
    } 	URL_ENCODING;

typedef struct _tagBINDINFO
    {
    ULONG cbSize;
    LPWSTR szExtraInfo;
    STGMEDIUM stgmedData;
    DWORD grfBindInfoF;
    DWORD dwBindVerb;
    LPWSTR szCustomVerb;
    DWORD cbstgmedData;
    DWORD dwOptions;
    DWORD dwOptionsFlags;
    DWORD dwCodePage;
    SECURITY_ATTRIBUTES securityAttributes;
    IID iid;
    IUnknown *pUnk;
    DWORD dwReserved;
    } 	BINDINFO;

typedef struct _REMSECURITY_ATTRIBUTES
    {
    DWORD nLength;
    DWORD lpSecurityDescriptor;
    BOOL bInheritHandle;
    } 	REMSECURITY_ATTRIBUTES;

typedef struct _REMSECURITY_ATTRIBUTES *PREMSECURITY_ATTRIBUTES;

typedef struct _REMSECURITY_ATTRIBUTES *LPREMSECURITY_ATTRIBUTES;

typedef struct _tagRemBINDINFO
    {
    ULONG cbSize;
    LPWSTR szExtraInfo;
    DWORD grfBindInfoF;
    DWORD dwBindVerb;
    LPWSTR szCustomVerb;
    DWORD cbstgmedData;
    DWORD dwOptions;
    DWORD dwOptionsFlags;
    DWORD dwCodePage;
    REMSECURITY_ATTRIBUTES securityAttributes;
    IID iid;
    IUnknown *pUnk;
    DWORD dwReserved;
    } 	RemBINDINFO;

typedef struct tagRemFORMATETC
    {
    DWORD cfFormat;
    DWORD ptd;
    DWORD dwAspect;
    LONG lindex;
    DWORD tymed;
    } 	RemFORMATETC;

typedef struct tagRemFORMATETC *LPREMFORMATETC;

typedef  
enum __MIDL_IBindStatusCallback_0005
    {	BINDINFO_OPTIONS_WININETFLAG	= 0x10000,
	BINDINFO_OPTIONS_ENABLE_UTF8	= 0x20000,
	BINDINFO_OPTIONS_DISABLE_UTF8	= 0x40000,
	BINDINFO_OPTIONS_USE_IE_ENCODING	= 0x80000,
	BINDINFO_OPTIONS_BINDTOOBJECT	= 0x100000,
	BINDINFO_OPTIONS_SECURITYOPTOUT	= 0x200000,
	BINDINFO_OPTIONS_IGNOREMIMETEXTPLAIN	= 0x400000,
	BINDINFO_OPTIONS_USEBINDSTRINGCREDS	= 0x800000,
	BINDINFO_OPTIONS_IGNOREHTTPHTTPSREDIRECTS	= 0x1000000,
	BINDINFO_OPTIONS_IGNORE_SSLERRORS_ONCE	= 0x2000000,
	BINDINFO_WPC_DOWNLOADBLOCKED	= 0x8000000,
	BINDINFO_WPC_LOGGING_ENABLED	= 0x10000000,
	BINDINFO_OPTIONS_ALLOWCONNECTDATA	= 0x20000000,
	BINDINFO_OPTIONS_DISABLEAUTOREDIRECTS	= 0x40000000,
	BINDINFO_OPTIONS_SHDOCVW_NAVIGATE	= ( int  )0x80000000
    } 	BINDINFO_OPTIONS;

typedef  
enum __MIDL_IBindStatusCallback_0006
    {	BSCF_FIRSTDATANOTIFICATION	= 0x1,
	BSCF_INTERMEDIATEDATANOTIFICATION	= 0x2,
	BSCF_LASTDATANOTIFICATION	= 0x4,
	BSCF_DATAFULLYAVAILABLE	= 0x8,
	BSCF_AVAILABLEDATASIZEUNKNOWN	= 0x10,
	BSCF_SKIPDRAINDATAFORFILEURLS	= 0x20,
	BSCF_64BITLENGTHDOWNLOAD	= 0x40
    } 	BSCF;

typedef 
enum tagBINDSTATUS
    {	BINDSTATUS_FINDINGRESOURCE	= 1,
	BINDSTATUS_CONNECTING	= ( BINDSTATUS_FINDINGRESOURCE + 1 ) ,
	BINDSTATUS_REDIRECTING	= ( BINDSTATUS_CONNECTING + 1 ) ,
	BINDSTATUS_BEGINDOWNLOADDATA	= ( BINDSTATUS_REDIRECTING + 1 ) ,
	BINDSTATUS_DOWNLOADINGDATA	= ( BINDSTATUS_BEGINDOWNLOADDATA + 1 ) ,
	BINDSTATUS_ENDDOWNLOADDATA	= ( BINDSTATUS_DOWNLOADINGDATA + 1 ) ,
	BINDSTATUS_BEGINDOWNLOADCOMPONENTS	= ( BINDSTATUS_ENDDOWNLOADDATA + 1 ) ,
	BINDSTATUS_INSTALLINGCOMPONENTS	= ( BINDSTATUS_BEGINDOWNLOADCOMPONENTS + 1 ) ,
	BINDSTATUS_ENDDOWNLOADCOMPONENTS	= ( BINDSTATUS_INSTALLINGCOMPONENTS + 1 ) ,
	BINDSTATUS_USINGCACHEDCOPY	= ( BINDSTATUS_ENDDOWNLOADCOMPONENTS + 1 ) ,
	BINDSTATUS_SENDINGREQUEST	= ( BINDSTATUS_USINGCACHEDCOPY + 1 ) ,
	BINDSTATUS_CLASSIDAVAILABLE	= ( BINDSTATUS_SENDINGREQUEST + 1 ) ,
	BINDSTATUS_MIMETYPEAVAILABLE	= ( BINDSTATUS_CLASSIDAVAILABLE + 1 ) ,
	BINDSTATUS_CACHEFILENAMEAVAILABLE	= ( BINDSTATUS_MIMETYPEAVAILABLE + 1 ) ,
	BINDSTATUS_BEGINSYNCOPERATION	= ( BINDSTATUS_CACHEFILENAMEAVAILABLE + 1 ) ,
	BINDSTATUS_ENDSYNCOPERATION	= ( BINDSTATUS_BEGINSYNCOPERATION + 1 ) ,
	BINDSTATUS_BEGINUPLOADDATA	= ( BINDSTATUS_ENDSYNCOPERATION + 1 ) ,
	BINDSTATUS_UPLOADINGDATA	= ( BINDSTATUS_BEGINUPLOADDATA + 1 ) ,
	BINDSTATUS_ENDUPLOADDATA	= ( BINDSTATUS_UPLOADINGDATA + 1 ) ,
	BINDSTATUS_PROTOCOLCLASSID	= ( BINDSTATUS_ENDUPLOADDATA + 1 ) ,
	BINDSTATUS_ENCODING	= ( BINDSTATUS_PROTOCOLCLASSID + 1 ) ,
	BINDSTATUS_VERIFIEDMIMETYPEAVAILABLE	= ( BINDSTATUS_ENCODING + 1 ) ,
	BINDSTATUS_CLASSINSTALLLOCATION	= ( BINDSTATUS_VERIFIEDMIMETYPEAVAILABLE + 1 ) ,
	BINDSTATUS_DECODING	= ( BINDSTATUS_CLASSINSTALLLOCATION + 1 ) ,
	BINDSTATUS_LOADINGMIMEHANDLER	= ( BINDSTATUS_DECODING + 1 ) ,
	BINDSTATUS_CONTENTDISPOSITIONATTACH	= ( BINDSTATUS_LOADINGMIMEHANDLER + 1 ) ,
	BINDSTATUS_FILTERREPORTMIMETYPE	= ( BINDSTATUS_CONTENTDISPOSITIONATTACH + 1 ) ,
	BINDSTATUS_CLSIDCANINSTANTIATE	= ( BINDSTATUS_FILTERREPORTMIMETYPE + 1 ) ,
	BINDSTATUS_IUNKNOWNAVAILABLE	= ( BINDSTATUS_CLSIDCANINSTANTIATE + 1 ) ,
	BINDSTATUS_DIRECTBIND	= ( BINDSTATUS_IUNKNOWNAVAILABLE + 1 ) ,
	BINDSTATUS_RAWMIMETYPE	= ( BINDSTATUS_DIRECTBIND + 1 ) ,
	BINDSTATUS_PROXYDETECTING	= ( BINDSTATUS_RAWMIMETYPE + 1 ) ,
	BINDSTATUS_ACCEPTRANGES	= ( BINDSTATUS_PROXYDETECTING + 1 ) ,
	BINDSTATUS_COOKIE_SENT	= ( BINDSTATUS_ACCEPTRANGES + 1 ) ,
	BINDSTATUS_COMPACT_POLICY_RECEIVED	= ( BINDSTATUS_COOKIE_SENT + 1 ) ,
	BINDSTATUS_COOKIE_SUPPRESSED	= ( BINDSTATUS_COMPACT_POLICY_RECEIVED + 1 ) ,
	BINDSTATUS_COOKIE_STATE_UNKNOWN	= ( BINDSTATUS_COOKIE_SUPPRESSED + 1 ) ,
	BINDSTATUS_COOKIE_STATE_ACCEPT	= ( BINDSTATUS_COOKIE_STATE_UNKNOWN + 1 ) ,
	BINDSTATUS_COOKIE_STATE_REJECT	= ( BINDSTATUS_COOKIE_STATE_ACCEPT + 1 ) ,
	BINDSTATUS_COOKIE_STATE_PROMPT	= ( BINDSTATUS_COOKIE_STATE_REJECT + 1 ) ,
	BINDSTATUS_COOKIE_STATE_LEASH	= ( BINDSTATUS_COOKIE_STATE_PROMPT + 1 ) ,
	BINDSTATUS_COOKIE_STATE_DOWNGRADE	= ( BINDSTATUS_COOKIE_STATE_LEASH + 1 ) ,
	BINDSTATUS_POLICY_HREF	= ( BINDSTATUS_COOKIE_STATE_DOWNGRADE + 1 ) ,
	BINDSTATUS_P3P_HEADER	= ( BINDSTATUS_POLICY_HREF + 1 ) ,
	BINDSTATUS_SESSION_COOKIE_RECEIVED	= ( BINDSTATUS_P3P_HEADER + 1 ) ,
	BINDSTATUS_PERSISTENT_COOKIE_RECEIVED	= ( BINDSTATUS_SESSION_COOKIE_RECEIVED + 1 ) ,
	BINDSTATUS_SESSION_COOKIES_ALLOWED	= ( BINDSTATUS_PERSISTENT_COOKIE_RECEIVED + 1 ) ,
	BINDSTATUS_CACHECONTROL	= ( BINDSTATUS_SESSION_COOKIES_ALLOWED + 1 ) ,
	BINDSTATUS_CONTENTDISPOSITIONFILENAME	= ( BINDSTATUS_CACHECONTROL + 1 ) ,
	BINDSTATUS_MIMETEXTPLAINMISMATCH	= ( BINDSTATUS_CONTENTDISPOSITIONFILENAME + 1 ) ,
	BINDSTATUS_PUBLISHERAVAILABLE	= ( BINDSTATUS_MIMETEXTPLAINMISMATCH + 1 ) ,
	BINDSTATUS_DISPLAYNAMEAVAILABLE	= ( BINDSTATUS_PUBLISHERAVAILABLE + 1 ) ,
	BINDSTATUS_SSLUX_NAVBLOCKED	= ( BINDSTATUS_DISPLAYNAMEAVAILABLE + 1 ) ,
	BINDSTATUS_SERVER_MIMETYPEAVAILABLE	= ( BINDSTATUS_SSLUX_NAVBLOCKED + 1 ) ,
	BINDSTATUS_SNIFFED_CLASSIDAVAILABLE	= ( BINDSTATUS_SERVER_MIMETYPEAVAILABLE + 1 ) ,
	BINDSTATUS_64BIT_PROGRESS	= ( BINDSTATUS_SNIFFED_CLASSIDAVAILABLE + 1 ) 
    } 	BINDSTATUS;


extern "C" const IID IID_IBindStatusCallback;


    
    struct __declspec(uuid("79eac9c1-baf9-11ce-8c82-00aa004ba90b")) __declspec(novtable)
    IBindStatusCallback : public IUnknown
    {
    public:
        virtual HRESULT __stdcall OnStartBinding( 
             DWORD dwReserved,
              IBinding *pib) = 0;
        
        virtual HRESULT __stdcall GetPriority( 
              LONG *pnPriority) = 0;
        
        virtual HRESULT __stdcall OnLowResource( 
             DWORD reserved) = 0;
        
        virtual HRESULT __stdcall OnProgress( 
             ULONG ulProgress,
             ULONG ulProgressMax,
             ULONG ulStatusCode,
              LPCWSTR szStatusText) = 0;
        
        virtual HRESULT __stdcall OnStopBinding( 
             HRESULT hresult,
              LPCWSTR szError) = 0;
        
        virtual  HRESULT __stdcall GetBindInfo( 
             DWORD *grfBINDF,
             BINDINFO *pbindinfo) = 0;
        
        virtual  HRESULT __stdcall OnDataAvailable( 
             DWORD grfBSCF,
             DWORD dwSize,
             FORMATETC *pformatetc,
             STGMEDIUM *pstgmed) = 0;
        
        virtual HRESULT __stdcall OnObjectAvailable( 
              const IID & riid,
              IUnknown *punk) = 0;
        
    };
    














































































































#line 1495 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 HRESULT __stdcall IBindStatusCallback_RemoteGetBindInfo_Proxy( 
     IBindStatusCallback * This,
      DWORD *grfBINDF,
      RemBINDINFO *pbindinfo,
      RemSTGMEDIUM *pstgmed);


void __stdcall IBindStatusCallback_RemoteGetBindInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall IBindStatusCallback_RemoteOnDataAvailable_Proxy( 
     IBindStatusCallback * This,
     DWORD grfBSCF,
     DWORD dwSize,
      RemFORMATETC *pformatetc,
      RemSTGMEDIUM *pstgmed);


void __stdcall IBindStatusCallback_RemoteOnDataAvailable_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#line 1529 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 

#line 1535 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0005_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0005_v0_0_s_ifspec;





 

typedef    IBindStatusCallbackEx *LPBINDSTATUSCALLBACKEX;

typedef  
enum __MIDL_IBindStatusCallbackEx_0001
    {	BINDF2_DISABLEBASICOVERHTTP	= 0x1,
	BINDF2_DISABLEAUTOCOOKIEHANDLING	= 0x2,
	BINDF2_READ_DATA_GREATER_THAN_4GB	= 0x4,
	BINDF2_DISABLE_HTTP_REDIRECT_XSECURITYID	= 0x8,
	BINDF2_RESERVED_3	= 0x20000000,
	BINDF2_RESERVED_2	= 0x40000000,
	BINDF2_RESERVED_1	= 0x80000000
    } 	BINDF2;


extern "C" const IID IID_IBindStatusCallbackEx;


    
    struct __declspec(uuid("aaa74ef9-8ee7-4659-88d9-f8c504da73cc")) __declspec(novtable)
    IBindStatusCallbackEx : public IBindStatusCallback
    {
    public:
        virtual  HRESULT __stdcall GetBindInfoEx( 
             DWORD *grfBINDF,
             BINDINFO *pbindinfo,
             DWORD *grfBINDF2,
             DWORD *pdwReserved) = 0;
        
    };
    

























































































































#line 1700 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 HRESULT __stdcall IBindStatusCallbackEx_RemoteGetBindInfoEx_Proxy( 
     IBindStatusCallbackEx * This,
      DWORD *grfBINDF,
      RemBINDINFO *pbindinfo,
      RemSTGMEDIUM *pstgmed,
      DWORD *grfBINDF2,
      DWORD *pdwReserved);


void __stdcall IBindStatusCallbackEx_RemoteGetBindInfoEx_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#line 1721 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 

#line 1727 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0006_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0006_v0_0_s_ifspec;





 

typedef    IAuthenticate *LPAUTHENTICATION;


extern "C" const IID IID_IAuthenticate;


    
    struct __declspec(uuid("79eac9d0-baf9-11ce-8c82-00aa004ba90b")) __declspec(novtable)
    IAuthenticate : public IUnknown
    {
    public:
        virtual HRESULT __stdcall Authenticate( 
              HWND *phwnd,
              LPWSTR *pszUsername,
              LPWSTR *pszPassword) = 0;
        
    };
    





















































#line 1812 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




#line 1817 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 

#line 1823 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0007_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0007_v0_0_s_ifspec;





 

typedef    IAuthenticateEx *LPAUTHENTICATIONEX;

typedef  
enum __MIDL_IAuthenticateEx_0001
    {	AUTHENTICATEF_PROXY	= 0x1,
	AUTHENTICATEF_BASIC	= 0x2,
	AUTHENTICATEF_HTTP	= 0x4
    } 	AUTHENTICATEF;

typedef struct _tagAUTHENTICATEINFO
    {
    DWORD dwFlags;
    DWORD dwReserved;
    } 	AUTHENTICATEINFO;


extern "C" const IID IID_IAuthenticateEx;


    
    struct __declspec(uuid("2ad1edaf-d83d-48b5-9adf-03dbe19f53bd")) __declspec(novtable)
    IAuthenticateEx : public IAuthenticate
    {
    public:
        virtual HRESULT __stdcall AuthenticateEx( 
              HWND *phwnd,
              LPWSTR *pszUsername,
              LPWSTR *pszPassword,
              AUTHENTICATEINFO *pauthinfo) = 0;
        
    };
    
































































#line 1933 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




#line 1938 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 

#line 1944 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0008_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0008_v0_0_s_ifspec;





 

typedef    IHttpNegotiate *LPHTTPNEGOTIATE;


extern "C" const IID IID_IHttpNegotiate;


    
    struct __declspec(uuid("79eac9d2-baf9-11ce-8c82-00aa004ba90b")) __declspec(novtable)
    IHttpNegotiate : public IUnknown
    {
    public:
        virtual HRESULT __stdcall BeginningTransaction( 
              LPCWSTR szURL,
              LPCWSTR szHeaders,
             DWORD dwReserved,
              LPWSTR *pszAdditionalHeaders) = 0;
        
        virtual HRESULT __stdcall OnResponse( 
             DWORD dwResponseCode,
              LPCWSTR szResponseHeaders,
              LPCWSTR szRequestHeaders,
              LPWSTR *pszAdditionalRequestHeaders) = 0;
        
    };
    
































































#line 2047 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




#line 2052 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 

#line 2058 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0009_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0009_v0_0_s_ifspec;





 

typedef    IHttpNegotiate2 *LPHTTPNEGOTIATE2;


extern "C" const IID IID_IHttpNegotiate2;


    
    struct __declspec(uuid("4F9F9FCB-E0F4-48eb-B7AB-FA2EA9365CB4")) __declspec(novtable)
    IHttpNegotiate2 : public IHttpNegotiate
    {
    public:
        virtual HRESULT __stdcall GetRootSecurityId( 
              BYTE *pbSecurityId,
              DWORD *pcbSecurityId,
             DWORD_PTR dwReserved) = 0;
        
    };
    










































































#line 2164 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




#line 2169 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 

#line 2175 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0010_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0010_v0_0_s_ifspec;





 

typedef    IHttpNegotiate3 *LPHTTPNEGOTIATE3;


extern "C" const IID IID_IHttpNegotiate3;


    
    struct __declspec(uuid("57b6c80a-34c2-4602-bc26-66a02fc57153")) __declspec(novtable)
    IHttpNegotiate3 : public IHttpNegotiate2
    {
    public:
        virtual HRESULT __stdcall GetSerializedClientCertContext( 
              BYTE **ppbCert,
              DWORD *pcbCert) = 0;
        
    };
    



















































































#line 2289 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




#line 2294 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 

#line 2300 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0011_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0011_v0_0_s_ifspec;





 

typedef    IWinInetFileStream *LPWININETFILESTREAM;


extern "C" const IID IID_IWinInetFileStream;


    
    struct __declspec(uuid("F134C4B7-B1F8-4e75-B886-74B90943BECB")) __declspec(novtable)
    IWinInetFileStream : public IUnknown
    {
    public:
        virtual HRESULT __stdcall SetHandleForUnlock( 
             DWORD_PTR hWinInetLockHandle,
             DWORD_PTR dwReserved) = 0;
        
        virtual HRESULT __stdcall SetDeleteFile( 
             DWORD_PTR dwReserved) = 0;
        
    };
    



























































#line 2393 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




#line 2398 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 

#line 2404 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0012_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0012_v0_0_s_ifspec;





 

typedef  IWindowForBindingUI *LPWINDOWFORBINDINGUI;


extern "C" const IID IID_IWindowForBindingUI;


    
    struct __declspec(uuid("79eac9d5-bafa-11ce-8c82-00aa004ba90b")) __declspec(novtable)
    IWindowForBindingUI : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetWindow( 
             const GUID & rguidReason,
             HWND *phwnd) = 0;
        
    };
    




















































#line 2487 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




#line 2492 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 

#line 2498 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0013_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0013_v0_0_s_ifspec;





 

typedef  ICodeInstall *LPCODEINSTALL;

typedef  
enum __MIDL_ICodeInstall_0001
    {	CIP_DISK_FULL	= 0,
	CIP_ACCESS_DENIED	= ( CIP_DISK_FULL + 1 ) ,
	CIP_NEWER_VERSION_EXISTS	= ( CIP_ACCESS_DENIED + 1 ) ,
	CIP_OLDER_VERSION_EXISTS	= ( CIP_NEWER_VERSION_EXISTS + 1 ) ,
	CIP_NAME_CONFLICT	= ( CIP_OLDER_VERSION_EXISTS + 1 ) ,
	CIP_TRUST_VERIFICATION_COMPONENT_MISSING	= ( CIP_NAME_CONFLICT + 1 ) ,
	CIP_EXE_SELF_REGISTERATION_TIMEOUT	= ( CIP_TRUST_VERIFICATION_COMPONENT_MISSING + 1 ) ,
	CIP_UNSAFE_TO_ABORT	= ( CIP_EXE_SELF_REGISTERATION_TIMEOUT + 1 ) ,
	CIP_NEED_REBOOT	= ( CIP_UNSAFE_TO_ABORT + 1 ) ,
	CIP_NEED_REBOOT_UI_PERMISSION	= ( CIP_NEED_REBOOT + 1 ) 
    } 	CIP_STATUS;


extern "C" const IID IID_ICodeInstall;


    
    struct __declspec(uuid("79eac9d1-baf9-11ce-8c82-00aa004ba90b")) __declspec(novtable)
    ICodeInstall : public IWindowForBindingUI
    {
    public:
        virtual HRESULT __stdcall OnCodeInstallProblem( 
             ULONG ulStatusCode,
             LPCWSTR szDestination,
             LPCWSTR szSource,
             DWORD dwReserved) = 0;
        
    };
    































































#line 2608 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




#line 2613 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 

#line 2619 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"





extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0014_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0014_v0_0_s_ifspec;





 

typedef  
enum __MIDL_IUri_0001
    {	Uri_PROPERTY_ABSOLUTE_URI	= 0,
	Uri_PROPERTY_STRING_START	= Uri_PROPERTY_ABSOLUTE_URI,
	Uri_PROPERTY_AUTHORITY	= 1,
	Uri_PROPERTY_DISPLAY_URI	= 2,
	Uri_PROPERTY_DOMAIN	= 3,
	Uri_PROPERTY_EXTENSION	= 4,
	Uri_PROPERTY_FRAGMENT	= 5,
	Uri_PROPERTY_HOST	= 6,
	Uri_PROPERTY_PASSWORD	= 7,
	Uri_PROPERTY_PATH	= 8,
	Uri_PROPERTY_PATH_AND_QUERY	= 9,
	Uri_PROPERTY_QUERY	= 10,
	Uri_PROPERTY_RAW_URI	= 11,
	Uri_PROPERTY_SCHEME_NAME	= 12,
	Uri_PROPERTY_USER_INFO	= 13,
	Uri_PROPERTY_USER_NAME	= 14,
	Uri_PROPERTY_STRING_LAST	= Uri_PROPERTY_USER_NAME,
	Uri_PROPERTY_HOST_TYPE	= 15,
	Uri_PROPERTY_DWORD_START	= Uri_PROPERTY_HOST_TYPE,
	Uri_PROPERTY_PORT	= 16,
	Uri_PROPERTY_SCHEME	= 17,
	Uri_PROPERTY_ZONE	= 18,
	Uri_PROPERTY_DWORD_LAST	= Uri_PROPERTY_ZONE
    } 	Uri_PROPERTY;

typedef  
enum __MIDL_IUri_0002
    {	Uri_HOST_UNKNOWN	= 0,
	Uri_HOST_DNS	= ( Uri_HOST_UNKNOWN + 1 ) ,
	Uri_HOST_IPV4	= ( Uri_HOST_DNS + 1 ) ,
	Uri_HOST_IPV6	= ( Uri_HOST_IPV4 + 1 ) ,
	Uri_HOST_IDN	= ( Uri_HOST_IPV6 + 1 ) 
    } 	Uri_HOST_TYPE;


extern "C" const IID IID_IUri;


    
    struct __declspec(uuid("A39EE748-6A27-4817-A6F2-13914BEF5890")) __declspec(novtable)
    IUri : public IUnknown
    {
    public:
        virtual  HRESULT __stdcall GetPropertyBSTR( 
             Uri_PROPERTY uriProp,
              BSTR *pbstrProperty,
             DWORD dwFlags) = 0;
        
        virtual  HRESULT __stdcall GetPropertyLength( 
             Uri_PROPERTY uriProp,
              DWORD *pcchProperty,
             DWORD dwFlags) = 0;
        
        virtual  HRESULT __stdcall GetPropertyDWORD( 
             Uri_PROPERTY uriProp,
              DWORD *pdwProperty,
             DWORD dwFlags) = 0;
        
        virtual  HRESULT __stdcall HasProperty( 
             Uri_PROPERTY uriProp,
              BOOL *pfHasProperty) = 0;
        
        virtual  HRESULT __stdcall GetAbsoluteUri( 
              BSTR *pbstrAbsoluteUri) = 0;
        
        virtual  HRESULT __stdcall GetAuthority( 
              BSTR *pbstrAuthority) = 0;
        
        virtual  HRESULT __stdcall GetDisplayUri( 
              BSTR *pbstrDisplayString) = 0;
        
        virtual  HRESULT __stdcall GetDomain( 
              BSTR *pbstrDomain) = 0;
        
        virtual  HRESULT __stdcall GetExtension( 
              BSTR *pbstrExtension) = 0;
        
        virtual  HRESULT __stdcall GetFragment( 
              BSTR *pbstrFragment) = 0;
        
        virtual  HRESULT __stdcall GetHost( 
              BSTR *pbstrHost) = 0;
        
        virtual  HRESULT __stdcall GetPassword( 
              BSTR *pbstrPassword) = 0;
        
        virtual  HRESULT __stdcall GetPath( 
              BSTR *pbstrPath) = 0;
        
        virtual  HRESULT __stdcall GetPathAndQuery( 
              BSTR *pbstrPathAndQuery) = 0;
        
        virtual  HRESULT __stdcall GetQuery( 
              BSTR *pbstrQuery) = 0;
        
        virtual  HRESULT __stdcall GetRawUri( 
              BSTR *pbstrRawUri) = 0;
        
        virtual  HRESULT __stdcall GetSchemeName( 
              BSTR *pbstrSchemeName) = 0;
        
        virtual  HRESULT __stdcall GetUserInfo( 
              BSTR *pbstrUserInfo) = 0;
        
        virtual  HRESULT __stdcall GetUserNameA( 
              BSTR *pbstrUserName) = 0;
        
        virtual  HRESULT __stdcall GetHostType( 
              DWORD *pdwHostType) = 0;
        
        virtual  HRESULT __stdcall GetPort( 
              DWORD *pdwPort) = 0;
        
        virtual  HRESULT __stdcall GetScheme( 
              DWORD *pdwScheme) = 0;
        
        virtual  HRESULT __stdcall GetZone( 
              DWORD *pdwZone) = 0;
        
        virtual  HRESULT __stdcall GetProperties( 
              LPDWORD pdwFlags) = 0;
        
        virtual  HRESULT __stdcall IsEqual( 
              IUri *pUri,
              BOOL *pfEqual) = 0;
        
    };
    



































































































































































































































#line 2991 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




#line 2996 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 

extern "C" HRESULT __stdcall CreateUri( LPCWSTR pwzURI,
                  DWORD dwFlags,
                  DWORD_PTR dwReserved,   
                  IUri** ppURI);

extern "C" HRESULT __stdcall CreateUriWithFragment(
                  LPCWSTR pwzURI,
                  LPCWSTR pwzFragment,        
                  DWORD dwFlags,
                  DWORD_PTR dwReserved,   
                  IUri** ppURI);

extern "C" HRESULT __stdcall CreateUriFromMultiByteString(
           LPCSTR    pszANSIInputUri,
               DWORD     dwEncodingFlags, 
               DWORD     dwCodePage,
               DWORD     dwCreateFlags,
     DWORD_PTR dwReserved,   
          IUri**    ppUri);





























































#line 3082 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"


extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0015_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0015_v0_0_s_ifspec;





 


extern "C" const IID IID_IUriContainer;


    
    struct __declspec(uuid("a158a630-ed6f-45fb-b987-f68676f57752")) __declspec(novtable)
    IUriContainer : public IUnknown
    {
    public:
        virtual  HRESULT __stdcall GetIUri( 
             IUri **ppIUri) = 0;
        
    };
    



















































#line 3159 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




#line 3164 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"






 


extern "C" const IID IID_IUriBuilder;


    
    struct __declspec(uuid("4221B2E1-8955-46c0-BD5B-DE9897565DE7")) __declspec(novtable)
    IUriBuilder : public IUnknown
    {
    public:
        virtual  HRESULT __stdcall CreateUriSimple( 
             DWORD dwAllowEncodingPropertyMask,
             DWORD_PTR dwReserved,
             
              IUri **ppIUri) = 0;
        
        virtual  HRESULT __stdcall CreateUri( 
             DWORD dwCreateFlags,
             DWORD dwAllowEncodingPropertyMask,
             DWORD_PTR dwReserved,
             
              IUri **ppIUri) = 0;
        
        virtual  HRESULT __stdcall CreateUriWithFlags( 
             DWORD dwCreateFlags,
             DWORD dwUriBuilderFlags,
             DWORD dwAllowEncodingPropertyMask,
             DWORD_PTR dwReserved,
             
              IUri **ppIUri) = 0;
        
        virtual  HRESULT __stdcall GetIUri( 
             
              IUri **ppIUri) = 0;
        
        virtual  HRESULT __stdcall SetIUri( 
             
              IUri *pIUri) = 0;
        
        virtual  HRESULT __stdcall GetFragment( 
             
              DWORD *pcchFragment,
             
              LPCWSTR *ppwzFragment) = 0;
        
        virtual  HRESULT __stdcall GetHost( 
             
              DWORD *pcchHost,
             
              LPCWSTR *ppwzHost) = 0;
        
        virtual  HRESULT __stdcall GetPassword( 
             
              DWORD *pcchPassword,
             
              LPCWSTR *ppwzPassword) = 0;
        
        virtual  HRESULT __stdcall GetPath( 
             
              DWORD *pcchPath,
             
              LPCWSTR *ppwzPath) = 0;
        
        virtual  HRESULT __stdcall GetPort( 
             
              BOOL *pfHasPort,
             
              DWORD *pdwPort) = 0;
        
        virtual  HRESULT __stdcall GetQuery( 
             
              DWORD *pcchQuery,
             
              LPCWSTR *ppwzQuery) = 0;
        
        virtual  HRESULT __stdcall GetSchemeName( 
             
              DWORD *pcchSchemeName,
             
              LPCWSTR *ppwzSchemeName) = 0;
        
        virtual  HRESULT __stdcall GetUserNameA( 
             
              DWORD *pcchUserName,
             
              LPCWSTR *ppwzUserName) = 0;
        
        virtual  HRESULT __stdcall SetFragment( 
             
              LPCWSTR pwzNewValue) = 0;
        
        virtual  HRESULT __stdcall SetHost( 
             
              LPCWSTR pwzNewValue) = 0;
        
        virtual  HRESULT __stdcall SetPassword( 
             
              LPCWSTR pwzNewValue) = 0;
        
        virtual  HRESULT __stdcall SetPath( 
             
              LPCWSTR pwzNewValue) = 0;
        
        virtual  HRESULT __stdcall SetPort( 
             BOOL fHasPort,
             DWORD dwNewValue) = 0;
        
        virtual  HRESULT __stdcall SetQuery( 
             
              LPCWSTR pwzNewValue) = 0;
        
        virtual  HRESULT __stdcall SetSchemeName( 
             
              LPCWSTR pwzNewValue) = 0;
        
        virtual  HRESULT __stdcall SetUserName( 
             
              LPCWSTR pwzNewValue) = 0;
        
        virtual  HRESULT __stdcall RemoveProperties( 
             DWORD dwPropertyMask) = 0;
        
        virtual  HRESULT __stdcall HasBeenModified( 
             
              BOOL *pfModified) = 0;
        
    };
    




























































































































































































































































#line 3552 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




#line 3557 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"






 


extern "C" const IID IID_IUriBuilderFactory;


    
    struct __declspec(uuid("E982CE48-0B96-440c-BC37-0C869B27A29E")) __declspec(novtable)
    IUriBuilderFactory : public IUnknown
    {
    public:
        virtual  HRESULT __stdcall CreateIUriBuilder( 
             
              DWORD dwFlags,
             
              DWORD_PTR dwReserved,
             
              IUriBuilder **ppIUriBuilder) = 0;
        
        virtual  HRESULT __stdcall CreateInitializedIUriBuilder( 
             
              DWORD dwFlags,
             
              DWORD_PTR dwReserved,
             
              IUriBuilder **ppIUriBuilder) = 0;
        
    };
    




































































#line 3661 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




#line 3666 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 

extern "C" HRESULT __stdcall CreateIUriBuilder(
        IUri         *pIUri,
            DWORD         dwFlags,
            DWORD_PTR     dwReserved,
     IUriBuilder **ppIUriBuilder
    );
#line 3678 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0018_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0018_v0_0_s_ifspec;





 

typedef    IWinInetInfo *LPWININETINFO;


extern "C" const IID IID_IWinInetInfo;


    
    struct __declspec(uuid("79eac9d6-bafa-11ce-8c82-00aa004ba90b")) __declspec(novtable)
    IWinInetInfo : public IUnknown
    {
    public:
        virtual  HRESULT __stdcall QueryOption( 
             DWORD dwOption,
             LPVOID pBuffer,
             DWORD *pcbBuf) = 0;
        
    };
    





















































#line 3763 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 HRESULT __stdcall IWinInetInfo_RemoteQueryOption_Proxy( 
     IWinInetInfo * This,
     DWORD dwOption,
      BYTE *pBuffer,
      DWORD *pcbBuf);


void __stdcall IWinInetInfo_RemoteQueryOption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#line 3782 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 

#line 3788 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"





extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0019_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0019_v0_0_s_ifspec;





 

typedef  IHttpSecurity *LPHTTPSECURITY;


extern "C" const IID IID_IHttpSecurity;


    
    struct __declspec(uuid("79eac9d7-bafa-11ce-8c82-00aa004ba90b")) __declspec(novtable)
    IHttpSecurity : public IWindowForBindingUI
    {
    public:
        virtual HRESULT __stdcall OnSecurityProblem( 
             DWORD dwProblem) = 0;
        
    };
    




























































#line 3879 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




#line 3884 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 

#line 3890 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0020_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0020_v0_0_s_ifspec;





 

typedef    IWinInetHttpInfo *LPWININETHTTPINFO;


extern "C" const IID IID_IWinInetHttpInfo;


    
    struct __declspec(uuid("79eac9d8-bafa-11ce-8c82-00aa004ba90b")) __declspec(novtable)
    IWinInetHttpInfo : public IWinInetInfo
    {
    public:
        virtual  HRESULT __stdcall QueryInfo( 
             DWORD dwOption,
             LPVOID pBuffer,
             DWORD *pcbBuf,
             DWORD *pdwFlags,
             DWORD *pdwReserved) = 0;
        
    };
    

































































#line 3989 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 HRESULT __stdcall IWinInetHttpInfo_RemoteQueryInfo_Proxy( 
     IWinInetHttpInfo * This,
     DWORD dwOption,
      BYTE *pBuffer,
      DWORD *pcbBuf,
      DWORD *pdwFlags,
      DWORD *pdwReserved);


void __stdcall IWinInetHttpInfo_RemoteQueryInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#line 4010 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 

#line 4016 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"





extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0021_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0021_v0_0_s_ifspec;





 

typedef  IWinInetCacheHints *LPWININETCACHEHINTS;


extern "C" const IID IID_IWinInetCacheHints;


    
    struct __declspec(uuid("DD1EC3B3-8391-4fdb-A9E6-347C3CAAA7DD")) __declspec(novtable)
    IWinInetCacheHints : public IUnknown
    {
    public:
        virtual HRESULT __stdcall SetCacheExtension( 
             LPCWSTR pwzExt,
             LPVOID pszCacheFile,
             DWORD *pcbCacheFile,
             DWORD *pdwWinInetError,
             DWORD *pdwReserved) = 0;
        
    };
    























































#line 4106 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




#line 4111 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 

#line 4117 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"
#line 4118 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"





extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0022_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0022_v0_0_s_ifspec;





 

typedef  IWinInetCacheHints2 *LPWININETCACHEHINTS2;


extern "C" const IID IID_IWinInetCacheHints2;


    
    struct __declspec(uuid("7857AEAC-D31F-49bf-884E-DD46DF36780A")) __declspec(novtable)
    IWinInetCacheHints2 : public IWinInetCacheHints
    {
    public:
        virtual HRESULT __stdcall SetCacheExtension2( 
             LPCWSTR pwzExt,
             
              WCHAR *pwzCacheFile,
             DWORD *pcchCacheFile,
             DWORD *pdwWinInetError,
             DWORD *pdwReserved) = 0;
        
    };
    




































































#line 4222 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




#line 4227 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 

#line 4233 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"
#line 4234 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




extern "C" const GUID SID_BindHost;


extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0023_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0023_v0_0_s_ifspec;





 

typedef    IBindHost *LPBINDHOST;


extern "C" const IID IID_IBindHost;


    
    struct __declspec(uuid("fc4801a1-2ba9-11cf-a229-00aa003d7352")) __declspec(novtable)
    IBindHost : public IUnknown
    {
    public:
        virtual HRESULT __stdcall CreateMoniker( 
              LPOLESTR szName,
              IBindCtx *pBC,
              IMoniker **ppmk,
             DWORD dwReserved) = 0;
        
        virtual  HRESULT __stdcall MonikerBindToStorage( 
             IMoniker *pMk,
             IBindCtx *pBC,
             IBindStatusCallback *pBSC,
             const IID & riid,
             void **ppvObj) = 0;
        
        virtual  HRESULT __stdcall MonikerBindToObject( 
             IMoniker *pMk,
             IBindCtx *pBC,
             IBindStatusCallback *pBSC,
             const IID & riid,
             void **ppvObj) = 0;
        
    };
    












































































#line 4360 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 HRESULT __stdcall IBindHost_RemoteMonikerBindToStorage_Proxy( 
     IBindHost * This,
      IMoniker *pMk,
      IBindCtx *pBC,
      IBindStatusCallback *pBSC,
      const IID & riid,
      IUnknown **ppvObj);


void __stdcall IBindHost_RemoteMonikerBindToStorage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


 HRESULT __stdcall IBindHost_RemoteMonikerBindToObject_Proxy( 
     IBindHost * This,
      IMoniker *pMk,
      IBindCtx *pBC,
      IBindStatusCallback *pBSC,
      const IID & riid,
      IUnknown **ppvObj);


void __stdcall IBindHost_RemoteMonikerBindToObject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#line 4397 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 

#line 4403 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"
                                                                                                           





                                                                                                           
                                                                                                           
struct IBindStatusCallback;                                                                                
extern "C" HRESULT __stdcall HlinkSimpleNavigateToString(                                                                        
     LPCWSTR szTarget,         
     LPCWSTR szLocation,       
     LPCWSTR szTargetFrameName,
     IUnknown *pUnk,           
     IBindCtx *pbc,            
     IBindStatusCallback *,                                                                      
     DWORD grfHLNF,            
     DWORD dwReserved          
);                                                                                                         
                                                                                                           
extern "C" HRESULT __stdcall HlinkSimpleNavigateToMoniker(                                                                       
     IMoniker *pmkTarget,      
     LPCWSTR szLocation,       
     LPCWSTR szTargetFrameName,
     IUnknown *pUnk,           
     IBindCtx *pbc,            
     IBindStatusCallback *,                                                                      
     DWORD grfHLNF,            
     DWORD dwReserved          
);                                                                                                         
                                                                                                           
extern "C" HRESULT __stdcall URLOpenStreamA(LPUNKNOWN,LPCSTR,DWORD,LPBINDSTATUSCALLBACK);                                        
extern "C" HRESULT __stdcall URLOpenStreamW(LPUNKNOWN,LPCWSTR,DWORD,LPBINDSTATUSCALLBACK);                                       
extern "C" HRESULT __stdcall URLOpenPullStreamA(LPUNKNOWN,LPCSTR,DWORD,LPBINDSTATUSCALLBACK);                                    
extern "C" HRESULT __stdcall URLOpenPullStreamW(LPUNKNOWN,LPCWSTR,DWORD,LPBINDSTATUSCALLBACK);                                   
extern "C" HRESULT __stdcall URLDownloadToFileA(LPUNKNOWN,LPCSTR,LPCSTR,DWORD,LPBINDSTATUSCALLBACK);                             
extern "C" HRESULT __stdcall URLDownloadToFileW(LPUNKNOWN,LPCWSTR,LPCWSTR,DWORD,LPBINDSTATUSCALLBACK);                           
extern "C" HRESULT __stdcall URLDownloadToCacheFileA( LPUNKNOWN,  LPCSTR,   LPSTR,  DWORD cchFileName, DWORD,  LPBINDSTATUSCALLBACK);
extern "C" HRESULT __stdcall URLDownloadToCacheFileW( LPUNKNOWN,  LPCWSTR,  LPWSTR, DWORD cchFileName, DWORD,  LPBINDSTATUSCALLBACK);
extern "C" HRESULT __stdcall URLOpenBlockingStreamA(LPUNKNOWN,LPCSTR,LPSTREAM*,DWORD,LPBINDSTATUSCALLBACK);                      
extern "C" HRESULT __stdcall URLOpenBlockingStreamW(LPUNKNOWN,LPCWSTR,LPSTREAM*,DWORD,LPBINDSTATUSCALLBACK);                     
                                                                                                           












#line 4458 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"
                                                                                                           
                                                                                                           
extern "C" HRESULT __stdcall HlinkGoBack(IUnknown *pUnk);                                                                        
extern "C" HRESULT __stdcall HlinkGoForward(IUnknown *pUnk);                                                                     
extern "C" HRESULT __stdcall HlinkNavigateString(IUnknown *pUnk, LPCWSTR szTarget);                                              
extern "C" HRESULT __stdcall HlinkNavigateMoniker(IUnknown *pUnk, IMoniker *pmkTarget);                                          
                                                                                                           















extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0024_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0024_v0_0_s_ifspec;





 

typedef  IInternet *LPIINTERNET;


extern "C" const IID IID_IInternet;


    
    struct __declspec(uuid("79eac9e0-baf9-11ce-8c82-00aa004ba90b")) __declspec(novtable)
    IInternet : public IUnknown
    {
    public:
    };
    












































#line 4547 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




#line 4552 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 

#line 4558 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0025_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0025_v0_0_s_ifspec;





 

typedef  IInternetBindInfo *LPIINTERNETBINDINFO;

typedef 
enum tagBINDSTRING
    {	BINDSTRING_HEADERS	= 1,
	BINDSTRING_ACCEPT_MIMES	= ( BINDSTRING_HEADERS + 1 ) ,
	BINDSTRING_EXTRA_URL	= ( BINDSTRING_ACCEPT_MIMES + 1 ) ,
	BINDSTRING_LANGUAGE	= ( BINDSTRING_EXTRA_URL + 1 ) ,
	BINDSTRING_USERNAME	= ( BINDSTRING_LANGUAGE + 1 ) ,
	BINDSTRING_PASSWORD	= ( BINDSTRING_USERNAME + 1 ) ,
	BINDSTRING_UA_PIXELS	= ( BINDSTRING_PASSWORD + 1 ) ,
	BINDSTRING_UA_COLOR	= ( BINDSTRING_UA_PIXELS + 1 ) ,
	BINDSTRING_OS	= ( BINDSTRING_UA_COLOR + 1 ) ,
	BINDSTRING_USER_AGENT	= ( BINDSTRING_OS + 1 ) ,
	BINDSTRING_ACCEPT_ENCODINGS	= ( BINDSTRING_USER_AGENT + 1 ) ,
	BINDSTRING_POST_COOKIE	= ( BINDSTRING_ACCEPT_ENCODINGS + 1 ) ,
	BINDSTRING_POST_DATA_MIME	= ( BINDSTRING_POST_COOKIE + 1 ) ,
	BINDSTRING_URL	= ( BINDSTRING_POST_DATA_MIME + 1 ) ,
	BINDSTRING_IID	= ( BINDSTRING_URL + 1 ) ,
	BINDSTRING_FLAG_BIND_TO_OBJECT	= ( BINDSTRING_IID + 1 ) ,
	BINDSTRING_PTR_BIND_CONTEXT	= ( BINDSTRING_FLAG_BIND_TO_OBJECT + 1 ) ,
	BINDSTRING_XDR_ORIGIN	= ( BINDSTRING_PTR_BIND_CONTEXT + 1 ) 
    } 	BINDSTRING;


extern "C" const IID IID_IInternetBindInfo;


    
    struct __declspec(uuid("79eac9e1-baf9-11ce-8c82-00aa004ba90b")) __declspec(novtable)
    IInternetBindInfo : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetBindInfo( 
             DWORD *grfBINDF,
             BINDINFO *pbindinfo) = 0;
        
        virtual HRESULT __stdcall GetBindString( 
             ULONG ulStringType,
             
              LPOLESTR *ppwzStr,
             ULONG cEl,
             ULONG *pcElFetched) = 0;
        
    };
    































































#line 4681 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




#line 4686 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 

#line 4692 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0026_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0026_v0_0_s_ifspec;





 

typedef  IInternetBindInfoEx *LPIINTERNETBINDINFOEX;


extern "C" const IID IID_IInternetBindInfoEx;


    
    struct __declspec(uuid("a3e015b7-a82c-4dcd-a150-569aeeed36ab")) __declspec(novtable)
    IInternetBindInfoEx : public IInternetBindInfo
    {
    public:
        virtual HRESULT __stdcall GetBindInfoEx( 
             DWORD *grfBINDF,
             BINDINFO *pbindinfo,
             DWORD *grfBINDF2,
             DWORD *pdwReserved) = 0;
        
    };
    










































































#line 4799 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




#line 4804 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 

#line 4810 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0027_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0027_v0_0_s_ifspec;





 

typedef  IInternetProtocolRoot *LPIINTERNETPROTOCOLROOT;

typedef 
enum _tagPI_FLAGS
    {	PI_PARSE_URL	= 0x1,
	PI_FILTER_MODE	= 0x2,
	PI_FORCE_ASYNC	= 0x4,
	PI_USE_WORKERTHREAD	= 0x8,
	PI_MIMEVERIFICATION	= 0x10,
	PI_CLSIDLOOKUP	= 0x20,
	PI_DATAPROGRESS	= 0x40,
	PI_SYNCHRONOUS	= 0x80,
	PI_APARTMENTTHREADED	= 0x100,
	PI_CLASSINSTALL	= 0x200,
	PI_PASSONBINDCTX	= 0x2000,
	PI_NOMIMEHANDLER	= 0x8000,
	PI_LOADAPPDIRECT	= 0x4000,
	PD_FORCE_SWITCH	= 0x10000,
	PI_PREFERDEFAULTHANDLER	= 0x20000
    } 	PI_FLAGS;

typedef struct _tagPROTOCOLDATA
    {
    DWORD grfFlags;
    DWORD dwState;
    LPVOID pData;
    ULONG cbData;
    } 	PROTOCOLDATA;

typedef struct _tagStartParam
    {
    IID iid;
    IBindCtx *pIBindCtx;
    IUnknown *pItf;
    } 	StartParam;


extern "C" const IID IID_IInternetProtocolRoot;


    
    struct __declspec(uuid("79eac9e3-baf9-11ce-8c82-00aa004ba90b")) __declspec(novtable)
    IInternetProtocolRoot : public IUnknown
    {
    public:
        virtual HRESULT __stdcall Start( 
             LPCWSTR szUrl,
             IInternetProtocolSink *pOIProtSink,
             IInternetBindInfo *pOIBindInfo,
             DWORD grfPI,
             HANDLE_PTR dwReserved) = 0;
        
        virtual HRESULT __stdcall Continue( 
             PROTOCOLDATA *pProtocolData) = 0;
        
        virtual HRESULT __stdcall Abort( 
             HRESULT hrReason,
             DWORD dwOptions) = 0;
        
        virtual HRESULT __stdcall Terminate( 
             DWORD dwOptions) = 0;
        
        virtual HRESULT __stdcall Suspend( void) = 0;
        
        virtual HRESULT __stdcall Resume( void) = 0;
        
    };
    

























































































#line 4981 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




#line 4986 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 

#line 4992 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0028_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0028_v0_0_s_ifspec;





 

typedef  IInternetProtocol *LPIINTERNETPROTOCOL;


extern "C" const IID IID_IInternetProtocol;


    
    struct __declspec(uuid("79eac9e4-baf9-11ce-8c82-00aa004ba90b")) __declspec(novtable)
    IInternetProtocol : public IInternetProtocolRoot
    {
    public:
        virtual HRESULT __stdcall Read( 
             void *pv,
             ULONG cb,
             ULONG *pcbRead) = 0;
        
        virtual HRESULT __stdcall Seek( 
             LARGE_INTEGER dlibMove,
             DWORD dwOrigin,
             ULARGE_INTEGER *plibNewPosition) = 0;
        
        virtual HRESULT __stdcall LockRequest( 
             DWORD dwOptions) = 0;
        
        virtual HRESULT __stdcall UnlockRequest( void) = 0;
        
    };
    

























































































































#line 5155 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




#line 5160 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 

#line 5166 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"





extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0029_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0029_v0_0_s_ifspec;





 


extern "C" const IID IID_IInternetProtocolEx;


    
    struct __declspec(uuid("C7A98E66-1010-492c-A1C8-C809E1F75905")) __declspec(novtable)
    IInternetProtocolEx : public IInternetProtocol
    {
    public:
        virtual HRESULT __stdcall StartEx( 
             IUri *pUri,
             IInternetProtocolSink *pOIProtSink,
             IInternetBindInfo *pOIBindInfo,
             DWORD grfPI,
             HANDLE_PTR dwReserved) = 0;
        
    };
    





































































































































#line 5332 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




#line 5337 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 

#line 5343 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"
#line 5344 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0030_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0030_v0_0_s_ifspec;





 

typedef  IInternetProtocolSink *LPIINTERNETPROTOCOLSINK;


extern "C" const IID IID_IInternetProtocolSink;


    
    struct __declspec(uuid("79eac9e5-baf9-11ce-8c82-00aa004ba90b")) __declspec(novtable)
    IInternetProtocolSink : public IUnknown
    {
    public:
        virtual HRESULT __stdcall Switch( 
             PROTOCOLDATA *pProtocolData) = 0;
        
        virtual HRESULT __stdcall ReportProgress( 
             ULONG ulStatusCode,
             LPCWSTR szStatusText) = 0;
        
        virtual HRESULT __stdcall ReportData( 
             DWORD grfBSCF,
             ULONG ulProgress,
             ULONG ulProgressMax) = 0;
        
        virtual HRESULT __stdcall ReportResult( 
             HRESULT hrResult,
             DWORD dwError,
             LPCWSTR szResult) = 0;
        
    };
    













































































#line 5465 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




#line 5470 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 

#line 5476 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0031_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0031_v0_0_s_ifspec;





 

typedef  IInternetProtocolSinkStackable *LPIINTERNETPROTOCOLSINKStackable;


extern "C" const IID IID_IInternetProtocolSinkStackable;


    
    struct __declspec(uuid("79eac9f0-baf9-11ce-8c82-00aa004ba90b")) __declspec(novtable)
    IInternetProtocolSinkStackable : public IUnknown
    {
    public:
        virtual HRESULT __stdcall SwitchSink( 
             IInternetProtocolSink *pOIProtSink) = 0;
        
        virtual HRESULT __stdcall CommitSwitch( void) = 0;
        
        virtual HRESULT __stdcall RollbackSwitch( void) = 0;
        
    };
    































































#line 5573 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




#line 5578 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 

#line 5584 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0032_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0032_v0_0_s_ifspec;





 

typedef  IInternetSession *LPIINTERNETSESSION;

typedef 
enum _tagOIBDG_FLAGS
    {	OIBDG_APARTMENTTHREADED	= 0x100,
	OIBDG_DATAONLY	= 0x1000
    } 	OIBDG_FLAGS;


extern "C" const IID IID_IInternetSession;


    
    struct __declspec(uuid("79eac9e7-baf9-11ce-8c82-00aa004ba90b")) __declspec(novtable)
    IInternetSession : public IUnknown
    {
    public:
        virtual HRESULT __stdcall RegisterNameSpace( 
             IClassFactory *pCF,
             const IID & rclsid,
             LPCWSTR pwzProtocol,
             ULONG cPatterns,
             const LPCWSTR *ppwzPatterns,
             DWORD dwReserved) = 0;
        
        virtual HRESULT __stdcall UnregisterNameSpace( 
             IClassFactory *pCF,
             LPCWSTR pszProtocol) = 0;
        
        virtual HRESULT __stdcall RegisterMimeFilter( 
             IClassFactory *pCF,
             const IID & rclsid,
             LPCWSTR pwzType) = 0;
        
        virtual HRESULT __stdcall UnregisterMimeFilter( 
             IClassFactory *pCF,
             LPCWSTR pwzType) = 0;
        
        virtual HRESULT __stdcall CreateBinding( 
             LPBC pBC,
             LPCWSTR szUrl,
             IUnknown *pUnkOuter,
             IUnknown **ppUnk,
             IInternetProtocol **ppOInetProt,
             DWORD dwOption) = 0;
        
        virtual HRESULT __stdcall SetSessionOption( 
             DWORD dwOption,
             LPVOID pBuffer,
             DWORD dwBufferLength,
             DWORD dwReserved) = 0;
        
        virtual HRESULT __stdcall GetSessionOption( 
             DWORD dwOption,
             LPVOID pBuffer,
             DWORD *pdwBufferLength,
             DWORD dwReserved) = 0;
        
    };
    

















































































































#line 5771 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




#line 5776 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 

#line 5782 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0033_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0033_v0_0_s_ifspec;





 

typedef  IInternetThreadSwitch *LPIINTERNETTHREADSWITCH;


extern "C" const IID IID_IInternetThreadSwitch;


    
    struct __declspec(uuid("79eac9e8-baf9-11ce-8c82-00aa004ba90b")) __declspec(novtable)
    IInternetThreadSwitch : public IUnknown
    {
    public:
        virtual HRESULT __stdcall Prepare( void) = 0;
        
        virtual HRESULT __stdcall Continue( void) = 0;
        
    };
    
























































#line 5869 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




#line 5874 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 

#line 5880 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0034_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0034_v0_0_s_ifspec;





 

typedef  IInternetPriority *LPIINTERNETPRIORITY;


extern "C" const IID IID_IInternetPriority;


    
    struct __declspec(uuid("79eac9eb-baf9-11ce-8c82-00aa004ba90b")) __declspec(novtable)
    IInternetPriority : public IUnknown
    {
    public:
        virtual HRESULT __stdcall SetPriority( 
             LONG nPriority) = 0;
        
        virtual HRESULT __stdcall GetPriority( 
             LONG *pnPriority) = 0;
        
    };
    


























































#line 5971 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




#line 5976 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 

#line 5982 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0035_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0035_v0_0_s_ifspec;





 

typedef  IInternetProtocolInfo *LPIINTERNETPROTOCOLINFO;

typedef 
enum _tagPARSEACTION
    {	PARSE_CANONICALIZE	= 1,
	PARSE_FRIENDLY	= ( PARSE_CANONICALIZE + 1 ) ,
	PARSE_SECURITY_URL	= ( PARSE_FRIENDLY + 1 ) ,
	PARSE_ROOTDOCUMENT	= ( PARSE_SECURITY_URL + 1 ) ,
	PARSE_DOCUMENT	= ( PARSE_ROOTDOCUMENT + 1 ) ,
	PARSE_ANCHOR	= ( PARSE_DOCUMENT + 1 ) ,
	PARSE_ENCODE_IS_UNESCAPE	= ( PARSE_ANCHOR + 1 ) ,
	PARSE_DECODE_IS_ESCAPE	= ( PARSE_ENCODE_IS_UNESCAPE + 1 ) ,
	PARSE_PATH_FROM_URL	= ( PARSE_DECODE_IS_ESCAPE + 1 ) ,
	PARSE_URL_FROM_PATH	= ( PARSE_PATH_FROM_URL + 1 ) ,
	PARSE_MIME	= ( PARSE_URL_FROM_PATH + 1 ) ,
	PARSE_SERVER	= ( PARSE_MIME + 1 ) ,
	PARSE_SCHEMA	= ( PARSE_SERVER + 1 ) ,
	PARSE_SITE	= ( PARSE_SCHEMA + 1 ) ,
	PARSE_DOMAIN	= ( PARSE_SITE + 1 ) ,
	PARSE_LOCATION	= ( PARSE_DOMAIN + 1 ) ,
	PARSE_SECURITY_DOMAIN	= ( PARSE_LOCATION + 1 ) ,
	PARSE_ESCAPE	= ( PARSE_SECURITY_DOMAIN + 1 ) ,
	PARSE_UNESCAPE	= ( PARSE_ESCAPE + 1 ) 
    } 	PARSEACTION;

typedef 
enum _tagPSUACTION
    {	PSU_DEFAULT	= 1,
	PSU_SECURITY_URL_ONLY	= ( PSU_DEFAULT + 1 ) 
    } 	PSUACTION;

typedef 
enum _tagQUERYOPTION
    {	QUERY_EXPIRATION_DATE	= 1,
	QUERY_TIME_OF_LAST_CHANGE	= ( QUERY_EXPIRATION_DATE + 1 ) ,
	QUERY_CONTENT_ENCODING	= ( QUERY_TIME_OF_LAST_CHANGE + 1 ) ,
	QUERY_CONTENT_TYPE	= ( QUERY_CONTENT_ENCODING + 1 ) ,
	QUERY_REFRESH	= ( QUERY_CONTENT_TYPE + 1 ) ,
	QUERY_RECOMBINE	= ( QUERY_REFRESH + 1 ) ,
	QUERY_CAN_NAVIGATE	= ( QUERY_RECOMBINE + 1 ) ,
	QUERY_USES_NETWORK	= ( QUERY_CAN_NAVIGATE + 1 ) ,
	QUERY_IS_CACHED	= ( QUERY_USES_NETWORK + 1 ) ,
	QUERY_IS_INSTALLEDENTRY	= ( QUERY_IS_CACHED + 1 ) ,
	QUERY_IS_CACHED_OR_MAPPED	= ( QUERY_IS_INSTALLEDENTRY + 1 ) ,
	QUERY_USES_CACHE	= ( QUERY_IS_CACHED_OR_MAPPED + 1 ) ,
	QUERY_IS_SECURE	= ( QUERY_USES_CACHE + 1 ) ,
	QUERY_IS_SAFE	= ( QUERY_IS_SECURE + 1 ) ,
	QUERY_USES_HISTORYFOLDER	= ( QUERY_IS_SAFE + 1 ) 
    } 	QUERYOPTION;


extern "C" const IID IID_IInternetProtocolInfo;


    
    struct __declspec(uuid("79eac9ec-baf9-11ce-8c82-00aa004ba90b")) __declspec(novtable)
    IInternetProtocolInfo : public IUnknown
    {
    public:
        virtual HRESULT __stdcall ParseUrl( 
             LPCWSTR pwzUrl,
             PARSEACTION ParseAction,
             DWORD dwParseFlags,
             
              LPWSTR pwzResult,
             DWORD cchResult,
             DWORD *pcchResult,
             DWORD dwReserved) = 0;
        
        virtual HRESULT __stdcall CombineUrl( 
             LPCWSTR pwzBaseUrl,
             LPCWSTR pwzRelativeUrl,
             DWORD dwCombineFlags,
             
              LPWSTR pwzResult,
             DWORD cchResult,
             DWORD *pcchResult,
             DWORD dwReserved) = 0;
        
        virtual HRESULT __stdcall CompareUrl( 
             LPCWSTR pwzUrl1,
             LPCWSTR pwzUrl2,
             DWORD dwCompareFlags) = 0;
        
        virtual HRESULT __stdcall QueryInfo( 
             LPCWSTR pwzUrl,
             QUERYOPTION OueryOption,
             DWORD dwQueryFlags,
             LPVOID pBuffer,
             DWORD cbBuffer,
             DWORD *pcbBuf,
             DWORD dwReserved) = 0;
        
    };
    






























































































#line 6185 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




#line 6190 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 






#line 6201 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"
#line 6202 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"







#line 6210 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"













#line 6224 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"













#line 6238 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"






extern "C" HRESULT __stdcall CoInternetParseUrl(                              
                            LPCWSTR      pwzUrl,        
                            PARSEACTION  ParseAction,   
                            DWORD        dwFlags,       
     LPWSTR       pszResult,     
                            DWORD        cchResult,     
                       DWORD       *pcchResult,    
                            DWORD        dwReserved     
    );                                                  

extern "C" HRESULT __stdcall CoInternetParseIUri(                             
                        IUri        *pIUri,         
                            PARSEACTION  ParseAction,   
                            DWORD        dwFlags,       
     LPWSTR       pwzResult,     
                            DWORD        cchResult,     
                       DWORD       *pcchResult,    
                            DWORD_PTR    dwReserved     
    );                                                  
#line 6264 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"
extern "C" HRESULT __stdcall CoInternetCombineUrl(                                             
                                               LPCWSTR   pwzBaseUrl,     
                                               LPCWSTR   pwzRelativeUrl, 
                                               DWORD     dwCombineFlags, 
     LPWSTR    pszResult,      
                                               DWORD     cchResult,      
                                      DWORD     *pcchResult,    
                                     DWORD     dwReserved      
    );                                                                   

extern "C" HRESULT __stdcall CoInternetCombineUrlEx(              
        IUri       *pBaseUri,       
        LPCWSTR     pwzRelativeUrl, 
                DWORD       dwCombineFlags, 
     IUri      **ppCombinedUri,  
        DWORD_PTR   dwReserved      
    );                                      
extern "C" HRESULT __stdcall CoInternetCombineIUri (              
            IUri       *pBaseUri,       
            IUri       *pRelativeUri,   
                DWORD       dwCombineFlags, 
     IUri      **ppCombinedUri,  
        DWORD_PTR   dwReserved      
    );                                      
#line 6289 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"
extern "C" HRESULT __stdcall CoInternetCompareUrl(             
    LPCWSTR pwzUrl1,                     
    LPCWSTR pwzUrl2,                     
    DWORD dwFlags                        
    );                                   
extern "C" HRESULT __stdcall CoInternetGetProtocolFlags(       
    LPCWSTR     pwzUrl,                  
     DWORD      *pdwFlags,          
    DWORD       dwReserved               
    );                                   
extern "C" HRESULT __stdcall CoInternetQueryInfo(              
    LPCWSTR     pwzUrl,                  
    QUERYOPTION QueryOptions,            
    DWORD       dwQueryFlags,            
     LPVOID pvBuffer,
      DWORD       cbBuffer,                
     DWORD      *pcbBuffer,     
    DWORD       dwReserved               
    );                                   
extern "C" HRESULT __stdcall CoInternetGetSession(             
    DWORD       dwSessionMode,           
     IInternetSession **ppIInternetSession,
    DWORD       dwReserved               
    );                                   
extern "C" HRESULT __stdcall CoInternetGetSecurityUrl(         
    LPCWSTR pwszUrl,                     
     LPWSTR *ppwszSecUrl,     
     PSUACTION   psuAction,          
     DWORD dwReserved          
    );                                   
extern "C" HRESULT __stdcall AsyncInstallDistributionUnit(     
    LPCWSTR szDistUnit,                  
    LPCWSTR szTYPE,                      
    LPCWSTR szExt,                       
    DWORD dwFileVersionMS,               
    DWORD dwFileVersionLS,               
    LPCWSTR szURL,                       
    IBindCtx *pbc,                       
    LPVOID   pvReserved,                 
    DWORD   flags                        
    );                                   

extern "C" HRESULT __stdcall CoInternetGetSecurityUrlEx(       
     IUri         *pUri,             
     IUri **ppSecUri,         
    PSUACTION          psuAction,        
      DWORD_PTR dwReserved 

    
    );                                   
#line 6340 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



typedef 
enum _tagINTERNETFEATURELIST
    {	FEATURE_OBJECT_CACHING	= 0,
	FEATURE_ZONE_ELEVATION	= ( FEATURE_OBJECT_CACHING + 1 ) ,
	FEATURE_MIME_HANDLING	= ( FEATURE_ZONE_ELEVATION + 1 ) ,
	FEATURE_MIME_SNIFFING	= ( FEATURE_MIME_HANDLING + 1 ) ,
	FEATURE_WINDOW_RESTRICTIONS	= ( FEATURE_MIME_SNIFFING + 1 ) ,
	FEATURE_WEBOC_POPUPMANAGEMENT	= ( FEATURE_WINDOW_RESTRICTIONS + 1 ) ,
	FEATURE_BEHAVIORS	= ( FEATURE_WEBOC_POPUPMANAGEMENT + 1 ) ,
	FEATURE_DISABLE_MK_PROTOCOL	= ( FEATURE_BEHAVIORS + 1 ) ,
	FEATURE_LOCALMACHINE_LOCKDOWN	= ( FEATURE_DISABLE_MK_PROTOCOL + 1 ) ,
	FEATURE_SECURITYBAND	= ( FEATURE_LOCALMACHINE_LOCKDOWN + 1 ) ,
	FEATURE_RESTRICT_ACTIVEXINSTALL	= ( FEATURE_SECURITYBAND + 1 ) ,
	FEATURE_VALIDATE_NAVIGATE_URL	= ( FEATURE_RESTRICT_ACTIVEXINSTALL + 1 ) ,
	FEATURE_RESTRICT_FILEDOWNLOAD	= ( FEATURE_VALIDATE_NAVIGATE_URL + 1 ) ,
	FEATURE_ADDON_MANAGEMENT	= ( FEATURE_RESTRICT_FILEDOWNLOAD + 1 ) ,
	FEATURE_PROTOCOL_LOCKDOWN	= ( FEATURE_ADDON_MANAGEMENT + 1 ) ,
	FEATURE_HTTP_USERNAME_PASSWORD_DISABLE	= ( FEATURE_PROTOCOL_LOCKDOWN + 1 ) ,
	FEATURE_SAFE_BINDTOOBJECT	= ( FEATURE_HTTP_USERNAME_PASSWORD_DISABLE + 1 ) ,
	FEATURE_UNC_SAVEDFILECHECK	= ( FEATURE_SAFE_BINDTOOBJECT + 1 ) ,
	FEATURE_GET_URL_DOM_FILEPATH_UNENCODED	= ( FEATURE_UNC_SAVEDFILECHECK + 1 ) ,
	FEATURE_TABBED_BROWSING	= ( FEATURE_GET_URL_DOM_FILEPATH_UNENCODED + 1 ) ,
	FEATURE_SSLUX	= ( FEATURE_TABBED_BROWSING + 1 ) ,
	FEATURE_DISABLE_NAVIGATION_SOUNDS	= ( FEATURE_SSLUX + 1 ) ,
	FEATURE_DISABLE_LEGACY_COMPRESSION	= ( FEATURE_DISABLE_NAVIGATION_SOUNDS + 1 ) ,
	FEATURE_FORCE_ADDR_AND_STATUS	= ( FEATURE_DISABLE_LEGACY_COMPRESSION + 1 ) ,
	FEATURE_XMLHTTP	= ( FEATURE_FORCE_ADDR_AND_STATUS + 1 ) ,
	FEATURE_DISABLE_TELNET_PROTOCOL	= ( FEATURE_XMLHTTP + 1 ) ,
	FEATURE_FEEDS	= ( FEATURE_DISABLE_TELNET_PROTOCOL + 1 ) ,
	FEATURE_BLOCK_INPUT_PROMPTS	= ( FEATURE_FEEDS + 1 ) ,
	FEATURE_ENTRY_COUNT	= ( FEATURE_BLOCK_INPUT_PROMPTS + 1 ) 
    } 	INTERNETFEATURELIST;


























#line 6402 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"
extern "C" HRESULT __stdcall CoInternetSetFeatureEnabled(      
    INTERNETFEATURELIST FeatureEntry,    
    DWORD dwFlags,                       
    BOOL fEnable                         
    );                                   
extern "C" HRESULT __stdcall CoInternetIsFeatureEnabled(       
    INTERNETFEATURELIST FeatureEntry,    
    DWORD dwFlags                        
    );                                   
extern "C" HRESULT __stdcall CoInternetIsFeatureEnabledForUrl( 
    INTERNETFEATURELIST FeatureEntry,    
    DWORD dwFlags,                       
    LPCWSTR szURL,                       
    IInternetSecurityManager *pSecMgr    
    );                                   
extern "C" HRESULT __stdcall CoInternetIsFeatureEnabledForIUri( 
    INTERNETFEATURELIST FeatureEntry,     
    DWORD dwFlags,                        
    IUri * pIUri,                         
    IInternetSecurityManagerEx2 *pSecMgr  
    );                                    
extern "C" HRESULT __stdcall CoInternetIsFeatureZoneElevationEnabled( 
    LPCWSTR szFromURL,                          
    LPCWSTR szToURL,                            
    IInternetSecurityManager *pSecMgr,          
    DWORD dwFlags                               
    );                                          
#line 6430 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"
 
extern "C" HRESULT __stdcall CopyStgMedium(const STGMEDIUM * pcstgmedSrc,  
                           STGMEDIUM * pstgmedDest); 
extern "C" HRESULT __stdcall CopyBindInfo( const BINDINFO * pcbiSrc,   
                           BINDINFO * pbiDest ); 
extern "C" void __stdcall ReleaseBindInfo( BINDINFO * pbindinfo );  
 










#line 6448 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



#line 6452 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"







extern "C" HRESULT __stdcall CoInternetCreateSecurityManager(IServiceProvider *pSP, IInternetSecurityManager **ppSM, DWORD dwReserved);

extern "C" HRESULT __stdcall CoInternetCreateZoneManager(IServiceProvider *pSP, IInternetZoneManager **ppZM, DWORD dwReserved);



extern "C" const IID CLSID_InternetSecurityManager;  
extern "C" const IID CLSID_InternetZoneManager;  

extern "C" const IID CLSID_PersistentZoneIdentifier;  
#line 6470 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"





#line 6476 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



#line 6480 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"







extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0036_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0036_v0_0_s_ifspec;





 


extern "C" const IID IID_IInternetSecurityMgrSite;


    
    struct __declspec(uuid("79eac9ed-baf9-11ce-8c82-00aa004ba90b")) __declspec(novtable)
    IInternetSecurityMgrSite : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetWindow( 
             HWND *phwnd) = 0;
        
        virtual HRESULT __stdcall EnableModeless( 
             BOOL fEnable) = 0;
        
    };
    


























































#line 6572 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




#line 6577 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 

#line 6583 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0037_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0037_v0_0_s_ifspec;





 













typedef  
enum __MIDL_IInternetSecurityManager_0001
    {	PUAF_DEFAULT	= 0,
	PUAF_NOUI	= 0x1,
	PUAF_ISFILE	= 0x2,
	PUAF_WARN_IF_DENIED	= 0x4,
	PUAF_FORCEUI_FOREGROUND	= 0x8,
	PUAF_CHECK_TIFS	= 0x10,
	PUAF_DONTCHECKBOXINDIALOG	= 0x20,
	PUAF_TRUSTED	= 0x40,
	PUAF_ACCEPT_WILDCARD_SCHEME	= 0x80,
	PUAF_ENFORCERESTRICTED	= 0x100,
	PUAF_NOSAVEDFILECHECK	= 0x200,
	PUAF_REQUIRESAVEDFILECHECK	= 0x400,
	PUAF_DONT_USE_CACHE	= 0x1000,
	PUAF_RESERVED1	= 0x2000,
	PUAF_RESERVED2	= 0x4000,
	PUAF_LMZ_UNLOCKED	= 0x10000,
	PUAF_LMZ_LOCKED	= 0x20000,
	PUAF_DEFAULTZONEPOL	= 0x40000,
	PUAF_NPL_USE_LOCKED_IF_RESTRICTED	= 0x80000,
	PUAF_NOUIIFLOCKED	= 0x100000,
	PUAF_DRAGPROTOCOLCHECK	= 0x200000
    } 	PUAF;

typedef  
enum __MIDL_IInternetSecurityManager_0002
    {	PUAFOUT_DEFAULT	= 0,
	PUAFOUT_ISLOCKZONEPOLICY	= 0x1
    } 	PUAFOUT;







typedef  
enum __MIDL_IInternetSecurityManager_0003
    {	SZM_CREATE	= 0,
	SZM_DELETE	= 0x1
    } 	SZM_FLAGS;
















extern "C" const IID IID_IInternetSecurityManager;


    
    struct __declspec(uuid("79eac9ee-baf9-11ce-8c82-00aa004ba90b")) __declspec(novtable)
    IInternetSecurityManager : public IUnknown
    {
    public:
        virtual HRESULT __stdcall SetSecuritySite( 
              IInternetSecurityMgrSite *pSite) = 0;
        
        virtual HRESULT __stdcall GetSecuritySite( 
              IInternetSecurityMgrSite **ppSite) = 0;
        
        virtual HRESULT __stdcall MapUrlToZone( 
              LPCWSTR pwszUrl,
              DWORD *pdwZone,
             DWORD dwFlags) = 0;
        
        virtual HRESULT __stdcall GetSecurityId( 
              LPCWSTR pwszUrl,
              BYTE *pbSecurityId,
              DWORD *pcbSecurityId,
             DWORD_PTR dwReserved) = 0;
        
        virtual HRESULT __stdcall ProcessUrlAction( 
              LPCWSTR pwszUrl,
             DWORD dwAction,
              BYTE *pPolicy,
             DWORD cbPolicy,
              BYTE *pContext,
             DWORD cbContext,
             DWORD dwFlags,
             DWORD dwReserved) = 0;
        
        virtual HRESULT __stdcall QueryCustomPolicy( 
              LPCWSTR pwszUrl,
              const GUID & guidKey,
              BYTE **ppPolicy,
              DWORD *pcbPolicy,
              BYTE *pContext,
             DWORD cbContext,
             DWORD dwReserved) = 0;
        
        virtual HRESULT __stdcall SetZoneMapping( 
             DWORD dwZone,
              LPCWSTR lpszPattern,
             DWORD dwFlags) = 0;
        
        virtual HRESULT __stdcall GetZoneMappings( 
             DWORD dwZone,
              IEnumString **ppenumString,
             DWORD dwFlags) = 0;
        
    };
    


























































































































#line 6845 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




#line 6850 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 

#line 6856 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"





extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0038_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0038_v0_0_s_ifspec;





 







extern "C" const IID IID_IInternetSecurityManagerEx;


    
    struct __declspec(uuid("F164EDF1-CC7C-4f0d-9A94-34222625C393")) __declspec(novtable)
    IInternetSecurityManagerEx : public IInternetSecurityManager
    {
    public:
        virtual HRESULT __stdcall ProcessUrlActionEx( 
              LPCWSTR pwszUrl,
             DWORD dwAction,
              BYTE *pPolicy,
             DWORD cbPolicy,
              BYTE *pContext,
             DWORD cbContext,
             DWORD dwFlags,
             DWORD dwReserved,
              DWORD *pdwOutFlags) = 0;
        
    };
    










































































































































#line 7036 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




#line 7041 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 

#line 7047 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"
#line 7048 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"





extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0039_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0039_v0_0_s_ifspec;





 


extern "C" const IID IID_IInternetSecurityManagerEx2;


    
    struct __declspec(uuid("F1E50292-A795-4117-8E09-2B560A72AC60")) __declspec(novtable)
    IInternetSecurityManagerEx2 : public IInternetSecurityManagerEx
    {
    public:
        virtual HRESULT __stdcall MapUrlToZoneEx2( 
              IUri *pUri,
              DWORD *pdwZone,
             DWORD dwFlags,
              LPWSTR *ppwszMappedUrl,
              DWORD *pdwOutFlags) = 0;
        
        virtual HRESULT __stdcall ProcessUrlActionEx2( 
              IUri *pUri,
             DWORD dwAction,
              BYTE *pPolicy,
             DWORD cbPolicy,
              BYTE *pContext,
             DWORD cbContext,
             DWORD dwFlags,
             DWORD_PTR dwReserved,
              DWORD *pdwOutFlags) = 0;
        
        virtual HRESULT __stdcall GetSecurityIdEx2( 
              IUri *pUri,
              BYTE *pbSecurityId,
              DWORD *pcbSecurityId,
             DWORD_PTR dwReserved) = 0;
        
        virtual HRESULT __stdcall QueryCustomPolicyEx2( 
              IUri *pUri,
              const GUID & guidKey,
              BYTE **ppPolicy,
              DWORD *pcbPolicy,
              BYTE *pContext,
             DWORD cbContext,
             DWORD_PTR dwReserved) = 0;
        
    };
    




























































































































































































#line 7295 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




#line 7300 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 

#line 7306 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"
#line 7307 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0040_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0040_v0_0_s_ifspec;





 


extern "C" const IID IID_IZoneIdentifier;


    
    struct __declspec(uuid("cd45f185-1b21-48e2-967b-ead743a8914e")) __declspec(novtable)
    IZoneIdentifier : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetId( 
              DWORD *pdwZone) = 0;
        
        virtual HRESULT __stdcall SetId( 
             DWORD dwZone) = 0;
        
        virtual HRESULT __stdcall Remove( void) = 0;
        
    };
    
































































#line 7403 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




#line 7408 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 

#line 7414 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"







extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0041_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0041_v0_0_s_ifspec;





 


extern "C" const IID IID_IInternetHostSecurityManager;


    
    struct __declspec(uuid("3af280b6-cb3f-11d0-891e-00c04fb6bfc4")) __declspec(novtable)
    IInternetHostSecurityManager : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetSecurityId( 
             BYTE *pbSecurityId,
             DWORD *pcbSecurityId,
             DWORD_PTR dwReserved) = 0;
        
        virtual HRESULT __stdcall ProcessUrlAction( 
             DWORD dwAction,
             BYTE *pPolicy,
             DWORD cbPolicy,
             BYTE *pContext,
             DWORD cbContext,
             DWORD dwFlags,
             DWORD dwReserved) = 0;
        
        virtual HRESULT __stdcall QueryCustomPolicy( 
             const GUID & guidKey,
             BYTE **ppPolicy,
             DWORD *pcbPolicy,
             BYTE *pContext,
             DWORD cbContext,
             DWORD dwReserved) = 0;
        
    };
    














































































#line 7542 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




#line 7547 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 

#line 7553 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"








































































#line 7626 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



#line 7630 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"

































































#line 7696 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"






















#line 7719 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"














#line 7734 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"


































extern "C" const GUID GUID_CUSTOM_LOCALMACHINEZONEUNLOCKED; 
#line 7770 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0042_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0042_v0_0_s_ifspec;





 

typedef  IInternetZoneManager *LPURLZONEMANAGER;

typedef 
enum tagURLZONE
    {	URLZONE_INVALID	= -1,
	URLZONE_PREDEFINED_MIN	= 0,
	URLZONE_LOCAL_MACHINE	= 0,
	URLZONE_INTRANET	= ( URLZONE_LOCAL_MACHINE + 1 ) ,
	URLZONE_TRUSTED	= ( URLZONE_INTRANET + 1 ) ,
	URLZONE_INTERNET	= ( URLZONE_TRUSTED + 1 ) ,
	URLZONE_UNTRUSTED	= ( URLZONE_INTERNET + 1 ) ,
	URLZONE_PREDEFINED_MAX	= 999,
	URLZONE_USER_MIN	= 1000,
	URLZONE_USER_MAX	= 10000
    } 	URLZONE;



typedef 
enum tagURLTEMPLATE
    {	URLTEMPLATE_CUSTOM	= 0,
	URLTEMPLATE_PREDEFINED_MIN	= 0x10000,
	URLTEMPLATE_LOW	= 0x10000,
	URLTEMPLATE_MEDLOW	= 0x10500,
	URLTEMPLATE_MEDIUM	= 0x11000,
	URLTEMPLATE_MEDHIGH	= 0x11500,
	URLTEMPLATE_HIGH	= 0x12000,
	URLTEMPLATE_PREDEFINED_MAX	= 0x20000
    } 	URLTEMPLATE;


enum __MIDL_IInternetZoneManager_0001
    {	MAX_ZONE_PATH	= 260,
	MAX_ZONE_DESCRIPTION	= 200
    } ;
typedef  
enum __MIDL_IInternetZoneManager_0002
    {	ZAFLAGS_CUSTOM_EDIT	= 0x1,
	ZAFLAGS_ADD_SITES	= 0x2,
	ZAFLAGS_REQUIRE_VERIFICATION	= 0x4,
	ZAFLAGS_INCLUDE_PROXY_OVERRIDE	= 0x8,
	ZAFLAGS_INCLUDE_INTRANET_SITES	= 0x10,
	ZAFLAGS_NO_UI	= 0x20,
	ZAFLAGS_SUPPORTS_VERIFICATION	= 0x40,
	ZAFLAGS_UNC_AS_INTRANET	= 0x80,
	ZAFLAGS_DETECT_INTRANET	= 0x100,
	ZAFLAGS_USE_LOCKED_ZONES	= 0x10000,
	ZAFLAGS_VERIFY_TEMPLATE_SETTINGS	= 0x20000,
	ZAFLAGS_NO_CACHE	= 0x40000
    } 	ZAFLAGS;

typedef struct _ZONEATTRIBUTES
    {
    ULONG cbSize;
    WCHAR szDisplayName[ 260 ];
    WCHAR szDescription[ 200 ];
    WCHAR szIconPath[ 260 ];
    DWORD dwTemplateMinLevel;
    DWORD dwTemplateRecommended;
    DWORD dwTemplateCurrentLevel;
    DWORD dwFlags;
    } 	ZONEATTRIBUTES;

typedef struct _ZONEATTRIBUTES *LPZONEATTRIBUTES;

















typedef 
enum _URLZONEREG
    {	URLZONEREG_DEFAULT	= 0,
	URLZONEREG_HKLM	= ( URLZONEREG_DEFAULT + 1 ) ,
	URLZONEREG_HKCU	= ( URLZONEREG_HKLM + 1 ) 
    } 	URLZONEREG;
































extern "C" const IID IID_IInternetZoneManager;


    
    struct __declspec(uuid("79eac9ef-baf9-11ce-8c82-00aa004ba90b")) __declspec(novtable)
    IInternetZoneManager : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetZoneAttributes( 
             DWORD dwZone,
             ZONEATTRIBUTES *pZoneAttributes) = 0;
        
        virtual HRESULT __stdcall SetZoneAttributes( 
             DWORD dwZone,
             ZONEATTRIBUTES *pZoneAttributes) = 0;
        
        virtual HRESULT __stdcall GetZoneCustomPolicy( 
             DWORD dwZone,
             const GUID & guidKey,
             BYTE **ppPolicy,
             DWORD *pcbPolicy,
             URLZONEREG urlZoneReg) = 0;
        
        virtual HRESULT __stdcall SetZoneCustomPolicy( 
             DWORD dwZone,
             const GUID & guidKey,
             BYTE *pPolicy,
             DWORD cbPolicy,
             URLZONEREG urlZoneReg) = 0;
        
        virtual HRESULT __stdcall GetZoneActionPolicy( 
             DWORD dwZone,
             DWORD dwAction,
             BYTE *pPolicy,
             DWORD cbPolicy,
             URLZONEREG urlZoneReg) = 0;
        
        virtual HRESULT __stdcall SetZoneActionPolicy( 
             DWORD dwZone,
             DWORD dwAction,
             BYTE *pPolicy,
             DWORD cbPolicy,
             URLZONEREG urlZoneReg) = 0;
        
        virtual HRESULT __stdcall PromptAction( 
             DWORD dwAction,
             HWND hwndParent,
             LPCWSTR pwszUrl,
             LPCWSTR pwszText,
             DWORD dwPromptFlags) = 0;
        
        virtual HRESULT __stdcall LogAction( 
             DWORD dwAction,
             LPCWSTR pwszUrl,
             LPCWSTR pwszText,
             DWORD dwLogFlags) = 0;
        
        virtual HRESULT __stdcall CreateZoneEnumerator( 
             DWORD *pdwEnum,
             DWORD *pdwCount,
             DWORD dwFlags) = 0;
        
        virtual HRESULT __stdcall GetZoneAt( 
             DWORD dwEnum,
             DWORD dwIndex,
             DWORD *pdwZone) = 0;
        
        virtual HRESULT __stdcall DestroyZoneEnumerator( 
             DWORD dwEnum) = 0;
        
        virtual HRESULT __stdcall CopyTemplatePoliciesToZone( 
             DWORD dwTemplate,
             DWORD dwZone,
             DWORD dwReserved) = 0;
        
    };
    































































































































































#line 8139 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




#line 8144 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 

#line 8150 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"





extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0043_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0043_v0_0_s_ifspec;





 










extern "C" const IID IID_IInternetZoneManagerEx;


    
    struct __declspec(uuid("A4C23339-8E06-431e-9BF4-7E711C085648")) __declspec(novtable)
    IInternetZoneManagerEx : public IInternetZoneManager
    {
    public:
        virtual HRESULT __stdcall GetZoneActionPolicyEx( 
             DWORD dwZone,
             DWORD dwAction,
             BYTE *pPolicy,
             DWORD cbPolicy,
             URLZONEREG urlZoneReg,
             DWORD dwFlags) = 0;
        
        virtual HRESULT __stdcall SetZoneActionPolicyEx( 
             DWORD dwZone,
             DWORD dwAction,
             BYTE *pPolicy,
             DWORD cbPolicy,
             URLZONEREG urlZoneReg,
             DWORD dwFlags) = 0;
        
    };
    
























































































































































































#line 8384 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




#line 8389 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 

#line 8395 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"
#line 8396 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"







extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0044_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0044_v0_0_s_ifspec;





 





extern "C" const IID IID_IInternetZoneManagerEx2;


    
    struct __declspec(uuid("EDC17559-DD5D-4846-8EEF-8BECBA5A4ABF")) __declspec(novtable)
    IInternetZoneManagerEx2 : public IInternetZoneManagerEx
    {
    public:
        virtual HRESULT __stdcall GetZoneAttributesEx( 
             DWORD dwZone,
             ZONEATTRIBUTES *pZoneAttributes,
             DWORD dwFlags) = 0;
        
        virtual HRESULT __stdcall GetZoneSecurityState( 
             DWORD dwZoneIndex,
             BOOL fRespectPolicy,
             LPDWORD pdwState,
             BOOL *pfPolicyEncountered) = 0;
        
        virtual HRESULT __stdcall GetIESecurityState( 
             BOOL fRespectPolicy,
             LPDWORD pdwState,
             BOOL *pfPolicyEncountered,
             BOOL fNoCache) = 0;
        
        virtual HRESULT __stdcall FixUnsecureSettings( void) = 0;
        
    };
    




























































































































































































































#line 8666 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




#line 8671 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 

#line 8677 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"
#line 8678 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"
extern "C" const IID CLSID_SoftDistExt;  














typedef struct _tagCODEBASEHOLD
    {
    ULONG cbSize;
    LPWSTR szDistUnit;
    LPWSTR szCodeBase;
    DWORD dwVersionMS;
    DWORD dwVersionLS;
    DWORD dwStyle;
    } 	CODEBASEHOLD;

typedef struct _tagCODEBASEHOLD *LPCODEBASEHOLD;

typedef struct _tagSOFTDISTINFO
    {
    ULONG cbSize;
    DWORD dwFlags;
    DWORD dwAdState;
    LPWSTR szTitle;
    LPWSTR szAbstract;
    LPWSTR szHREF;
    DWORD dwInstalledVersionMS;
    DWORD dwInstalledVersionLS;
    DWORD dwUpdateVersionMS;
    DWORD dwUpdateVersionLS;
    DWORD dwAdvertisedVersionMS;
    DWORD dwAdvertisedVersionLS;
    DWORD dwReserved;
    } 	SOFTDISTINFO;

typedef struct _tagSOFTDISTINFO *LPSOFTDISTINFO;



extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0045_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0045_v0_0_s_ifspec;





 


extern "C" const IID IID_ISoftDistExt;


    
    struct __declspec(uuid("B15B8DC1-C7E1-11d0-8680-00AA00BDCB71")) __declspec(novtable)
    ISoftDistExt : public IUnknown
    {
    public:
        virtual HRESULT __stdcall ProcessSoftDist( 
             LPCWSTR szCDFURL,
             IXMLElement *pSoftDistElement,
             LPSOFTDISTINFO lpsdi) = 0;
        
        virtual HRESULT __stdcall GetFirstCodeBase( 
             
              LPWSTR *szCodeBase,
             LPDWORD dwMaxSize) = 0;
        
        virtual HRESULT __stdcall GetNextCodeBase( 
             
              LPWSTR *szCodeBase,
             LPDWORD dwMaxSize) = 0;
        
        virtual HRESULT __stdcall AsyncInstallDistributionUnit( 
             IBindCtx *pbc,
             LPVOID pvReserved,
             DWORD flags,
             LPCODEBASEHOLD lpcbh) = 0;
        
    };
    

















































































#line 8849 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




#line 8854 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 

extern "C" HRESULT __stdcall GetSoftwareUpdateInfo( LPCWSTR szDistUnit, LPSOFTDISTINFO psdi );
extern "C" HRESULT __stdcall SetSoftwareUpdateAdvertisementState( LPCWSTR szDistUnit, DWORD dwAdState, DWORD dwAdvertisedVersionMS, DWORD dwAdvertisedVersionLS );
#line 8862 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0046_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0046_v0_0_s_ifspec;





 

typedef  ICatalogFileInfo *LPCATALOGFILEINFO;


extern "C" const IID IID_ICatalogFileInfo;


    
    struct __declspec(uuid("711C7600-6B48-11d1-B403-00AA00B92AF1")) __declspec(novtable)
    ICatalogFileInfo : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetCatalogFile( 
             
              LPSTR *ppszCatalogFile) = 0;
        
        virtual HRESULT __stdcall GetJavaTrust( 
             void **ppJavaTrust) = 0;
        
    };
    



























































#line 8955 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




#line 8960 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 

#line 8966 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0047_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0047_v0_0_s_ifspec;





 

typedef    IDataFilter *LPDATAFILTER;


extern "C" const IID IID_IDataFilter;


    
    struct __declspec(uuid("69d14c80-c18e-11d0-a9ce-006097942311")) __declspec(novtable)
    IDataFilter : public IUnknown
    {
    public:
        virtual HRESULT __stdcall DoEncode( 
             DWORD dwFlags,
             LONG lInBufferSize,
              BYTE *pbInBuffer,
             LONG lOutBufferSize,
              BYTE *pbOutBuffer,
             LONG lInBytesAvailable,
              LONG *plInBytesRead,
              LONG *plOutBytesWritten,
             DWORD dwReserved) = 0;
        
        virtual HRESULT __stdcall DoDecode( 
             DWORD dwFlags,
             LONG lInBufferSize,
              BYTE *pbInBuffer,
             LONG lOutBufferSize,
              BYTE *pbOutBuffer,
             LONG lInBytesAvailable,
              LONG *plInBytesRead,
              LONG *plOutBytesWritten,
             DWORD dwReserved) = 0;
        
        virtual HRESULT __stdcall SetEncodingLevel( 
             DWORD dwEncLevel) = 0;
        
    };
    

















































































#line 9099 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




#line 9104 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 

#line 9110 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"


typedef struct _tagPROTOCOLFILTERDATA
    {
    DWORD cbSize;
    IInternetProtocolSink *pProtocolSink;
    IInternetProtocol *pProtocol;
    IUnknown *pUnk;
    DWORD dwFilterFlags;
    } 	PROTOCOLFILTERDATA;



extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0048_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0048_v0_0_s_ifspec;





 

typedef  IEncodingFilterFactory *LPENCODINGFILTERFACTORY;

typedef struct _tagDATAINFO
    {
    ULONG ulTotalSize;
    ULONG ulavrPacketSize;
    ULONG ulConnectSpeed;
    ULONG ulProcessorSpeed;
    } 	DATAINFO;


extern "C" const IID IID_IEncodingFilterFactory;


    
    struct __declspec(uuid("70bdde00-c18e-11d0-a9ce-006097942311")) __declspec(novtable)
    IEncodingFilterFactory : public IUnknown
    {
    public:
        virtual HRESULT __stdcall FindBestFilter( 
             LPCWSTR pwzCodeIn,
             LPCWSTR pwzCodeOut,
             DATAINFO info,
             IDataFilter **ppDF) = 0;
        
        virtual HRESULT __stdcall GetDefaultFilter( 
             LPCWSTR pwzCodeIn,
             LPCWSTR pwzCodeOut,
             IDataFilter **ppDF) = 0;
        
    };
    































































#line 9228 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




#line 9233 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 

#line 9239 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



BOOL __stdcall IsLoggingEnabledA( LPCSTR  pszUrl);                    
BOOL __stdcall IsLoggingEnabledW( LPCWSTR  pwszUrl);                  




#line 9249 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"
typedef struct _tagHIT_LOGGING_INFO
    {
    DWORD dwStructSize;
    LPSTR lpszLoggedUrlName;
    SYSTEMTIME StartTime;
    SYSTEMTIME EndTime;
    LPSTR lpszExtendedInfo;
    } 	HIT_LOGGING_INFO;

typedef struct _tagHIT_LOGGING_INFO *LPHIT_LOGGING_INFO;

BOOL __stdcall WriteHitLogging( LPHIT_LOGGING_INFO lpLogginginfo);    

struct CONFIRMSAFETY
    {
    CLSID clsid;
    IUnknown *pUnk;
    DWORD dwFlags;
    } ;
extern "C" const GUID GUID_CUSTOM_CONFIRMOBJECTSAFETY; 
#line 9270 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0049_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0049_v0_0_s_ifspec;





 

typedef  IWrappedProtocol *LPIWRAPPEDPROTOCOL;


extern "C" const IID IID_IWrappedProtocol;


    
    struct __declspec(uuid("53c84785-8425-4dc5-971b-e58d9c19f9b6")) __declspec(novtable)
    IWrappedProtocol : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetWrapperCode( 
             LONG *pnCode,
             DWORD_PTR dwReserved) = 0;
        
    };
    




















































#line 9353 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




#line 9358 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"



 

#line 9364 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"


extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0050_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_urlmon_0000_0050_v0_0_s_ifspec;



unsigned long             __stdcall  BSTR_UserSize(      unsigned long *, unsigned long            ,  BSTR * ); 
unsigned char * __stdcall  BSTR_UserMarshal(   unsigned long *,  unsigned char *,  BSTR * ); 
unsigned char * __stdcall  BSTR_UserUnmarshal( unsigned long *,  unsigned char *,  BSTR * ); 
void                      __stdcall  BSTR_UserFree(      unsigned long *,  BSTR * ); 

unsigned long             __stdcall  HWND_UserSize(      unsigned long *, unsigned long            ,  HWND * ); 
unsigned char * __stdcall  HWND_UserMarshal(   unsigned long *,  unsigned char *,  HWND * ); 
unsigned char * __stdcall  HWND_UserUnmarshal( unsigned long *,  unsigned char *,  HWND * ); 
void                      __stdcall  HWND_UserFree(      unsigned long *,  HWND * ); 

unsigned long             __stdcall  BSTR_UserSize64(      unsigned long *, unsigned long            ,  BSTR * ); 
unsigned char * __stdcall  BSTR_UserMarshal64(   unsigned long *,  unsigned char *,  BSTR * ); 
unsigned char * __stdcall  BSTR_UserUnmarshal64( unsigned long *,  unsigned char *,  BSTR * ); 
void                      __stdcall  BSTR_UserFree64(      unsigned long *,  BSTR * ); 

unsigned long             __stdcall  HWND_UserSize64(      unsigned long *, unsigned long            ,  HWND * ); 
unsigned char * __stdcall  HWND_UserMarshal64(   unsigned long *,  unsigned char *,  HWND * ); 
unsigned char * __stdcall  HWND_UserUnmarshal64( unsigned long *,  unsigned char *,  HWND * ); 
void                      __stdcall  HWND_UserFree64(      unsigned long *,  HWND * ); 

 HRESULT __stdcall IBinding_GetBindResult_Proxy( 
    IBinding * This,
     CLSID *pclsidProtocol,
     DWORD *pdwResult,
     
      LPOLESTR *pszResult,
     DWORD *pdwReserved);


 HRESULT __stdcall IBinding_GetBindResult_Stub( 
     IBinding * This,
      CLSID *pclsidProtocol,
      DWORD *pdwResult,
      LPOLESTR *pszResult,
     DWORD dwReserved);

 HRESULT __stdcall IBindStatusCallback_GetBindInfo_Proxy( 
    IBindStatusCallback * This,
     DWORD *grfBINDF,
     BINDINFO *pbindinfo);


 HRESULT __stdcall IBindStatusCallback_GetBindInfo_Stub( 
     IBindStatusCallback * This,
      DWORD *grfBINDF,
      RemBINDINFO *pbindinfo,
      RemSTGMEDIUM *pstgmed);

 HRESULT __stdcall IBindStatusCallback_OnDataAvailable_Proxy( 
    IBindStatusCallback * This,
     DWORD grfBSCF,
     DWORD dwSize,
     FORMATETC *pformatetc,
     STGMEDIUM *pstgmed);


 HRESULT __stdcall IBindStatusCallback_OnDataAvailable_Stub( 
     IBindStatusCallback * This,
     DWORD grfBSCF,
     DWORD dwSize,
      RemFORMATETC *pformatetc,
      RemSTGMEDIUM *pstgmed);

 HRESULT __stdcall IBindStatusCallbackEx_GetBindInfoEx_Proxy( 
    IBindStatusCallbackEx * This,
     DWORD *grfBINDF,
     BINDINFO *pbindinfo,
     DWORD *grfBINDF2,
     DWORD *pdwReserved);


 HRESULT __stdcall IBindStatusCallbackEx_GetBindInfoEx_Stub( 
     IBindStatusCallbackEx * This,
      DWORD *grfBINDF,
      RemBINDINFO *pbindinfo,
      RemSTGMEDIUM *pstgmed,
      DWORD *grfBINDF2,
      DWORD *pdwReserved);

 HRESULT __stdcall IWinInetInfo_QueryOption_Proxy( 
    IWinInetInfo * This,
     DWORD dwOption,
     LPVOID pBuffer,
     DWORD *pcbBuf);


 HRESULT __stdcall IWinInetInfo_QueryOption_Stub( 
     IWinInetInfo * This,
     DWORD dwOption,
      BYTE *pBuffer,
      DWORD *pcbBuf);

 HRESULT __stdcall IWinInetHttpInfo_QueryInfo_Proxy( 
    IWinInetHttpInfo * This,
     DWORD dwOption,
     LPVOID pBuffer,
     DWORD *pcbBuf,
     DWORD *pdwFlags,
     DWORD *pdwReserved);


 HRESULT __stdcall IWinInetHttpInfo_QueryInfo_Stub( 
     IWinInetHttpInfo * This,
     DWORD dwOption,
      BYTE *pBuffer,
      DWORD *pcbBuf,
      DWORD *pdwFlags,
      DWORD *pdwReserved);

 HRESULT __stdcall IBindHost_MonikerBindToStorage_Proxy( 
    IBindHost * This,
     IMoniker *pMk,
     IBindCtx *pBC,
     IBindStatusCallback *pBSC,
     const IID & riid,
     void **ppvObj);


 HRESULT __stdcall IBindHost_MonikerBindToStorage_Stub( 
     IBindHost * This,
      IMoniker *pMk,
      IBindCtx *pBC,
      IBindStatusCallback *pBSC,
      const IID & riid,
      IUnknown **ppvObj);

 HRESULT __stdcall IBindHost_MonikerBindToObject_Proxy( 
    IBindHost * This,
     IMoniker *pMk,
     IBindCtx *pBC,
     IBindStatusCallback *pBSC,
     const IID & riid,
     void **ppvObj);


 HRESULT __stdcall IBindHost_MonikerBindToObject_Stub( 
     IBindHost * This,
      IMoniker *pMk,
      IBindCtx *pBC,
      IBindStatusCallback *pBSC,
      const IID & riid,
      IUnknown **ppvObj);






}
#line 9521 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"

#line 9523 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\urlmon.h"




#line 1009 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"
#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\propidl.h"





 










#pragma warning( disable: 4049 )  




























#pragma once
#line 48 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\propidl.h"

 



typedef struct IPropertyStorage IPropertyStorage;
#line 55 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\propidl.h"




typedef struct IPropertySetStorage IPropertySetStorage;
#line 61 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\propidl.h"




typedef struct IEnumSTATPROPSTG IEnumSTATPROPSTG;
#line 67 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\propidl.h"




typedef struct IEnumSTATPROPSETSTG IEnumSTATPROPSETSTG;
#line 73 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\propidl.h"







extern "C"{
#line 82 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\propidl.h"



 









#pragma warning(push)
#line 97 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\propidl.h"
#pragma warning(disable:4201)    
#pragma warning(disable:4237)    
#line 100 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\propidl.h"

#pragma once
#line 103 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\propidl.h"



typedef struct tagVersionedStream
    {
    GUID guidVersion;
    IStream *pStream;
    } 	VERSIONEDSTREAM;

typedef struct tagVersionedStream *LPVERSIONEDSTREAM;

























typedef struct tagPROPVARIANT PROPVARIANT;
#line 140 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\propidl.h"
typedef struct tagCAC
    {
    ULONG cElems;
    CHAR *pElems;
    } 	CAC;

typedef struct tagCAUB
    {
    ULONG cElems;
    UCHAR *pElems;
    } 	CAUB;

typedef struct tagCAI
    {
    ULONG cElems;
    SHORT *pElems;
    } 	CAI;

typedef struct tagCAUI
    {
    ULONG cElems;
    USHORT *pElems;
    } 	CAUI;

typedef struct tagCAL
    {
    ULONG cElems;
    LONG *pElems;
    } 	CAL;

typedef struct tagCAUL
    {
    ULONG cElems;
    ULONG *pElems;
    } 	CAUL;

typedef struct tagCAFLT
    {
    ULONG cElems;
    FLOAT *pElems;
    } 	CAFLT;

typedef struct tagCADBL
    {
    ULONG cElems;
    DOUBLE *pElems;
    } 	CADBL;

typedef struct tagCACY
    {
    ULONG cElems;
    CY *pElems;
    } 	CACY;

typedef struct tagCADATE
    {
    ULONG cElems;
    DATE *pElems;
    } 	CADATE;

typedef struct tagCABSTR
    {
    ULONG cElems;
    BSTR *pElems;
    } 	CABSTR;

typedef struct tagCABSTRBLOB
    {
    ULONG cElems;
    BSTRBLOB *pElems;
    } 	CABSTRBLOB;

typedef struct tagCABOOL
    {
    ULONG cElems;
    VARIANT_BOOL *pElems;
    } 	CABOOL;

typedef struct tagCASCODE
    {
    ULONG cElems;
    SCODE *pElems;
    } 	CASCODE;

typedef struct tagCAPROPVARIANT
    {
    ULONG cElems;
    PROPVARIANT *pElems;
    } 	CAPROPVARIANT;

typedef struct tagCAH
    {
    ULONG cElems;
    LARGE_INTEGER *pElems;
    } 	CAH;

typedef struct tagCAUH
    {
    ULONG cElems;
    ULARGE_INTEGER *pElems;
    } 	CAUH;

typedef struct tagCALPSTR
    {
    ULONG cElems;
    LPSTR *pElems;
    } 	CALPSTR;

typedef struct tagCALPWSTR
    {
    ULONG cElems;
    LPWSTR *pElems;
    } 	CALPWSTR;

typedef struct tagCAFILETIME
    {
    ULONG cElems;
    FILETIME *pElems;
    } 	CAFILETIME;

typedef struct tagCACLIPDATA
    {
    ULONG cElems;
    CLIPDATA *pElems;
    } 	CACLIPDATA;

typedef struct tagCACLSID
    {
    ULONG cElems;
    CLSID *pElems;
    } 	CACLSID;











typedef WORD PROPVAR_PAD1;
typedef WORD PROPVAR_PAD2;
typedef WORD PROPVAR_PAD3;

#line 287 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\propidl.h"





#line 293 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\propidl.h"

struct tagPROPVARIANT {
  union {
#line 297 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\propidl.h"
struct 
    {
    VARTYPE vt;
    PROPVAR_PAD1 wReserved1;
    PROPVAR_PAD2 wReserved2;
    PROPVAR_PAD3 wReserved3;
     union 
        {
          
        CHAR cVal;
        UCHAR bVal;
        SHORT iVal;
        USHORT uiVal;
        LONG lVal;
        ULONG ulVal;
        INT intVal;
        UINT uintVal;
        LARGE_INTEGER hVal;
        ULARGE_INTEGER uhVal;
        FLOAT fltVal;
        DOUBLE dblVal;
        VARIANT_BOOL boolVal;
        
        SCODE scode;
        CY cyVal;
        DATE date;
        FILETIME filetime;
        CLSID *puuid;
        CLIPDATA *pclipdata;
        BSTR bstrVal;
        BSTRBLOB bstrblobVal;
        BLOB blob;
        LPSTR pszVal;
        LPWSTR pwszVal;
        IUnknown *punkVal;
        IDispatch *pdispVal;
        IStream *pStream;
        IStorage *pStorage;
        LPVERSIONEDSTREAM pVersionedStream;
        LPSAFEARRAY parray;
        CAC cac;
        CAUB caub;
        CAI cai;
        CAUI caui;
        CAL cal;
        CAUL caul;
        CAH cah;
        CAUH cauh;
        CAFLT caflt;
        CADBL cadbl;
        CABOOL cabool;
        CASCODE cascode;
        CACY cacy;
        CADATE cadate;
        CAFILETIME cafiletime;
        CACLSID cauuid;
        CACLIPDATA caclipdata;
        CABSTR cabstr;
        CABSTRBLOB cabstrblob;
        CALPSTR calpstr;
        CALPWSTR calpwstr;
        CAPROPVARIANT capropvar;
        CHAR *pcVal;
        UCHAR *pbVal;
        SHORT *piVal;
        USHORT *puiVal;
        LONG *plVal;
        ULONG *pulVal;
        INT *pintVal;
        UINT *puintVal;
        FLOAT *pfltVal;
        DOUBLE *pdblVal;
        VARIANT_BOOL *pboolVal;
        DECIMAL *pdecVal;
        SCODE *pscode;
        CY *pcyVal;
        DATE *pdate;
        BSTR *pbstrVal;
        IUnknown **ppunkVal;
        IDispatch **ppdispVal;
        LPSAFEARRAY *pparray;
        PROPVARIANT *pvarVal;
        } 	;
    } ;

    DECIMAL decVal;
  };
};
#line 386 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\propidl.h"

#line 388 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\propidl.h"










typedef struct tagPROPVARIANT * LPPROPVARIANT;







#line 407 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\propidl.h"
#line 408 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\propidl.h"

#line 410 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\propidl.h"




















































































enum PIDMSI_STATUS_VALUE
    {	PIDMSI_STATUS_NORMAL	= 0,
	PIDMSI_STATUS_NEW	= ( PIDMSI_STATUS_NORMAL + 1 ) ,
	PIDMSI_STATUS_PRELIM	= ( PIDMSI_STATUS_NEW + 1 ) ,
	PIDMSI_STATUS_DRAFT	= ( PIDMSI_STATUS_PRELIM + 1 ) ,
	PIDMSI_STATUS_INPROGRESS	= ( PIDMSI_STATUS_DRAFT + 1 ) ,
	PIDMSI_STATUS_EDIT	= ( PIDMSI_STATUS_INPROGRESS + 1 ) ,
	PIDMSI_STATUS_REVIEW	= ( PIDMSI_STATUS_EDIT + 1 ) ,
	PIDMSI_STATUS_PROOF	= ( PIDMSI_STATUS_REVIEW + 1 ) ,
	PIDMSI_STATUS_FINAL	= ( PIDMSI_STATUS_PROOF + 1 ) ,
	PIDMSI_STATUS_OTHER	= 0x7fff
    } ;






typedef struct tagPROPSPEC
    {
    ULONG ulKind;
     union 
        {
        PROPID propid;
        LPOLESTR lpwstr;
          
        } 	;
    } 	PROPSPEC;

typedef struct tagSTATPROPSTG
    {
    LPOLESTR lpwstrName;
    PROPID propid;
    VARTYPE vt;
    } 	STATPROPSTG;






typedef struct tagSTATPROPSETSTG
    {
    FMTID fmtid;
    CLSID clsid;
    DWORD grfFlags;
    FILETIME mtime;
    FILETIME ctime;
    FILETIME atime;
    DWORD dwOSVersion;
    } 	STATPROPSETSTG;



extern RPC_IF_HANDLE __MIDL_itf_propidl_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_propidl_0000_0000_v0_0_s_ifspec;





 


extern "C" const IID IID_IPropertyStorage;


    
    struct __declspec(uuid("00000138-0000-0000-C000-000000000046")) __declspec(novtable)
    IPropertyStorage : public IUnknown
    {
    public:
        virtual HRESULT __stdcall ReadMultiple( 
             ULONG cpspec,
              const PROPSPEC rgpspec[  ],
              PROPVARIANT rgpropvar[  ]) = 0;
        
        virtual HRESULT __stdcall WriteMultiple( 
             ULONG cpspec,
              const PROPSPEC rgpspec[  ],
              const PROPVARIANT rgpropvar[  ],
             PROPID propidNameFirst) = 0;
        
        virtual HRESULT __stdcall DeleteMultiple( 
             ULONG cpspec,
              const PROPSPEC rgpspec[  ]) = 0;
        
        virtual HRESULT __stdcall ReadPropertyNames( 
             ULONG cpropid,
              const PROPID rgpropid[  ],
              LPOLESTR rglpwstrName[  ]) = 0;
        
        virtual HRESULT __stdcall WritePropertyNames( 
             ULONG cpropid,
              const PROPID rgpropid[  ],
              const LPOLESTR rglpwstrName[  ]) = 0;
        
        virtual HRESULT __stdcall DeletePropertyNames( 
             ULONG cpropid,
              const PROPID rgpropid[  ]) = 0;
        
        virtual HRESULT __stdcall Commit( 
             DWORD grfCommitFlags) = 0;
        
        virtual HRESULT __stdcall Revert( void) = 0;
        
        virtual HRESULT __stdcall Enum( 
              IEnumSTATPROPSTG **ppenum) = 0;
        
        virtual HRESULT __stdcall SetTimes( 
              const FILETIME *pctime,
              const FILETIME *patime,
              const FILETIME *pmtime) = 0;
        
        virtual HRESULT __stdcall SetClass( 
              const IID & clsid) = 0;
        
        virtual HRESULT __stdcall Stat( 
              STATPROPSETSTG *pstatpsstg) = 0;
        
    };
    












































































































































#line 757 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\propidl.h"




#line 762 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\propidl.h"






 

typedef    IPropertySetStorage *LPPROPERTYSETSTORAGE;


extern "C" const IID IID_IPropertySetStorage;


    
    struct __declspec(uuid("0000013A-0000-0000-C000-000000000046")) __declspec(novtable)
    IPropertySetStorage : public IUnknown
    {
    public:
        virtual HRESULT __stdcall Create( 
              const IID & rfmtid,
              const CLSID *pclsid,
             DWORD grfFlags,
             DWORD grfMode,
              IPropertyStorage **ppprstg) = 0;
        
        virtual HRESULT __stdcall Open( 
              const IID & rfmtid,
             DWORD grfMode,
              IPropertyStorage **ppprstg) = 0;
        
        virtual HRESULT __stdcall Delete( 
              const IID & rfmtid) = 0;
        
        virtual HRESULT __stdcall Enum( 
              IEnumSTATPROPSETSTG **ppenum) = 0;
        
    };
    














































































#line 880 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\propidl.h"




#line 885 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\propidl.h"






 

typedef    IEnumSTATPROPSTG *LPENUMSTATPROPSTG;


extern "C" const IID IID_IEnumSTATPROPSTG;


    
    struct __declspec(uuid("00000139-0000-0000-C000-000000000046")) __declspec(novtable)
    IEnumSTATPROPSTG : public IUnknown
    {
    public:
        virtual  HRESULT __stdcall Next( 
             ULONG celt,
             
              STATPROPSTG *rgelt,
             
               ULONG *pceltFetched) = 0;
        
        virtual HRESULT __stdcall Skip( 
             ULONG celt) = 0;
        
        virtual HRESULT __stdcall Reset( void) = 0;
        
        virtual HRESULT __stdcall Clone( 
              IEnumSTATPROPSTG **ppenum) = 0;
        
    };
    











































































#line 997 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\propidl.h"



 HRESULT __stdcall IEnumSTATPROPSTG_RemoteNext_Proxy( 
     IEnumSTATPROPSTG * This,
     ULONG celt,
      STATPROPSTG *rgelt,
      ULONG *pceltFetched);


void __stdcall IEnumSTATPROPSTG_RemoteNext_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#line 1016 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\propidl.h"






 

typedef    IEnumSTATPROPSETSTG *LPENUMSTATPROPSETSTG;


extern "C" const IID IID_IEnumSTATPROPSETSTG;


    
    struct __declspec(uuid("0000013B-0000-0000-C000-000000000046")) __declspec(novtable)
    IEnumSTATPROPSETSTG : public IUnknown
    {
    public:
        virtual  HRESULT __stdcall Next( 
             ULONG celt,
             
              STATPROPSETSTG *rgelt,
             
               ULONG *pceltFetched) = 0;
        
        virtual HRESULT __stdcall Skip( 
             ULONG celt) = 0;
        
        virtual HRESULT __stdcall Reset( void) = 0;
        
        virtual HRESULT __stdcall Clone( 
              IEnumSTATPROPSETSTG **ppenum) = 0;
        
    };
    











































































#line 1128 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\propidl.h"



 HRESULT __stdcall IEnumSTATPROPSETSTG_RemoteNext_Proxy( 
     IEnumSTATPROPSETSTG * This,
     ULONG celt,
      STATPROPSETSTG *rgelt,
      ULONG *pceltFetched);


void __stdcall IEnumSTATPROPSETSTG_RemoteNext_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#line 1147 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\propidl.h"



 

typedef    IPropertyStorage *LPPROPERTYSTORAGE;

 extern "C" __declspec(dllimport) HRESULT __stdcall PropVariantCopy(
             PROPVARIANT* pvarDest,
             const PROPVARIANT * pvarSrc);

extern "C" __declspec(dllimport) HRESULT __stdcall PropVariantClear( PROPVARIANT* pvar);

extern "C" __declspec(dllimport) HRESULT __stdcall FreePropVariantArray(
             ULONG cVariants,
             PROPVARIANT* rgvars);








inline void PropVariantInit ( PROPVARIANT * pvar )
{
    memset ( pvar, 0, sizeof(PROPVARIANT) );
}





#line 1181 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\propidl.h"


#line 1184 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\propidl.h"




 extern "C" __declspec(dllimport) HRESULT __stdcall StgCreatePropStg(
             IUnknown* pUnk,
             const IID & fmtid,
             const CLSID* pclsid,
             DWORD grfFlags,
              DWORD dwReserved,
             IPropertyStorage** ppPropStg);

 extern "C" __declspec(dllimport) HRESULT __stdcall StgOpenPropStg(
             IUnknown* pUnk,
             const IID & fmtid,
             DWORD grfFlags,
              DWORD dwReserved,
             IPropertyStorage** ppPropStg);

 extern "C" __declspec(dllimport) HRESULT __stdcall StgCreatePropSetStg(
             IStorage* pStorage,
              DWORD dwReserved,
             IPropertySetStorage** ppPropSetStg);



 extern "C" __declspec(dllimport) HRESULT __stdcall FmtIdToPropStgName(
             const FMTID* pfmtid,
             LPOLESTR oszName);

 extern "C" __declspec(dllimport) HRESULT __stdcall PropStgNameToFmtId(
             const LPOLESTR oszName,
             FMTID* pfmtid);

#line 1219 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\propidl.h"



typedef struct tagSERIALIZEDPROPERTYVALUE
{
    DWORD	dwType;
    BYTE	rgb[1];
} SERIALIZEDPROPERTYVALUE;
#line 1228 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\propidl.h"

extern "C"
  
SERIALIZEDPROPERTYVALUE* __stdcall
StgConvertVariantToProperty(
             const PROPVARIANT* pvar,
             USHORT CodePage,
             SERIALIZEDPROPERTYVALUE* pprop,
             ULONG* pcb,
             PROPID pid,
              BOOLEAN fReserved,
             ULONG* pcIndirect);


class PMemoryAllocator;

extern "C"
  
BOOLEAN __stdcall
StgConvertPropertyToVariant(
             const SERIALIZEDPROPERTYVALUE* pprop,
             USHORT CodePage,
             PROPVARIANT* pvar,
             PMemoryAllocator* pma);
#line 1253 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\propidl.h"



#pragma warning(pop)



#line 1261 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\propidl.h"


extern RPC_IF_HANDLE __MIDL_itf_propidl_0000_0004_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_propidl_0000_0004_v0_0_s_ifspec;



unsigned long             __stdcall  BSTR_UserSize(      unsigned long *, unsigned long            ,  BSTR * ); 
unsigned char * __stdcall  BSTR_UserMarshal(   unsigned long *,  unsigned char *,  BSTR * ); 
unsigned char * __stdcall  BSTR_UserUnmarshal( unsigned long *,  unsigned char *,  BSTR * ); 
void                      __stdcall  BSTR_UserFree(      unsigned long *,  BSTR * ); 

unsigned long             __stdcall  LPSAFEARRAY_UserSize(      unsigned long *, unsigned long            ,  LPSAFEARRAY * ); 
unsigned char * __stdcall  LPSAFEARRAY_UserMarshal(   unsigned long *,  unsigned char *,  LPSAFEARRAY * ); 
unsigned char * __stdcall  LPSAFEARRAY_UserUnmarshal( unsigned long *,  unsigned char *,  LPSAFEARRAY * ); 
void                      __stdcall  LPSAFEARRAY_UserFree(      unsigned long *,  LPSAFEARRAY * ); 

unsigned long             __stdcall  BSTR_UserSize64(      unsigned long *, unsigned long            ,  BSTR * ); 
unsigned char * __stdcall  BSTR_UserMarshal64(   unsigned long *,  unsigned char *,  BSTR * ); 
unsigned char * __stdcall  BSTR_UserUnmarshal64( unsigned long *,  unsigned char *,  BSTR * ); 
void                      __stdcall  BSTR_UserFree64(      unsigned long *,  BSTR * ); 

unsigned long             __stdcall  LPSAFEARRAY_UserSize64(      unsigned long *, unsigned long            ,  LPSAFEARRAY * ); 
unsigned char * __stdcall  LPSAFEARRAY_UserMarshal64(   unsigned long *,  unsigned char *,  LPSAFEARRAY * ); 
unsigned char * __stdcall  LPSAFEARRAY_UserUnmarshal64( unsigned long *,  unsigned char *,  LPSAFEARRAY * ); 
void                      __stdcall  LPSAFEARRAY_UserFree64(      unsigned long *,  LPSAFEARRAY * ); 

 HRESULT __stdcall IEnumSTATPROPSTG_Next_Proxy( 
    IEnumSTATPROPSTG * This,
     ULONG celt,
     
      STATPROPSTG *rgelt,
     
       ULONG *pceltFetched);


 HRESULT __stdcall IEnumSTATPROPSTG_Next_Stub( 
     IEnumSTATPROPSTG * This,
     ULONG celt,
      STATPROPSTG *rgelt,
      ULONG *pceltFetched);

 HRESULT __stdcall IEnumSTATPROPSETSTG_Next_Proxy( 
    IEnumSTATPROPSETSTG * This,
     ULONG celt,
     
      STATPROPSETSTG *rgelt,
     
       ULONG *pceltFetched);


 HRESULT __stdcall IEnumSTATPROPSETSTG_Next_Stub( 
     IEnumSTATPROPSETSTG * This,
     ULONG celt,
      STATPROPSETSTG *rgelt,
      ULONG *pceltFetched);






}
#line 1325 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\propidl.h"

#line 1327 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\propidl.h"




#line 1010 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"




extern "C" __declspec(dllimport) HRESULT __stdcall CreateStdProgressIndicator( HWND hwndParent,
                                    LPCOLESTR pszTitle,
                                    IBindStatusCallback * pIbscCaller,
                                    IBindStatusCallback ** ppIbsc);



#line 1 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\poppack.h"


























#pragma warning(disable:4103)

#pragma pack(pop)


#line 33 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\poppack.h"


#line 36 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\poppack.h"
#line 37 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\poppack.h"

#line 1022 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"
#line 1023 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"

#line 1025 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\objbase.h"


#line 41 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"






#line 48 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"










extern "C" const GUID  IID_IDirect3D9;



extern "C" const GUID  IID_IDirect3DDevice9;



extern "C" const GUID  IID_IDirect3DResource9;



extern "C" const GUID  IID_IDirect3DBaseTexture9;



extern "C" const GUID  IID_IDirect3DTexture9;



extern "C" const GUID  IID_IDirect3DCubeTexture9;



extern "C" const GUID  IID_IDirect3DVolumeTexture9;



extern "C" const GUID  IID_IDirect3DVertexBuffer9;



extern "C" const GUID  IID_IDirect3DIndexBuffer9;



extern "C" const GUID  IID_IDirect3DSurface9;



extern "C" const GUID  IID_IDirect3DVolume9;



extern "C" const GUID  IID_IDirect3DSwapChain9;



extern "C" const GUID  IID_IDirect3DVertexDeclaration9;



extern "C" const GUID  IID_IDirect3DVertexShader9;



extern "C" const GUID  IID_IDirect3DPixelShader9;



extern "C" const GUID  IID_IDirect3DStateBlock9;



extern "C" const GUID  IID_IDirect3DQuery9;




extern "C" const GUID  IID_HelperName;






extern "C" const GUID  IID_IDirect3D9Ex;



extern "C" const GUID  IID_IDirect3DDevice9Ex;



extern "C" const GUID  IID_IDirect3DSwapChain9Ex;



extern "C" const GUID  IID_IDirect3D9ExOverlayExtension;



extern "C" const GUID  IID_IDirect3DDevice9Video;



extern "C" const GUID  IID_IDirect3DAuthenticatedChannel9;



extern "C" const GUID  IID_IDirect3DCryptoSession9;


#line 162 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"


#line 165 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"











struct __declspec(uuid("81BDCBCA-64D4-426d-AE8D-AD0147F4275C")) IDirect3D9;
struct __declspec(uuid("D0223B96-BF7A-43fd-92BD-A43B0D82B9EB")) IDirect3DDevice9;

struct __declspec(uuid("B07C4FE5-310D-4ba8-A23C-4F0F206F218B")) IDirect3DStateBlock9;
struct __declspec(uuid("05EEC05D-8F7D-4362-B999-D1BAF357C704")) IDirect3DResource9;
struct __declspec(uuid("DD13C59C-36FA-4098-A8FB-C7ED39DC8546")) IDirect3DVertexDeclaration9;
struct __declspec(uuid("EFC5557E-6265-4613-8A94-43857889EB36")) IDirect3DVertexShader9;
struct __declspec(uuid("6D3BDBDC-5B02-4415-B852-CE5E8BCCB289")) IDirect3DPixelShader9;
struct __declspec(uuid("580CA87E-1D3C-4d54-991D-B7D3E3C298CE")) IDirect3DBaseTexture9;
struct __declspec(uuid("85C31227-3DE5-4f00-9B3A-F11AC38C18B5")) IDirect3DTexture9;
struct __declspec(uuid("2518526C-E789-4111-A7B9-47EF328D13E6")) IDirect3DVolumeTexture9;
struct __declspec(uuid("FFF32F81-D953-473a-9223-93D652ABA93F")) IDirect3DCubeTexture9;

struct __declspec(uuid("B64BB1B5-FD70-4df6-BF91-19D0A12455E3")) IDirect3DVertexBuffer9;
struct __declspec(uuid("7C9DD65E-D3F7-4529-ACEE-785830ACDE35")) IDirect3DIndexBuffer9;

struct __declspec(uuid("0CFBAF3A-9FF6-429a-99B3-A2796AF8B89B")) IDirect3DSurface9;
struct __declspec(uuid("24F416E6-1F67-4aa7-B88E-D33F6F3128A1")) IDirect3DVolume9;

struct __declspec(uuid("794950F2-ADFC-458a-905E-10A10B0B503B")) IDirect3DSwapChain9;
struct __declspec(uuid("d9771460-a695-4f26-bbd3-27b840b541cc")) IDirect3DQuery9;





struct __declspec(uuid("02177241-69FC-400C-8FF1-93A44DF6861D")) IDirect3D9Ex;
struct __declspec(uuid("B18B10CE-2649-405a-870F-95F777D4313A")) IDirect3DDevice9Ex;
struct __declspec(uuid("91886CAF-1C3D-4d2e-A0AB-3E4C7D8D3303")) IDirect3DSwapChain9Ex;
struct __declspec(uuid("187AEB13-AAF5-4C59-876D-E059088C0DF8")) IDirect3D9ExOverlayExtension;
struct __declspec(uuid("26DC4561-A1EE-4ae7-96DA-118A36C0EC95")) IDirect3DDevice9Video;
struct __declspec(uuid("FF24BEEE-DA21-4beb-98B5-D2F899F98AF9")) IDirect3DAuthenticatedChannel9;
struct __declspec(uuid("FA0AB799-7A9C-48CA-8C5B-237E71A54434")) IDirect3DCryptoSession9;

#line 211 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"








































#line 252 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"

#line 254 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"


typedef struct IDirect3D9                    IDirect3D9;
typedef struct IDirect3DDevice9              IDirect3DDevice9;
typedef struct IDirect3DStateBlock9          IDirect3DStateBlock9;
typedef struct IDirect3DVertexDeclaration9   IDirect3DVertexDeclaration9;
typedef struct IDirect3DVertexShader9        IDirect3DVertexShader9;
typedef struct IDirect3DPixelShader9         IDirect3DPixelShader9;
typedef struct IDirect3DResource9            IDirect3DResource9;
typedef struct IDirect3DBaseTexture9         IDirect3DBaseTexture9;
typedef struct IDirect3DTexture9             IDirect3DTexture9;
typedef struct IDirect3DVolumeTexture9       IDirect3DVolumeTexture9;
typedef struct IDirect3DCubeTexture9         IDirect3DCubeTexture9;
typedef struct IDirect3DVertexBuffer9        IDirect3DVertexBuffer9;
typedef struct IDirect3DIndexBuffer9         IDirect3DIndexBuffer9;
typedef struct IDirect3DSurface9             IDirect3DSurface9;
typedef struct IDirect3DVolume9              IDirect3DVolume9;
typedef struct IDirect3DSwapChain9           IDirect3DSwapChain9;
typedef struct IDirect3DQuery9               IDirect3DQuery9;






typedef struct IDirect3D9Ex                   IDirect3D9Ex;
typedef struct IDirect3DDevice9Ex             IDirect3DDevice9Ex;
typedef struct IDirect3DSwapChain9Ex          IDirect3DSwapChain9Ex;
typedef struct IDirect3D9ExOverlayExtension   IDirect3D9ExOverlayExtension;
typedef struct IDirect3DDevice9Video          IDirect3DDevice9Video;
typedef struct IDirect3DAuthenticatedChannel9 IDirect3DAuthenticatedChannel9;
typedef struct IDirect3DCryptoSession9        IDirect3DCryptoSession9;

#line 288 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"


#line 1 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9types.h"



















#line 1 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\float.h"















#pragma once




#line 1 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"














 








































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 22 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\float.h"
#line 1 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtwrn.h"











#pragma once




#line 1 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtdefs.h"














 








































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































#line 18 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtwrn.h"






























































#line 81 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\crtwrn.h"
#line 23 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\float.h"








#line 32 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\float.h"

#line 34 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\float.h"
#line 35 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\float.h"
#line 36 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\float.h"


extern "C" {
#line 40 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\float.h"











































  unsigned int __cdecl _clearfp(void);
#pragma warning(push)
#pragma warning(disable: 4141)
 __declspec(deprecated("This function or variable may be unsafe. Consider using " "_controlfp_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details."))  unsigned int __cdecl _controlfp(  unsigned int _NewValue,  unsigned int _Mask);
#pragma warning(pop)
  void __cdecl _set_controlfp(  unsigned int _NewValue,   unsigned int _Mask);
  errno_t __cdecl _controlfp_s(  unsigned int *_CurrentState,   unsigned int _NewValue,   unsigned int _Mask);
  unsigned int __cdecl _statusfp(void);
  void __cdecl _fpreset(void);


  void __cdecl _statusfp2(  unsigned int *_X86_status,   unsigned int *_SSE2_status);
#line 96 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\float.h"










































































#line 171 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\float.h"

  unsigned int __cdecl _control87(  unsigned int _NewValue,  unsigned int _Mask);

  int __cdecl __control87_2(  unsigned int _NewValue,   unsigned int _Mask,
                                    unsigned int* _X86_cw,   unsigned int* _Sse2_cw);
#line 177 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\float.h"



  extern int * __cdecl __fpecode(void);



































  double __cdecl _scalb(  double _X,   long _Y);
  double __cdecl _logb(  double _X);
  double __cdecl _nextafter(  double _X,   double _Y);
  int    __cdecl _finite(  double _X);
  int    __cdecl _isnan(  double _X);
  int    __cdecl _fpclass(  double _X);

























  void __cdecl fpreset(void);





























































#line 310 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\float.h"


}
#line 314 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\float.h"

#line 316 "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\INCLUDE\\float.h"
#line 21 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9types.h"


#pragma warning(push)
#line 25 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9types.h"
#pragma warning(disable:4201) 

#pragma pack(4)
#line 29 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9types.h"



typedef DWORD D3DCOLOR;

#line 35 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9types.h"
















typedef struct _D3DVECTOR {
    float x;
    float y;
    float z;
} D3DVECTOR;

#line 58 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9types.h"


typedef struct _D3DCOLORVALUE {
    float r;
    float g;
    float b;
    float a;
} D3DCOLORVALUE;

#line 68 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9types.h"


typedef struct _D3DRECT {
    LONG x1;
    LONG y1;
    LONG x2;
    LONG y2;
} D3DRECT;

#line 78 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9types.h"


typedef struct _D3DMATRIX {
    union {
        struct {
            float        _11, _12, _13, _14;
            float        _21, _22, _23, _24;
            float        _31, _32, _33, _34;
            float        _41, _42, _43, _44;

        };
        float m[4][4];
    };
} D3DMATRIX;

#line 94 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9types.h"

typedef struct _D3DVIEWPORT9 {
    DWORD       X;
    DWORD       Y;            
    DWORD       Width;
    DWORD       Height;       
    float       MinZ;         
    float       MaxZ;
} D3DVIEWPORT9;















































typedef struct _D3DCLIPSTATUS9 {
    DWORD ClipUnion;
    DWORD ClipIntersection;
} D3DCLIPSTATUS9;

typedef struct _D3DMATERIAL9 {
    D3DCOLORVALUE   Diffuse;        
    D3DCOLORVALUE   Ambient;        
    D3DCOLORVALUE   Specular;       
    D3DCOLORVALUE   Emissive;       
    float           Power;          
} D3DMATERIAL9;

typedef enum _D3DLIGHTTYPE {
    D3DLIGHT_POINT          = 1,
    D3DLIGHT_SPOT           = 2,
    D3DLIGHT_DIRECTIONAL    = 3,
    D3DLIGHT_FORCE_DWORD    = 0x7fffffff, 
} D3DLIGHTTYPE;

typedef struct _D3DLIGHT9 {
    D3DLIGHTTYPE    Type;            
    D3DCOLORVALUE   Diffuse;         
    D3DCOLORVALUE   Specular;        
    D3DCOLORVALUE   Ambient;         
    D3DVECTOR       Position;         
    D3DVECTOR       Direction;        
    float           Range;            
    float           Falloff;          
    float           Attenuation0;     
    float           Attenuation1;     
    float           Attenuation2;     
    float           Theta;            
    float           Phi;              
} D3DLIGHT9;












typedef enum _D3DSHADEMODE {
    D3DSHADE_FLAT               = 1,
    D3DSHADE_GOURAUD            = 2,
    D3DSHADE_PHONG              = 3,
    D3DSHADE_FORCE_DWORD        = 0x7fffffff, 
} D3DSHADEMODE;

typedef enum _D3DFILLMODE {
    D3DFILL_POINT               = 1,
    D3DFILL_WIREFRAME           = 2,
    D3DFILL_SOLID               = 3,
    D3DFILL_FORCE_DWORD         = 0x7fffffff, 
} D3DFILLMODE;

typedef enum _D3DBLEND {
    D3DBLEND_ZERO               = 1,
    D3DBLEND_ONE                = 2,
    D3DBLEND_SRCCOLOR           = 3,
    D3DBLEND_INVSRCCOLOR        = 4,
    D3DBLEND_SRCALPHA           = 5,
    D3DBLEND_INVSRCALPHA        = 6,
    D3DBLEND_DESTALPHA          = 7,
    D3DBLEND_INVDESTALPHA       = 8,
    D3DBLEND_DESTCOLOR          = 9,
    D3DBLEND_INVDESTCOLOR       = 10,
    D3DBLEND_SRCALPHASAT        = 11,
    D3DBLEND_BOTHSRCALPHA       = 12,
    D3DBLEND_BOTHINVSRCALPHA    = 13,
    D3DBLEND_BLENDFACTOR        = 14, 
    D3DBLEND_INVBLENDFACTOR     = 15, 



    D3DBLEND_SRCCOLOR2          = 16,
    D3DBLEND_INVSRCCOLOR2       = 17,

#line 234 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9types.h"

    D3DBLEND_FORCE_DWORD        = 0x7fffffff, 
} D3DBLEND;

typedef enum _D3DBLENDOP {
    D3DBLENDOP_ADD              = 1,
    D3DBLENDOP_SUBTRACT         = 2,
    D3DBLENDOP_REVSUBTRACT      = 3,
    D3DBLENDOP_MIN              = 4,
    D3DBLENDOP_MAX              = 5,
    D3DBLENDOP_FORCE_DWORD      = 0x7fffffff, 
} D3DBLENDOP;

typedef enum _D3DTEXTUREADDRESS {
    D3DTADDRESS_WRAP            = 1,
    D3DTADDRESS_MIRROR          = 2,
    D3DTADDRESS_CLAMP           = 3,
    D3DTADDRESS_BORDER          = 4,
    D3DTADDRESS_MIRRORONCE      = 5,
    D3DTADDRESS_FORCE_DWORD     = 0x7fffffff, 
} D3DTEXTUREADDRESS;

typedef enum _D3DCULL {
    D3DCULL_NONE                = 1,
    D3DCULL_CW                  = 2,
    D3DCULL_CCW                 = 3,
    D3DCULL_FORCE_DWORD         = 0x7fffffff, 
} D3DCULL;

typedef enum _D3DCMPFUNC {
    D3DCMP_NEVER                = 1,
    D3DCMP_LESS                 = 2,
    D3DCMP_EQUAL                = 3,
    D3DCMP_LESSEQUAL            = 4,
    D3DCMP_GREATER              = 5,
    D3DCMP_NOTEQUAL             = 6,
    D3DCMP_GREATEREQUAL         = 7,
    D3DCMP_ALWAYS               = 8,
    D3DCMP_FORCE_DWORD          = 0x7fffffff, 
} D3DCMPFUNC;

typedef enum _D3DSTENCILOP {
    D3DSTENCILOP_KEEP           = 1,
    D3DSTENCILOP_ZERO           = 2,
    D3DSTENCILOP_REPLACE        = 3,
    D3DSTENCILOP_INCRSAT        = 4,
    D3DSTENCILOP_DECRSAT        = 5,
    D3DSTENCILOP_INVERT         = 6,
    D3DSTENCILOP_INCR           = 7,
    D3DSTENCILOP_DECR           = 8,
    D3DSTENCILOP_FORCE_DWORD    = 0x7fffffff, 
} D3DSTENCILOP;

typedef enum _D3DFOGMODE {
    D3DFOG_NONE                 = 0,
    D3DFOG_EXP                  = 1,
    D3DFOG_EXP2                 = 2,
    D3DFOG_LINEAR               = 3,
    D3DFOG_FORCE_DWORD          = 0x7fffffff, 
} D3DFOGMODE;

typedef enum _D3DZBUFFERTYPE {
    D3DZB_FALSE                 = 0,
    D3DZB_TRUE                  = 1, 
    D3DZB_USEW                  = 2, 
    D3DZB_FORCE_DWORD           = 0x7fffffff, 
} D3DZBUFFERTYPE;


typedef enum _D3DPRIMITIVETYPE {
    D3DPT_POINTLIST             = 1,
    D3DPT_LINELIST              = 2,
    D3DPT_LINESTRIP             = 3,
    D3DPT_TRIANGLELIST          = 4,
    D3DPT_TRIANGLESTRIP         = 5,
    D3DPT_TRIANGLEFAN           = 6,
    D3DPT_FORCE_DWORD           = 0x7fffffff, 
} D3DPRIMITIVETYPE;

typedef enum _D3DTRANSFORMSTATETYPE {
    D3DTS_VIEW          = 2,
    D3DTS_PROJECTION    = 3,
    D3DTS_TEXTURE0      = 16,
    D3DTS_TEXTURE1      = 17,
    D3DTS_TEXTURE2      = 18,
    D3DTS_TEXTURE3      = 19,
    D3DTS_TEXTURE4      = 20,
    D3DTS_TEXTURE5      = 21,
    D3DTS_TEXTURE6      = 22,
    D3DTS_TEXTURE7      = 23,
    D3DTS_FORCE_DWORD     = 0x7fffffff, 
} D3DTRANSFORMSTATETYPE;







typedef enum _D3DRENDERSTATETYPE {
    D3DRS_ZENABLE                   = 7,    
    D3DRS_FILLMODE                  = 8,    
    D3DRS_SHADEMODE                 = 9,    
    D3DRS_ZWRITEENABLE              = 14,   
    D3DRS_ALPHATESTENABLE           = 15,   
    D3DRS_LASTPIXEL                 = 16,   
    D3DRS_SRCBLEND                  = 19,   
    D3DRS_DESTBLEND                 = 20,   
    D3DRS_CULLMODE                  = 22,   
    D3DRS_ZFUNC                     = 23,   
    D3DRS_ALPHAREF                  = 24,   
    D3DRS_ALPHAFUNC                 = 25,   
    D3DRS_DITHERENABLE              = 26,   
    D3DRS_ALPHABLENDENABLE          = 27,   
    D3DRS_FOGENABLE                 = 28,   
    D3DRS_SPECULARENABLE            = 29,   
    D3DRS_FOGCOLOR                  = 34,   
    D3DRS_FOGTABLEMODE              = 35,   
    D3DRS_FOGSTART                  = 36,   
    D3DRS_FOGEND                    = 37,   
    D3DRS_FOGDENSITY                = 38,   
    D3DRS_RANGEFOGENABLE            = 48,   
    D3DRS_STENCILENABLE             = 52,   
    D3DRS_STENCILFAIL               = 53,   
    D3DRS_STENCILZFAIL              = 54,   
    D3DRS_STENCILPASS               = 55,   
    D3DRS_STENCILFUNC               = 56,   
    D3DRS_STENCILREF                = 57,   
    D3DRS_STENCILMASK               = 58,   
    D3DRS_STENCILWRITEMASK          = 59,   
    D3DRS_TEXTUREFACTOR             = 60,   
    D3DRS_WRAP0                     = 128,  
    D3DRS_WRAP1                     = 129,  
    D3DRS_WRAP2                     = 130,  
    D3DRS_WRAP3                     = 131,  
    D3DRS_WRAP4                     = 132,  
    D3DRS_WRAP5                     = 133,  
    D3DRS_WRAP6                     = 134,  
    D3DRS_WRAP7                     = 135,  
    D3DRS_CLIPPING                  = 136,
    D3DRS_LIGHTING                  = 137,
    D3DRS_AMBIENT                   = 139,
    D3DRS_FOGVERTEXMODE             = 140,
    D3DRS_COLORVERTEX               = 141,
    D3DRS_LOCALVIEWER               = 142,
    D3DRS_NORMALIZENORMALS          = 143,
    D3DRS_DIFFUSEMATERIALSOURCE     = 145,
    D3DRS_SPECULARMATERIALSOURCE    = 146,
    D3DRS_AMBIENTMATERIALSOURCE     = 147,
    D3DRS_EMISSIVEMATERIALSOURCE    = 148,
    D3DRS_VERTEXBLEND               = 151,
    D3DRS_CLIPPLANEENABLE           = 152,
    D3DRS_POINTSIZE                 = 154,   
    D3DRS_POINTSIZE_MIN             = 155,   
    D3DRS_POINTSPRITEENABLE         = 156,   
    D3DRS_POINTSCALEENABLE          = 157,   
    D3DRS_POINTSCALE_A              = 158,   
    D3DRS_POINTSCALE_B              = 159,   
    D3DRS_POINTSCALE_C              = 160,   
    D3DRS_MULTISAMPLEANTIALIAS      = 161,  
    D3DRS_MULTISAMPLEMASK           = 162,  
    D3DRS_PATCHEDGESTYLE            = 163,  
    D3DRS_DEBUGMONITORTOKEN         = 165,  
    D3DRS_POINTSIZE_MAX             = 166,   
    D3DRS_INDEXEDVERTEXBLENDENABLE  = 167,
    D3DRS_COLORWRITEENABLE          = 168,  
    D3DRS_TWEENFACTOR               = 170,   
    D3DRS_BLENDOP                   = 171,   
    D3DRS_POSITIONDEGREE            = 172,   
    D3DRS_NORMALDEGREE              = 173,   
    D3DRS_SCISSORTESTENABLE         = 174,
    D3DRS_SLOPESCALEDEPTHBIAS       = 175,
    D3DRS_ANTIALIASEDLINEENABLE     = 176,
    D3DRS_MINTESSELLATIONLEVEL      = 178,
    D3DRS_MAXTESSELLATIONLEVEL      = 179,
    D3DRS_ADAPTIVETESS_X            = 180,
    D3DRS_ADAPTIVETESS_Y            = 181,
    D3DRS_ADAPTIVETESS_Z            = 182,
    D3DRS_ADAPTIVETESS_W            = 183,
    D3DRS_ENABLEADAPTIVETESSELLATION = 184,
    D3DRS_TWOSIDEDSTENCILMODE       = 185,   
    D3DRS_CCW_STENCILFAIL           = 186,   
    D3DRS_CCW_STENCILZFAIL          = 187,   
    D3DRS_CCW_STENCILPASS           = 188,   
    D3DRS_CCW_STENCILFUNC           = 189,   
    D3DRS_COLORWRITEENABLE1         = 190,   
    D3DRS_COLORWRITEENABLE2         = 191,   
    D3DRS_COLORWRITEENABLE3         = 192,   
    D3DRS_BLENDFACTOR               = 193,   
    D3DRS_SRGBWRITEENABLE           = 194,   
    D3DRS_DEPTHBIAS                 = 195,
    D3DRS_WRAP8                     = 198,   
    D3DRS_WRAP9                     = 199,
    D3DRS_WRAP10                    = 200,
    D3DRS_WRAP11                    = 201,
    D3DRS_WRAP12                    = 202,
    D3DRS_WRAP13                    = 203,
    D3DRS_WRAP14                    = 204,
    D3DRS_WRAP15                    = 205,
    D3DRS_SEPARATEALPHABLENDENABLE  = 206,  
    D3DRS_SRCBLENDALPHA             = 207,  
    D3DRS_DESTBLENDALPHA            = 208,  
    D3DRS_BLENDOPALPHA              = 209,  


    D3DRS_FORCE_DWORD               = 0x7fffffff, 
} D3DRENDERSTATETYPE;





typedef enum _D3DMATERIALCOLORSOURCE
{
    D3DMCS_MATERIAL         = 0,            
    D3DMCS_COLOR1           = 1,            
    D3DMCS_COLOR2           = 2,            
    D3DMCS_FORCE_DWORD      = 0x7fffffff,   
} D3DMATERIALCOLORSOURCE;

























typedef enum _D3DTEXTURESTAGESTATETYPE
{
    D3DTSS_COLOROP        =  1, 
    D3DTSS_COLORARG1      =  2, 
    D3DTSS_COLORARG2      =  3, 
    D3DTSS_ALPHAOP        =  4, 
    D3DTSS_ALPHAARG1      =  5, 
    D3DTSS_ALPHAARG2      =  6, 
    D3DTSS_BUMPENVMAT00   =  7, 
    D3DTSS_BUMPENVMAT01   =  8, 
    D3DTSS_BUMPENVMAT10   =  9, 
    D3DTSS_BUMPENVMAT11   = 10, 
    D3DTSS_TEXCOORDINDEX  = 11, 
    D3DTSS_BUMPENVLSCALE  = 22, 
    D3DTSS_BUMPENVLOFFSET = 23, 
    D3DTSS_TEXTURETRANSFORMFLAGS = 24, 
    D3DTSS_COLORARG0      = 26, 
    D3DTSS_ALPHAARG0      = 27, 
    D3DTSS_RESULTARG      = 28, 
    D3DTSS_CONSTANT       = 32, 


    D3DTSS_FORCE_DWORD   = 0x7fffffff, 
} D3DTEXTURESTAGESTATETYPE;




typedef enum _D3DSAMPLERSTATETYPE
{
    D3DSAMP_ADDRESSU       = 1,  
    D3DSAMP_ADDRESSV       = 2,  
    D3DSAMP_ADDRESSW       = 3,  
    D3DSAMP_BORDERCOLOR    = 4,  
    D3DSAMP_MAGFILTER      = 5,  
    D3DSAMP_MINFILTER      = 6,  
    D3DSAMP_MIPFILTER      = 7,  
    D3DSAMP_MIPMAPLODBIAS  = 8,  
    D3DSAMP_MAXMIPLEVEL    = 9,  
    D3DSAMP_MAXANISOTROPY  = 10, 
    D3DSAMP_SRGBTEXTURE    = 11, 


    D3DSAMP_ELEMENTINDEX   = 12, 

    D3DSAMP_DMAPOFFSET     = 13, 

    D3DSAMP_FORCE_DWORD   = 0x7fffffff, 
} D3DSAMPLERSTATETYPE;
























typedef enum _D3DTEXTUREOP
{
    
    D3DTOP_DISABLE              = 1,      
    D3DTOP_SELECTARG1           = 2,      
    D3DTOP_SELECTARG2           = 3,

    
    D3DTOP_MODULATE             = 4,      
    D3DTOP_MODULATE2X           = 5,      
    D3DTOP_MODULATE4X           = 6,      

    
    D3DTOP_ADD                  =  7,   
    D3DTOP_ADDSIGNED            =  8,   
    D3DTOP_ADDSIGNED2X          =  9,   
    D3DTOP_SUBTRACT             = 10,   
    D3DTOP_ADDSMOOTH            = 11,   
                                        
                                        

    
    D3DTOP_BLENDDIFFUSEALPHA    = 12, 
    D3DTOP_BLENDTEXTUREALPHA    = 13, 
    D3DTOP_BLENDFACTORALPHA     = 14, 

    
    D3DTOP_BLENDTEXTUREALPHAPM  = 15, 
    D3DTOP_BLENDCURRENTALPHA    = 16, 

    
    D3DTOP_PREMODULATE            = 17,     
    D3DTOP_MODULATEALPHA_ADDCOLOR = 18,     
                                            
    D3DTOP_MODULATECOLOR_ADDALPHA = 19,     
                                            
    D3DTOP_MODULATEINVALPHA_ADDCOLOR = 20,  
                                            
    D3DTOP_MODULATEINVCOLOR_ADDALPHA = 21,  
                                            

    
    D3DTOP_BUMPENVMAP           = 22, 
    D3DTOP_BUMPENVMAPLUMINANCE  = 23, 

    
    
    
    
    
    D3DTOP_DOTPRODUCT3          = 24,

    
    D3DTOP_MULTIPLYADD          = 25, 
    D3DTOP_LERP                 = 26, 

    D3DTOP_FORCE_DWORD = 0x7fffffff,
} D3DTEXTUREOP;



















typedef enum _D3DTEXTUREFILTERTYPE
{
    D3DTEXF_NONE            = 0,    
    D3DTEXF_POINT           = 1,    
    D3DTEXF_LINEAR          = 2,    
    D3DTEXF_ANISOTROPIC     = 3,    
    D3DTEXF_PYRAMIDALQUAD   = 6,    
    D3DTEXF_GAUSSIANQUAD    = 7,    



    D3DTEXF_CONVOLUTIONMONO = 8,    

#line 642 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9types.h"

    D3DTEXF_FORCE_DWORD     = 0x7fffffff,   
} D3DTEXTUREFILTERTYPE;


















































typedef enum _D3DDECLUSAGE
{
    D3DDECLUSAGE_POSITION = 0,
    D3DDECLUSAGE_BLENDWEIGHT,   
    D3DDECLUSAGE_BLENDINDICES,  
    D3DDECLUSAGE_NORMAL,        
    D3DDECLUSAGE_PSIZE,         
    D3DDECLUSAGE_TEXCOORD,      
    D3DDECLUSAGE_TANGENT,       
    D3DDECLUSAGE_BINORMAL,      
    D3DDECLUSAGE_TESSFACTOR,    
    D3DDECLUSAGE_POSITIONT,     
    D3DDECLUSAGE_COLOR,         
    D3DDECLUSAGE_FOG,           
    D3DDECLUSAGE_DEPTH,         
    D3DDECLUSAGE_SAMPLE,        
} D3DDECLUSAGE;





typedef enum _D3DDECLMETHOD
{
    D3DDECLMETHOD_DEFAULT = 0,
    D3DDECLMETHOD_PARTIALU,
    D3DDECLMETHOD_PARTIALV,
    D3DDECLMETHOD_CROSSUV,    
    D3DDECLMETHOD_UV,
    D3DDECLMETHOD_LOOKUP,               
    D3DDECLMETHOD_LOOKUPPRESAMPLED,     
} D3DDECLMETHOD;





typedef enum _D3DDECLTYPE
{
    D3DDECLTYPE_FLOAT1    =  0,  
    D3DDECLTYPE_FLOAT2    =  1,  
    D3DDECLTYPE_FLOAT3    =  2,  
    D3DDECLTYPE_FLOAT4    =  3,  
    D3DDECLTYPE_D3DCOLOR  =  4,  
                                 
    D3DDECLTYPE_UBYTE4    =  5,  
    D3DDECLTYPE_SHORT2    =  6,  
    D3DDECLTYPE_SHORT4    =  7,  




    D3DDECLTYPE_UBYTE4N   =  8,  
    D3DDECLTYPE_SHORT2N   =  9,  
    D3DDECLTYPE_SHORT4N   = 10,  
    D3DDECLTYPE_USHORT2N  = 11,  
    D3DDECLTYPE_USHORT4N  = 12,  
    D3DDECLTYPE_UDEC3     = 13,  
    D3DDECLTYPE_DEC3N     = 14,  
    D3DDECLTYPE_FLOAT16_2 = 15,  
    D3DDECLTYPE_FLOAT16_4 = 16,  
    D3DDECLTYPE_UNUSED    = 17,  
} D3DDECLTYPE;



typedef struct _D3DVERTEXELEMENT9
{
    WORD    Stream;     
    WORD    Offset;     
    BYTE    Type;       
    BYTE    Method;     
    BYTE    Usage;      
    BYTE    UsageIndex; 
} D3DVERTEXELEMENT9, *LPD3DVERTEXELEMENT9;
































typedef enum _D3DSHADER_INSTRUCTION_OPCODE_TYPE
{
    D3DSIO_NOP          = 0,
    D3DSIO_MOV          ,
    D3DSIO_ADD          ,
    D3DSIO_SUB          ,
    D3DSIO_MAD          ,
    D3DSIO_MUL          ,
    D3DSIO_RCP          ,
    D3DSIO_RSQ          ,
    D3DSIO_DP3          ,
    D3DSIO_DP4          ,
    D3DSIO_MIN          ,
    D3DSIO_MAX          ,
    D3DSIO_SLT          ,
    D3DSIO_SGE          ,
    D3DSIO_EXP          ,
    D3DSIO_LOG          ,
    D3DSIO_LIT          ,
    D3DSIO_DST          ,
    D3DSIO_LRP          ,
    D3DSIO_FRC          ,
    D3DSIO_M4x4         ,
    D3DSIO_M4x3         ,
    D3DSIO_M3x4         ,
    D3DSIO_M3x3         ,
    D3DSIO_M3x2         ,
    D3DSIO_CALL         ,
    D3DSIO_CALLNZ       ,
    D3DSIO_LOOP         ,
    D3DSIO_RET          ,
    D3DSIO_ENDLOOP      ,
    D3DSIO_LABEL        ,
    D3DSIO_DCL          ,
    D3DSIO_POW          ,
    D3DSIO_CRS          ,
    D3DSIO_SGN          ,
    D3DSIO_ABS          ,
    D3DSIO_NRM          ,
    D3DSIO_SINCOS       ,
    D3DSIO_REP          ,
    D3DSIO_ENDREP       ,
    D3DSIO_IF           ,
    D3DSIO_IFC          ,
    D3DSIO_ELSE         ,
    D3DSIO_ENDIF        ,
    D3DSIO_BREAK        ,
    D3DSIO_BREAKC       ,
    D3DSIO_MOVA         ,
    D3DSIO_DEFB         ,
    D3DSIO_DEFI         ,

    D3DSIO_TEXCOORD     = 64,
    D3DSIO_TEXKILL      ,
    D3DSIO_TEX          ,
    D3DSIO_TEXBEM       ,
    D3DSIO_TEXBEML      ,
    D3DSIO_TEXREG2AR    ,
    D3DSIO_TEXREG2GB    ,
    D3DSIO_TEXM3x2PAD   ,
    D3DSIO_TEXM3x2TEX   ,
    D3DSIO_TEXM3x3PAD   ,
    D3DSIO_TEXM3x3TEX   ,
    D3DSIO_RESERVED0    ,
    D3DSIO_TEXM3x3SPEC  ,
    D3DSIO_TEXM3x3VSPEC ,
    D3DSIO_EXPP         ,
    D3DSIO_LOGP         ,
    D3DSIO_CND          ,
    D3DSIO_DEF          ,
    D3DSIO_TEXREG2RGB   ,
    D3DSIO_TEXDP3TEX    ,
    D3DSIO_TEXM3x2DEPTH ,
    D3DSIO_TEXDP3       ,
    D3DSIO_TEXM3x3      ,
    D3DSIO_TEXDEPTH     ,
    D3DSIO_CMP          ,
    D3DSIO_BEM          ,
    D3DSIO_DP2ADD       ,
    D3DSIO_DSX          ,
    D3DSIO_DSY          ,
    D3DSIO_TEXLDD       ,
    D3DSIO_SETP         ,
    D3DSIO_TEXLDL       ,
    D3DSIO_BREAKP       ,

    D3DSIO_PHASE        = 0xFFFD,
    D3DSIO_COMMENT      = 0xFFFE,
    D3DSIO_END          = 0xFFFF,

    D3DSIO_FORCE_DWORD  = 0x7fffffff,   
} D3DSHADER_INSTRUCTION_OPCODE_TYPE;

























typedef enum _D3DSHADER_COMPARISON
{
                         
    D3DSPC_RESERVED0= 0, 
    D3DSPC_GT       = 1, 
    D3DSPC_EQ       = 2, 
    D3DSPC_GE       = 3, 
    D3DSPC_LT       = 4, 
    D3DSPC_NE       = 5, 
    D3DSPC_LE       = 6, 
    D3DSPC_RESERVED1= 7  
} D3DSHADER_COMPARISON;























typedef enum _D3DSAMPLER_TEXTURE_TYPE
{
    D3DSTT_UNKNOWN = 0<<27, 
    D3DSTT_2D      = 2<<27, 
    D3DSTT_CUBE    = 3<<27, 
    D3DSTT_VOLUME  = 4<<27, 
    D3DSTT_FORCE_DWORD  = 0x7fffffff,      
} D3DSAMPLER_TEXTURE_TYPE;






















                                                                
                                                                
                                                                
                                                                
                                                                











typedef enum _D3DSHADER_PARAM_REGISTER_TYPE
{
    D3DSPR_TEMP           =  0, 
    D3DSPR_INPUT          =  1, 
    D3DSPR_CONST          =  2, 
    D3DSPR_ADDR           =  3, 
    D3DSPR_TEXTURE        =  3, 
    D3DSPR_RASTOUT        =  4, 
    D3DSPR_ATTROUT        =  5, 
    D3DSPR_TEXCRDOUT      =  6, 
    D3DSPR_OUTPUT         =  6, 
    D3DSPR_CONSTINT       =  7, 
    D3DSPR_COLOROUT       =  8, 
    D3DSPR_DEPTHOUT       =  9, 
    D3DSPR_SAMPLER        = 10, 
    D3DSPR_CONST2         = 11, 
    D3DSPR_CONST3         = 12, 
    D3DSPR_CONST4         = 13, 
    D3DSPR_CONSTBOOL      = 14, 
    D3DSPR_LOOP           = 15, 
    D3DSPR_TEMPFLOAT16    = 16, 
    D3DSPR_MISCTYPE       = 17, 
    D3DSPR_LABEL          = 18, 
    D3DSPR_PREDICATE      = 19, 
    D3DSPR_FORCE_DWORD  = 0x7fffffff,         
} D3DSHADER_PARAM_REGISTER_TYPE;







typedef enum _D3DSHADER_MISCTYPE_OFFSETS
{
    D3DSMO_POSITION   = 0, 
    D3DSMO_FACE   = 1, 
} D3DSHADER_MISCTYPE_OFFSETS;



typedef enum _D3DVS_RASTOUT_OFFSETS
{
    D3DSRO_POSITION = 0,
    D3DSRO_FOG,
    D3DSRO_POINT_SIZE,
    D3DSRO_FORCE_DWORD  = 0x7fffffff,         
} D3DVS_RASTOUT_OFFSETS;






typedef enum _D3DVS_ADDRESSMODE_TYPE
{
    D3DVS_ADDRMODE_ABSOLUTE  = (0 << 13),
    D3DVS_ADDRMODE_RELATIVE  = (1 << 13),
    D3DVS_ADDRMODE_FORCE_DWORD = 0x7fffffff, 
} D3DVS_ADDRESSMODE_TYPE;




typedef enum _D3DSHADER_ADDRESSMODE_TYPE
{
    D3DSHADER_ADDRMODE_ABSOLUTE  = (0 << 13),
    D3DSHADER_ADDRMODE_RELATIVE  = (1 << 13),
    D3DSHADER_ADDRMODE_FORCE_DWORD = 0x7fffffff, 
} D3DSHADER_ADDRESSMODE_TYPE;














































































typedef enum _D3DSHADER_PARAM_SRCMOD_TYPE
{
    D3DSPSM_NONE    = 0<<24, 
    D3DSPSM_NEG     = 1<<24, 
    D3DSPSM_BIAS    = 2<<24, 
    D3DSPSM_BIASNEG = 3<<24, 
    D3DSPSM_SIGN    = 4<<24, 
    D3DSPSM_SIGNNEG = 5<<24, 
    D3DSPSM_COMP    = 6<<24, 
    D3DSPSM_X2      = 7<<24, 
    D3DSPSM_X2NEG   = 8<<24, 
    D3DSPSM_DZ      = 9<<24, 
    D3DSPSM_DW      = 10<<24, 
    D3DSPSM_ABS     = 11<<24, 
    D3DSPSM_ABSNEG  = 12<<24, 
    D3DSPSM_NOT     = 13<<24, 
    D3DSPSM_FORCE_DWORD = 0x7fffffff,        
} D3DSHADER_PARAM_SRCMOD_TYPE;


























typedef enum _D3DBASISTYPE
{
   D3DBASIS_BEZIER      = 0,
   D3DBASIS_BSPLINE     = 1,
   D3DBASIS_CATMULL_ROM = 2, 
   D3DBASIS_FORCE_DWORD = 0x7fffffff,
} D3DBASISTYPE;

typedef enum _D3DDEGREETYPE
{
   D3DDEGREE_LINEAR      = 1,
   D3DDEGREE_QUADRATIC   = 2,
   D3DDEGREE_CUBIC       = 3,
   D3DDEGREE_QUINTIC     = 5,
   D3DDEGREE_FORCE_DWORD = 0x7fffffff,
} D3DDEGREETYPE;

typedef enum _D3DPATCHEDGESTYLE
{
   D3DPATCHEDGE_DISCRETE    = 0,
   D3DPATCHEDGE_CONTINUOUS  = 1,
   D3DPATCHEDGE_FORCE_DWORD = 0x7fffffff,
} D3DPATCHEDGESTYLE;

typedef enum _D3DSTATEBLOCKTYPE
{
    D3DSBT_ALL           = 1, 
    D3DSBT_PIXELSTATE    = 2, 
    D3DSBT_VERTEXSTATE   = 3, 
    D3DSBT_FORCE_DWORD   = 0x7fffffff,
} D3DSTATEBLOCKTYPE;



typedef enum _D3DVERTEXBLENDFLAGS
{
    D3DVBF_DISABLE  = 0,     
    D3DVBF_1WEIGHTS = 1,     
    D3DVBF_2WEIGHTS = 2,     
    D3DVBF_3WEIGHTS = 3,     
    D3DVBF_TWEENING = 255,   
    D3DVBF_0WEIGHTS = 256,   
    D3DVBF_FORCE_DWORD = 0x7fffffff, 
} D3DVERTEXBLENDFLAGS;

typedef enum _D3DTEXTURETRANSFORMFLAGS {
    D3DTTFF_DISABLE         = 0,    
    D3DTTFF_COUNT1          = 1,    
    D3DTTFF_COUNT2          = 2,    
    D3DTTFF_COUNT3          = 3,    
    D3DTTFF_COUNT4          = 4,    
    D3DTTFF_PROJECTED       = 256,  
    D3DTTFF_FORCE_DWORD     = 0x7fffffff,
} D3DTEXTURETRANSFORMFLAGS;

















typedef enum _D3DDEVTYPE
{
    D3DDEVTYPE_HAL         = 1,
    D3DDEVTYPE_REF         = 2,
    D3DDEVTYPE_SW          = 3,

    D3DDEVTYPE_NULLREF     = 4,

    D3DDEVTYPE_FORCE_DWORD  = 0x7fffffff
} D3DDEVTYPE;


typedef enum _D3DMULTISAMPLE_TYPE
{
    D3DMULTISAMPLE_NONE            =  0,
    D3DMULTISAMPLE_NONMASKABLE     =  1,
    D3DMULTISAMPLE_2_SAMPLES       =  2,
    D3DMULTISAMPLE_3_SAMPLES       =  3,
    D3DMULTISAMPLE_4_SAMPLES       =  4,
    D3DMULTISAMPLE_5_SAMPLES       =  5,
    D3DMULTISAMPLE_6_SAMPLES       =  6,
    D3DMULTISAMPLE_7_SAMPLES       =  7,
    D3DMULTISAMPLE_8_SAMPLES       =  8,
    D3DMULTISAMPLE_9_SAMPLES       =  9,
    D3DMULTISAMPLE_10_SAMPLES      = 10,
    D3DMULTISAMPLE_11_SAMPLES      = 11,
    D3DMULTISAMPLE_12_SAMPLES      = 12,
    D3DMULTISAMPLE_13_SAMPLES      = 13,
    D3DMULTISAMPLE_14_SAMPLES      = 14,
    D3DMULTISAMPLE_15_SAMPLES      = 15,
    D3DMULTISAMPLE_16_SAMPLES      = 16,

    D3DMULTISAMPLE_FORCE_DWORD     = 0x7fffffff
} D3DMULTISAMPLE_TYPE;



































    


#line 1336 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9types.h"


typedef enum _D3DFORMAT
{
    D3DFMT_UNKNOWN              =  0,

    D3DFMT_R8G8B8               = 20,
    D3DFMT_A8R8G8B8             = 21,
    D3DFMT_X8R8G8B8             = 22,
    D3DFMT_R5G6B5               = 23,
    D3DFMT_X1R5G5B5             = 24,
    D3DFMT_A1R5G5B5             = 25,
    D3DFMT_A4R4G4B4             = 26,
    D3DFMT_R3G3B2               = 27,
    D3DFMT_A8                   = 28,
    D3DFMT_A8R3G3B2             = 29,
    D3DFMT_X4R4G4B4             = 30,
    D3DFMT_A2B10G10R10          = 31,
    D3DFMT_A8B8G8R8             = 32,
    D3DFMT_X8B8G8R8             = 33,
    D3DFMT_G16R16               = 34,
    D3DFMT_A2R10G10B10          = 35,
    D3DFMT_A16B16G16R16         = 36,

    D3DFMT_A8P8                 = 40,
    D3DFMT_P8                   = 41,

    D3DFMT_L8                   = 50,
    D3DFMT_A8L8                 = 51,
    D3DFMT_A4L4                 = 52,

    D3DFMT_V8U8                 = 60,
    D3DFMT_L6V5U5               = 61,
    D3DFMT_X8L8V8U8             = 62,
    D3DFMT_Q8W8V8U8             = 63,
    D3DFMT_V16U16               = 64,
    D3DFMT_A2W10V10U10          = 67,

    D3DFMT_UYVY                 = ((DWORD)(BYTE)('U') | ((DWORD)(BYTE)('Y') << 8) | ((DWORD)(BYTE)('V') << 16) | ((DWORD)(BYTE)('Y') << 24 )),
    D3DFMT_R8G8_B8G8            = ((DWORD)(BYTE)('R') | ((DWORD)(BYTE)('G') << 8) | ((DWORD)(BYTE)('B') << 16) | ((DWORD)(BYTE)('G') << 24 )),
    D3DFMT_YUY2                 = ((DWORD)(BYTE)('Y') | ((DWORD)(BYTE)('U') << 8) | ((DWORD)(BYTE)('Y') << 16) | ((DWORD)(BYTE)('2') << 24 )),
    D3DFMT_G8R8_G8B8            = ((DWORD)(BYTE)('G') | ((DWORD)(BYTE)('R') << 8) | ((DWORD)(BYTE)('G') << 16) | ((DWORD)(BYTE)('B') << 24 )),
    D3DFMT_DXT1                 = ((DWORD)(BYTE)('D') | ((DWORD)(BYTE)('X') << 8) | ((DWORD)(BYTE)('T') << 16) | ((DWORD)(BYTE)('1') << 24 )),
    D3DFMT_DXT2                 = ((DWORD)(BYTE)('D') | ((DWORD)(BYTE)('X') << 8) | ((DWORD)(BYTE)('T') << 16) | ((DWORD)(BYTE)('2') << 24 )),
    D3DFMT_DXT3                 = ((DWORD)(BYTE)('D') | ((DWORD)(BYTE)('X') << 8) | ((DWORD)(BYTE)('T') << 16) | ((DWORD)(BYTE)('3') << 24 )),
    D3DFMT_DXT4                 = ((DWORD)(BYTE)('D') | ((DWORD)(BYTE)('X') << 8) | ((DWORD)(BYTE)('T') << 16) | ((DWORD)(BYTE)('4') << 24 )),
    D3DFMT_DXT5                 = ((DWORD)(BYTE)('D') | ((DWORD)(BYTE)('X') << 8) | ((DWORD)(BYTE)('T') << 16) | ((DWORD)(BYTE)('5') << 24 )),

    D3DFMT_D16_LOCKABLE         = 70,
    D3DFMT_D32                  = 71,
    D3DFMT_D15S1                = 73,
    D3DFMT_D24S8                = 75,
    D3DFMT_D24X8                = 77,
    D3DFMT_D24X4S4              = 79,
    D3DFMT_D16                  = 80,

    D3DFMT_D32F_LOCKABLE        = 82,
    D3DFMT_D24FS8               = 83,




    
    D3DFMT_D32_LOCKABLE         = 84,
    D3DFMT_S8_LOCKABLE          = 85,

#line 1403 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9types.h"



    D3DFMT_L16                  = 81,

    D3DFMT_VERTEXDATA           =100,
    D3DFMT_INDEX16              =101,
    D3DFMT_INDEX32              =102,

    D3DFMT_Q16W16V16U16         =110,

    D3DFMT_MULTI2_ARGB8         = ((DWORD)(BYTE)('M') | ((DWORD)(BYTE)('E') << 8) | ((DWORD)(BYTE)('T') << 16) | ((DWORD)(BYTE)('1') << 24 )),

    

    
    D3DFMT_R16F                 = 111,
    D3DFMT_G16R16F              = 112,
    D3DFMT_A16B16G16R16F        = 113,

    
    D3DFMT_R32F                 = 114,
    D3DFMT_G32R32F              = 115,
    D3DFMT_A32B32G32R32F        = 116,

    D3DFMT_CxV8U8               = 117,




    
    D3DFMT_A1                   = 118,

    
    D3DFMT_A2B10G10R10_XR_BIAS  = 119,


    
    D3DFMT_BINARYBUFFER         = 199,
    
#line 1444 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9types.h"



    D3DFMT_FORCE_DWORD          =0x7fffffff
} D3DFORMAT;


typedef struct _D3DDISPLAYMODE
{
    UINT            Width;
    UINT            Height;
    UINT            RefreshRate;
    D3DFORMAT       Format;
} D3DDISPLAYMODE;


typedef struct _D3DDEVICE_CREATION_PARAMETERS
{
    UINT            AdapterOrdinal;
    D3DDEVTYPE      DeviceType;
    HWND            hFocusWindow;
    DWORD           BehaviorFlags;
} D3DDEVICE_CREATION_PARAMETERS;



typedef enum _D3DSWAPEFFECT
{
    D3DSWAPEFFECT_DISCARD           = 1,
    D3DSWAPEFFECT_FLIP              = 2,
    D3DSWAPEFFECT_COPY              = 3,
    D3DSWAPEFFECT_OVERLAY           = 4,
    D3DSWAPEFFECT_FLIPEX            = 5,

    D3DSWAPEFFECT_FORCE_DWORD       = 0x7fffffff
} D3DSWAPEFFECT;


typedef enum _D3DPOOL {
    D3DPOOL_DEFAULT                 = 0,
    D3DPOOL_MANAGED                 = 1,
    D3DPOOL_SYSTEMMEM               = 2,
    D3DPOOL_SCRATCH                 = 3,

    D3DPOOL_FORCE_DWORD             = 0x7fffffff
} D3DPOOL;







typedef struct _D3DPRESENT_PARAMETERS_
{
    UINT                BackBufferWidth;
    UINT                BackBufferHeight;
    D3DFORMAT           BackBufferFormat;
    UINT                BackBufferCount;

    D3DMULTISAMPLE_TYPE MultiSampleType;
    DWORD               MultiSampleQuality;

    D3DSWAPEFFECT       SwapEffect;
    HWND                hDeviceWindow;
    BOOL                Windowed;
    BOOL                EnableAutoDepthStencil;
    D3DFORMAT           AutoDepthStencilFormat;
    DWORD               Flags;

    
    UINT                FullScreen_RefreshRateInHz;
    UINT                PresentationInterval;
} D3DPRESENT_PARAMETERS;



















#line 1538 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9types.h"




typedef struct _D3DGAMMARAMP
{
    WORD                red  [256];
    WORD                green[256];
    WORD                blue [256];
} D3DGAMMARAMP;


typedef enum _D3DBACKBUFFER_TYPE
{
    D3DBACKBUFFER_TYPE_MONO         = 0,
    D3DBACKBUFFER_TYPE_LEFT         = 1,
    D3DBACKBUFFER_TYPE_RIGHT        = 2,

    D3DBACKBUFFER_TYPE_FORCE_DWORD  = 0x7fffffff
} D3DBACKBUFFER_TYPE;



typedef enum _D3DRESOURCETYPE {
    D3DRTYPE_SURFACE                =  1,
    D3DRTYPE_VOLUME                 =  2,
    D3DRTYPE_TEXTURE                =  3,
    D3DRTYPE_VOLUMETEXTURE          =  4,
    D3DRTYPE_CUBETEXTURE            =  5,
    D3DRTYPE_VERTEXBUFFER           =  6,
    D3DRTYPE_INDEXBUFFER            =  7,           


    D3DRTYPE_FORCE_DWORD            = 0x7fffffff
} D3DRESOURCETYPE;











#line 1585 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9types.h"


































#line 1620 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9types.h"


















typedef enum _D3DCUBEMAP_FACES
{
    D3DCUBEMAP_FACE_POSITIVE_X     = 0,
    D3DCUBEMAP_FACE_NEGATIVE_X     = 1,
    D3DCUBEMAP_FACE_POSITIVE_Y     = 2,
    D3DCUBEMAP_FACE_NEGATIVE_Y     = 3,
    D3DCUBEMAP_FACE_POSITIVE_Z     = 4,
    D3DCUBEMAP_FACE_NEGATIVE_Z     = 5,

    D3DCUBEMAP_FACE_FORCE_DWORD    = 0x7fffffff
} D3DCUBEMAP_FACES;



















typedef struct _D3DVERTEXBUFFER_DESC
{
    D3DFORMAT           Format;
    D3DRESOURCETYPE     Type;
    DWORD               Usage;
    D3DPOOL             Pool;
    UINT                Size;

    DWORD               FVF;

} D3DVERTEXBUFFER_DESC;


typedef struct _D3DINDEXBUFFER_DESC
{
    D3DFORMAT           Format;
    D3DRESOURCETYPE     Type;
    DWORD               Usage;
    D3DPOOL             Pool;
    UINT                Size;
} D3DINDEXBUFFER_DESC;



typedef struct _D3DSURFACE_DESC
{
    D3DFORMAT           Format;
    D3DRESOURCETYPE     Type;
    DWORD               Usage;
    D3DPOOL             Pool;

    D3DMULTISAMPLE_TYPE MultiSampleType;
    DWORD               MultiSampleQuality;
    UINT                Width;
    UINT                Height;
} D3DSURFACE_DESC;

typedef struct _D3DVOLUME_DESC
{
    D3DFORMAT           Format;
    D3DRESOURCETYPE     Type;
    DWORD               Usage;
    D3DPOOL             Pool;

    UINT                Width;
    UINT                Height;
    UINT                Depth;
} D3DVOLUME_DESC;


typedef struct _D3DLOCKED_RECT
{
    INT                 Pitch;
    void*               pBits;
} D3DLOCKED_RECT;


typedef struct _D3DBOX
{
    UINT                Left;
    UINT                Top;
    UINT                Right;
    UINT                Bottom;
    UINT                Front;
    UINT                Back;
} D3DBOX;

typedef struct _D3DLOCKED_BOX
{
    INT                 RowPitch;
    INT                 SlicePitch;
    void*               pBits;
} D3DLOCKED_BOX;


typedef struct _D3DRANGE
{
    UINT                Offset;
    UINT                Size;
} D3DRANGE;


typedef struct _D3DRECTPATCH_INFO
{
    UINT                StartVertexOffsetWidth;
    UINT                StartVertexOffsetHeight;
    UINT                Width;
    UINT                Height;
    UINT                Stride;
    D3DBASISTYPE        Basis;
    D3DDEGREETYPE       Degree;
} D3DRECTPATCH_INFO;

typedef struct _D3DTRIPATCH_INFO
{
    UINT                StartVertexOffset;
    UINT                NumVertices;
    D3DBASISTYPE        Basis;
    D3DDEGREETYPE       Degree;
} D3DTRIPATCH_INFO;




typedef struct _D3DADAPTER_IDENTIFIER9
{
    char            Driver[512];
    char            Description[512];
    char            DeviceName[32];         


    LARGE_INTEGER   DriverVersion;          



#line 1784 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9types.h"

    DWORD           VendorId;
    DWORD           DeviceId;
    DWORD           SubSysId;
    DWORD           Revision;

    GUID            DeviceIdentifier;

    DWORD           WHQLLevel;

} D3DADAPTER_IDENTIFIER9;



typedef struct _D3DRASTER_STATUS
{
    BOOL            InVBlank;
    UINT            ScanLine;
} D3DRASTER_STATUS;















typedef enum _D3DDEBUGMONITORTOKENS {
    D3DDMT_ENABLE            = 0,    
    D3DDMT_DISABLE           = 1,    
    D3DDMT_FORCE_DWORD     = 0x7fffffff,
} D3DDEBUGMONITORTOKENS;



typedef enum _D3DQUERYTYPE {
    D3DQUERYTYPE_VCACHE                 = 4, 
    D3DQUERYTYPE_RESOURCEMANAGER        = 5, 
    D3DQUERYTYPE_VERTEXSTATS            = 6, 
    D3DQUERYTYPE_EVENT                  = 8, 
    D3DQUERYTYPE_OCCLUSION              = 9, 
    D3DQUERYTYPE_TIMESTAMP              = 10, 
    D3DQUERYTYPE_TIMESTAMPDISJOINT      = 11, 
    D3DQUERYTYPE_TIMESTAMPFREQ          = 12, 
    D3DQUERYTYPE_PIPELINETIMINGS        = 13, 
    D3DQUERYTYPE_INTERFACETIMINGS       = 14, 
    D3DQUERYTYPE_VERTEXTIMINGS          = 15, 
    D3DQUERYTYPE_PIXELTIMINGS           = 16, 
    D3DQUERYTYPE_BANDWIDTHTIMINGS       = 17, 
    D3DQUERYTYPE_CACHEUTILIZATION       = 18, 


    D3DQUERYTYPE_MEMORYPRESSURE         = 19, 
#line 1845 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9types.h"
} D3DQUERYTYPE;










typedef struct _D3DRESOURCESTATS
{

    BOOL    bThrashing;             
    DWORD   ApproxBytesDownloaded;  
    DWORD   NumEvicts;              
    DWORD   NumVidCreates;          
    DWORD   LastPri;                
    DWORD   NumUsed;                
    DWORD   NumUsedInVidMem;        

    DWORD   WorkingSet;             
    DWORD   WorkingSetBytes;        
    DWORD   TotalManaged;           
    DWORD   TotalBytes;             
} D3DRESOURCESTATS;



typedef struct _D3DDEVINFO_RESOURCEMANAGER
{

    D3DRESOURCESTATS    stats[(D3DRTYPE_INDEXBUFFER+1)];


#line 1882 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9types.h"
} D3DDEVINFO_RESOURCEMANAGER, *LPD3DDEVINFO_RESOURCEMANAGER;

typedef struct _D3DDEVINFO_D3DVERTEXSTATS
{
    DWORD   NumRenderedTriangles;       
    DWORD   NumExtraClippingTriangles;  
} D3DDEVINFO_D3DVERTEXSTATS, *LPD3DDEVINFO_D3DVERTEXSTATS;


typedef struct _D3DDEVINFO_VCACHE {
    DWORD   Pattern;                    
    DWORD   OptMethod;                  
    DWORD   CacheSize;                  
    DWORD   MagicNumber;                
} D3DDEVINFO_VCACHE, *LPD3DDEVINFO_VCACHE;

typedef struct _D3DDEVINFO_D3D9PIPELINETIMINGS
{
    FLOAT VertexProcessingTimePercent;
    FLOAT PixelProcessingTimePercent;
    FLOAT OtherGPUProcessingTimePercent;
    FLOAT GPUIdleTimePercent;
} D3DDEVINFO_D3D9PIPELINETIMINGS;

typedef struct _D3DDEVINFO_D3D9INTERFACETIMINGS
{
    FLOAT WaitingForGPUToUseApplicationResourceTimePercent;
    FLOAT WaitingForGPUToAcceptMoreCommandsTimePercent;
    FLOAT WaitingForGPUToStayWithinLatencyTimePercent;
    FLOAT WaitingForGPUExclusiveResourceTimePercent;
    FLOAT WaitingForGPUOtherTimePercent;
} D3DDEVINFO_D3D9INTERFACETIMINGS;

typedef struct _D3DDEVINFO_D3D9STAGETIMINGS
{
    FLOAT MemoryProcessingPercent;
    FLOAT ComputationProcessingPercent;
} D3DDEVINFO_D3D9STAGETIMINGS;

typedef struct _D3DDEVINFO_D3D9BANDWIDTHTIMINGS
{
    FLOAT MaxBandwidthUtilized;
    FLOAT FrontEndUploadMemoryUtilizedPercent;
    FLOAT VertexRateUtilizedPercent;
    FLOAT TriangleSetupRateUtilizedPercent;
    FLOAT FillRateUtilizedPercent;
} D3DDEVINFO_D3D9BANDWIDTHTIMINGS;

typedef struct _D3DDEVINFO_D3D9CACHEUTILIZATION
{
    FLOAT TextureCacheHitRate; 
    FLOAT PostTransformVertexCacheHitRate;
} D3DDEVINFO_D3D9CACHEUTILIZATION;



typedef struct _D3DMEMORYPRESSURE
{
    UINT64  BytesEvictedFromProcess;
    UINT64  SizeOfInefficientAllocation;
    DWORD   LevelOfEfficiency;
} D3DMEMORYPRESSURE;

#line 1946 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9types.h"




typedef enum _D3DCOMPOSERECTSOP{
    D3DCOMPOSERECTS_COPY     = 1,
    D3DCOMPOSERECTS_OR       = 2,
    D3DCOMPOSERECTS_AND      = 3,
    D3DCOMPOSERECTS_NEG      = 4,
    D3DCOMPOSERECTS_FORCE_DWORD    = 0x7fffffff, 
} D3DCOMPOSERECTSOP;

typedef struct _D3DCOMPOSERECTDESC
{
    USHORT  X, Y;           
    USHORT  Width, Height;  
} D3DCOMPOSERECTDESC;

typedef struct _D3DCOMPOSERECTDESTINATION
{
    USHORT SrcRectIndex;    
    USHORT Reserved;        
    SHORT  X, Y;            
} D3DCOMPOSERECTDESTINATION;








typedef struct _D3DPRESENTSTATS {
    UINT PresentCount;
    UINT PresentRefreshCount;
    UINT SyncRefreshCount;
    LARGE_INTEGER SyncQPCTime;
    LARGE_INTEGER SyncGPUTime;
} D3DPRESENTSTATS;

typedef enum D3DSCANLINEORDERING
{
    D3DSCANLINEORDERING_UNKNOWN                    = 0, 
    D3DSCANLINEORDERING_PROGRESSIVE                = 1,
    D3DSCANLINEORDERING_INTERLACED                 = 2,
} D3DSCANLINEORDERING;


typedef struct D3DDISPLAYMODEEX
{
    UINT                    Size;
    UINT                    Width;
    UINT                    Height;
    UINT                    RefreshRate;
    D3DFORMAT               Format;
    D3DSCANLINEORDERING     ScanLineOrdering;
} D3DDISPLAYMODEEX;

typedef struct D3DDISPLAYMODEFILTER
{
    UINT                    Size;
    D3DFORMAT               Format;
    D3DSCANLINEORDERING     ScanLineOrdering;
} D3DDISPLAYMODEFILTER;


typedef enum D3DDISPLAYROTATION
{
    D3DDISPLAYROTATION_IDENTITY = 1, 
    D3DDISPLAYROTATION_90       = 2, 
    D3DDISPLAYROTATION_180      = 3, 
    D3DDISPLAYROTATION_270      = 4  
} D3DDISPLAYROTATION;










typedef struct _D3D_OMAC
{
    BYTE Omac[16];
} D3D_OMAC;

typedef enum _D3DAUTHENTICATEDCHANNELTYPE
{
    D3DAUTHENTICATEDCHANNEL_D3D9            = 1,
    D3DAUTHENTICATEDCHANNEL_DRIVER_SOFTWARE = 2,
    D3DAUTHENTICATEDCHANNEL_DRIVER_HARDWARE = 3,
} D3DAUTHENTICATEDCHANNELTYPE;

typedef struct _D3DAUTHENTICATEDCHANNEL_QUERY_INPUT
{
    GUID                               QueryType;
    HANDLE                             hChannel;
    UINT                               SequenceNumber;
} D3DAUTHENTICATEDCHANNEL_QUERY_INPUT;

typedef struct _D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT
{
    D3D_OMAC                           omac;  
    GUID                               QueryType;
    HANDLE                             hChannel;
    UINT                               SequenceNumber;
    HRESULT                            ReturnCode;
} D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT;

extern "C" const GUID  D3DAUTHENTICATEDQUERY_PROTECTION;
#line 2059 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9types.h"

typedef struct _D3DAUTHENTICATEDCHANNEL_PROTECTION_FLAGS
{
    union
    {
        struct
        {
            UINT ProtectionEnabled                       : 1; 
            UINT OverlayOrFullscreenRequired             : 1;
            UINT Reserved                                : 30;
        };
        UINT  Value;
    };

} D3DAUTHENTICATEDCHANNEL_PROTECTION_FLAGS;

typedef struct _D3DAUTHENTICATEDCHANNEL_QUERYPROTECTION_OUTPUT
{
    D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT Output;

    D3DAUTHENTICATEDCHANNEL_PROTECTION_FLAGS ProtectionFlags;

} D3DAUTHENTICATEDCHANNEL_QUERYPROTECTION_OUTPUT;


extern "C" const GUID  D3DAUTHENTICATEDQUERY_CHANNELTYPE;
#line 2086 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9types.h"

typedef struct _D3DAUTHENTICATEDCHANNEL_QUERYCHANNELTYPE_OUTPUT
{
    D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT Output;

    D3DAUTHENTICATEDCHANNELTYPE ChannelType;

} D3DAUTHENTICATEDCHANNEL_QUERYCHANNELTYPE_OUTPUT;


extern "C" const GUID  D3DAUTHENTICATEDQUERY_DEVICEHANDLE;
#line 2098 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9types.h"

typedef struct _D3DAUTHENTICATEDCHANNEL_QUERYDEVICEHANDLE_OUTPUT
{
    D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT Output;

    HANDLE   DeviceHandle;

} D3DAUTHENTICATEDCHANNEL_QUERYDEVICEHANDLE_OUTPUT;


extern "C" const GUID  D3DAUTHENTICATEDQUERY_CRYPTOSESSION;
#line 2110 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9types.h"

typedef struct _D3DAUTHENTICATEDCHANNEL_QUERYCRYPTOSESSION_INPUT
{
    D3DAUTHENTICATEDCHANNEL_QUERY_INPUT Input;

    HANDLE   DXVA2DecodeHandle;

} D3DAUTHENTICATEDCHANNEL_QUERYCRYPTOSESSION_INPUT;

typedef struct _D3DAUTHENTICATEDCHANNEL_QUERYCRYPTOSESSION_OUTPUT
{
    D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT Output;

    HANDLE   DXVA2DecodeHandle;
    HANDLE   CryptoSessionHandle;
    HANDLE   DeviceHandle;

} D3DAUTHENTICATEDCHANNEL_QUERYCRYPTOSESSION_OUTPUT;


extern "C" const GUID  D3DAUTHENTICATEDQUERY_RESTRICTEDSHAREDRESOURCEPROCESSCOUNT;
#line 2132 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9types.h"

typedef struct _D3DAUTHENTICATEDCHANNEL_QUERYRESTRICTEDSHAREDRESOURCEPROCESSCOUNT_OUTPUT
{
    D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT Output;

    UINT   NumRestrictedSharedResourceProcesses;

} D3DAUTHENTICATEDCHANNEL_QUERYRESTRICTEDSHAREDRESOURCEPROCESSCOUNT_OUTPUT;


extern "C" const GUID  D3DAUTHENTICATEDQUERY_RESTRICTEDSHAREDRESOURCEPROCESS;
#line 2144 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9types.h"

typedef struct _D3DAUTHENTICATEDCHANNEL_QUERYRESTRICTEDSHAREDRESOURCEPROCESS_INPUT
{
    D3DAUTHENTICATEDCHANNEL_QUERY_INPUT Input;

    UINT     ProcessIndex;

} D3DAUTHENTICATEDCHANNEL_QUERYRESTRICTEDSHAREDRESOURCEPROCESS_INPUT;

typedef enum _D3DAUTHENTICATEDCHANNEL_PROCESSIDENTIFIERTYPE
{
    PROCESSIDTYPE_UNKNOWN  = 0,
    PROCESSIDTYPE_DWM      = 1,
    PROCESSIDTYPE_HANDLE   = 2
} D3DAUTHENTICATEDCHANNEL_PROCESSIDENTIFIERTYPE;

typedef struct _D3DAUTHENTICATEDCHANNEL_QUERYRESTRICTEDSHAREDRESOURCEPROCESS_OUTPUT
{
    D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT Output;

    UINT                                          ProcessIndex;
    D3DAUTHENTICATEDCHANNEL_PROCESSIDENTIFIERTYPE ProcessIdentifer;
    HANDLE                                        ProcessHandle;

} D3DAUTHENTICATEDCHANNEL_QUERYRESTRICTEDSHAREDRESOURCEPROCESS_OUTPUT;


extern "C" const GUID  D3DAUTHENTICATEDQUERY_UNRESTRICTEDPROTECTEDSHAREDRESOURCECOUNT;
#line 2173 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9types.h"

typedef struct _D3DAUTHENTICATEDCHANNEL_QUERYUNRESTRICTEDPROTECTEDSHAREDRESOURCECOUNT_OUTPUT
{
    D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT Output;

    UINT   NumUnrestrictedProtectedSharedResources;

} D3DAUTHENTICATEDCHANNEL_QUERYUNRESTRICTEDPROTECTEDSHAREDRESOURCECOUNT_OUTPUT;


extern "C" const GUID  D3DAUTHENTICATEDQUERY_OUTPUTIDCOUNT;
#line 2185 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9types.h"

typedef struct _D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTIDCOUNT_INPUT
{
    D3DAUTHENTICATEDCHANNEL_QUERY_INPUT Input;

    HANDLE  DeviceHandle;
    HANDLE  CryptoSessionHandle;	

} D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTIDCOUNT_INPUT;

typedef struct _D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTIDCOUNT_OUTPUT
{
    D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT Output;

    HANDLE  DeviceHandle;
    HANDLE  CryptoSessionHandle;	
    UINT    NumOutputIDs;

} D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTIDCOUNT_OUTPUT;


extern "C" const GUID  D3DAUTHENTICATEDQUERY_OUTPUTID;
#line 2208 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9types.h"

typedef struct _D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTID_INPUT
{
    D3DAUTHENTICATEDCHANNEL_QUERY_INPUT Input;

    HANDLE  DeviceHandle;
    HANDLE  CryptoSessionHandle;	
    UINT    OutputIDIndex;

} D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTID_INPUT;

typedef struct _D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTID_OUTPUT
{
    D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT Output;

    HANDLE  DeviceHandle;
    HANDLE  CryptoSessionHandle;	
    UINT    OutputIDIndex;
    UINT64  OutputID;

} D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTID_OUTPUT;


extern "C" const GUID  D3DAUTHENTICATEDQUERY_ACCESSIBILITYATTRIBUTES;
#line 2233 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9types.h"

typedef enum _D3DBUSTYPE
{
    D3DBUSTYPE_OTHER                                     = 0x00000000,
    D3DBUSTYPE_PCI                                       = 0x00000001,
    D3DBUSTYPE_PCIX                                      = 0x00000002,
    D3DBUSTYPE_PCIEXPRESS                                = 0x00000003,
    D3DBUSTYPE_AGP                                       = 0x00000004,
    D3DBUSIMPL_MODIFIER_INSIDE_OF_CHIPSET                = 0x00010000,
    D3DBUSIMPL_MODIFIER_TRACKS_ON_MOTHER_BOARD_TO_CHIP   = 0x00020000,
    D3DBUSIMPL_MODIFIER_TRACKS_ON_MOTHER_BOARD_TO_SOCKET = 0x00030000,
    D3DBUSIMPL_MODIFIER_DAUGHTER_BOARD_CONNECTOR         = 0x00040000,
    D3DBUSIMPL_MODIFIER_DAUGHTER_BOARD_CONNECTOR_INSIDE_OF_NUAE = 0x00050000, 
    D3DBUSIMPL_MODIFIER_NON_STANDARD                     = 0x80000000,    
} D3DBUSTYPE;

typedef struct _D3DAUTHENTICATEDCHANNEL_QUERYINFOBUSTYPE_OUTPUT
{
    D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT Output;

    D3DBUSTYPE BusType;
    BOOL bAccessibleInContiguousBlocks;
    BOOL bAccessibleInNonContiguousBlocks;

} D3DAUTHENTICATEDCHANNEL_QUERYINFOBUSTYPE_OUTPUT;


extern "C" const GUID  D3DAUTHENTICATEDQUERY_ENCRYPTIONWHENACCESSIBLEGUIDCOUNT;
#line 2262 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9types.h"

typedef struct _D3DAUTHENTICATEDCHANNEL_QUERYEVICTIONENCRYPTIONGUIDCOUNT_OUTPUT
{
    D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT Output;

    UINT   NumEncryptionGuids;

} D3DAUTHENTICATEDCHANNEL_QUERYEVICTIONENCRYPTIONGUIDCOUNT_OUTPUT;


extern "C" const GUID  D3DAUTHENTICATEDQUERY_ENCRYPTIONWHENACCESSIBLEGUID;
#line 2274 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9types.h"

typedef struct _D3DAUTHENTICATEDCHANNEL_QUERYEVICTIONENCRYPTIONGUID_INPUT
{
    D3DAUTHENTICATEDCHANNEL_QUERY_INPUT Input;

    UINT EncryptionGuidIndex;

} D3DAUTHENTICATEDCHANNEL_QUERYEVICTIONENCRYPTIONGUID_INPUT;

typedef struct _D3DAUTHENTICATEDCHANNEL_QUERYEVICTIONENCRYPTIONGUID_OUTPUT
{
    D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT Output;

    UINT       EncryptionGuidIndex;
    GUID       EncryptionGuid;

} D3DAUTHENTICATEDCHANNEL_QUERYEVICTIONENCRYPTIONGUID_OUTPUT;


extern "C" const GUID  D3DAUTHENTICATEDQUERY_CURRENTENCRYPTIONWHENACCESSIBLE;
#line 2295 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9types.h"

typedef struct _D3DAUTHENTICATEDCHANNEL_QUERYUNCOMPRESSEDENCRYPTIONLEVEL_OUTPUT
{
    D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT Output;

    GUID       EncryptionGuid;

} D3DAUTHENTICATEDCHANNEL_QUERYUNCOMPRESSEDENCRYPTIONLEVEL_OUTPUT;


typedef struct _D3DAUTHENTICATEDCHANNEL_CONFIGURE_INPUT
{
    D3D_OMAC                            omac;  
    GUID                                ConfigureType;      
    HANDLE                              hChannel;    
    UINT                                SequenceNumber;     

} D3DAUTHENTICATEDCHANNEL_CONFIGURE_INPUT;

typedef struct _D3DAUTHENTICATEDCHANNEL_CONFIGURE_OUTPUT
{
    D3D_OMAC                            omac;  
    GUID                                ConfigureType;          
    HANDLE                              hChannel;
    UINT                                SequenceNumber;     
    HRESULT                             ReturnCode;

} D3DAUTHENTICATEDCHANNEL_CONFIGURE_OUTPUT;

extern "C" const GUID  D3DAUTHENTICATEDCONFIGURE_INITIALIZE;
#line 2326 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9types.h"

typedef struct _D3DAUTHENTICATEDCHANNEL_CONFIGUREINITIALIZE
{
    D3DAUTHENTICATEDCHANNEL_CONFIGURE_INPUT   Parameters;

    UINT   StartSequenceQuery;
    UINT   StartSequenceConfigure;

} D3DAUTHENTICATEDCHANNEL_CONFIGUREINITIALIZE;


extern "C" const GUID  D3DAUTHENTICATEDCONFIGURE_PROTECTION;
#line 2339 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9types.h"

typedef struct _D3DAUTHENTICATEDCHANNEL_CONFIGUREPROTECTION
{
    D3DAUTHENTICATEDCHANNEL_CONFIGURE_INPUT   Parameters;

    D3DAUTHENTICATEDCHANNEL_PROTECTION_FLAGS Protections;

} D3DAUTHENTICATEDCHANNEL_CONFIGUREPROTECTION;


extern "C" const GUID  D3DAUTHENTICATEDCONFIGURE_CRYPTOSESSION;
#line 2351 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9types.h"

typedef struct _D3DAUTHENTICATEDCHANNEL_CONFIGURECRYPTOSESSION
{
    D3DAUTHENTICATEDCHANNEL_CONFIGURE_INPUT   Parameters;

    HANDLE      DXVA2DecodeHandle;
    HANDLE      CryptoSessionHandle;
    HANDLE      DeviceHandle;

} D3DAUTHENTICATEDCHANNEL_CONFIGURECRYPTOSESSION;


extern "C" const GUID  D3DAUTHENTICATEDCONFIGURE_SHAREDRESOURCE;
#line 2365 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9types.h"

typedef struct _D3DAUTHENTICATEDCHANNEL_CONFIGURESHAREDRESOURCE
{
    D3DAUTHENTICATEDCHANNEL_CONFIGURE_INPUT       Parameters;

    D3DAUTHENTICATEDCHANNEL_PROCESSIDENTIFIERTYPE ProcessIdentiferType;
    HANDLE                                        ProcessHandle;
    BOOL                                          AllowAccess;

} D3DAUTHENTICATEDCHANNEL_CONFIGURESHAREDRESOURCE;


extern "C" const GUID  D3DAUTHENTICATEDCONFIGURE_ENCRYPTIONWHENACCESSIBLE;
#line 2379 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9types.h"

typedef struct _D3DAUTHENTICATEDCHANNEL_CONFIGUREUNCOMPRESSEDENCRYPTION
{
    D3DAUTHENTICATEDCHANNEL_CONFIGURE_INPUT   Parameters;

    GUID                                      EncryptionGuid;

} D3DAUTHENTICATEDCHANNEL_CONFIGUREUNCOMPRESSEDENCRYPTION;

typedef struct _D3DENCRYPTED_BLOCK_INFO
{
    UINT NumEncryptedBytesAtBeginning;    
    UINT NumBytesInSkipPattern;
    UINT NumBytesInEncryptPattern;
} D3DENCRYPTED_BLOCK_INFO;

typedef struct _D3DAES_CTR_IV
{
    UINT64   IV;         
    UINT64   Count;      
} D3DAES_CTR_IV;



#line 2404 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9types.h"


#pragma pack()

#pragma warning(pop)


#line 2412 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9types.h"

#line 2414 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9types.h"
#line 2415 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9types.h"



#line 291 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"
#line 1 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9caps.h"




















#pragma pack(4)
#line 23 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9caps.h"

typedef struct _D3DVSHADERCAPS2_0
{
        DWORD Caps;
        INT DynamicFlowControlDepth;
        INT NumTemps;
        INT StaticFlowControlDepth;
} D3DVSHADERCAPS2_0;










typedef struct _D3DPSHADERCAPS2_0
{
    DWORD Caps;
    INT DynamicFlowControlDepth;
    INT NumTemps;
    INT StaticFlowControlDepth;
    INT NumInstructionSlots;
} D3DPSHADERCAPS2_0;




















typedef struct _D3DOVERLAYCAPS
{
    UINT   Caps;
    UINT   MaxOverlayDisplayWidth;
    UINT   MaxOverlayDisplayHeight;
} D3DOVERLAYCAPS;











typedef struct _D3DCONTENTPROTECTIONCAPS
{
    DWORD     Caps;
    GUID      KeyExchangeType;
    UINT      BufferAlignmentStart;
    UINT      BlockAlignmentSize;
    ULONGLONG ProtectedMemorySize;
} D3DCONTENTPROTECTIONCAPS;












extern "C" const GUID  D3DCRYPTOTYPE_AES128_CTR;
#line 108 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9caps.h"
extern "C" const GUID  D3DCRYPTOTYPE_PROPRIETARY;
#line 110 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9caps.h"

extern "C" const GUID  D3DKEYEXCHANGE_RSAES_OAEP;
#line 113 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9caps.h"
extern "C" const GUID  D3DKEYEXCHANGE_DXVA;
#line 115 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9caps.h"


typedef struct _D3DCAPS9
{
    
    D3DDEVTYPE  DeviceType;
    UINT        AdapterOrdinal;

    
    DWORD   Caps;
    DWORD   Caps2;
    DWORD   Caps3;
    DWORD   PresentationIntervals;

    
    DWORD   CursorCaps;

    
    DWORD   DevCaps;

    DWORD   PrimitiveMiscCaps;
    DWORD   RasterCaps;
    DWORD   ZCmpCaps;
    DWORD   SrcBlendCaps;
    DWORD   DestBlendCaps;
    DWORD   AlphaCmpCaps;
    DWORD   ShadeCaps;
    DWORD   TextureCaps;
    DWORD   TextureFilterCaps;          
    DWORD   CubeTextureFilterCaps;      
    DWORD   VolumeTextureFilterCaps;    
    DWORD   TextureAddressCaps;         
    DWORD   VolumeTextureAddressCaps;   

    DWORD   LineCaps;                   

    DWORD   MaxTextureWidth, MaxTextureHeight;
    DWORD   MaxVolumeExtent;

    DWORD   MaxTextureRepeat;
    DWORD   MaxTextureAspectRatio;
    DWORD   MaxAnisotropy;
    float   MaxVertexW;

    float   GuardBandLeft;
    float   GuardBandTop;
    float   GuardBandRight;
    float   GuardBandBottom;

    float   ExtentsAdjust;
    DWORD   StencilCaps;

    DWORD   FVFCaps;
    DWORD   TextureOpCaps;
    DWORD   MaxTextureBlendStages;
    DWORD   MaxSimultaneousTextures;

    DWORD   VertexProcessingCaps;
    DWORD   MaxActiveLights;
    DWORD   MaxUserClipPlanes;
    DWORD   MaxVertexBlendMatrices;
    DWORD   MaxVertexBlendMatrixIndex;

    float   MaxPointSize;

    DWORD   MaxPrimitiveCount;          
    DWORD   MaxVertexIndex;
    DWORD   MaxStreams;
    DWORD   MaxStreamStride;            

    DWORD   VertexShaderVersion;
    DWORD   MaxVertexShaderConst;       

    DWORD   PixelShaderVersion;
    float   PixelShader1xMaxValue;      

    
    DWORD   DevCaps2;

    float   MaxNpatchTessellationLevel;
    DWORD   Reserved5;

    UINT    MasterAdapterOrdinal;       
    UINT    AdapterOrdinalInGroup;      
    UINT    NumberOfAdaptersInGroup;    
    DWORD   DeclTypes;                  
    DWORD   NumSimultaneousRTs;         
    DWORD   StretchRectFilterCaps;      
    D3DVSHADERCAPS2_0 VS20Caps;
    D3DPSHADERCAPS2_0 PS20Caps;
    DWORD   VertexTextureFilterCaps;    
    DWORD   MaxVShaderInstructionsExecuted; 
    DWORD   MaxPShaderInstructionsExecuted; 
    DWORD   MaxVertexShader30InstructionSlots; 
    DWORD   MaxPixelShader30InstructionSlots;
} D3DCAPS9;


























#line 238 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9caps.h"


























































































#line 329 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9caps.h"





































































#line 399 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9caps.h"




















































#line 452 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9caps.h"











































































































#pragma pack()

#line 562 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9caps.h"
#line 563 "c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\d3d9caps.h"


#line 292 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"



extern "C" {
#line 297 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"









IDirect3D9 * __stdcall Direct3DCreate9(UINT SDKVersion);




 
int __stdcall D3DPERF_BeginEvent( D3DCOLOR col, LPCWSTR wszName );
int __stdcall D3DPERF_EndEvent( void );
void __stdcall D3DPERF_SetMarker( D3DCOLOR col, LPCWSTR wszName );
void __stdcall D3DPERF_SetRegion( D3DCOLOR col, LPCWSTR wszName );
BOOL __stdcall D3DPERF_QueryRepeatFrame( void );

void __stdcall D3DPERF_SetOptions( DWORD dwOptions );
DWORD __stdcall D3DPERF_GetStatus( void );













struct __declspec(novtable) IDirect3D9 : public IUnknown
{
    
    virtual __declspec(nothrow) HRESULT __stdcall QueryInterface( const IID & riid, void** ppvObj) = 0;
    virtual __declspec(nothrow) ULONG __stdcall AddRef(void) = 0;
    virtual __declspec(nothrow) ULONG __stdcall Release(void) = 0;

    
    virtual __declspec(nothrow) HRESULT __stdcall RegisterSoftwareDevice( void* pInitializeFunction) = 0;
    virtual __declspec(nothrow) UINT __stdcall GetAdapterCount(void) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetAdapterIdentifier( UINT Adapter,DWORD Flags,D3DADAPTER_IDENTIFIER9* pIdentifier) = 0;
    virtual __declspec(nothrow) UINT __stdcall GetAdapterModeCount( UINT Adapter,D3DFORMAT Format) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall EnumAdapterModes( UINT Adapter,D3DFORMAT Format,UINT Mode,D3DDISPLAYMODE* pMode) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetAdapterDisplayMode( UINT Adapter,D3DDISPLAYMODE* pMode) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall CheckDeviceType( UINT Adapter,D3DDEVTYPE DevType,D3DFORMAT AdapterFormat,D3DFORMAT BackBufferFormat,BOOL bWindowed) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall CheckDeviceFormat( UINT Adapter,D3DDEVTYPE DeviceType,D3DFORMAT AdapterFormat,DWORD Usage,D3DRESOURCETYPE RType,D3DFORMAT CheckFormat) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall CheckDeviceMultiSampleType( UINT Adapter,D3DDEVTYPE DeviceType,D3DFORMAT SurfaceFormat,BOOL Windowed,D3DMULTISAMPLE_TYPE MultiSampleType,DWORD* pQualityLevels) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall CheckDepthStencilMatch( UINT Adapter,D3DDEVTYPE DeviceType,D3DFORMAT AdapterFormat,D3DFORMAT RenderTargetFormat,D3DFORMAT DepthStencilFormat) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall CheckDeviceFormatConversion( UINT Adapter,D3DDEVTYPE DeviceType,D3DFORMAT SourceFormat,D3DFORMAT TargetFormat) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetDeviceCaps( UINT Adapter,D3DDEVTYPE DeviceType,D3DCAPS9* pCaps) = 0;
    virtual __declspec(nothrow) HMONITOR __stdcall GetAdapterMonitor( UINT Adapter) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall CreateDevice( UINT Adapter,D3DDEVTYPE DeviceType,HWND hFocusWindow,DWORD BehaviorFlags,D3DPRESENT_PARAMETERS* pPresentationParameters,IDirect3DDevice9** ppReturnedDeviceInterface) = 0;
    
    


};
    
typedef struct IDirect3D9 *LPDIRECT3D9, *PDIRECT3D9;



















#line 382 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"

















#line 400 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"


























struct __declspec(novtable) IDirect3DDevice9 : public IUnknown
{
    
    virtual __declspec(nothrow) HRESULT __stdcall QueryInterface( const IID & riid, void** ppvObj) = 0;
    virtual __declspec(nothrow) ULONG __stdcall AddRef(void) = 0;
    virtual __declspec(nothrow) ULONG __stdcall Release(void) = 0;

    
    virtual __declspec(nothrow) HRESULT __stdcall TestCooperativeLevel(void) = 0;
    virtual __declspec(nothrow) UINT __stdcall GetAvailableTextureMem(void) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall EvictManagedResources(void) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetDirect3D( IDirect3D9** ppD3D9) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetDeviceCaps( D3DCAPS9* pCaps) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetDisplayMode( UINT iSwapChain,D3DDISPLAYMODE* pMode) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetCreationParameters( D3DDEVICE_CREATION_PARAMETERS *pParameters) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetCursorProperties( UINT XHotSpot,UINT YHotSpot,IDirect3DSurface9* pCursorBitmap) = 0;
    virtual __declspec(nothrow) void __stdcall SetCursorPosition( int X,int Y,DWORD Flags) = 0;
    virtual __declspec(nothrow) BOOL __stdcall ShowCursor( BOOL bShow) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall CreateAdditionalSwapChain( D3DPRESENT_PARAMETERS* pPresentationParameters,IDirect3DSwapChain9** pSwapChain) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetSwapChain( UINT iSwapChain,IDirect3DSwapChain9** pSwapChain) = 0;
    virtual __declspec(nothrow) UINT __stdcall GetNumberOfSwapChains(void) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall Reset( D3DPRESENT_PARAMETERS* pPresentationParameters) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall Present( const RECT* pSourceRect,const RECT* pDestRect,HWND hDestWindowOverride,const RGNDATA* pDirtyRegion) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetBackBuffer( UINT iSwapChain,UINT iBackBuffer,D3DBACKBUFFER_TYPE Type,IDirect3DSurface9** ppBackBuffer) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetRasterStatus( UINT iSwapChain,D3DRASTER_STATUS* pRasterStatus) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetDialogBoxMode( BOOL bEnableDialogs) = 0;
    virtual __declspec(nothrow) void __stdcall SetGammaRamp( UINT iSwapChain,DWORD Flags,const D3DGAMMARAMP* pRamp) = 0;
    virtual __declspec(nothrow) void __stdcall GetGammaRamp( UINT iSwapChain,D3DGAMMARAMP* pRamp) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall CreateTexture( UINT Width,UINT Height,UINT Levels,DWORD Usage,D3DFORMAT Format,D3DPOOL Pool,IDirect3DTexture9** ppTexture,HANDLE* pSharedHandle) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall CreateVolumeTexture( UINT Width,UINT Height,UINT Depth,UINT Levels,DWORD Usage,D3DFORMAT Format,D3DPOOL Pool,IDirect3DVolumeTexture9** ppVolumeTexture,HANDLE* pSharedHandle) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall CreateCubeTexture( UINT EdgeLength,UINT Levels,DWORD Usage,D3DFORMAT Format,D3DPOOL Pool,IDirect3DCubeTexture9** ppCubeTexture,HANDLE* pSharedHandle) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall CreateVertexBuffer( UINT Length,DWORD Usage,DWORD FVF,D3DPOOL Pool,IDirect3DVertexBuffer9** ppVertexBuffer,HANDLE* pSharedHandle) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall CreateIndexBuffer( UINT Length,DWORD Usage,D3DFORMAT Format,D3DPOOL Pool,IDirect3DIndexBuffer9** ppIndexBuffer,HANDLE* pSharedHandle) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall CreateRenderTarget( UINT Width,UINT Height,D3DFORMAT Format,D3DMULTISAMPLE_TYPE MultiSample,DWORD MultisampleQuality,BOOL Lockable,IDirect3DSurface9** ppSurface,HANDLE* pSharedHandle) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall CreateDepthStencilSurface( UINT Width,UINT Height,D3DFORMAT Format,D3DMULTISAMPLE_TYPE MultiSample,DWORD MultisampleQuality,BOOL Discard,IDirect3DSurface9** ppSurface,HANDLE* pSharedHandle) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall UpdateSurface( IDirect3DSurface9* pSourceSurface,const RECT* pSourceRect,IDirect3DSurface9* pDestinationSurface,const POINT* pDestPoint) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall UpdateTexture( IDirect3DBaseTexture9* pSourceTexture,IDirect3DBaseTexture9* pDestinationTexture) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetRenderTargetData( IDirect3DSurface9* pRenderTarget,IDirect3DSurface9* pDestSurface) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetFrontBufferData( UINT iSwapChain,IDirect3DSurface9* pDestSurface) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall StretchRect( IDirect3DSurface9* pSourceSurface,const RECT* pSourceRect,IDirect3DSurface9* pDestSurface,const RECT* pDestRect,D3DTEXTUREFILTERTYPE Filter) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall ColorFill( IDirect3DSurface9* pSurface,const RECT* pRect,D3DCOLOR color) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall CreateOffscreenPlainSurface( UINT Width,UINT Height,D3DFORMAT Format,D3DPOOL Pool,IDirect3DSurface9** ppSurface,HANDLE* pSharedHandle) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetRenderTarget( DWORD RenderTargetIndex,IDirect3DSurface9* pRenderTarget) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetRenderTarget( DWORD RenderTargetIndex,IDirect3DSurface9** ppRenderTarget) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetDepthStencilSurface( IDirect3DSurface9* pNewZStencil) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetDepthStencilSurface( IDirect3DSurface9** ppZStencilSurface) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall BeginScene(void) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall EndScene(void) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall Clear( DWORD Count,const D3DRECT* pRects,DWORD Flags,D3DCOLOR Color,float Z,DWORD Stencil) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetTransform( D3DTRANSFORMSTATETYPE State,const D3DMATRIX* pMatrix) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetTransform( D3DTRANSFORMSTATETYPE State,D3DMATRIX* pMatrix) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall MultiplyTransform( D3DTRANSFORMSTATETYPE,const D3DMATRIX*) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetViewport( const D3DVIEWPORT9* pViewport) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetViewport( D3DVIEWPORT9* pViewport) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetMaterial( const D3DMATERIAL9* pMaterial) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetMaterial( D3DMATERIAL9* pMaterial) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetLight( DWORD Index,const D3DLIGHT9*) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetLight( DWORD Index,D3DLIGHT9*) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall LightEnable( DWORD Index,BOOL Enable) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetLightEnable( DWORD Index,BOOL* pEnable) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetClipPlane( DWORD Index,const float* pPlane) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetClipPlane( DWORD Index,float* pPlane) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetRenderState( D3DRENDERSTATETYPE State,DWORD Value) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetRenderState( D3DRENDERSTATETYPE State,DWORD* pValue) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall CreateStateBlock( D3DSTATEBLOCKTYPE Type,IDirect3DStateBlock9** ppSB) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall BeginStateBlock(void) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall EndStateBlock( IDirect3DStateBlock9** ppSB) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetClipStatus( const D3DCLIPSTATUS9* pClipStatus) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetClipStatus( D3DCLIPSTATUS9* pClipStatus) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetTexture( DWORD Stage,IDirect3DBaseTexture9** ppTexture) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetTexture( DWORD Stage,IDirect3DBaseTexture9* pTexture) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetTextureStageState( DWORD Stage,D3DTEXTURESTAGESTATETYPE Type,DWORD* pValue) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetTextureStageState( DWORD Stage,D3DTEXTURESTAGESTATETYPE Type,DWORD Value) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetSamplerState( DWORD Sampler,D3DSAMPLERSTATETYPE Type,DWORD* pValue) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetSamplerState( DWORD Sampler,D3DSAMPLERSTATETYPE Type,DWORD Value) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall ValidateDevice( DWORD* pNumPasses) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetPaletteEntries( UINT PaletteNumber,const PALETTEENTRY* pEntries) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetPaletteEntries( UINT PaletteNumber,PALETTEENTRY* pEntries) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetCurrentTexturePalette( UINT PaletteNumber) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetCurrentTexturePalette( UINT *PaletteNumber) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetScissorRect( const RECT* pRect) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetScissorRect( RECT* pRect) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetSoftwareVertexProcessing( BOOL bSoftware) = 0;
    virtual __declspec(nothrow) BOOL __stdcall GetSoftwareVertexProcessing(void) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetNPatchMode( float nSegments) = 0;
    virtual __declspec(nothrow) float __stdcall GetNPatchMode(void) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall DrawPrimitive( D3DPRIMITIVETYPE PrimitiveType,UINT StartVertex,UINT PrimitiveCount) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall DrawIndexedPrimitive( D3DPRIMITIVETYPE,INT BaseVertexIndex,UINT MinVertexIndex,UINT NumVertices,UINT startIndex,UINT primCount) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall DrawPrimitiveUP( D3DPRIMITIVETYPE PrimitiveType,UINT PrimitiveCount,const void* pVertexStreamZeroData,UINT VertexStreamZeroStride) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall DrawIndexedPrimitiveUP( D3DPRIMITIVETYPE PrimitiveType,UINT MinVertexIndex,UINT NumVertices,UINT PrimitiveCount,const void* pIndexData,D3DFORMAT IndexDataFormat,const void* pVertexStreamZeroData,UINT VertexStreamZeroStride) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall ProcessVertices( UINT SrcStartIndex,UINT DestIndex,UINT VertexCount,IDirect3DVertexBuffer9* pDestBuffer,IDirect3DVertexDeclaration9* pVertexDecl,DWORD Flags) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall CreateVertexDeclaration( const D3DVERTEXELEMENT9* pVertexElements,IDirect3DVertexDeclaration9** ppDecl) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetVertexDeclaration( IDirect3DVertexDeclaration9* pDecl) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetVertexDeclaration( IDirect3DVertexDeclaration9** ppDecl) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetFVF( DWORD FVF) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetFVF( DWORD* pFVF) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall CreateVertexShader( const DWORD* pFunction,IDirect3DVertexShader9** ppShader) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetVertexShader( IDirect3DVertexShader9* pShader) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetVertexShader( IDirect3DVertexShader9** ppShader) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetVertexShaderConstantF( UINT StartRegister,const float* pConstantData,UINT Vector4fCount) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetVertexShaderConstantF( UINT StartRegister,float* pConstantData,UINT Vector4fCount) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetVertexShaderConstantI( UINT StartRegister,const int* pConstantData,UINT Vector4iCount) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetVertexShaderConstantI( UINT StartRegister,int* pConstantData,UINT Vector4iCount) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetVertexShaderConstantB( UINT StartRegister,const BOOL* pConstantData,UINT  BoolCount) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetVertexShaderConstantB( UINT StartRegister,BOOL* pConstantData,UINT BoolCount) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetStreamSource( UINT StreamNumber,IDirect3DVertexBuffer9* pStreamData,UINT OffsetInBytes,UINT Stride) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetStreamSource( UINT StreamNumber,IDirect3DVertexBuffer9** ppStreamData,UINT* pOffsetInBytes,UINT* pStride) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetStreamSourceFreq( UINT StreamNumber,UINT Setting) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetStreamSourceFreq( UINT StreamNumber,UINT* pSetting) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetIndices( IDirect3DIndexBuffer9* pIndexData) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetIndices( IDirect3DIndexBuffer9** ppIndexData) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall CreatePixelShader( const DWORD* pFunction,IDirect3DPixelShader9** ppShader) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetPixelShader( IDirect3DPixelShader9* pShader) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetPixelShader( IDirect3DPixelShader9** ppShader) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetPixelShaderConstantF( UINT StartRegister,const float* pConstantData,UINT Vector4fCount) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetPixelShaderConstantF( UINT StartRegister,float* pConstantData,UINT Vector4fCount) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetPixelShaderConstantI( UINT StartRegister,const int* pConstantData,UINT Vector4iCount) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetPixelShaderConstantI( UINT StartRegister,int* pConstantData,UINT Vector4iCount) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetPixelShaderConstantB( UINT StartRegister,const BOOL* pConstantData,UINT  BoolCount) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetPixelShaderConstantB( UINT StartRegister,BOOL* pConstantData,UINT BoolCount) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall DrawRectPatch( UINT Handle,const float* pNumSegs,const D3DRECTPATCH_INFO* pRectPatchInfo) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall DrawTriPatch( UINT Handle,const float* pNumSegs,const D3DTRIPATCH_INFO* pTriPatchInfo) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall DeletePatch( UINT Handle) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall CreateQuery( D3DQUERYTYPE Type,IDirect3DQuery9** ppQuery) = 0;
    
    

































};
    
typedef struct IDirect3DDevice9 *LPDIRECT3DDEVICE9, *PDIRECT3DDEVICE9;

























































































































#line 710 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"























































































































#line 830 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"








struct __declspec(novtable) IDirect3DStateBlock9 : public IUnknown
{
    
    virtual __declspec(nothrow) HRESULT __stdcall QueryInterface( const IID & riid, void** ppvObj) = 0;
    virtual __declspec(nothrow) ULONG __stdcall AddRef(void) = 0;
    virtual __declspec(nothrow) ULONG __stdcall Release(void) = 0;

    
    virtual __declspec(nothrow) HRESULT __stdcall GetDevice( IDirect3DDevice9** ppDevice) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall Capture(void) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall Apply(void) = 0;
    
    


};
    
typedef struct IDirect3DStateBlock9 *LPDIRECT3DSTATEBLOCK9, *PDIRECT3DSTATEBLOCK9;








#line 865 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"






#line 872 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"







struct __declspec(novtable) IDirect3DSwapChain9 : public IUnknown
{
    
    virtual __declspec(nothrow) HRESULT __stdcall QueryInterface( const IID & riid, void** ppvObj) = 0;
    virtual __declspec(nothrow) ULONG __stdcall AddRef(void) = 0;
    virtual __declspec(nothrow) ULONG __stdcall Release(void) = 0;

    
    virtual __declspec(nothrow) HRESULT __stdcall Present( const RECT* pSourceRect,const RECT* pDestRect,HWND hDestWindowOverride,const RGNDATA* pDirtyRegion,DWORD dwFlags) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetFrontBufferData( IDirect3DSurface9* pDestSurface) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetBackBuffer( UINT iBackBuffer,D3DBACKBUFFER_TYPE Type,IDirect3DSurface9** ppBackBuffer) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetRasterStatus( D3DRASTER_STATUS* pRasterStatus) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetDisplayMode( D3DDISPLAYMODE* pMode) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetDevice( IDirect3DDevice9** ppDevice) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetPresentParameters( D3DPRESENT_PARAMETERS* pPresentationParameters) = 0;
    
    




};
    
typedef struct IDirect3DSwapChain9 *LPDIRECT3DSWAPCHAIN9, *PDIRECT3DSWAPCHAIN9;












#line 916 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"










#line 927 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"






struct __declspec(novtable) IDirect3DResource9 : public IUnknown
{
    
    virtual __declspec(nothrow) HRESULT __stdcall QueryInterface( const IID & riid, void** ppvObj) = 0;
    virtual __declspec(nothrow) ULONG __stdcall AddRef(void) = 0;
    virtual __declspec(nothrow) ULONG __stdcall Release(void) = 0;

    
    virtual __declspec(nothrow) HRESULT __stdcall GetDevice( IDirect3DDevice9** ppDevice) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetPrivateData( const GUID & refguid,const void* pData,DWORD SizeOfData,DWORD Flags) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetPrivateData( const GUID & refguid,void* pData,DWORD* pSizeOfData) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall FreePrivateData( const GUID & refguid) = 0;
    virtual __declspec(nothrow) DWORD __stdcall SetPriority( DWORD PriorityNew) = 0;
    virtual __declspec(nothrow) DWORD __stdcall GetPriority(void) = 0;
    virtual __declspec(nothrow) void __stdcall PreLoad(void) = 0;
    virtual __declspec(nothrow) D3DRESOURCETYPE __stdcall GetType(void) = 0;
};
    
typedef struct IDirect3DResource9 *LPDIRECT3DRESOURCE9, *PDIRECT3DRESOURCE9;













#line 966 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"











#line 978 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"







struct __declspec(novtable) IDirect3DVertexDeclaration9 : public IUnknown
{
    
    virtual __declspec(nothrow) HRESULT __stdcall QueryInterface( const IID & riid, void** ppvObj) = 0;
    virtual __declspec(nothrow) ULONG __stdcall AddRef(void) = 0;
    virtual __declspec(nothrow) ULONG __stdcall Release(void) = 0;

    
    virtual __declspec(nothrow) HRESULT __stdcall GetDevice( IDirect3DDevice9** ppDevice) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetDeclaration( D3DVERTEXELEMENT9* pElement,UINT* pNumElements) = 0;
    
    


};
    
typedef struct IDirect3DVertexDeclaration9 *LPDIRECT3DVERTEXDECLARATION9, *PDIRECT3DVERTEXDECLARATION9;







#line 1010 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"





#line 1016 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"







struct __declspec(novtable) IDirect3DVertexShader9 : public IUnknown
{
    
    virtual __declspec(nothrow) HRESULT __stdcall QueryInterface( const IID & riid, void** ppvObj) = 0;
    virtual __declspec(nothrow) ULONG __stdcall AddRef(void) = 0;
    virtual __declspec(nothrow) ULONG __stdcall Release(void) = 0;

    
    virtual __declspec(nothrow) HRESULT __stdcall GetDevice( IDirect3DDevice9** ppDevice) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetFunction( void*,UINT* pSizeOfData) = 0;
    
    



};
    
typedef struct IDirect3DVertexShader9 *LPDIRECT3DVERTEXSHADER9, *PDIRECT3DVERTEXSHADER9;







#line 1049 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"





#line 1055 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"







struct __declspec(novtable) IDirect3DPixelShader9 : public IUnknown
{
    
    virtual __declspec(nothrow) HRESULT __stdcall QueryInterface( const IID & riid, void** ppvObj) = 0;
    virtual __declspec(nothrow) ULONG __stdcall AddRef(void) = 0;
    virtual __declspec(nothrow) ULONG __stdcall Release(void) = 0;

    
    virtual __declspec(nothrow) HRESULT __stdcall GetDevice( IDirect3DDevice9** ppDevice) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetFunction( void*,UINT* pSizeOfData) = 0;
    
    



};
    
typedef struct IDirect3DPixelShader9 *LPDIRECT3DPIXELSHADER9, *PDIRECT3DPIXELSHADER9;







#line 1088 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"





#line 1094 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"







struct __declspec(novtable) IDirect3DBaseTexture9 : public IDirect3DResource9
{
    
    virtual __declspec(nothrow) HRESULT __stdcall QueryInterface( const IID & riid, void** ppvObj) = 0;
    virtual __declspec(nothrow) ULONG __stdcall AddRef(void) = 0;
    virtual __declspec(nothrow) ULONG __stdcall Release(void) = 0;

    
    virtual __declspec(nothrow) HRESULT __stdcall GetDevice( IDirect3DDevice9** ppDevice) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetPrivateData( const GUID & refguid,const void* pData,DWORD SizeOfData,DWORD Flags) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetPrivateData( const GUID & refguid,void* pData,DWORD* pSizeOfData) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall FreePrivateData( const GUID & refguid) = 0;
    virtual __declspec(nothrow) DWORD __stdcall SetPriority( DWORD PriorityNew) = 0;
    virtual __declspec(nothrow) DWORD __stdcall GetPriority(void) = 0;
    virtual __declspec(nothrow) void __stdcall PreLoad(void) = 0;
    virtual __declspec(nothrow) D3DRESOURCETYPE __stdcall GetType(void) = 0;
    virtual __declspec(nothrow) DWORD __stdcall SetLOD( DWORD LODNew) = 0;
    virtual __declspec(nothrow) DWORD __stdcall GetLOD(void) = 0;
    virtual __declspec(nothrow) DWORD __stdcall GetLevelCount(void) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetAutoGenFilterType( D3DTEXTUREFILTERTYPE FilterType) = 0;
    virtual __declspec(nothrow) D3DTEXTUREFILTERTYPE __stdcall GetAutoGenFilterType(void) = 0;
    virtual __declspec(nothrow) void __stdcall GenerateMipSubLevels(void) = 0;
};
    
typedef struct IDirect3DBaseTexture9 *LPDIRECT3DBASETEXTURE9, *PDIRECT3DBASETEXTURE9;



















#line 1146 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"

















#line 1164 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"








struct __declspec(novtable) IDirect3DTexture9 : public IDirect3DBaseTexture9
{
    
    virtual __declspec(nothrow) HRESULT __stdcall QueryInterface( const IID & riid, void** ppvObj) = 0;
    virtual __declspec(nothrow) ULONG __stdcall AddRef(void) = 0;
    virtual __declspec(nothrow) ULONG __stdcall Release(void) = 0;

    
    virtual __declspec(nothrow) HRESULT __stdcall GetDevice( IDirect3DDevice9** ppDevice) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetPrivateData( const GUID & refguid,const void* pData,DWORD SizeOfData,DWORD Flags) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetPrivateData( const GUID & refguid,void* pData,DWORD* pSizeOfData) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall FreePrivateData( const GUID & refguid) = 0;
    virtual __declspec(nothrow) DWORD __stdcall SetPriority( DWORD PriorityNew) = 0;
    virtual __declspec(nothrow) DWORD __stdcall GetPriority(void) = 0;
    virtual __declspec(nothrow) void __stdcall PreLoad(void) = 0;
    virtual __declspec(nothrow) D3DRESOURCETYPE __stdcall GetType(void) = 0;
    virtual __declspec(nothrow) DWORD __stdcall SetLOD( DWORD LODNew) = 0;
    virtual __declspec(nothrow) DWORD __stdcall GetLOD(void) = 0;
    virtual __declspec(nothrow) DWORD __stdcall GetLevelCount(void) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetAutoGenFilterType( D3DTEXTUREFILTERTYPE FilterType) = 0;
    virtual __declspec(nothrow) D3DTEXTUREFILTERTYPE __stdcall GetAutoGenFilterType(void) = 0;
    virtual __declspec(nothrow) void __stdcall GenerateMipSubLevels(void) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetLevelDesc( UINT Level,D3DSURFACE_DESC *pDesc) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetSurfaceLevel( UINT Level,IDirect3DSurface9** ppSurfaceLevel) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall LockRect( UINT Level,D3DLOCKED_RECT* pLockedRect,const RECT* pRect,DWORD Flags) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall UnlockRect( UINT Level) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall AddDirtyRect( const RECT* pDirtyRect) = 0;
    
    













};
    
typedef struct IDirect3DTexture9 *LPDIRECT3DTEXTURE9, *PDIRECT3DTEXTURE9;
























#line 1242 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"






















#line 1265 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"








struct __declspec(novtable) IDirect3DVolumeTexture9 : public IDirect3DBaseTexture9
{
    
    virtual __declspec(nothrow) HRESULT __stdcall QueryInterface( const IID & riid, void** ppvObj) = 0;
    virtual __declspec(nothrow) ULONG __stdcall AddRef(void) = 0;
    virtual __declspec(nothrow) ULONG __stdcall Release(void) = 0;

    
    virtual __declspec(nothrow) HRESULT __stdcall GetDevice( IDirect3DDevice9** ppDevice) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetPrivateData( const GUID & refguid,const void* pData,DWORD SizeOfData,DWORD Flags) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetPrivateData( const GUID & refguid,void* pData,DWORD* pSizeOfData) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall FreePrivateData( const GUID & refguid) = 0;
    virtual __declspec(nothrow) DWORD __stdcall SetPriority( DWORD PriorityNew) = 0;
    virtual __declspec(nothrow) DWORD __stdcall GetPriority(void) = 0;
    virtual __declspec(nothrow) void __stdcall PreLoad(void) = 0;
    virtual __declspec(nothrow) D3DRESOURCETYPE __stdcall GetType(void) = 0;
    virtual __declspec(nothrow) DWORD __stdcall SetLOD( DWORD LODNew) = 0;
    virtual __declspec(nothrow) DWORD __stdcall GetLOD(void) = 0;
    virtual __declspec(nothrow) DWORD __stdcall GetLevelCount(void) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetAutoGenFilterType( D3DTEXTUREFILTERTYPE FilterType) = 0;
    virtual __declspec(nothrow) D3DTEXTUREFILTERTYPE __stdcall GetAutoGenFilterType(void) = 0;
    virtual __declspec(nothrow) void __stdcall GenerateMipSubLevels(void) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetLevelDesc( UINT Level,D3DVOLUME_DESC *pDesc) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetVolumeLevel( UINT Level,IDirect3DVolume9** ppVolumeLevel) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall LockBox( UINT Level,D3DLOCKED_BOX* pLockedVolume,const D3DBOX* pBox,DWORD Flags) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall UnlockBox( UINT Level) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall AddDirtyBox( const D3DBOX* pDirtyBox) = 0;
    
    














};
    
typedef struct IDirect3DVolumeTexture9 *LPDIRECT3DVOLUMETEXTURE9, *PDIRECT3DVOLUMETEXTURE9;
























#line 1344 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"






















#line 1367 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"








struct __declspec(novtable) IDirect3DCubeTexture9 : public IDirect3DBaseTexture9
{
    
    virtual __declspec(nothrow) HRESULT __stdcall QueryInterface( const IID & riid, void** ppvObj) = 0;
    virtual __declspec(nothrow) ULONG __stdcall AddRef(void) = 0;
    virtual __declspec(nothrow) ULONG __stdcall Release(void) = 0;

    
    virtual __declspec(nothrow) HRESULT __stdcall GetDevice( IDirect3DDevice9** ppDevice) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetPrivateData( const GUID & refguid,const void* pData,DWORD SizeOfData,DWORD Flags) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetPrivateData( const GUID & refguid,void* pData,DWORD* pSizeOfData) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall FreePrivateData( const GUID & refguid) = 0;
    virtual __declspec(nothrow) DWORD __stdcall SetPriority( DWORD PriorityNew) = 0;
    virtual __declspec(nothrow) DWORD __stdcall GetPriority(void) = 0;
    virtual __declspec(nothrow) void __stdcall PreLoad(void) = 0;
    virtual __declspec(nothrow) D3DRESOURCETYPE __stdcall GetType(void) = 0;
    virtual __declspec(nothrow) DWORD __stdcall SetLOD( DWORD LODNew) = 0;
    virtual __declspec(nothrow) DWORD __stdcall GetLOD(void) = 0;
    virtual __declspec(nothrow) DWORD __stdcall GetLevelCount(void) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetAutoGenFilterType( D3DTEXTUREFILTERTYPE FilterType) = 0;
    virtual __declspec(nothrow) D3DTEXTUREFILTERTYPE __stdcall GetAutoGenFilterType(void) = 0;
    virtual __declspec(nothrow) void __stdcall GenerateMipSubLevels(void) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetLevelDesc( UINT Level,D3DSURFACE_DESC *pDesc) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetCubeMapSurface( D3DCUBEMAP_FACES FaceType,UINT Level,IDirect3DSurface9** ppCubeMapSurface) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall LockRect( D3DCUBEMAP_FACES FaceType,UINT Level,D3DLOCKED_RECT* pLockedRect,const RECT* pRect,DWORD Flags) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall UnlockRect( D3DCUBEMAP_FACES FaceType,UINT Level) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall AddDirtyRect( D3DCUBEMAP_FACES FaceType,const RECT* pDirtyRect) = 0;
    
    













};
    
typedef struct IDirect3DCubeTexture9 *LPDIRECT3DCUBETEXTURE9, *PDIRECT3DCUBETEXTURE9;
























#line 1445 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"






















#line 1468 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"







struct __declspec(novtable) IDirect3DVertexBuffer9 : public IDirect3DResource9
{
    
    virtual __declspec(nothrow) HRESULT __stdcall QueryInterface( const IID & riid, void** ppvObj) = 0;
    virtual __declspec(nothrow) ULONG __stdcall AddRef(void) = 0;
    virtual __declspec(nothrow) ULONG __stdcall Release(void) = 0;

    
    virtual __declspec(nothrow) HRESULT __stdcall GetDevice( IDirect3DDevice9** ppDevice) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetPrivateData( const GUID & refguid,const void* pData,DWORD SizeOfData,DWORD Flags) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetPrivateData( const GUID & refguid,void* pData,DWORD* pSizeOfData) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall FreePrivateData( const GUID & refguid) = 0;
    virtual __declspec(nothrow) DWORD __stdcall SetPriority( DWORD PriorityNew) = 0;
    virtual __declspec(nothrow) DWORD __stdcall GetPriority(void) = 0;
    virtual __declspec(nothrow) void __stdcall PreLoad(void) = 0;
    virtual __declspec(nothrow) D3DRESOURCETYPE __stdcall GetType(void) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall Lock( UINT OffsetToLock,UINT SizeToLock,void** ppbData,DWORD Flags) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall Unlock(void) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetDesc( D3DVERTEXBUFFER_DESC *pDesc) = 0;
    
    









};
    
typedef struct IDirect3DVertexBuffer9 *LPDIRECT3DVERTEXBUFFER9, *PDIRECT3DVERTEXBUFFER9;
















#line 1525 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"














#line 1540 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"







struct __declspec(novtable) IDirect3DIndexBuffer9 : public IDirect3DResource9
{
    
    virtual __declspec(nothrow) HRESULT __stdcall QueryInterface( const IID & riid, void** ppvObj) = 0;
    virtual __declspec(nothrow) ULONG __stdcall AddRef(void) = 0;
    virtual __declspec(nothrow) ULONG __stdcall Release(void) = 0;

    
    virtual __declspec(nothrow) HRESULT __stdcall GetDevice( IDirect3DDevice9** ppDevice) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetPrivateData( const GUID & refguid,const void* pData,DWORD SizeOfData,DWORD Flags) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetPrivateData( const GUID & refguid,void* pData,DWORD* pSizeOfData) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall FreePrivateData( const GUID & refguid) = 0;
    virtual __declspec(nothrow) DWORD __stdcall SetPriority( DWORD PriorityNew) = 0;
    virtual __declspec(nothrow) DWORD __stdcall GetPriority(void) = 0;
    virtual __declspec(nothrow) void __stdcall PreLoad(void) = 0;
    virtual __declspec(nothrow) D3DRESOURCETYPE __stdcall GetType(void) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall Lock( UINT OffsetToLock,UINT SizeToLock,void** ppbData,DWORD Flags) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall Unlock(void) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetDesc( D3DINDEXBUFFER_DESC *pDesc) = 0;
    
    









};
    
typedef struct IDirect3DIndexBuffer9 *LPDIRECT3DINDEXBUFFER9, *PDIRECT3DINDEXBUFFER9;
















#line 1597 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"














#line 1612 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"







struct __declspec(novtable) IDirect3DSurface9 : public IDirect3DResource9
{
    
    virtual __declspec(nothrow) HRESULT __stdcall QueryInterface( const IID & riid, void** ppvObj) = 0;
    virtual __declspec(nothrow) ULONG __stdcall AddRef(void) = 0;
    virtual __declspec(nothrow) ULONG __stdcall Release(void) = 0;

    
    virtual __declspec(nothrow) HRESULT __stdcall GetDevice( IDirect3DDevice9** ppDevice) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetPrivateData( const GUID & refguid,const void* pData,DWORD SizeOfData,DWORD Flags) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetPrivateData( const GUID & refguid,void* pData,DWORD* pSizeOfData) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall FreePrivateData( const GUID & refguid) = 0;
    virtual __declspec(nothrow) DWORD __stdcall SetPriority( DWORD PriorityNew) = 0;
    virtual __declspec(nothrow) DWORD __stdcall GetPriority(void) = 0;
    virtual __declspec(nothrow) void __stdcall PreLoad(void) = 0;
    virtual __declspec(nothrow) D3DRESOURCETYPE __stdcall GetType(void) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetContainer( const IID & riid,void** ppContainer) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetDesc( D3DSURFACE_DESC *pDesc) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall LockRect( D3DLOCKED_RECT* pLockedRect,const RECT* pRect,DWORD Flags) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall UnlockRect(void) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetDC( HDC *phdc) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall ReleaseDC( HDC hdc) = 0;
    
    













};
    
typedef struct IDirect3DSurface9 *LPDIRECT3DSURFACE9, *PDIRECT3DSURFACE9;



















#line 1679 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"

















#line 1697 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"








struct __declspec(novtable) IDirect3DVolume9 : public IUnknown
{
    
    virtual __declspec(nothrow) HRESULT __stdcall QueryInterface( const IID & riid, void** ppvObj) = 0;
    virtual __declspec(nothrow) ULONG __stdcall AddRef(void) = 0;
    virtual __declspec(nothrow) ULONG __stdcall Release(void) = 0;

    
    virtual __declspec(nothrow) HRESULT __stdcall GetDevice( IDirect3DDevice9** ppDevice) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetPrivateData( const GUID & refguid,const void* pData,DWORD SizeOfData,DWORD Flags) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetPrivateData( const GUID & refguid,void* pData,DWORD* pSizeOfData) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall FreePrivateData( const GUID & refguid) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetContainer( const IID & riid,void** ppContainer) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetDesc( D3DVOLUME_DESC *pDesc) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall LockBox( D3DLOCKED_BOX * pLockedVolume,const D3DBOX* pBox,DWORD Flags) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall UnlockBox(void) = 0;
    
    










};
    
typedef struct IDirect3DVolume9 *LPDIRECT3DVOLUME9, *PDIRECT3DVOLUME9;













#line 1750 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"











#line 1762 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"







struct __declspec(novtable) IDirect3DQuery9 : public IUnknown
{
    
    virtual __declspec(nothrow) HRESULT __stdcall QueryInterface( const IID & riid, void** ppvObj) = 0;
    virtual __declspec(nothrow) ULONG __stdcall AddRef(void) = 0;
    virtual __declspec(nothrow) ULONG __stdcall Release(void) = 0;

    
    virtual __declspec(nothrow) HRESULT __stdcall GetDevice( IDirect3DDevice9** ppDevice) = 0;
    virtual __declspec(nothrow) D3DQUERYTYPE __stdcall GetType(void) = 0;
    virtual __declspec(nothrow) DWORD __stdcall GetDataSize(void) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall Issue( DWORD dwIssueFlags) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetData( void* pData,DWORD dwSize,DWORD dwGetDataFlags) = 0;
    
    




};
    
typedef struct IDirect3DQuery9 *LPDIRECT3DQUERY9, *PDIRECT3DQUERY9;










#line 1802 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"








#line 1811 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"



















































#line 1863 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"
































#line 1896 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"






















#line 1919 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"







































#line 1959 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"





































































HRESULT __stdcall Direct3DCreate9Ex(UINT SDKVersion, IDirect3D9Ex**);







struct __declspec(novtable) IDirect3D9Ex : public IDirect3D9
{
    
    virtual __declspec(nothrow) HRESULT __stdcall QueryInterface( const IID & riid, void** ppvObj) = 0;
    virtual __declspec(nothrow) ULONG __stdcall AddRef(void) = 0;
    virtual __declspec(nothrow) ULONG __stdcall Release(void) = 0;

    
    virtual __declspec(nothrow) UINT __stdcall GetAdapterCount(void) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetAdapterIdentifier( UINT Adapter,DWORD Flags,D3DADAPTER_IDENTIFIER9* pIdentifier) = 0;
    virtual __declspec(nothrow) UINT __stdcall GetAdapterModeCount( UINT Adapter,D3DFORMAT Format) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall EnumAdapterModes( UINT Adapter,D3DFORMAT Format,UINT Mode,D3DDISPLAYMODE* pMode) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetAdapterDisplayMode( UINT Adapter,D3DDISPLAYMODE* pMode) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall CheckDeviceType( UINT Adapter,D3DDEVTYPE DevType,D3DFORMAT AdapterFormat,D3DFORMAT BackBufferFormat,BOOL bWindowed) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall CheckDeviceFormat( UINT Adapter,D3DDEVTYPE DeviceType,D3DFORMAT AdapterFormat,DWORD Usage,D3DRESOURCETYPE RType,D3DFORMAT CheckFormat) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall CheckDeviceMultiSampleType( UINT Adapter,D3DDEVTYPE DeviceType,D3DFORMAT SurfaceFormat,BOOL Windowed,D3DMULTISAMPLE_TYPE MultiSampleType,DWORD* pQualityLevels) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall CheckDepthStencilMatch( UINT Adapter,D3DDEVTYPE DeviceType,D3DFORMAT AdapterFormat,D3DFORMAT RenderTargetFormat,D3DFORMAT DepthStencilFormat) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall CheckDeviceFormatConversion( UINT Adapter,D3DDEVTYPE DeviceType,D3DFORMAT SourceFormat,D3DFORMAT TargetFormat) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetDeviceCaps( UINT Adapter,D3DDEVTYPE DeviceType,D3DCAPS9* pCaps) = 0;
    virtual __declspec(nothrow) HMONITOR __stdcall GetAdapterMonitor( UINT Adapter) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall CreateDevice( UINT Adapter,D3DDEVTYPE DeviceType,HWND hFocusWindow,DWORD BehaviorFlags,D3DPRESENT_PARAMETERS* pPresentationParameters,IDirect3DDevice9** ppReturnedDeviceInterface) = 0;
    virtual __declspec(nothrow) UINT __stdcall GetAdapterModeCountEx( UINT Adapter,const D3DDISPLAYMODEFILTER* pFilter ) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall EnumAdapterModesEx( UINT Adapter,const D3DDISPLAYMODEFILTER* pFilter,UINT Mode,D3DDISPLAYMODEEX* pMode) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetAdapterDisplayModeEx( UINT Adapter,D3DDISPLAYMODEEX* pMode,D3DDISPLAYROTATION* pRotation) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall CreateDeviceEx( UINT Adapter,D3DDEVTYPE DeviceType,HWND hFocusWindow,DWORD BehaviorFlags,D3DPRESENT_PARAMETERS* pPresentationParameters,D3DDISPLAYMODEEX* pFullscreenDisplayMode,IDirect3DDevice9Ex** ppReturnedDeviceInterface) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetAdapterLUID( UINT Adapter,LUID * pLUID) = 0;
};
    
typedef struct IDirect3D9Ex *LPDIRECT3D9EX, *PDIRECT3D9EX;























#line 2089 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"





















#line 2111 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"



























struct __declspec(novtable) IDirect3DDevice9Ex : public IDirect3DDevice9
{
    
    virtual __declspec(nothrow) HRESULT __stdcall QueryInterface( const IID & riid, void** ppvObj) = 0;
    virtual __declspec(nothrow) ULONG __stdcall AddRef(void) = 0;
    virtual __declspec(nothrow) ULONG __stdcall Release(void) = 0;

    
    virtual __declspec(nothrow) HRESULT __stdcall TestCooperativeLevel(void) = 0;
    virtual __declspec(nothrow) UINT __stdcall GetAvailableTextureMem(void) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall EvictManagedResources(void) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetDirect3D( IDirect3D9** ppD3D9) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetDeviceCaps( D3DCAPS9* pCaps) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetDisplayMode( UINT iSwapChain,D3DDISPLAYMODE* pMode) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetCreationParameters( D3DDEVICE_CREATION_PARAMETERS *pParameters) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetCursorProperties( UINT XHotSpot,UINT YHotSpot,IDirect3DSurface9* pCursorBitmap) = 0;
    virtual __declspec(nothrow) void __stdcall SetCursorPosition( int X,int Y,DWORD Flags) = 0;
    virtual __declspec(nothrow) BOOL __stdcall ShowCursor( BOOL bShow) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall CreateAdditionalSwapChain( D3DPRESENT_PARAMETERS* pPresentationParameters,IDirect3DSwapChain9** pSwapChain) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetSwapChain( UINT iSwapChain,IDirect3DSwapChain9** pSwapChain) = 0;
    virtual __declspec(nothrow) UINT __stdcall GetNumberOfSwapChains(void) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall Reset( D3DPRESENT_PARAMETERS* pPresentationParameters) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall Present( const RECT* pSourceRect,const RECT* pDestRect,HWND hDestWindowOverride,const RGNDATA* pDirtyRegion) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetBackBuffer( UINT iSwapChain,UINT iBackBuffer,D3DBACKBUFFER_TYPE Type,IDirect3DSurface9** ppBackBuffer) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetRasterStatus( UINT iSwapChain,D3DRASTER_STATUS* pRasterStatus) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetDialogBoxMode( BOOL bEnableDialogs) = 0;
    virtual __declspec(nothrow) void __stdcall SetGammaRamp( UINT iSwapChain,DWORD Flags,const D3DGAMMARAMP* pRamp) = 0;
    virtual __declspec(nothrow) void __stdcall GetGammaRamp( UINT iSwapChain,D3DGAMMARAMP* pRamp) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall CreateTexture( UINT Width,UINT Height,UINT Levels,DWORD Usage,D3DFORMAT Format,D3DPOOL Pool,IDirect3DTexture9** ppTexture,HANDLE* pSharedHandle) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall CreateVolumeTexture( UINT Width,UINT Height,UINT Depth,UINT Levels,DWORD Usage,D3DFORMAT Format,D3DPOOL Pool,IDirect3DVolumeTexture9** ppVolumeTexture,HANDLE* pSharedHandle) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall CreateCubeTexture( UINT EdgeLength,UINT Levels,DWORD Usage,D3DFORMAT Format,D3DPOOL Pool,IDirect3DCubeTexture9** ppCubeTexture,HANDLE* pSharedHandle) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall CreateVertexBuffer( UINT Length,DWORD Usage,DWORD FVF,D3DPOOL Pool,IDirect3DVertexBuffer9** ppVertexBuffer,HANDLE* pSharedHandle) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall CreateIndexBuffer( UINT Length,DWORD Usage,D3DFORMAT Format,D3DPOOL Pool,IDirect3DIndexBuffer9** ppIndexBuffer,HANDLE* pSharedHandle) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall CreateRenderTarget( UINT Width,UINT Height,D3DFORMAT Format,D3DMULTISAMPLE_TYPE MultiSample,DWORD MultisampleQuality,BOOL Lockable,IDirect3DSurface9** ppSurface,HANDLE* pSharedHandle) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall CreateDepthStencilSurface( UINT Width,UINT Height,D3DFORMAT Format,D3DMULTISAMPLE_TYPE MultiSample,DWORD MultisampleQuality,BOOL Discard,IDirect3DSurface9** ppSurface,HANDLE* pSharedHandle) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall UpdateSurface( IDirect3DSurface9* pSourceSurface,const RECT* pSourceRect,IDirect3DSurface9* pDestinationSurface,const POINT* pDestPoint) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall UpdateTexture( IDirect3DBaseTexture9* pSourceTexture,IDirect3DBaseTexture9* pDestinationTexture) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetRenderTargetData( IDirect3DSurface9* pRenderTarget,IDirect3DSurface9* pDestSurface) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetFrontBufferData( UINT iSwapChain,IDirect3DSurface9* pDestSurface) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall StretchRect( IDirect3DSurface9* pSourceSurface,const RECT* pSourceRect,IDirect3DSurface9* pDestSurface,const RECT* pDestRect,D3DTEXTUREFILTERTYPE Filter) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall ColorFill( IDirect3DSurface9* pSurface,const RECT* pRect,D3DCOLOR color) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall CreateOffscreenPlainSurface( UINT Width,UINT Height,D3DFORMAT Format,D3DPOOL Pool,IDirect3DSurface9** ppSurface,HANDLE* pSharedHandle) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetRenderTarget( DWORD RenderTargetIndex,IDirect3DSurface9* pRenderTarget) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetRenderTarget( DWORD RenderTargetIndex,IDirect3DSurface9** ppRenderTarget) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetDepthStencilSurface( IDirect3DSurface9* pNewZStencil) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetDepthStencilSurface( IDirect3DSurface9** ppZStencilSurface) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall BeginScene(void) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall EndScene(void) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall Clear( DWORD Count,const D3DRECT* pRects,DWORD Flags,D3DCOLOR Color,float Z,DWORD Stencil) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetTransform( D3DTRANSFORMSTATETYPE State,const D3DMATRIX* pMatrix) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetTransform( D3DTRANSFORMSTATETYPE State,D3DMATRIX* pMatrix) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall MultiplyTransform( D3DTRANSFORMSTATETYPE,const D3DMATRIX*) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetViewport( const D3DVIEWPORT9* pViewport) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetViewport( D3DVIEWPORT9* pViewport) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetMaterial( const D3DMATERIAL9* pMaterial) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetMaterial( D3DMATERIAL9* pMaterial) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetLight( DWORD Index,const D3DLIGHT9*) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetLight( DWORD Index,D3DLIGHT9*) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall LightEnable( DWORD Index,BOOL Enable) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetLightEnable( DWORD Index,BOOL* pEnable) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetClipPlane( DWORD Index,const float* pPlane) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetClipPlane( DWORD Index,float* pPlane) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetRenderState( D3DRENDERSTATETYPE State,DWORD Value) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetRenderState( D3DRENDERSTATETYPE State,DWORD* pValue) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall CreateStateBlock( D3DSTATEBLOCKTYPE Type,IDirect3DStateBlock9** ppSB) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall BeginStateBlock(void) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall EndStateBlock( IDirect3DStateBlock9** ppSB) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetClipStatus( const D3DCLIPSTATUS9* pClipStatus) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetClipStatus( D3DCLIPSTATUS9* pClipStatus) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetTexture( DWORD Stage,IDirect3DBaseTexture9** ppTexture) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetTexture( DWORD Stage,IDirect3DBaseTexture9* pTexture) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetTextureStageState( DWORD Stage,D3DTEXTURESTAGESTATETYPE Type,DWORD* pValue) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetTextureStageState( DWORD Stage,D3DTEXTURESTAGESTATETYPE Type,DWORD Value) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetSamplerState( DWORD Sampler,D3DSAMPLERSTATETYPE Type,DWORD* pValue) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetSamplerState( DWORD Sampler,D3DSAMPLERSTATETYPE Type,DWORD Value) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall ValidateDevice( DWORD* pNumPasses) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetPaletteEntries( UINT PaletteNumber,const PALETTEENTRY* pEntries) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetPaletteEntries( UINT PaletteNumber,PALETTEENTRY* pEntries) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetCurrentTexturePalette( UINT PaletteNumber) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetCurrentTexturePalette( UINT *PaletteNumber) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetScissorRect( const RECT* pRect) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetScissorRect( RECT* pRect) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetSoftwareVertexProcessing( BOOL bSoftware) = 0;
    virtual __declspec(nothrow) BOOL __stdcall GetSoftwareVertexProcessing(void) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetNPatchMode( float nSegments) = 0;
    virtual __declspec(nothrow) float __stdcall GetNPatchMode(void) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall DrawPrimitive( D3DPRIMITIVETYPE PrimitiveType,UINT StartVertex,UINT PrimitiveCount) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall DrawIndexedPrimitive( D3DPRIMITIVETYPE,INT BaseVertexIndex,UINT MinVertexIndex,UINT NumVertices,UINT startIndex,UINT primCount) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall DrawPrimitiveUP( D3DPRIMITIVETYPE PrimitiveType,UINT PrimitiveCount,const void* pVertexStreamZeroData,UINT VertexStreamZeroStride) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall DrawIndexedPrimitiveUP( D3DPRIMITIVETYPE PrimitiveType,UINT MinVertexIndex,UINT NumVertices,UINT PrimitiveCount,const void* pIndexData,D3DFORMAT IndexDataFormat,const void* pVertexStreamZeroData,UINT VertexStreamZeroStride) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall ProcessVertices( UINT SrcStartIndex,UINT DestIndex,UINT VertexCount,IDirect3DVertexBuffer9* pDestBuffer,IDirect3DVertexDeclaration9* pVertexDecl,DWORD Flags) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall CreateVertexDeclaration( const D3DVERTEXELEMENT9* pVertexElements,IDirect3DVertexDeclaration9** ppDecl) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetVertexDeclaration( IDirect3DVertexDeclaration9* pDecl) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetVertexDeclaration( IDirect3DVertexDeclaration9** ppDecl) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetFVF( DWORD FVF) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetFVF( DWORD* pFVF) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall CreateVertexShader( const DWORD* pFunction,IDirect3DVertexShader9** ppShader) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetVertexShader( IDirect3DVertexShader9* pShader) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetVertexShader( IDirect3DVertexShader9** ppShader) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetVertexShaderConstantF( UINT StartRegister,const float* pConstantData,UINT Vector4fCount) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetVertexShaderConstantF( UINT StartRegister,float* pConstantData,UINT Vector4fCount) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetVertexShaderConstantI( UINT StartRegister,const int* pConstantData,UINT Vector4iCount) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetVertexShaderConstantI( UINT StartRegister,int* pConstantData,UINT Vector4iCount) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetVertexShaderConstantB( UINT StartRegister,const BOOL* pConstantData,UINT  BoolCount) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetVertexShaderConstantB( UINT StartRegister,BOOL* pConstantData,UINT BoolCount) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetStreamSource( UINT StreamNumber,IDirect3DVertexBuffer9* pStreamData,UINT OffsetInBytes,UINT Stride) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetStreamSource( UINT StreamNumber,IDirect3DVertexBuffer9** ppStreamData,UINT* pOffsetInBytes,UINT* pStride) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetStreamSourceFreq( UINT StreamNumber,UINT Setting) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetStreamSourceFreq( UINT StreamNumber,UINT* pSetting) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetIndices( IDirect3DIndexBuffer9* pIndexData) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetIndices( IDirect3DIndexBuffer9** ppIndexData) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall CreatePixelShader( const DWORD* pFunction,IDirect3DPixelShader9** ppShader) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetPixelShader( IDirect3DPixelShader9* pShader) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetPixelShader( IDirect3DPixelShader9** ppShader) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetPixelShaderConstantF( UINT StartRegister,const float* pConstantData,UINT Vector4fCount) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetPixelShaderConstantF( UINT StartRegister,float* pConstantData,UINT Vector4fCount) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetPixelShaderConstantI( UINT StartRegister,const int* pConstantData,UINT Vector4iCount) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetPixelShaderConstantI( UINT StartRegister,int* pConstantData,UINT Vector4iCount) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetPixelShaderConstantB( UINT StartRegister,const BOOL* pConstantData,UINT  BoolCount) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetPixelShaderConstantB( UINT StartRegister,BOOL* pConstantData,UINT BoolCount) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall DrawRectPatch( UINT Handle,const float* pNumSegs,const D3DRECTPATCH_INFO* pRectPatchInfo) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall DrawTriPatch( UINT Handle,const float* pNumSegs,const D3DTRIPATCH_INFO* pTriPatchInfo) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall DeletePatch( UINT Handle) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall CreateQuery( D3DQUERYTYPE Type,IDirect3DQuery9** ppQuery) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetConvolutionMonoKernel( UINT width,UINT height,float* rows,float* columns) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall ComposeRects( IDirect3DSurface9* pSrc,IDirect3DSurface9* pDst,IDirect3DVertexBuffer9* pSrcRectDescs,UINT NumRects,IDirect3DVertexBuffer9* pDstRectDescs,D3DCOMPOSERECTSOP Operation,int Xoffset,int Yoffset) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall PresentEx( const RECT* pSourceRect,const RECT* pDestRect,HWND hDestWindowOverride,const RGNDATA* pDirtyRegion,DWORD dwFlags) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetGPUThreadPriority( INT* pPriority) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetGPUThreadPriority( INT Priority) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall WaitForVBlank( UINT iSwapChain) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall CheckResourceResidency( IDirect3DResource9** pResourceArray,UINT32 NumResources) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall SetMaximumFrameLatency( UINT MaxLatency) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetMaximumFrameLatency( UINT* pMaxLatency) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall CheckDeviceState( HWND hDestinationWindow) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall CreateRenderTargetEx( UINT Width,UINT Height,D3DFORMAT Format,D3DMULTISAMPLE_TYPE MultiSample,DWORD MultisampleQuality,BOOL Lockable,IDirect3DSurface9** ppSurface,HANDLE* pSharedHandle,DWORD Usage) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall CreateOffscreenPlainSurfaceEx( UINT Width,UINT Height,D3DFORMAT Format,D3DPOOL Pool,IDirect3DSurface9** ppSurface,HANDLE* pSharedHandle,DWORD Usage) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall CreateDepthStencilSurfaceEx( UINT Width,UINT Height,D3DFORMAT Format,D3DMULTISAMPLE_TYPE MultiSample,DWORD MultisampleQuality,BOOL Discard,IDirect3DSurface9** ppSurface,HANDLE* pSharedHandle,DWORD Usage) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall ResetEx( D3DPRESENT_PARAMETERS* pPresentationParameters,D3DDISPLAYMODEEX *pFullscreenDisplayMode) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetDisplayModeEx( UINT iSwapChain,D3DDISPLAYMODEEX* pMode,D3DDISPLAYROTATION* pRotation) = 0;
};
    
typedef struct IDirect3DDevice9Ex *LPDIRECT3DDEVICE9EX, *PDIRECT3DDEVICE9EX;








































































































































#line 2417 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"






































































































































#line 2552 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"






struct __declspec(novtable) IDirect3DSwapChain9Ex : public IDirect3DSwapChain9
{
    
    virtual __declspec(nothrow) HRESULT __stdcall QueryInterface( const IID & riid, void** ppvObj) = 0;
    virtual __declspec(nothrow) ULONG __stdcall AddRef(void) = 0;
    virtual __declspec(nothrow) ULONG __stdcall Release(void) = 0;

    
    virtual __declspec(nothrow) HRESULT __stdcall Present( const RECT* pSourceRect,const RECT* pDestRect,HWND hDestWindowOverride,const RGNDATA* pDirtyRegion,DWORD dwFlags) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetFrontBufferData( IDirect3DSurface9* pDestSurface) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetBackBuffer( UINT iBackBuffer,D3DBACKBUFFER_TYPE Type,IDirect3DSurface9** ppBackBuffer) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetRasterStatus( D3DRASTER_STATUS* pRasterStatus) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetDisplayMode( D3DDISPLAYMODE* pMode) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetDevice( IDirect3DDevice9** ppDevice) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetPresentParameters( D3DPRESENT_PARAMETERS* pPresentationParameters) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetLastPresentCount( UINT* pLastPresentCount) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetPresentStats( D3DPRESENTSTATS* pPresentationStatistics) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetDisplayModeEx( D3DDISPLAYMODEEX* pMode,D3DDISPLAYROTATION* pRotation) = 0;
};
    
typedef struct IDirect3DSwapChain9Ex *LPDIRECT3DSWAPCHAIN9EX, *PDIRECT3DSWAPCHAIN9EX;















#line 2595 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"













#line 2609 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"

#line 2611 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"







struct __declspec(novtable) IDirect3D9ExOverlayExtension : public IUnknown
{
    
    virtual __declspec(nothrow) HRESULT __stdcall QueryInterface( const IID & riid, void** ppvObj) = 0;
    virtual __declspec(nothrow) ULONG __stdcall AddRef(void) = 0;
    virtual __declspec(nothrow) ULONG __stdcall Release(void) = 0;

    
    virtual __declspec(nothrow) HRESULT __stdcall CheckDeviceOverlayType( UINT Adapter,D3DDEVTYPE DevType,UINT OverlayWidth,UINT OverlayHeight,D3DFORMAT OverlayFormat,D3DDISPLAYMODEEX* pDisplayMode,D3DDISPLAYROTATION DisplayRotation,D3DOVERLAYCAPS* pOverlayCaps) = 0;
};
    
typedef struct IDirect3D9ExOverlayExtension *LPDIRECT3D9EXOVERLAYEXTENSION, *PDIRECT3D9EXOVERLAYEXTENSION;






#line 2637 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"




#line 2642 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"






struct __declspec(novtable) IDirect3DDevice9Video : public IUnknown
{
    
    virtual __declspec(nothrow) HRESULT __stdcall QueryInterface( const IID & riid, void** ppvObj) = 0;
    virtual __declspec(nothrow) ULONG __stdcall AddRef(void) = 0;
    virtual __declspec(nothrow) ULONG __stdcall Release(void) = 0;

    
    virtual __declspec(nothrow) HRESULT __stdcall GetContentProtectionCaps( const GUID* pCryptoType,const GUID* pDecodeProfile,D3DCONTENTPROTECTIONCAPS* pCaps) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall CreateAuthenticatedChannel( D3DAUTHENTICATEDCHANNELTYPE ChannelType,IDirect3DAuthenticatedChannel9** ppAuthenticatedChannel,HANDLE* pChannelHandle) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall CreateCryptoSession( const GUID* pCryptoType,const GUID* pDecodeProfile,IDirect3DCryptoSession9** ppCryptoSession,HANDLE* pCryptoHandle) = 0;
};
    
typedef struct IDirect3DDevice9Video *LPDIRECT3DDEVICE9VIDEO, *PDIRECT3DDEVICE9VIDEO;








#line 2671 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"






#line 2678 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"







struct __declspec(novtable) IDirect3DAuthenticatedChannel9 : public IUnknown
{
    
    virtual __declspec(nothrow) HRESULT __stdcall QueryInterface( const IID & riid, void** ppvObj) = 0;
    virtual __declspec(nothrow) ULONG __stdcall AddRef(void) = 0;
    virtual __declspec(nothrow) ULONG __stdcall Release(void) = 0;

    
    virtual __declspec(nothrow) HRESULT __stdcall GetCertificateSize( UINT* pCertificateSize) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetCertificate( UINT CertifacteSize,BYTE* ppCertificate) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall NegotiateKeyExchange( UINT DataSize,void* pData) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall Query( UINT InputSize,const void* pInput,UINT OutputSize,void* pOutput) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall Configure( UINT InputSize,const void* pInput,D3DAUTHENTICATEDCHANNEL_CONFIGURE_OUTPUT* pOutput) = 0;
};
    
typedef struct IDirect3DAuthenticatedChannel9 *LPDIRECT3DAUTHENTICATEDCHANNEL9, *PDIRECT3DAUTHENTICATEDCHANNEL9;










#line 2712 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"








#line 2721 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"






struct __declspec(novtable) IDirect3DCryptoSession9 : public IUnknown
{
    
    virtual __declspec(nothrow) HRESULT __stdcall QueryInterface( const IID & riid, void** ppvObj) = 0;
    virtual __declspec(nothrow) ULONG __stdcall AddRef(void) = 0;
    virtual __declspec(nothrow) ULONG __stdcall Release(void) = 0;

    
    virtual __declspec(nothrow) HRESULT __stdcall GetCertificateSize( UINT* pCertificateSize) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetCertificate( UINT CertifacteSize,BYTE* ppCertificate) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall NegotiateKeyExchange( UINT DataSize,void* pData) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall EncryptionBlt( IDirect3DSurface9* pSrcSurface,IDirect3DSurface9* pDstSurface,UINT DstSurfaceSize,void* pIV) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall DecryptionBlt( IDirect3DSurface9* pSrcSurface,IDirect3DSurface9* pDstSurface,UINT SrcSurfaceSize,D3DENCRYPTED_BLOCK_INFO* pEncryptedBlockInfo,void* pContentKey,void* pIV) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetSurfacePitch( IDirect3DSurface9* pSrcSurface,UINT* pSurfacePitch) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall StartSessionKeyRefresh( void* pRandomNumber,UINT RandomNumberSize) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall FinishSessionKeyRefresh(void) = 0;
    virtual __declspec(nothrow) HRESULT __stdcall GetEncryptionBltKey( void* pReadbackKey,UINT KeySize) = 0;
};
    
typedef struct IDirect3DCryptoSession9 *LPDIRECT3DCRYPTOSESSION9, *PDIRECT3DCRYPTOSESSION9;














#line 2762 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"












#line 2775 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"



};
#line 2780 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"

#line 2782 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"
#line 2783 "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\include\\d3d9.h"



#line 21 "c:\\users\\bob\\documents\\visual studio 2010\\projects\\c++\\ic\\d3d9_application_framework\\d3d9_application_framework\\frameworkbase\\source\\stdafx.h"


#line 24 "c:\\users\\bob\\documents\\visual studio 2010\\projects\\c++\\ic\\d3d9_application_framework\\d3d9_application_framework\\frameworkbase\\source\\stdafx.h"
	#pragma comment(lib, "d3dx9.lib")
#line 26 "c:\\users\\bob\\documents\\visual studio 2010\\projects\\c++\\ic\\d3d9_application_framework\\d3d9_application_framework\\frameworkbase\\source\\stdafx.h"
